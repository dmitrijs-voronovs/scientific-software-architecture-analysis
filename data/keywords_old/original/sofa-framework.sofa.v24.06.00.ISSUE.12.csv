id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/sofa-framework/sofa/pull/4205:460,Security,certificate,certificate-of-origin-dco,460,"I can't add much more than this title. Fix #4202. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/247]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/258]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205
https://github.com/sofa-framework/sofa/pull/4205:725,Testability,test,test,725,"I can't add much more than this title. Fix #4202. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/247]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/258]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205
https://github.com/sofa-framework/sofa/pull/4205:774,Testability,test,test,774,"I can't add much more than this title. Fix #4202. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/247]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/258]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205
https://github.com/sofa-framework/sofa/issues/4206:91,Modifiability,plugin,plugin,91,"Status of prefabs could be discussed further:; - should they be located in the SofaPython3 plugin?; - should we create many level of abstractions/prefabs?; - definition of current prefabs, e.g. `ElasticObject` using a `UniformMass`?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4206
https://github.com/sofa-framework/sofa/issues/4207:102,Security,validat,validation,102,Linked to #25; A webpage could be created on the SOFA website:; - summarizing all existing and future validation info to increase SOFA assessment & credibility; - defining a template for validation doc,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4207
https://github.com/sofa-framework/sofa/issues/4207:187,Security,validat,validation,187,Linked to #25; A webpage could be created on the SOFA website:; - summarizing all existing and future validation info to increase SOFA assessment & credibility; - defining a template for validation doc,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4207
https://github.com/sofa-framework/sofa/pull/4210:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4210
https://github.com/sofa-framework/sofa/pull/4210:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4210
https://github.com/sofa-framework/sofa/pull/4210:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4210
https://github.com/sofa-framework/sofa/pull/4210:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4210
https://github.com/sofa-framework/sofa/pull/4210:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4210
https://github.com/sofa-framework/sofa/pull/4210:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4210
https://github.com/sofa-framework/sofa/pull/4213:1019,Availability,failure,failures,1019,"Some methods are moved into a base class. They were exactly doing the same thing in both solvers. The result is that `buildSystem` now looks very similar in both classes. It allows to better understand that both solvers do some similar things. It could be factorized again in the future. A lot of cosmetic changes. `applyCorrection` has been split into smaller functions. `build_LCP` and `build_problem_info` are factorized. `ConstraintSolver::solveConstraint` is condensed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4213
https://github.com/sofa-framework/sofa/pull/4213:1068,Availability,failure,failures,1068,"Some methods are moved into a base class. They were exactly doing the same thing in both solvers. The result is that `buildSystem` now looks very similar in both classes. It allows to better understand that both solvers do some similar things. It could be factorized again in the future. A lot of cosmetic changes. `applyCorrection` has been split into smaller functions. `build_LCP` and `build_problem_info` are factorized. `ConstraintSolver::solveConstraint` is condensed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4213
https://github.com/sofa-framework/sofa/pull/4213:638,Security,Certificate,Certificate,638,"Some methods are moved into a base class. They were exactly doing the same thing in both solvers. The result is that `buildSystem` now looks very similar in both classes. It allows to better understand that both solvers do some similar things. It could be factorized again in the future. A lot of cosmetic changes. `applyCorrection` has been split into smaller functions. `build_LCP` and `build_problem_info` are factorized. `ConstraintSolver::solveConstraint` is condensed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4213
https://github.com/sofa-framework/sofa/pull/4213:749,Security,certificate,certificate-of-origin-dco,749,"Some methods are moved into a base class. They were exactly doing the same thing in both solvers. The result is that `buildSystem` now looks very similar in both classes. It allows to better understand that both solvers do some similar things. It could be factorized again in the future. A lot of cosmetic changes. `applyCorrection` has been split into smaller functions. `build_LCP` and `build_problem_info` are factorized. `ConstraintSolver::solveConstraint` is condensed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4213
https://github.com/sofa-framework/sofa/pull/4213:1014,Testability,test,test,1014,"Some methods are moved into a base class. They were exactly doing the same thing in both solvers. The result is that `buildSystem` now looks very similar in both classes. It allows to better understand that both solvers do some similar things. It could be factorized again in the future. A lot of cosmetic changes. `applyCorrection` has been split into smaller functions. `build_LCP` and `build_problem_info` are factorized. `ConstraintSolver::solveConstraint` is condensed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4213
https://github.com/sofa-framework/sofa/pull/4213:1063,Testability,test,test,1063,"Some methods are moved into a base class. They were exactly doing the same thing in both solvers. The result is that `buildSystem` now looks very similar in both classes. It allows to better understand that both solvers do some similar things. It could be factorized again in the future. A lot of cosmetic changes. `applyCorrection` has been split into smaller functions. `build_LCP` and `build_problem_info` are factorized. `ConstraintSolver::solveConstraint` is condensed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4213
https://github.com/sofa-framework/sofa/pull/4219:904,Availability,failure,failures,904,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219
https://github.com/sofa-framework/sofa/pull/4219:953,Availability,failure,failures,953,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219
https://github.com/sofa-framework/sofa/pull/4219:114,Deployability,pipeline,pipeline,114,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219
https://github.com/sofa-framework/sofa/pull/4219:29,Modifiability,layers,layers,29,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219
https://github.com/sofa-framework/sofa/pull/4219:264,Modifiability,layers,layers,264,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219
https://github.com/sofa-framework/sofa/pull/4219:221,Safety,detect,detection,221,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219
https://github.com/sofa-framework/sofa/pull/4219:523,Security,Certificate,Certificate,523,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219
https://github.com/sofa-framework/sofa/pull/4219:634,Security,certificate,certificate-of-origin-dco,634,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219
https://github.com/sofa-framework/sofa/pull/4219:899,Testability,test,test,899,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219
https://github.com/sofa-framework/sofa/pull/4219:948,Testability,test,test,948,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219
https://github.com/sofa-framework/sofa/pull/4220:1377,Availability,failure,failures,1377,"I worked with the scene `examples\Demos\fallingBeamLagrangianCollision.scn`. I noticed that the distribution of the work among threads is not uniform:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/9145a080-0a7a-4b22-b3dc-501d509aefcf). Here is the distribution after the changes:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/cd047f43-aa7c-49de-a303-7d1945d8dcbd). Benchmark on 500 time steps:; Before:; ```; [INFO] [BatchGUI] 500 iterations done in 22.9377 s ( 21.7982 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 14.42 1 0.01 30.28 19.39 6.24 19.39 42.69 .....Get Compliance; ```. After; ```; [INFO] [BatchGUI] 500 iterations done in 19.7138 s ( 25.363 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 13.77 1 0 22.02 15.31 5.07 15.31 39.29 .....Get Compliance; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4220
https://github.com/sofa-framework/sofa/pull/4220:1426,Availability,failure,failures,1426,"I worked with the scene `examples\Demos\fallingBeamLagrangianCollision.scn`. I noticed that the distribution of the work among threads is not uniform:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/9145a080-0a7a-4b22-b3dc-501d509aefcf). Here is the distribution after the changes:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/cd047f43-aa7c-49de-a303-7d1945d8dcbd). Benchmark on 500 time steps:; Before:; ```; [INFO] [BatchGUI] 500 iterations done in 22.9377 s ( 21.7982 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 14.42 1 0.01 30.28 19.39 6.24 19.39 42.69 .....Get Compliance; ```. After; ```; [INFO] [BatchGUI] 500 iterations done in 19.7138 s ( 25.363 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 13.77 1 0 22.02 15.31 5.07 15.31 39.29 .....Get Compliance; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4220
https://github.com/sofa-framework/sofa/pull/4220:996,Security,Certificate,Certificate,996,"I worked with the scene `examples\Demos\fallingBeamLagrangianCollision.scn`. I noticed that the distribution of the work among threads is not uniform:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/9145a080-0a7a-4b22-b3dc-501d509aefcf). Here is the distribution after the changes:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/cd047f43-aa7c-49de-a303-7d1945d8dcbd). Benchmark on 500 time steps:; Before:; ```; [INFO] [BatchGUI] 500 iterations done in 22.9377 s ( 21.7982 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 14.42 1 0.01 30.28 19.39 6.24 19.39 42.69 .....Get Compliance; ```. After; ```; [INFO] [BatchGUI] 500 iterations done in 19.7138 s ( 25.363 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 13.77 1 0 22.02 15.31 5.07 15.31 39.29 .....Get Compliance; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4220
https://github.com/sofa-framework/sofa/pull/4220:1107,Security,certificate,certificate-of-origin-dco,1107,"I worked with the scene `examples\Demos\fallingBeamLagrangianCollision.scn`. I noticed that the distribution of the work among threads is not uniform:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/9145a080-0a7a-4b22-b3dc-501d509aefcf). Here is the distribution after the changes:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/cd047f43-aa7c-49de-a303-7d1945d8dcbd). Benchmark on 500 time steps:; Before:; ```; [INFO] [BatchGUI] 500 iterations done in 22.9377 s ( 21.7982 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 14.42 1 0.01 30.28 19.39 6.24 19.39 42.69 .....Get Compliance; ```. After; ```; [INFO] [BatchGUI] 500 iterations done in 19.7138 s ( 25.363 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 13.77 1 0 22.02 15.31 5.07 15.31 39.29 .....Get Compliance; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4220
https://github.com/sofa-framework/sofa/pull/4220:403,Testability,Benchmark,Benchmark,403,"I worked with the scene `examples\Demos\fallingBeamLagrangianCollision.scn`. I noticed that the distribution of the work among threads is not uniform:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/9145a080-0a7a-4b22-b3dc-501d509aefcf). Here is the distribution after the changes:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/cd047f43-aa7c-49de-a303-7d1945d8dcbd). Benchmark on 500 time steps:; Before:; ```; [INFO] [BatchGUI] 500 iterations done in 22.9377 s ( 21.7982 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 14.42 1 0.01 30.28 19.39 6.24 19.39 42.69 .....Get Compliance; ```. After; ```; [INFO] [BatchGUI] 500 iterations done in 19.7138 s ( 25.363 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 13.77 1 0 22.02 15.31 5.07 15.31 39.29 .....Get Compliance; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4220
https://github.com/sofa-framework/sofa/pull/4220:1372,Testability,test,test,1372,"I worked with the scene `examples\Demos\fallingBeamLagrangianCollision.scn`. I noticed that the distribution of the work among threads is not uniform:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/9145a080-0a7a-4b22-b3dc-501d509aefcf). Here is the distribution after the changes:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/cd047f43-aa7c-49de-a303-7d1945d8dcbd). Benchmark on 500 time steps:; Before:; ```; [INFO] [BatchGUI] 500 iterations done in 22.9377 s ( 21.7982 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 14.42 1 0.01 30.28 19.39 6.24 19.39 42.69 .....Get Compliance; ```. After; ```; [INFO] [BatchGUI] 500 iterations done in 19.7138 s ( 25.363 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 13.77 1 0 22.02 15.31 5.07 15.31 39.29 .....Get Compliance; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4220
https://github.com/sofa-framework/sofa/pull/4220:1421,Testability,test,test,1421,"I worked with the scene `examples\Demos\fallingBeamLagrangianCollision.scn`. I noticed that the distribution of the work among threads is not uniform:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/9145a080-0a7a-4b22-b3dc-501d509aefcf). Here is the distribution after the changes:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/cd047f43-aa7c-49de-a303-7d1945d8dcbd). Benchmark on 500 time steps:; Before:; ```; [INFO] [BatchGUI] 500 iterations done in 22.9377 s ( 21.7982 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 14.42 1 0.01 30.28 19.39 6.24 19.39 42.69 .....Get Compliance; ```. After; ```; [INFO] [BatchGUI] 500 iterations done in 19.7138 s ( 25.363 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 13.77 1 0 22.02 15.31 5.07 15.31 39.29 .....Get Compliance; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4220
https://github.com/sofa-framework/sofa/issues/4221:2863,Availability,avail,available,2863," `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This looks reasonable at first, but shouldn't we switch to fully externalized versions for maintainability ?. Last point, we were also advised to use external dependency for some header-only libraries, especially when they are already packaged in conda-forge. Could we consider also to use externalized versions for some of these (the ones easily available as external packages), such as json nlohmann and cxxopts ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:2257,Deployability,release,releases,2257," `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This looks reasonable at first, but shouldn't we switch to fully externalized versions for maintainability ?. Last point, we were also advised to use external dependency for some header-only libraries, especially when they are already packaged in conda-forge. Could we consider also to use externalized versions for some of these (the ones easily available as external packages), such as json nlohmann and cxxopts ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:677,Integrability,depend,dependency,677,"Following the remarks we got from the SOFA conda package PR on conda-forge (https://github.com/conda-forge/staged-recipes/pull/23085), we have some problems regarding some external libraries that are embedded in SOFA code. ; Here is a try to sum up all of these embedded libraries:; | Lib name | Type | Location in code | License | Status |; | --- | --- | --- | --- | --- |; | difflib | header-only | `extlibs` | MIT | OK |; | json nlohmann | header-only | `extlibs` | MIT ~~**(should be in a separate file)**~~ | OK. Fixed in #4272 |; | stb | header-only | `extlibs` | MIT | OK |; | TinyXML | static | `extlibs` | zlib **(should be in a separate file)** | Externalize tinyxml dependency: #4240 (waiting for merge) |; | miniFlowVR | static | `applications/plugins/SofaDistanceGrid/extlibs` | LGPL (version ?) **(should be in a separate file)** | Not built by default. TODO: plugin to be externalized (#1442 ) |; | newmat | static | `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:1378,Integrability,depend,dependency,1378,"in #4272 |; | stb | header-only | `extlibs` | MIT | OK |; | TinyXML | static | `extlibs` | zlib **(should be in a separate file)** | Externalize tinyxml dependency: #4240 (waiting for merge) |; | miniFlowVR | static | `applications/plugins/SofaDistanceGrid/extlibs` | LGPL (version ?) **(should be in a separate file)** | Not built by default. TODO: plugin to be externalized (#1442 ) |; | newmat | static | `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This loo",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:1615,Integrability,depend,dependency,1615,"in #4272 |; | stb | header-only | `extlibs` | MIT | OK |; | TinyXML | static | `extlibs` | zlib **(should be in a separate file)** | Externalize tinyxml dependency: #4240 (waiting for merge) |; | miniFlowVR | static | `applications/plugins/SofaDistanceGrid/extlibs` | LGPL (version ?) **(should be in a separate file)** | Not built by default. TODO: plugin to be externalized (#1442 ) |; | newmat | static | `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This loo",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:2370,Integrability,depend,dependency,2370," `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This looks reasonable at first, but shouldn't we switch to fully externalized versions for maintainability ?. Last point, we were also advised to use external dependency for some header-only libraries, especially when they are already packaged in conda-forge. Could we consider also to use externalized versions for some of these (the ones easily available as external packages), such as json nlohmann and cxxopts ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:2675,Integrability,depend,dependency,2675," `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This looks reasonable at first, but shouldn't we switch to fully externalized versions for maintainability ?. Last point, we were also advised to use external dependency for some header-only libraries, especially when they are already packaged in conda-forge. Could we consider also to use externalized versions for some of these (the ones easily available as external packages), such as json nlohmann and cxxopts ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:756,Modifiability,plugin,plugins,756,"Following the remarks we got from the SOFA conda package PR on conda-forge (https://github.com/conda-forge/staged-recipes/pull/23085), we have some problems regarding some external libraries that are embedded in SOFA code. ; Here is a try to sum up all of these embedded libraries:; | Lib name | Type | Location in code | License | Status |; | --- | --- | --- | --- | --- |; | difflib | header-only | `extlibs` | MIT | OK |; | json nlohmann | header-only | `extlibs` | MIT ~~**(should be in a separate file)**~~ | OK. Fixed in #4272 |; | stb | header-only | `extlibs` | MIT | OK |; | TinyXML | static | `extlibs` | zlib **(should be in a separate file)** | Externalize tinyxml dependency: #4240 (waiting for merge) |; | miniFlowVR | static | `applications/plugins/SofaDistanceGrid/extlibs` | LGPL (version ?) **(should be in a separate file)** | Not built by default. TODO: plugin to be externalized (#1442 ) |; | newmat | static | `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:874,Modifiability,plugin,plugin,874,"Following the remarks we got from the SOFA conda package PR on conda-forge (https://github.com/conda-forge/staged-recipes/pull/23085), we have some problems regarding some external libraries that are embedded in SOFA code. ; Here is a try to sum up all of these embedded libraries:; | Lib name | Type | Location in code | License | Status |; | --- | --- | --- | --- | --- |; | difflib | header-only | `extlibs` | MIT | OK |; | json nlohmann | header-only | `extlibs` | MIT ~~**(should be in a separate file)**~~ | OK. Fixed in #4272 |; | stb | header-only | `extlibs` | MIT | OK |; | TinyXML | static | `extlibs` | zlib **(should be in a separate file)** | Externalize tinyxml dependency: #4240 (waiting for merge) |; | miniFlowVR | static | `applications/plugins/SofaDistanceGrid/extlibs` | LGPL (version ?) **(should be in a separate file)** | Not built by default. TODO: plugin to be externalized (#1442 ) |; | newmat | static | `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:946,Modifiability,plugin,plugins,946,"Following the remarks we got from the SOFA conda package PR on conda-forge (https://github.com/conda-forge/staged-recipes/pull/23085), we have some problems regarding some external libraries that are embedded in SOFA code. ; Here is a try to sum up all of these embedded libraries:; | Lib name | Type | Location in code | License | Status |; | --- | --- | --- | --- | --- |; | difflib | header-only | `extlibs` | MIT | OK |; | json nlohmann | header-only | `extlibs` | MIT ~~**(should be in a separate file)**~~ | OK. Fixed in #4272 |; | stb | header-only | `extlibs` | MIT | OK |; | TinyXML | static | `extlibs` | zlib **(should be in a separate file)** | Externalize tinyxml dependency: #4240 (waiting for merge) |; | miniFlowVR | static | `applications/plugins/SofaDistanceGrid/extlibs` | LGPL (version ?) **(should be in a separate file)** | Not built by default. TODO: plugin to be externalized (#1442 ) |; | newmat | static | `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:1019,Modifiability,plugin,plugin,1019,"ave some problems regarding some external libraries that are embedded in SOFA code. ; Here is a try to sum up all of these embedded libraries:; | Lib name | Type | Location in code | License | Status |; | --- | --- | --- | --- | --- |; | difflib | header-only | `extlibs` | MIT | OK |; | json nlohmann | header-only | `extlibs` | MIT ~~**(should be in a separate file)**~~ | OK. Fixed in #4272 |; | stb | header-only | `extlibs` | MIT | OK |; | TinyXML | static | `extlibs` | zlib **(should be in a separate file)** | Externalize tinyxml dependency: #4240 (waiting for merge) |; | miniFlowVR | static | `applications/plugins/SofaDistanceGrid/extlibs` | LGPL (version ?) **(should be in a separate file)** | Not built by default. TODO: plugin to be externalized (#1442 ) |; | newmat | static | `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any acti",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:1094,Modifiability,plugin,plugins,1094,"ave some problems regarding some external libraries that are embedded in SOFA code. ; Here is a try to sum up all of these embedded libraries:; | Lib name | Type | Location in code | License | Status |; | --- | --- | --- | --- | --- |; | difflib | header-only | `extlibs` | MIT | OK |; | json nlohmann | header-only | `extlibs` | MIT ~~**(should be in a separate file)**~~ | OK. Fixed in #4272 |; | stb | header-only | `extlibs` | MIT | OK |; | TinyXML | static | `extlibs` | zlib **(should be in a separate file)** | Externalize tinyxml dependency: #4240 (waiting for merge) |; | miniFlowVR | static | `applications/plugins/SofaDistanceGrid/extlibs` | LGPL (version ?) **(should be in a separate file)** | Not built by default. TODO: plugin to be externalized (#1442 ) |; | newmat | static | `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any acti",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:1240,Modifiability,Plugin,Plugin,1240,"ave some problems regarding some external libraries that are embedded in SOFA code. ; Here is a try to sum up all of these embedded libraries:; | Lib name | Type | Location in code | License | Status |; | --- | --- | --- | --- | --- |; | difflib | header-only | `extlibs` | MIT | OK |; | json nlohmann | header-only | `extlibs` | MIT ~~**(should be in a separate file)**~~ | OK. Fixed in #4272 |; | stb | header-only | `extlibs` | MIT | OK |; | TinyXML | static | `extlibs` | zlib **(should be in a separate file)** | Externalize tinyxml dependency: #4240 (waiting for merge) |; | miniFlowVR | static | `applications/plugins/SofaDistanceGrid/extlibs` | LGPL (version ?) **(should be in a separate file)** | Not built by default. TODO: plugin to be externalized (#1442 ) |; | newmat | static | `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any acti",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:2063,Modifiability,plugin,plugins,2063," `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This looks reasonable at first, but shouldn't we switch to fully externalized versions for maintainability ?. Last point, we were also advised to use external dependency for some header-only libraries, especially when they are already packaged in conda-forge. Could we consider also to use externalized versions for some of these (the ones easily available as external packages), such as json nlohmann and cxxopts ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:2195,Modifiability,plugin,plugins,2195," `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This looks reasonable at first, but shouldn't we switch to fully externalized versions for maintainability ?. Last point, we were also advised to use external dependency for some header-only libraries, especially when they are already packaged in conda-forge. Could we consider also to use externalized versions for some of these (the ones easily available as external packages), such as json nlohmann and cxxopts ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:2607,Modifiability,maintainab,maintainability,2607," `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This looks reasonable at first, but shouldn't we switch to fully externalized versions for maintainability ?. Last point, we were also advised to use external dependency for some header-only libraries, especially when they are already packaged in conda-forge. Could we consider also to use externalized versions for some of these (the ones easily available as external packages), such as json nlohmann and cxxopts ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:1936,Safety,Avoid,Avoid,1936," `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This looks reasonable at first, but shouldn't we switch to fully externalized versions for maintainability ?. Last point, we were also advised to use external dependency for some header-only libraries, especially when they are already packaged in conda-forge. Could we consider also to use externalized versions for some of these (the ones easily available as external packages), such as json nlohmann and cxxopts ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4221:1455,Testability,Test,Testing,1455,"in #4272 |; | stb | header-only | `extlibs` | MIT | OK |; | TinyXML | static | `extlibs` | zlib **(should be in a separate file)** | Externalize tinyxml dependency: #4240 (waiting for merge) |; | miniFlowVR | static | `applications/plugins/SofaDistanceGrid/extlibs` | LGPL (version ?) **(should be in a separate file)** | Not built by default. TODO: plugin to be externalized (#1442 ) |; | newmat | static | `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This loo",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221
https://github.com/sofa-framework/sofa/issues/4222:12,Deployability,integrat,integration,12,Discuss the integration of @courtecuisse @bakpaul implementation of the CollisionPipeline,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4222
https://github.com/sofa-framework/sofa/issues/4222:12,Integrability,integrat,integration,12,Discuss the integration of @courtecuisse @bakpaul implementation of the CollisionPipeline,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4222
https://github.com/sofa-framework/sofa/issues/4223:66,Availability,down,downloaded,66,"Hi everyone, . i'm trying to install sofa_env for sofa. i already downloaded it from git hub but when i try to install it (i tried dirrent location: in the same environment as sofa, in the sofa folder, in the bin folder, etc), it tells me that it doesn't find the sofa module with sofapython3. Actually sofapython3 is in sofa (i can see it in the plugin manager). it looks like a path problem, like it can't find sofa for some reason, maybe i'm trying to install it in the wrong place. Can someone help me please?? maybe @ScheiklP . thank you very much!!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223
https://github.com/sofa-framework/sofa/issues/4223:29,Deployability,install,install,29,"Hi everyone, . i'm trying to install sofa_env for sofa. i already downloaded it from git hub but when i try to install it (i tried dirrent location: in the same environment as sofa, in the sofa folder, in the bin folder, etc), it tells me that it doesn't find the sofa module with sofapython3. Actually sofapython3 is in sofa (i can see it in the plugin manager). it looks like a path problem, like it can't find sofa for some reason, maybe i'm trying to install it in the wrong place. Can someone help me please?? maybe @ScheiklP . thank you very much!!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223
https://github.com/sofa-framework/sofa/issues/4223:111,Deployability,install,install,111,"Hi everyone, . i'm trying to install sofa_env for sofa. i already downloaded it from git hub but when i try to install it (i tried dirrent location: in the same environment as sofa, in the sofa folder, in the bin folder, etc), it tells me that it doesn't find the sofa module with sofapython3. Actually sofapython3 is in sofa (i can see it in the plugin manager). it looks like a path problem, like it can't find sofa for some reason, maybe i'm trying to install it in the wrong place. Can someone help me please?? maybe @ScheiklP . thank you very much!!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223
https://github.com/sofa-framework/sofa/issues/4223:455,Deployability,install,install,455,"Hi everyone, . i'm trying to install sofa_env for sofa. i already downloaded it from git hub but when i try to install it (i tried dirrent location: in the same environment as sofa, in the sofa folder, in the bin folder, etc), it tells me that it doesn't find the sofa module with sofapython3. Actually sofapython3 is in sofa (i can see it in the plugin manager). it looks like a path problem, like it can't find sofa for some reason, maybe i'm trying to install it in the wrong place. Can someone help me please?? maybe @ScheiklP . thank you very much!!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223
https://github.com/sofa-framework/sofa/issues/4223:347,Modifiability,plugin,plugin,347,"Hi everyone, . i'm trying to install sofa_env for sofa. i already downloaded it from git hub but when i try to install it (i tried dirrent location: in the same environment as sofa, in the sofa folder, in the bin folder, etc), it tells me that it doesn't find the sofa module with sofapython3. Actually sofapython3 is in sofa (i can see it in the plugin manager). it looks like a path problem, like it can't find sofa for some reason, maybe i'm trying to install it in the wrong place. Can someone help me please?? maybe @ScheiklP . thank you very much!!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223
https://github.com/sofa-framework/sofa/pull/4226:765,Availability,failure,failures,765,"With this PR, I suggest to return barycentric coords to the detection output members. In my use case , these coordinates are used in cutting simulation to create new vertices from ancestor points when propagating a cut.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226
https://github.com/sofa-framework/sofa/pull/4226:814,Availability,failure,failures,814,"With this PR, I suggest to return barycentric coords to the detection output members. In my use case , these coordinates are used in cutting simulation to create new vertices from ancestor points when propagating a cut.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226
https://github.com/sofa-framework/sofa/pull/4226:60,Safety,detect,detection,60,"With this PR, I suggest to return barycentric coords to the detection output members. In my use case , these coordinates are used in cutting simulation to create new vertices from ancestor points when propagating a cut.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226
https://github.com/sofa-framework/sofa/pull/4226:384,Security,Certificate,Certificate,384,"With this PR, I suggest to return barycentric coords to the detection output members. In my use case , these coordinates are used in cutting simulation to create new vertices from ancestor points when propagating a cut.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226
https://github.com/sofa-framework/sofa/pull/4226:495,Security,certificate,certificate-of-origin-dco,495,"With this PR, I suggest to return barycentric coords to the detection output members. In my use case , these coordinates are used in cutting simulation to create new vertices from ancestor points when propagating a cut.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226
https://github.com/sofa-framework/sofa/pull/4226:760,Testability,test,test,760,"With this PR, I suggest to return barycentric coords to the detection output members. In my use case , these coordinates are used in cutting simulation to create new vertices from ancestor points when propagating a cut.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226
https://github.com/sofa-framework/sofa/pull/4226:809,Testability,test,test,809,"With this PR, I suggest to return barycentric coords to the detection output members. In my use case , these coordinates are used in cutting simulation to create new vertices from ancestor points when propagating a cut.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226
https://github.com/sofa-framework/sofa/pull/4227:135,Availability,error,error,135,"This part of the code is dependent from Sofa.GUI and when `Sofa.GUI.Qt` was no found, `Sofa.GUI` was never linked, causing compilation error. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4227
https://github.com/sofa-framework/sofa/pull/4227:688,Availability,failure,failures,688,"This part of the code is dependent from Sofa.GUI and when `Sofa.GUI.Qt` was no found, `Sofa.GUI` was never linked, causing compilation error. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4227
https://github.com/sofa-framework/sofa/pull/4227:737,Availability,failure,failures,737,"This part of the code is dependent from Sofa.GUI and when `Sofa.GUI.Qt` was no found, `Sofa.GUI` was never linked, causing compilation error. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4227
https://github.com/sofa-framework/sofa/pull/4227:25,Integrability,depend,dependent,25,"This part of the code is dependent from Sofa.GUI and when `Sofa.GUI.Qt` was no found, `Sofa.GUI` was never linked, causing compilation error. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4227
https://github.com/sofa-framework/sofa/pull/4227:307,Security,Certificate,Certificate,307,"This part of the code is dependent from Sofa.GUI and when `Sofa.GUI.Qt` was no found, `Sofa.GUI` was never linked, causing compilation error. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4227
https://github.com/sofa-framework/sofa/pull/4227:418,Security,certificate,certificate-of-origin-dco,418,"This part of the code is dependent from Sofa.GUI and when `Sofa.GUI.Qt` was no found, `Sofa.GUI` was never linked, causing compilation error. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4227
https://github.com/sofa-framework/sofa/pull/4227:683,Testability,test,test,683,"This part of the code is dependent from Sofa.GUI and when `Sofa.GUI.Qt` was no found, `Sofa.GUI` was never linked, causing compilation error. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4227
https://github.com/sofa-framework/sofa/pull/4227:732,Testability,test,test,732,"This part of the code is dependent from Sofa.GUI and when `Sofa.GUI.Qt` was no found, `Sofa.GUI` was never linked, causing compilation error. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4227
https://github.com/sofa-framework/sofa/issues/4230:11,Deployability,install,installed,11,"Hi, I have installed the SOFA docker Image, but I have no idea how to run sofa in Docker!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4230
https://github.com/sofa-framework/sofa/pull/4234:2218,Availability,toler,tolerance,2218,"equiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [SparseLDLSolver] -->; <RequiredPlugin name=""Sofa.Component.Mapping.NonLinear""/> <!-- Needed to use components [RigidMapping] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [ConstantForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.Setting""/> <!-- Needed to use components [BackgroundSetting] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->. <VisualStyle displayFlags=""showVisualModels"" />; <BackgroundSetting color=""0.8 0.8 0.8 1"" />. <FreeMotionAnimationLoop name=""FreeMotionAnimationLoop"" />; <GenericConstraintSolver maxIterations=""10"" tolerance=""1.0e-3""/>. <Node name=""Mesh"" >; <EulerImplicitSolver firstOrder=""false"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixd"" />. <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; <UniformMass totalMass=""1""/>. <Node name=""AttachPoint"">; <MechanicalObject name=""points"" template=""Vec3"" position=""0 0 0 1 0 0 0 1 0 0 0 1"" />; <ConstantForceField indices=""1"" forces=""0.0 0.0 1.0"" showArrowSize=""0.2""/>; <RigidMapping />; </Node>; <LinearSolverConstraintCorrection linearSolver=""@precond""/>; </Node>. <Node name=""Mesh2"" >; <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; </Node>. <BilateralInteractionConstraint template=""Rigid3d""; object1=""@Mesh/mstate""; object2=""@Mesh2/mstate""; first_point=""0"" second_point=""0"" />; </Node >; ```. ______________________________________________________. By submitting this pull request, ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4234
https://github.com/sofa-framework/sofa/pull/4234:3627,Availability,failure,failures,3627,"ponents [BackgroundSetting] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->. <VisualStyle displayFlags=""showVisualModels"" />; <BackgroundSetting color=""0.8 0.8 0.8 1"" />. <FreeMotionAnimationLoop name=""FreeMotionAnimationLoop"" />; <GenericConstraintSolver maxIterations=""10"" tolerance=""1.0e-3""/>. <Node name=""Mesh"" >; <EulerImplicitSolver firstOrder=""false"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixd"" />. <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; <UniformMass totalMass=""1""/>. <Node name=""AttachPoint"">; <MechanicalObject name=""points"" template=""Vec3"" position=""0 0 0 1 0 0 0 1 0 0 0 1"" />; <ConstantForceField indices=""1"" forces=""0.0 0.0 1.0"" showArrowSize=""0.2""/>; <RigidMapping />; </Node>; <LinearSolverConstraintCorrection linearSolver=""@precond""/>; </Node>. <Node name=""Mesh2"" >; <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; </Node>. <BilateralInteractionConstraint template=""Rigid3d""; object1=""@Mesh/mstate""; object2=""@Mesh2/mstate""; first_point=""0"" second_point=""0"" />; </Node >; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4234
https://github.com/sofa-framework/sofa/pull/4234:3676,Availability,failure,failures,3676,"ponents [BackgroundSetting] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->. <VisualStyle displayFlags=""showVisualModels"" />; <BackgroundSetting color=""0.8 0.8 0.8 1"" />. <FreeMotionAnimationLoop name=""FreeMotionAnimationLoop"" />; <GenericConstraintSolver maxIterations=""10"" tolerance=""1.0e-3""/>. <Node name=""Mesh"" >; <EulerImplicitSolver firstOrder=""false"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixd"" />. <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; <UniformMass totalMass=""1""/>. <Node name=""AttachPoint"">; <MechanicalObject name=""points"" template=""Vec3"" position=""0 0 0 1 0 0 0 1 0 0 0 1"" />; <ConstantForceField indices=""1"" forces=""0.0 0.0 1.0"" showArrowSize=""0.2""/>; <RigidMapping />; </Node>; <LinearSolverConstraintCorrection linearSolver=""@precond""/>; </Node>. <Node name=""Mesh2"" >; <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; </Node>. <BilateralInteractionConstraint template=""Rigid3d""; object1=""@Mesh/mstate""; object2=""@Mesh2/mstate""; first_point=""0"" second_point=""0"" />; </Node >; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4234
https://github.com/sofa-framework/sofa/pull/4234:3246,Security,Certificate,Certificate,3246,"ponents [BackgroundSetting] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->. <VisualStyle displayFlags=""showVisualModels"" />; <BackgroundSetting color=""0.8 0.8 0.8 1"" />. <FreeMotionAnimationLoop name=""FreeMotionAnimationLoop"" />; <GenericConstraintSolver maxIterations=""10"" tolerance=""1.0e-3""/>. <Node name=""Mesh"" >; <EulerImplicitSolver firstOrder=""false"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixd"" />. <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; <UniformMass totalMass=""1""/>. <Node name=""AttachPoint"">; <MechanicalObject name=""points"" template=""Vec3"" position=""0 0 0 1 0 0 0 1 0 0 0 1"" />; <ConstantForceField indices=""1"" forces=""0.0 0.0 1.0"" showArrowSize=""0.2""/>; <RigidMapping />; </Node>; <LinearSolverConstraintCorrection linearSolver=""@precond""/>; </Node>. <Node name=""Mesh2"" >; <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; </Node>. <BilateralInteractionConstraint template=""Rigid3d""; object1=""@Mesh/mstate""; object2=""@Mesh2/mstate""; first_point=""0"" second_point=""0"" />; </Node >; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4234
https://github.com/sofa-framework/sofa/pull/4234:3357,Security,certificate,certificate-of-origin-dco,3357,"ponents [BackgroundSetting] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->. <VisualStyle displayFlags=""showVisualModels"" />; <BackgroundSetting color=""0.8 0.8 0.8 1"" />. <FreeMotionAnimationLoop name=""FreeMotionAnimationLoop"" />; <GenericConstraintSolver maxIterations=""10"" tolerance=""1.0e-3""/>. <Node name=""Mesh"" >; <EulerImplicitSolver firstOrder=""false"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixd"" />. <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; <UniformMass totalMass=""1""/>. <Node name=""AttachPoint"">; <MechanicalObject name=""points"" template=""Vec3"" position=""0 0 0 1 0 0 0 1 0 0 0 1"" />; <ConstantForceField indices=""1"" forces=""0.0 0.0 1.0"" showArrowSize=""0.2""/>; <RigidMapping />; </Node>; <LinearSolverConstraintCorrection linearSolver=""@precond""/>; </Node>. <Node name=""Mesh2"" >; <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; </Node>. <BilateralInteractionConstraint template=""Rigid3d""; object1=""@Mesh/mstate""; object2=""@Mesh2/mstate""; first_point=""0"" second_point=""0"" />; </Node >; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4234
https://github.com/sofa-framework/sofa/pull/4234:3622,Testability,test,test,3622,"ponents [BackgroundSetting] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->. <VisualStyle displayFlags=""showVisualModels"" />; <BackgroundSetting color=""0.8 0.8 0.8 1"" />. <FreeMotionAnimationLoop name=""FreeMotionAnimationLoop"" />; <GenericConstraintSolver maxIterations=""10"" tolerance=""1.0e-3""/>. <Node name=""Mesh"" >; <EulerImplicitSolver firstOrder=""false"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixd"" />. <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; <UniformMass totalMass=""1""/>. <Node name=""AttachPoint"">; <MechanicalObject name=""points"" template=""Vec3"" position=""0 0 0 1 0 0 0 1 0 0 0 1"" />; <ConstantForceField indices=""1"" forces=""0.0 0.0 1.0"" showArrowSize=""0.2""/>; <RigidMapping />; </Node>; <LinearSolverConstraintCorrection linearSolver=""@precond""/>; </Node>. <Node name=""Mesh2"" >; <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; </Node>. <BilateralInteractionConstraint template=""Rigid3d""; object1=""@Mesh/mstate""; object2=""@Mesh2/mstate""; first_point=""0"" second_point=""0"" />; </Node >; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4234
https://github.com/sofa-framework/sofa/pull/4234:3671,Testability,test,test,3671,"ponents [BackgroundSetting] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->. <VisualStyle displayFlags=""showVisualModels"" />; <BackgroundSetting color=""0.8 0.8 0.8 1"" />. <FreeMotionAnimationLoop name=""FreeMotionAnimationLoop"" />; <GenericConstraintSolver maxIterations=""10"" tolerance=""1.0e-3""/>. <Node name=""Mesh"" >; <EulerImplicitSolver firstOrder=""false"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixd"" />. <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; <UniformMass totalMass=""1""/>. <Node name=""AttachPoint"">; <MechanicalObject name=""points"" template=""Vec3"" position=""0 0 0 1 0 0 0 1 0 0 0 1"" />; <ConstantForceField indices=""1"" forces=""0.0 0.0 1.0"" showArrowSize=""0.2""/>; <RigidMapping />; </Node>; <LinearSolverConstraintCorrection linearSolver=""@precond""/>; </Node>. <Node name=""Mesh2"" >; <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; </Node>. <BilateralInteractionConstraint template=""Rigid3d""; object1=""@Mesh/mstate""; object2=""@Mesh2/mstate""; first_point=""0"" second_point=""0"" />; </Node >; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4234
https://github.com/sofa-framework/sofa/pull/4234:335,Usability,simpl,simple,335,"While trying to provide a complete answer to the discussion #4218 I wondered if it was that difficult to do this. In fact, it only requires to scale the stored data `d_position` while calling apply and modifying the attribute `m_rotatedPoints` because this is used to compute every ohter step (applyJ, JT etc...). . I've tried it in a simple scene with lagrangian constraint to see if it works, and after changing the scale factor in the middle of the simulation its maps correctly the forces (you can se the torque scaled) and the lambda are computed accordingly. . ``` xml; <?xml version=""1.0""?>. <Node name=""root"" dt=""0.01"" gravity=""0 0 0"" >; <RequiredPlugin name=""Sofa.Component.AnimationLoop""/> <!-- Needed to use components [FreeMotionAnimationLoop] -->; <RequiredPlugin name=""Sofa.Component.Constraint.Lagrangian.Correction""/> <!-- Needed to use components [LinearSolverConstraintCorrection] -->; <RequiredPlugin name=""Sofa.Component.Constraint.Lagrangian.Model""/> <!-- Needed to use components [BilateralInteractionConstraint] -->; <RequiredPlugin name=""Sofa.Component.Constraint.Lagrangian.Solver""/> <!-- Needed to use components [GenericConstraintSolver] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [SparseLDLSolver] -->; <RequiredPlugin name=""Sofa.Component.Mapping.NonLinear""/> <!-- Needed to use components [RigidMapping] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [ConstantForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.Setting""/> <!-- Needed to use components [BackgroundSetting] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4234
https://github.com/sofa-framework/sofa/pull/4235:1327,Availability,failure,failures,1327,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235
https://github.com/sofa-framework/sofa/pull/4235:1376,Availability,failure,failures,1376,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235
https://github.com/sofa-framework/sofa/pull/4235:363,Deployability,update,update,363,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235
https://github.com/sofa-framework/sofa/pull/4235:764,Deployability,integrat,integration,764,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235
https://github.com/sofa-framework/sofa/pull/4235:45,Integrability,message,message,45,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235
https://github.com/sofa-framework/sofa/pull/4235:764,Integrability,integrat,integration,764,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235
https://github.com/sofa-framework/sofa/pull/4235:946,Security,Certificate,Certificate,946,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235
https://github.com/sofa-framework/sofa/pull/4235:1057,Security,certificate,certificate-of-origin-dco,1057,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235
https://github.com/sofa-framework/sofa/pull/4235:1322,Testability,test,test,1322,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235
https://github.com/sofa-framework/sofa/pull/4235:1371,Testability,test,test,1371,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235
https://github.com/sofa-framework/sofa/pull/4236:592,Availability,failure,failures,592,"Supersedes #4179. No tests of performances yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236
https://github.com/sofa-framework/sofa/pull/4236:641,Availability,failure,failures,641,"Supersedes #4179. No tests of performances yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236
https://github.com/sofa-framework/sofa/pull/4236:30,Performance,perform,performances,30,"Supersedes #4179. No tests of performances yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236
https://github.com/sofa-framework/sofa/pull/4236:211,Security,Certificate,Certificate,211,"Supersedes #4179. No tests of performances yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236
https://github.com/sofa-framework/sofa/pull/4236:322,Security,certificate,certificate-of-origin-dco,322,"Supersedes #4179. No tests of performances yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236
https://github.com/sofa-framework/sofa/pull/4236:21,Testability,test,tests,21,"Supersedes #4179. No tests of performances yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236
https://github.com/sofa-framework/sofa/pull/4236:587,Testability,test,test,587,"Supersedes #4179. No tests of performances yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236
https://github.com/sofa-framework/sofa/pull/4236:636,Testability,test,test,636,"Supersedes #4179. No tests of performances yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236
https://github.com/sofa-framework/sofa/pull/4237:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4237
https://github.com/sofa-framework/sofa/pull/4237:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4237
https://github.com/sofa-framework/sofa/pull/4237:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4237
https://github.com/sofa-framework/sofa/pull/4237:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4237
https://github.com/sofa-framework/sofa/pull/4237:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4237
https://github.com/sofa-framework/sofa/pull/4237:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4237
https://github.com/sofa-framework/sofa/pull/4238:596,Availability,failure,failures,596,"My October fix-warning contribution :sweat_smile: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4238
https://github.com/sofa-framework/sofa/pull/4238:645,Availability,failure,failures,645,"My October fix-warning contribution :sweat_smile: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4238
https://github.com/sofa-framework/sofa/pull/4238:215,Security,Certificate,Certificate,215,"My October fix-warning contribution :sweat_smile: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4238
https://github.com/sofa-framework/sofa/pull/4238:326,Security,certificate,certificate-of-origin-dco,326,"My October fix-warning contribution :sweat_smile: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4238
https://github.com/sofa-framework/sofa/pull/4238:591,Testability,test,test,591,"My October fix-warning contribution :sweat_smile: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4238
https://github.com/sofa-framework/sofa/pull/4238:640,Testability,test,test,640,"My October fix-warning contribution :sweat_smile: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4238
https://github.com/sofa-framework/sofa/pull/4240:383,Availability,mainten,maintened,383,"This aims to tackle one point of #4221 . Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; This PR propose to replace tinyxml embedded library, which is unmaintained now for a long time, by tinyxml2 (https://github.com/leethomason/tinyxml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240
https://github.com/sofa-framework/sofa/pull/4240:423,Availability,avail,available,423,"This aims to tackle one point of #4221 . Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; This PR propose to replace tinyxml embedded library, which is unmaintained now for a long time, by tinyxml2 (https://github.com/leethomason/tinyxml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240
https://github.com/sofa-framework/sofa/pull/4240:2128,Availability,failure,failures,2128,"xml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240
https://github.com/sofa-framework/sofa/pull/4240:2177,Availability,failure,failures,2177,"xml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240
https://github.com/sofa-framework/sofa/pull/4240:848,Deployability,install,installed,848,"This aims to tackle one point of #4221 . Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; This PR propose to replace tinyxml embedded library, which is unmaintained now for a long time, by tinyxml2 (https://github.com/leethomason/tinyxml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240
https://github.com/sofa-framework/sofa/pull/4240:717,Integrability,depend,dependency,717,"This aims to tackle one point of #4221 . Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; This PR propose to replace tinyxml embedded library, which is unmaintained now for a long time, by tinyxml2 (https://github.com/leethomason/tinyxml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240
https://github.com/sofa-framework/sofa/pull/4240:831,Integrability,depend,dependency,831,"This aims to tackle one point of #4221 . Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; This PR propose to replace tinyxml embedded library, which is unmaintained now for a long time, by tinyxml2 (https://github.com/leethomason/tinyxml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240
https://github.com/sofa-framework/sofa/pull/4240:1213,Performance,CACHE,CACHE,1213,"ained now for a long time, by tinyxml2 (https://github.com/leethomason/tinyxml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240
https://github.com/sofa-framework/sofa/pull/4240:797,Safety,avoid,avoiding,797,"This aims to tackle one point of #4221 . Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; This PR propose to replace tinyxml embedded library, which is unmaintained now for a long time, by tinyxml2 (https://github.com/leethomason/tinyxml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240
https://github.com/sofa-framework/sofa/pull/4240:1747,Security,Certificate,Certificate,1747,"xml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240
https://github.com/sofa-framework/sofa/pull/4240:1858,Security,certificate,certificate-of-origin-dco,1858,"xml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240
https://github.com/sofa-framework/sofa/pull/4240:2123,Testability,test,test,2123,"xml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240
https://github.com/sofa-framework/sofa/pull/4240:2172,Testability,test,test,2172,"xml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240
https://github.com/sofa-framework/sofa/pull/4242:692,Availability,failure,failures,692,"Check that triangles index match the size of the triangleAroundVertexArray (Like it is done in EdgeSetTopologyContainer for EdgeAroundVertexArray). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4242
https://github.com/sofa-framework/sofa/pull/4242:741,Availability,failure,failures,741,"Check that triangles index match the size of the triangleAroundVertexArray (Like it is done in EdgeSetTopologyContainer for EdgeAroundVertexArray). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4242
https://github.com/sofa-framework/sofa/pull/4242:311,Security,Certificate,Certificate,311,"Check that triangles index match the size of the triangleAroundVertexArray (Like it is done in EdgeSetTopologyContainer for EdgeAroundVertexArray). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4242
https://github.com/sofa-framework/sofa/pull/4242:422,Security,certificate,certificate-of-origin-dco,422,"Check that triangles index match the size of the triangleAroundVertexArray (Like it is done in EdgeSetTopologyContainer for EdgeAroundVertexArray). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4242
https://github.com/sofa-framework/sofa/pull/4242:687,Testability,test,test,687,"Check that triangles index match the size of the triangleAroundVertexArray (Like it is done in EdgeSetTopologyContainer for EdgeAroundVertexArray). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4242
https://github.com/sofa-framework/sofa/pull/4242:736,Testability,test,test,736,"Check that triangles index match the size of the triangleAroundVertexArray (Like it is done in EdgeSetTopologyContainer for EdgeAroundVertexArray). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4242
https://github.com/sofa-framework/sofa/pull/4244:579,Availability,failure,failures,579,"The file does not seem to be used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4244
https://github.com/sofa-framework/sofa/pull/4244:628,Availability,failure,failures,628,"The file does not seem to be used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4244
https://github.com/sofa-framework/sofa/pull/4244:198,Security,Certificate,Certificate,198,"The file does not seem to be used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4244
https://github.com/sofa-framework/sofa/pull/4244:309,Security,certificate,certificate-of-origin-dco,309,"The file does not seem to be used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4244
https://github.com/sofa-framework/sofa/pull/4244:574,Testability,test,test,574,"The file does not seem to be used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4244
https://github.com/sofa-framework/sofa/pull/4244:623,Testability,test,test,623,"The file does not seem to be used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4244
https://github.com/sofa-framework/sofa/pull/4245:164,Availability,down,download,164,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245
https://github.com/sofa-framework/sofa/pull/4245:850,Availability,failure,failures,850,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245
https://github.com/sofa-framework/sofa/pull/4245:899,Availability,failure,failures,899,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245
https://github.com/sofa-framework/sofa/pull/4245:288,Deployability,install,install,288,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245
https://github.com/sofa-framework/sofa/pull/4245:296,Deployability,release,releases,296,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245
https://github.com/sofa-framework/sofa/pull/4245:109,Modifiability,plugin,plugin,109,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245
https://github.com/sofa-framework/sofa/pull/4245:136,Modifiability,plugin,plugin,136,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245
https://github.com/sofa-framework/sofa/pull/4245:197,Security,access,access,197,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245
https://github.com/sofa-framework/sofa/pull/4245:469,Security,Certificate,Certificate,469,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245
https://github.com/sofa-framework/sofa/pull/4245:580,Security,certificate,certificate-of-origin-dco,580,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245
https://github.com/sofa-framework/sofa/pull/4245:845,Testability,test,test,845,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245
https://github.com/sofa-framework/sofa/pull/4245:894,Testability,test,test,894,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245
https://github.com/sofa-framework/sofa/issues/4246:107,Availability,error,errors,107,"Hi everyone, . i am trying to build sofa from source. I used cmake-gui and when i configure it gives me no errors, but i open Sofa.sln in VS 2022 it skips 3 compilations and so i can't find sofaRun to run the software. The 3 compilations are Examples, Documentations and INSTALL. . I watched the video tutorial on sofa website and i noticed QGLViewer_DIR variable is not found in cmake-gui, i don't know if this could be a reason why. . thak you for your help!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4246
https://github.com/sofa-framework/sofa/issues/4246:271,Deployability,INSTALL,INSTALL,271,"Hi everyone, . i am trying to build sofa from source. I used cmake-gui and when i configure it gives me no errors, but i open Sofa.sln in VS 2022 it skips 3 compilations and so i can't find sofaRun to run the software. The 3 compilations are Examples, Documentations and INSTALL. . I watched the video tutorial on sofa website and i noticed QGLViewer_DIR variable is not found in cmake-gui, i don't know if this could be a reason why. . thak you for your help!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4246
https://github.com/sofa-framework/sofa/issues/4246:82,Modifiability,config,configure,82,"Hi everyone, . i am trying to build sofa from source. I used cmake-gui and when i configure it gives me no errors, but i open Sofa.sln in VS 2022 it skips 3 compilations and so i can't find sofaRun to run the software. The 3 compilations are Examples, Documentations and INSTALL. . I watched the video tutorial on sofa website and i noticed QGLViewer_DIR variable is not found in cmake-gui, i don't know if this could be a reason why. . thak you for your help!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4246
https://github.com/sofa-framework/sofa/issues/4246:355,Modifiability,variab,variable,355,"Hi everyone, . i am trying to build sofa from source. I used cmake-gui and when i configure it gives me no errors, but i open Sofa.sln in VS 2022 it skips 3 compilations and so i can't find sofaRun to run the software. The 3 compilations are Examples, Documentations and INSTALL. . I watched the video tutorial on sofa website and i noticed QGLViewer_DIR variable is not found in cmake-gui, i don't know if this could be a reason why. . thak you for your help!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4246
https://github.com/sofa-framework/sofa/pull/4247:611,Availability,failure,failures,611,"Needed for https://github.com/sofa-framework/BeamAdapter/pull/115. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4247
https://github.com/sofa-framework/sofa/pull/4247:660,Availability,failure,failures,660,"Needed for https://github.com/sofa-framework/BeamAdapter/pull/115. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4247
https://github.com/sofa-framework/sofa/pull/4247:230,Security,Certificate,Certificate,230,"Needed for https://github.com/sofa-framework/BeamAdapter/pull/115. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4247
https://github.com/sofa-framework/sofa/pull/4247:341,Security,certificate,certificate-of-origin-dco,341,"Needed for https://github.com/sofa-framework/BeamAdapter/pull/115. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4247
https://github.com/sofa-framework/sofa/pull/4247:606,Testability,test,test,606,"Needed for https://github.com/sofa-framework/BeamAdapter/pull/115. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4247
https://github.com/sofa-framework/sofa/pull/4247:655,Testability,test,test,655,"Needed for https://github.com/sofa-framework/BeamAdapter/pull/115. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4247
https://github.com/sofa-framework/sofa/pull/4248:1316,Availability,failure,failures,1316,"Validated with the following benchmark. The benchmark `BM_BTDMatrix_addBlock` uses the new implemented accumulation function and must be compared to `BM_BTDMatrix_add`. ```; -------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------; BM_BTDMatrix_add<6, SReal>/64 6212 ns 3069 ns 224000; BM_BTDMatrix_add<6, SReal>/512 49857 ns 32087 ns 22400; BM_BTDMatrix_add<6, SReal>/1024 103536 ns 54408 ns 11200; BM_BTDMatrix_addBlock<6, SReal>/64 602 ns 391 ns 1600000; BM_BTDMatrix_addBlock<6, SReal>/512 5607 ns 3432 ns 186667; BM_BTDMatrix_addBlock<6, SReal>/1024 12176 ns 6417 ns 112000. ```. https://github.com/alxbilger/SofaBenchmark/pull/36. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248
https://github.com/sofa-framework/sofa/pull/4248:1365,Availability,failure,failures,1365,"Validated with the following benchmark. The benchmark `BM_BTDMatrix_addBlock` uses the new implemented accumulation function and must be compared to `BM_BTDMatrix_add`. ```; -------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------; BM_BTDMatrix_add<6, SReal>/64 6212 ns 3069 ns 224000; BM_BTDMatrix_add<6, SReal>/512 49857 ns 32087 ns 22400; BM_BTDMatrix_add<6, SReal>/1024 103536 ns 54408 ns 11200; BM_BTDMatrix_addBlock<6, SReal>/64 602 ns 391 ns 1600000; BM_BTDMatrix_addBlock<6, SReal>/512 5607 ns 3432 ns 186667; BM_BTDMatrix_addBlock<6, SReal>/1024 12176 ns 6417 ns 112000. ```. https://github.com/alxbilger/SofaBenchmark/pull/36. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248
https://github.com/sofa-framework/sofa/pull/4248:0,Security,Validat,Validated,0,"Validated with the following benchmark. The benchmark `BM_BTDMatrix_addBlock` uses the new implemented accumulation function and must be compared to `BM_BTDMatrix_add`. ```; -------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------; BM_BTDMatrix_add<6, SReal>/64 6212 ns 3069 ns 224000; BM_BTDMatrix_add<6, SReal>/512 49857 ns 32087 ns 22400; BM_BTDMatrix_add<6, SReal>/1024 103536 ns 54408 ns 11200; BM_BTDMatrix_addBlock<6, SReal>/64 602 ns 391 ns 1600000; BM_BTDMatrix_addBlock<6, SReal>/512 5607 ns 3432 ns 186667; BM_BTDMatrix_addBlock<6, SReal>/1024 12176 ns 6417 ns 112000. ```. https://github.com/alxbilger/SofaBenchmark/pull/36. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248
https://github.com/sofa-framework/sofa/pull/4248:935,Security,Certificate,Certificate,935,"Validated with the following benchmark. The benchmark `BM_BTDMatrix_addBlock` uses the new implemented accumulation function and must be compared to `BM_BTDMatrix_add`. ```; -------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------; BM_BTDMatrix_add<6, SReal>/64 6212 ns 3069 ns 224000; BM_BTDMatrix_add<6, SReal>/512 49857 ns 32087 ns 22400; BM_BTDMatrix_add<6, SReal>/1024 103536 ns 54408 ns 11200; BM_BTDMatrix_addBlock<6, SReal>/64 602 ns 391 ns 1600000; BM_BTDMatrix_addBlock<6, SReal>/512 5607 ns 3432 ns 186667; BM_BTDMatrix_addBlock<6, SReal>/1024 12176 ns 6417 ns 112000. ```. https://github.com/alxbilger/SofaBenchmark/pull/36. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248
https://github.com/sofa-framework/sofa/pull/4248:1046,Security,certificate,certificate-of-origin-dco,1046,"Validated with the following benchmark. The benchmark `BM_BTDMatrix_addBlock` uses the new implemented accumulation function and must be compared to `BM_BTDMatrix_add`. ```; -------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------; BM_BTDMatrix_add<6, SReal>/64 6212 ns 3069 ns 224000; BM_BTDMatrix_add<6, SReal>/512 49857 ns 32087 ns 22400; BM_BTDMatrix_add<6, SReal>/1024 103536 ns 54408 ns 11200; BM_BTDMatrix_addBlock<6, SReal>/64 602 ns 391 ns 1600000; BM_BTDMatrix_addBlock<6, SReal>/512 5607 ns 3432 ns 186667; BM_BTDMatrix_addBlock<6, SReal>/1024 12176 ns 6417 ns 112000. ```. https://github.com/alxbilger/SofaBenchmark/pull/36. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248
https://github.com/sofa-framework/sofa/pull/4248:29,Testability,benchmark,benchmark,29,"Validated with the following benchmark. The benchmark `BM_BTDMatrix_addBlock` uses the new implemented accumulation function and must be compared to `BM_BTDMatrix_add`. ```; -------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------; BM_BTDMatrix_add<6, SReal>/64 6212 ns 3069 ns 224000; BM_BTDMatrix_add<6, SReal>/512 49857 ns 32087 ns 22400; BM_BTDMatrix_add<6, SReal>/1024 103536 ns 54408 ns 11200; BM_BTDMatrix_addBlock<6, SReal>/64 602 ns 391 ns 1600000; BM_BTDMatrix_addBlock<6, SReal>/512 5607 ns 3432 ns 186667; BM_BTDMatrix_addBlock<6, SReal>/1024 12176 ns 6417 ns 112000. ```. https://github.com/alxbilger/SofaBenchmark/pull/36. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248
https://github.com/sofa-framework/sofa/pull/4248:44,Testability,benchmark,benchmark,44,"Validated with the following benchmark. The benchmark `BM_BTDMatrix_addBlock` uses the new implemented accumulation function and must be compared to `BM_BTDMatrix_add`. ```; -------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------; BM_BTDMatrix_add<6, SReal>/64 6212 ns 3069 ns 224000; BM_BTDMatrix_add<6, SReal>/512 49857 ns 32087 ns 22400; BM_BTDMatrix_add<6, SReal>/1024 103536 ns 54408 ns 11200; BM_BTDMatrix_addBlock<6, SReal>/64 602 ns 391 ns 1600000; BM_BTDMatrix_addBlock<6, SReal>/512 5607 ns 3432 ns 186667; BM_BTDMatrix_addBlock<6, SReal>/1024 12176 ns 6417 ns 112000. ```. https://github.com/alxbilger/SofaBenchmark/pull/36. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248
https://github.com/sofa-framework/sofa/pull/4248:255,Testability,Benchmark,Benchmark,255,"Validated with the following benchmark. The benchmark `BM_BTDMatrix_addBlock` uses the new implemented accumulation function and must be compared to `BM_BTDMatrix_add`. ```; -------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------; BM_BTDMatrix_add<6, SReal>/64 6212 ns 3069 ns 224000; BM_BTDMatrix_add<6, SReal>/512 49857 ns 32087 ns 22400; BM_BTDMatrix_add<6, SReal>/1024 103536 ns 54408 ns 11200; BM_BTDMatrix_addBlock<6, SReal>/64 602 ns 391 ns 1600000; BM_BTDMatrix_addBlock<6, SReal>/512 5607 ns 3432 ns 186667; BM_BTDMatrix_addBlock<6, SReal>/1024 12176 ns 6417 ns 112000. ```. https://github.com/alxbilger/SofaBenchmark/pull/36. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248
https://github.com/sofa-framework/sofa/pull/4248:1311,Testability,test,test,1311,"Validated with the following benchmark. The benchmark `BM_BTDMatrix_addBlock` uses the new implemented accumulation function and must be compared to `BM_BTDMatrix_add`. ```; -------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------; BM_BTDMatrix_add<6, SReal>/64 6212 ns 3069 ns 224000; BM_BTDMatrix_add<6, SReal>/512 49857 ns 32087 ns 22400; BM_BTDMatrix_add<6, SReal>/1024 103536 ns 54408 ns 11200; BM_BTDMatrix_addBlock<6, SReal>/64 602 ns 391 ns 1600000; BM_BTDMatrix_addBlock<6, SReal>/512 5607 ns 3432 ns 186667; BM_BTDMatrix_addBlock<6, SReal>/1024 12176 ns 6417 ns 112000. ```. https://github.com/alxbilger/SofaBenchmark/pull/36. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248
https://github.com/sofa-framework/sofa/pull/4248:1360,Testability,test,test,1360,"Validated with the following benchmark. The benchmark `BM_BTDMatrix_addBlock` uses the new implemented accumulation function and must be compared to `BM_BTDMatrix_add`. ```; -------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------; BM_BTDMatrix_add<6, SReal>/64 6212 ns 3069 ns 224000; BM_BTDMatrix_add<6, SReal>/512 49857 ns 32087 ns 22400; BM_BTDMatrix_add<6, SReal>/1024 103536 ns 54408 ns 11200; BM_BTDMatrix_addBlock<6, SReal>/64 602 ns 391 ns 1600000; BM_BTDMatrix_addBlock<6, SReal>/512 5607 ns 3432 ns 186667; BM_BTDMatrix_addBlock<6, SReal>/1024 12176 ns 6417 ns 112000. ```. https://github.com/alxbilger/SofaBenchmark/pull/36. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248
https://github.com/sofa-framework/sofa/pull/4250:753,Availability,failure,failures,753,"New action implemented here: https://github.com/hugtalbot/close-old-discussion-topics; We use this action in this new script. Note the action is not yet active and only creates logs. Close and replace #4096 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4250
https://github.com/sofa-framework/sofa/pull/4250:802,Availability,failure,failures,802,"New action implemented here: https://github.com/hugtalbot/close-old-discussion-topics; We use this action in this new script. Note the action is not yet active and only creates logs. Close and replace #4096 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4250
https://github.com/sofa-framework/sofa/pull/4250:372,Security,Certificate,Certificate,372,"New action implemented here: https://github.com/hugtalbot/close-old-discussion-topics; We use this action in this new script. Note the action is not yet active and only creates logs. Close and replace #4096 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4250
https://github.com/sofa-framework/sofa/pull/4250:483,Security,certificate,certificate-of-origin-dco,483,"New action implemented here: https://github.com/hugtalbot/close-old-discussion-topics; We use this action in this new script. Note the action is not yet active and only creates logs. Close and replace #4096 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4250
https://github.com/sofa-framework/sofa/pull/4250:177,Testability,log,logs,177,"New action implemented here: https://github.com/hugtalbot/close-old-discussion-topics; We use this action in this new script. Note the action is not yet active and only creates logs. Close and replace #4096 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4250
https://github.com/sofa-framework/sofa/pull/4250:748,Testability,test,test,748,"New action implemented here: https://github.com/hugtalbot/close-old-discussion-topics; We use this action in this new script. Note the action is not yet active and only creates logs. Close and replace #4096 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4250
https://github.com/sofa-framework/sofa/pull/4250:797,Testability,test,test,797,"New action implemented here: https://github.com/hugtalbot/close-old-discussion-topics; We use this action in this new script. Note the action is not yet active and only creates logs. Close and replace #4096 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4250
https://github.com/sofa-framework/sofa/pull/4251:737,Availability,failure,failures,737,"It seems to come from some very old version of the STL from SGI (google is not very prolix on this); In any case, this is not defined by the STL of msvc, libc++ (llvm) and libstdc++ (gnu gcc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4251
https://github.com/sofa-framework/sofa/pull/4251:786,Availability,failure,failures,786,"It seems to come from some very old version of the STL from SGI (google is not very prolix on this); In any case, this is not defined by the STL of msvc, libc++ (llvm) and libstdc++ (gnu gcc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4251
https://github.com/sofa-framework/sofa/pull/4251:356,Security,Certificate,Certificate,356,"It seems to come from some very old version of the STL from SGI (google is not very prolix on this); In any case, this is not defined by the STL of msvc, libc++ (llvm) and libstdc++ (gnu gcc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4251
https://github.com/sofa-framework/sofa/pull/4251:467,Security,certificate,certificate-of-origin-dco,467,"It seems to come from some very old version of the STL from SGI (google is not very prolix on this); In any case, this is not defined by the STL of msvc, libc++ (llvm) and libstdc++ (gnu gcc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4251
https://github.com/sofa-framework/sofa/pull/4251:732,Testability,test,test,732,"It seems to come from some very old version of the STL from SGI (google is not very prolix on this); In any case, this is not defined by the STL of msvc, libc++ (llvm) and libstdc++ (gnu gcc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4251
https://github.com/sofa-framework/sofa/pull/4251:781,Testability,test,test,781,"It seems to come from some very old version of the STL from SGI (google is not very prolix on this); In any case, this is not defined by the STL of msvc, libc++ (llvm) and libstdc++ (gnu gcc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4251
https://github.com/sofa-framework/sofa/issues/4252:204,Availability,error,errors,204,"Hello everyone, . i'm new to SOFA. I built succesfully SOFA from source on windows 11. Using cmake-gui, i selected plugin_sofapython3 to be added. the configuration and compilation went good, without any errors, but when i check the plugins list sofapython3 is not there and, after running runSofa, i cannot open a python scene in sofa. . Does someone have any ideas why this happens?. thank you very much!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252
https://github.com/sofa-framework/sofa/issues/4252:151,Deployability,configurat,configuration,151,"Hello everyone, . i'm new to SOFA. I built succesfully SOFA from source on windows 11. Using cmake-gui, i selected plugin_sofapython3 to be added. the configuration and compilation went good, without any errors, but when i check the plugins list sofapython3 is not there and, after running runSofa, i cannot open a python scene in sofa. . Does someone have any ideas why this happens?. thank you very much!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252
https://github.com/sofa-framework/sofa/issues/4252:151,Modifiability,config,configuration,151,"Hello everyone, . i'm new to SOFA. I built succesfully SOFA from source on windows 11. Using cmake-gui, i selected plugin_sofapython3 to be added. the configuration and compilation went good, without any errors, but when i check the plugins list sofapython3 is not there and, after running runSofa, i cannot open a python scene in sofa. . Does someone have any ideas why this happens?. thank you very much!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252
https://github.com/sofa-framework/sofa/issues/4252:233,Modifiability,plugin,plugins,233,"Hello everyone, . i'm new to SOFA. I built succesfully SOFA from source on windows 11. Using cmake-gui, i selected plugin_sofapython3 to be added. the configuration and compilation went good, without any errors, but when i check the plugins list sofapython3 is not there and, after running runSofa, i cannot open a python scene in sofa. . Does someone have any ideas why this happens?. thank you very much!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252
https://github.com/sofa-framework/sofa/pull/4253:600,Availability,failure,failures,600,"Since beams simulation is an important feature of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4253
https://github.com/sofa-framework/sofa/pull/4253:649,Availability,failure,failures,649,"Since beams simulation is an important feature of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4253
https://github.com/sofa-framework/sofa/pull/4253:219,Security,Certificate,Certificate,219,"Since beams simulation is an important feature of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4253
https://github.com/sofa-framework/sofa/pull/4253:330,Security,certificate,certificate-of-origin-dco,330,"Since beams simulation is an important feature of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4253
https://github.com/sofa-framework/sofa/pull/4253:595,Testability,test,test,595,"Since beams simulation is an important feature of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4253
https://github.com/sofa-framework/sofa/pull/4253:644,Testability,test,test,644,"Since beams simulation is an important feature of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4253
https://github.com/sofa-framework/sofa/pull/4255:2310,Availability,failure,failures,2310,"parseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255
https://github.com/sofa-framework/sofa/pull/4255:2359,Availability,failure,failures,2359,"parseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255
https://github.com/sofa-framework/sofa/pull/4255:208,Modifiability,inherit,inheriting,208,"In https://github.com/sofa-framework/sofa/pull/3986, I introduced the computation of `H A^-1 H^T` in SparseLDLSolver. In this PR, I do the same but in the base class of all linear solvers. All linear solvers inheriting from `MatrixLinearSolver` can now benefit from this parallelization (except the matrix-free conjugate gradient). I benchmarked `examples/Demos/fallingBeamLagrangianCollision.scn`:. ```; <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255
https://github.com/sofa-framework/sofa/pull/4255:1631,Safety,avoid,avoid,1631,"parseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255
https://github.com/sofa-framework/sofa/pull/4255:1760,Safety,safe,safe,1760,"parseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255
https://github.com/sofa-framework/sofa/pull/4255:1929,Security,Certificate,Certificate,1929,"parseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255
https://github.com/sofa-framework/sofa/pull/4255:2040,Security,certificate,certificate-of-origin-dco,2040,"parseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255
https://github.com/sofa-framework/sofa/pull/4255:334,Testability,benchmark,benchmarked,334,"In https://github.com/sofa-framework/sofa/pull/3986, I introduced the computation of `H A^-1 H^T` in SparseLDLSolver. In this PR, I do the same but in the base class of all linear solvers. All linear solvers inheriting from `MatrixLinearSolver` can now benefit from this parallelization (except the matrix-free conjugate gradient). I benchmarked `examples/Demos/fallingBeamLagrangianCollision.scn`:. ```; <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255
https://github.com/sofa-framework/sofa/pull/4255:2305,Testability,test,test,2305,"parseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255
https://github.com/sofa-framework/sofa/pull/4255:2354,Testability,test,test,2354,"parseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255
https://github.com/sofa-framework/sofa/pull/4256:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4256
https://github.com/sofa-framework/sofa/pull/4256:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4256
https://github.com/sofa-framework/sofa/pull/4256:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4256
https://github.com/sofa-framework/sofa/pull/4256:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4256
https://github.com/sofa-framework/sofa/pull/4256:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4256
https://github.com/sofa-framework/sofa/pull/4256:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4256
https://github.com/sofa-framework/sofa/pull/4257:1413,Availability,failure,failures,1413,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4257:1462,Availability,failure,failures,1462,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4257:268,Deployability,integrat,integration,268,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4257:612,Deployability,release,release,612,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4257:859,Deployability,release,release,859,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4257:214,Integrability,depend,dependencies,214,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4257:268,Integrability,integrat,integration,268,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4257:528,Integrability,depend,dependency,528,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4257:682,Integrability,depend,dependencies,682,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4257:1032,Security,Certificate,Certificate,1032,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4257:1143,Security,certificate,certificate-of-origin-dco,1143,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4257:1408,Testability,test,test,1408,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4257:1457,Testability,test,test,1457,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4257:202,Usability,guid,guide,202,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257
https://github.com/sofa-framework/sofa/pull/4258:1068,Availability,failure,failures,1068,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258
https://github.com/sofa-framework/sofa/pull/4258:1117,Availability,failure,failures,1117,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258
https://github.com/sofa-framework/sofa/pull/4258:384,Integrability,depend,depends-on,384,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258
https://github.com/sofa-framework/sofa/pull/4258:456,Integrability,depend,depends-on,456,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258
https://github.com/sofa-framework/sofa/pull/4258:30,Modifiability,plugin,plugin,30,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258
https://github.com/sofa-framework/sofa/pull/4258:166,Modifiability,plugin,plugin,166,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258
https://github.com/sofa-framework/sofa/pull/4258:291,Modifiability,plugin,plugin,291,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258
https://github.com/sofa-framework/sofa/pull/4258:687,Security,Certificate,Certificate,687,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258
https://github.com/sofa-framework/sofa/pull/4258:798,Security,certificate,certificate-of-origin-dco,798,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258
https://github.com/sofa-framework/sofa/pull/4258:1063,Testability,test,test,1063,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258
https://github.com/sofa-framework/sofa/pull/4258:1112,Testability,test,test,1112,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258
https://github.com/sofa-framework/sofa/pull/4259:803,Availability,failure,failures,803,"Add the `SOFA_SCOPED_ADVANCED_TIMER` cmake option to add the contruction of a `sofa::helper::ScopedAdvancedTimer` in the macro `SCOPED_TIMER` and `SCOPED_TIMER_VARNAME` along or in the place of the Tracy timer. . This allows to also compile no timer at all.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4259
https://github.com/sofa-framework/sofa/pull/4259:852,Availability,failure,failures,852,"Add the `SOFA_SCOPED_ADVANCED_TIMER` cmake option to add the contruction of a `sofa::helper::ScopedAdvancedTimer` in the macro `SCOPED_TIMER` and `SCOPED_TIMER_VARNAME` along or in the place of the Tracy timer. . This allows to also compile no timer at all.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4259
https://github.com/sofa-framework/sofa/pull/4259:422,Security,Certificate,Certificate,422,"Add the `SOFA_SCOPED_ADVANCED_TIMER` cmake option to add the contruction of a `sofa::helper::ScopedAdvancedTimer` in the macro `SCOPED_TIMER` and `SCOPED_TIMER_VARNAME` along or in the place of the Tracy timer. . This allows to also compile no timer at all.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4259
https://github.com/sofa-framework/sofa/pull/4259:533,Security,certificate,certificate-of-origin-dco,533,"Add the `SOFA_SCOPED_ADVANCED_TIMER` cmake option to add the contruction of a `sofa::helper::ScopedAdvancedTimer` in the macro `SCOPED_TIMER` and `SCOPED_TIMER_VARNAME` along or in the place of the Tracy timer. . This allows to also compile no timer at all.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4259
https://github.com/sofa-framework/sofa/pull/4259:798,Testability,test,test,798,"Add the `SOFA_SCOPED_ADVANCED_TIMER` cmake option to add the contruction of a `sofa::helper::ScopedAdvancedTimer` in the macro `SCOPED_TIMER` and `SCOPED_TIMER_VARNAME` along or in the place of the Tracy timer. . This allows to also compile no timer at all.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4259
https://github.com/sofa-framework/sofa/pull/4259:847,Testability,test,test,847,"Add the `SOFA_SCOPED_ADVANCED_TIMER` cmake option to add the contruction of a `sofa::helper::ScopedAdvancedTimer` in the macro `SCOPED_TIMER` and `SCOPED_TIMER_VARNAME` along or in the place of the Tracy timer. . This allows to also compile no timer at all.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4259
https://github.com/sofa-framework/sofa/pull/4263:897,Availability,failure,failures,897,"Task for #4217 . As less breaking as possible, but as I did not re-implement all functions from fixed_array, it is bound to break if one used a function not present (+some technicalities like array() which was returning a ref to a c-array[], which could be implicitly casted as pointer, or some functions which was taking a fixed_array as a parameter). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4263
https://github.com/sofa-framework/sofa/pull/4263:946,Availability,failure,failures,946,"Task for #4217 . As less breaking as possible, but as I did not re-implement all functions from fixed_array, it is bound to break if one used a function not present (+some technicalities like array() which was returning a ref to a c-array[], which could be implicitly casted as pointer, or some functions which was taking a fixed_array as a parameter). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4263
https://github.com/sofa-framework/sofa/pull/4263:516,Security,Certificate,Certificate,516,"Task for #4217 . As less breaking as possible, but as I did not re-implement all functions from fixed_array, it is bound to break if one used a function not present (+some technicalities like array() which was returning a ref to a c-array[], which could be implicitly casted as pointer, or some functions which was taking a fixed_array as a parameter). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4263
https://github.com/sofa-framework/sofa/pull/4263:627,Security,certificate,certificate-of-origin-dco,627,"Task for #4217 . As less breaking as possible, but as I did not re-implement all functions from fixed_array, it is bound to break if one used a function not present (+some technicalities like array() which was returning a ref to a c-array[], which could be implicitly casted as pointer, or some functions which was taking a fixed_array as a parameter). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4263
https://github.com/sofa-framework/sofa/pull/4263:892,Testability,test,test,892,"Task for #4217 . As less breaking as possible, but as I did not re-implement all functions from fixed_array, it is bound to break if one used a function not present (+some technicalities like array() which was returning a ref to a c-array[], which could be implicitly casted as pointer, or some functions which was taking a fixed_array as a parameter). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4263
https://github.com/sofa-framework/sofa/pull/4263:941,Testability,test,test,941,"Task for #4217 . As less breaking as possible, but as I did not re-implement all functions from fixed_array, it is bound to break if one used a function not present (+some technicalities like array() which was returning a ref to a c-array[], which could be implicitly casted as pointer, or some functions which was taking a fixed_array as a parameter). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4263
https://github.com/sofa-framework/sofa/pull/4264:709,Availability,failure,failures,709,"It seems that Color has been deprecated a long time ago (git blame shows 03/2017 for the message). And some stuff (ctor/dtor/set()) are even not defined in the cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4264
https://github.com/sofa-framework/sofa/pull/4264:758,Availability,failure,failures,758,"It seems that Color has been deprecated a long time ago (git blame shows 03/2017 for the message). And some stuff (ctor/dtor/set()) are even not defined in the cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4264
https://github.com/sofa-framework/sofa/pull/4264:89,Integrability,message,message,89,"It seems that Color has been deprecated a long time ago (git blame shows 03/2017 for the message). And some stuff (ctor/dtor/set()) are even not defined in the cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4264
https://github.com/sofa-framework/sofa/pull/4264:328,Security,Certificate,Certificate,328,"It seems that Color has been deprecated a long time ago (git blame shows 03/2017 for the message). And some stuff (ctor/dtor/set()) are even not defined in the cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4264
https://github.com/sofa-framework/sofa/pull/4264:439,Security,certificate,certificate-of-origin-dco,439,"It seems that Color has been deprecated a long time ago (git blame shows 03/2017 for the message). And some stuff (ctor/dtor/set()) are even not defined in the cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4264
https://github.com/sofa-framework/sofa/pull/4264:704,Testability,test,test,704,"It seems that Color has been deprecated a long time ago (git blame shows 03/2017 for the message). And some stuff (ctor/dtor/set()) are even not defined in the cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4264
https://github.com/sofa-framework/sofa/pull/4264:753,Testability,test,test,753,"It seems that Color has been deprecated a long time ago (git blame shows 03/2017 for the message). And some stuff (ctor/dtor/set()) are even not defined in the cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4264
https://github.com/sofa-framework/sofa/issues/4265:34,Modifiability,plugin,plugins,34,"The title is self contained : the plugins need a way to test the scenes and/or the regression, it would be great to create an action to automatize it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4265
https://github.com/sofa-framework/sofa/issues/4265:56,Testability,test,test,56,"The title is self contained : the plugins need a way to test the scenes and/or the regression, it would be great to create an action to automatize it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4265
https://github.com/sofa-framework/sofa/pull/4266:1373,Availability,failure,failures,1373,"Tackles one point of #4221. Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; Externalize the previously embedded version of metis (5.1.0) which was statically linked. Provides a cmake module finder file (FindMetis.cmake), tested successfully with the following ways to provide the library:; - compile & install from source (v5.1.1) (warning: official repository cmakefiles are broken); - APT package libmetis-dev (v5.1.0); - conda package (v5.1.0 and v5.1.1); - vcpkg package (v2022-07-27); All on ubuntu 22.04. Not tested with conan. Some remarks to embed metis in the CI: The embedded version was compiled with GKlib using the `GKRAND` option. To the best of my knowledge, this can be provided either from compiling from source or with the conan package with a specific option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4266
https://github.com/sofa-framework/sofa/pull/4266:1422,Availability,failure,failures,1422,"Tackles one point of #4221. Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; Externalize the previously embedded version of metis (5.1.0) which was statically linked. Provides a cmake module finder file (FindMetis.cmake), tested successfully with the following ways to provide the library:; - compile & install from source (v5.1.1) (warning: official repository cmakefiles are broken); - APT package libmetis-dev (v5.1.0); - conda package (v5.1.0 and v5.1.1); - vcpkg package (v2022-07-27); All on ubuntu 22.04. Not tested with conan. Some remarks to embed metis in the CI: The embedded version was compiled with GKlib using the `GKRAND` option. To the best of my knowledge, this can be provided either from compiling from source or with the conan package with a specific option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4266
https://github.com/sofa-framework/sofa/pull/4266:352,Deployability,install,install,352,"Tackles one point of #4221. Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; Externalize the previously embedded version of metis (5.1.0) which was statically linked. Provides a cmake module finder file (FindMetis.cmake), tested successfully with the following ways to provide the library:; - compile & install from source (v5.1.1) (warning: official repository cmakefiles are broken); - APT package libmetis-dev (v5.1.0); - conda package (v5.1.0 and v5.1.1); - vcpkg package (v2022-07-27); All on ubuntu 22.04. Not tested with conan. Some remarks to embed metis in the CI: The embedded version was compiled with GKlib using the `GKRAND` option. To the best of my knowledge, this can be provided either from compiling from source or with the conan package with a specific option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4266
https://github.com/sofa-framework/sofa/pull/4266:992,Security,Certificate,Certificate,992,"Tackles one point of #4221. Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; Externalize the previously embedded version of metis (5.1.0) which was statically linked. Provides a cmake module finder file (FindMetis.cmake), tested successfully with the following ways to provide the library:; - compile & install from source (v5.1.1) (warning: official repository cmakefiles are broken); - APT package libmetis-dev (v5.1.0); - conda package (v5.1.0 and v5.1.1); - vcpkg package (v2022-07-27); All on ubuntu 22.04. Not tested with conan. Some remarks to embed metis in the CI: The embedded version was compiled with GKlib using the `GKRAND` option. To the best of my knowledge, this can be provided either from compiling from source or with the conan package with a specific option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4266
https://github.com/sofa-framework/sofa/pull/4266:1103,Security,certificate,certificate-of-origin-dco,1103,"Tackles one point of #4221. Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; Externalize the previously embedded version of metis (5.1.0) which was statically linked. Provides a cmake module finder file (FindMetis.cmake), tested successfully with the following ways to provide the library:; - compile & install from source (v5.1.1) (warning: official repository cmakefiles are broken); - APT package libmetis-dev (v5.1.0); - conda package (v5.1.0 and v5.1.1); - vcpkg package (v2022-07-27); All on ubuntu 22.04. Not tested with conan. Some remarks to embed metis in the CI: The embedded version was compiled with GKlib using the `GKRAND` option. To the best of my knowledge, this can be provided either from compiling from source or with the conan package with a specific option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4266
https://github.com/sofa-framework/sofa/pull/4266:271,Testability,test,tested,271,"Tackles one point of #4221. Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; Externalize the previously embedded version of metis (5.1.0) which was statically linked. Provides a cmake module finder file (FindMetis.cmake), tested successfully with the following ways to provide the library:; - compile & install from source (v5.1.1) (warning: official repository cmakefiles are broken); - APT package libmetis-dev (v5.1.0); - conda package (v5.1.0 and v5.1.1); - vcpkg package (v2022-07-27); All on ubuntu 22.04. Not tested with conan. Some remarks to embed metis in the CI: The embedded version was compiled with GKlib using the `GKRAND` option. To the best of my knowledge, this can be provided either from compiling from source or with the conan package with a specific option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4266
https://github.com/sofa-framework/sofa/pull/4266:565,Testability,test,tested,565,"Tackles one point of #4221. Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; Externalize the previously embedded version of metis (5.1.0) which was statically linked. Provides a cmake module finder file (FindMetis.cmake), tested successfully with the following ways to provide the library:; - compile & install from source (v5.1.1) (warning: official repository cmakefiles are broken); - APT package libmetis-dev (v5.1.0); - conda package (v5.1.0 and v5.1.1); - vcpkg package (v2022-07-27); All on ubuntu 22.04. Not tested with conan. Some remarks to embed metis in the CI: The embedded version was compiled with GKlib using the `GKRAND` option. To the best of my knowledge, this can be provided either from compiling from source or with the conan package with a specific option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4266
https://github.com/sofa-framework/sofa/pull/4266:1368,Testability,test,test,1368,"Tackles one point of #4221. Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; Externalize the previously embedded version of metis (5.1.0) which was statically linked. Provides a cmake module finder file (FindMetis.cmake), tested successfully with the following ways to provide the library:; - compile & install from source (v5.1.1) (warning: official repository cmakefiles are broken); - APT package libmetis-dev (v5.1.0); - conda package (v5.1.0 and v5.1.1); - vcpkg package (v2022-07-27); All on ubuntu 22.04. Not tested with conan. Some remarks to embed metis in the CI: The embedded version was compiled with GKlib using the `GKRAND` option. To the best of my knowledge, this can be provided either from compiling from source or with the conan package with a specific option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4266
https://github.com/sofa-framework/sofa/pull/4266:1417,Testability,test,test,1417,"Tackles one point of #4221. Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; Externalize the previously embedded version of metis (5.1.0) which was statically linked. Provides a cmake module finder file (FindMetis.cmake), tested successfully with the following ways to provide the library:; - compile & install from source (v5.1.1) (warning: official repository cmakefiles are broken); - APT package libmetis-dev (v5.1.0); - conda package (v5.1.0 and v5.1.1); - vcpkg package (v2022-07-27); All on ubuntu 22.04. Not tested with conan. Some remarks to embed metis in the CI: The embedded version was compiled with GKlib using the `GKRAND` option. To the best of my knowledge, this can be provided either from compiling from source or with the conan package with a specific option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4266
https://github.com/sofa-framework/sofa/pull/4267:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4267
https://github.com/sofa-framework/sofa/pull/4267:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4267
https://github.com/sofa-framework/sofa/pull/4267:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4267
https://github.com/sofa-framework/sofa/pull/4267:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4267
https://github.com/sofa-framework/sofa/pull/4267:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4267
https://github.com/sofa-framework/sofa/pull/4267:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4267
https://github.com/sofa-framework/sofa/pull/4268:1541,Availability,failure,failures,1541,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4268:1590,Availability,failure,failures,1590,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4268:542,Integrability,message,message,542,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4268:831,Performance,perform,performed,831,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4268:50,Safety,detect,detect,50,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4268:353,Safety,avoid,avoid,353,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4268:665,Safety,safe,safety,665,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4268:754,Safety,avoid,avoid,754,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4268:1160,Security,Certificate,Certificate,1160,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4268:1271,Security,certificate,certificate-of-origin-dco,1271,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4268:592,Testability,test,testable,592,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4268:869,Testability,test,test,869,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4268:1536,Testability,test,test,1536,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4268:1585,Testability,test,test,1585,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268
https://github.com/sofa-framework/sofa/pull/4269:709,Availability,failure,failures,709,"Preliminary step before removing fixed_array inheritance from Vec. Functions are using fixed_array but a Vec is given.; This works because vec inherits fixed_array. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4269
https://github.com/sofa-framework/sofa/pull/4269:758,Availability,failure,failures,758,"Preliminary step before removing fixed_array inheritance from Vec. Functions are using fixed_array but a Vec is given.; This works because vec inherits fixed_array. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4269
https://github.com/sofa-framework/sofa/pull/4269:45,Modifiability,inherit,inheritance,45,"Preliminary step before removing fixed_array inheritance from Vec. Functions are using fixed_array but a Vec is given.; This works because vec inherits fixed_array. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4269
https://github.com/sofa-framework/sofa/pull/4269:143,Modifiability,inherit,inherits,143,"Preliminary step before removing fixed_array inheritance from Vec. Functions are using fixed_array but a Vec is given.; This works because vec inherits fixed_array. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4269
https://github.com/sofa-framework/sofa/pull/4269:328,Security,Certificate,Certificate,328,"Preliminary step before removing fixed_array inheritance from Vec. Functions are using fixed_array but a Vec is given.; This works because vec inherits fixed_array. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4269
https://github.com/sofa-framework/sofa/pull/4269:439,Security,certificate,certificate-of-origin-dco,439,"Preliminary step before removing fixed_array inheritance from Vec. Functions are using fixed_array but a Vec is given.; This works because vec inherits fixed_array. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4269
https://github.com/sofa-framework/sofa/pull/4269:704,Testability,test,test,704,"Preliminary step before removing fixed_array inheritance from Vec. Functions are using fixed_array but a Vec is given.; This works because vec inherits fixed_array. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4269
https://github.com/sofa-framework/sofa/pull/4269:753,Testability,test,test,753,"Preliminary step before removing fixed_array inheritance from Vec. Functions are using fixed_array but a Vec is given.; This works because vec inherits fixed_array. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4269
https://github.com/sofa-framework/sofa/pull/4270:781,Availability,failure,failures,781,"Based on; - #4263 . Part of the task to use std container and also just it felt dumb that ColorMap was not using the standard RGBAColor class; Mostly breaking because people needed to convert the result of ColorMap::eval() to RGBAColor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4270
https://github.com/sofa-framework/sofa/pull/4270:830,Availability,failure,failures,830,"Based on; - #4263 . Part of the task to use std container and also just it felt dumb that ColorMap was not using the standard RGBAColor class; Mostly breaking because people needed to convert the result of ColorMap::eval() to RGBAColor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4270
https://github.com/sofa-framework/sofa/pull/4270:400,Security,Certificate,Certificate,400,"Based on; - #4263 . Part of the task to use std container and also just it felt dumb that ColorMap was not using the standard RGBAColor class; Mostly breaking because people needed to convert the result of ColorMap::eval() to RGBAColor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4270
https://github.com/sofa-framework/sofa/pull/4270:511,Security,certificate,certificate-of-origin-dco,511,"Based on; - #4263 . Part of the task to use std container and also just it felt dumb that ColorMap was not using the standard RGBAColor class; Mostly breaking because people needed to convert the result of ColorMap::eval() to RGBAColor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4270
https://github.com/sofa-framework/sofa/pull/4270:776,Testability,test,test,776,"Based on; - #4263 . Part of the task to use std container and also just it felt dumb that ColorMap was not using the standard RGBAColor class; Mostly breaking because people needed to convert the result of ColorMap::eval() to RGBAColor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4270
https://github.com/sofa-framework/sofa/pull/4270:825,Testability,test,test,825,"Based on; - #4263 . Part of the task to use std container and also just it felt dumb that ColorMap was not using the standard RGBAColor class; Mostly breaking because people needed to convert the result of ColorMap::eval() to RGBAColor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4270
https://github.com/sofa-framework/sofa/pull/4272:1188,Availability,failure,failures,1188,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; It is required that header-only embedded libraries have their license in a separate file, that can be listed then in the conda package recipe.; This PR adds a missing license file for json nlohmann library (MIT) and homogenize the license file name for the two others SOFA header-only embedded libraries (difflib and stb, both also on MIT license). ; Cxxopts, which the last header-only embedded library in SOFA, will be treated separately in another PR to handle the code fetch case through cmake FetchContent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4272
https://github.com/sofa-framework/sofa/pull/4272:1237,Availability,failure,failures,1237,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; It is required that header-only embedded libraries have their license in a separate file, that can be listed then in the conda package recipe.; This PR adds a missing license file for json nlohmann library (MIT) and homogenize the license file name for the two others SOFA header-only embedded libraries (difflib and stb, both also on MIT license). ; Cxxopts, which the last header-only embedded library in SOFA, will be treated separately in another PR to handle the code fetch case through cmake FetchContent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4272
https://github.com/sofa-framework/sofa/pull/4272:807,Security,Certificate,Certificate,807,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; It is required that header-only embedded libraries have their license in a separate file, that can be listed then in the conda package recipe.; This PR adds a missing license file for json nlohmann library (MIT) and homogenize the license file name for the two others SOFA header-only embedded libraries (difflib and stb, both also on MIT license). ; Cxxopts, which the last header-only embedded library in SOFA, will be treated separately in another PR to handle the code fetch case through cmake FetchContent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4272
https://github.com/sofa-framework/sofa/pull/4272:918,Security,certificate,certificate-of-origin-dco,918,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; It is required that header-only embedded libraries have their license in a separate file, that can be listed then in the conda package recipe.; This PR adds a missing license file for json nlohmann library (MIT) and homogenize the license file name for the two others SOFA header-only embedded libraries (difflib and stb, both also on MIT license). ; Cxxopts, which the last header-only embedded library in SOFA, will be treated separately in another PR to handle the code fetch case through cmake FetchContent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4272
https://github.com/sofa-framework/sofa/pull/4272:1183,Testability,test,test,1183,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; It is required that header-only embedded libraries have their license in a separate file, that can be listed then in the conda package recipe.; This PR adds a missing license file for json nlohmann library (MIT) and homogenize the license file name for the two others SOFA header-only embedded libraries (difflib and stb, both also on MIT license). ; Cxxopts, which the last header-only embedded library in SOFA, will be treated separately in another PR to handle the code fetch case through cmake FetchContent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4272
https://github.com/sofa-framework/sofa/pull/4272:1232,Testability,test,test,1232,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; It is required that header-only embedded libraries have their license in a separate file, that can be listed then in the conda package recipe.; This PR adds a missing license file for json nlohmann library (MIT) and homogenize the license file name for the two others SOFA header-only embedded libraries (difflib and stb, both also on MIT license). ; Cxxopts, which the last header-only embedded library in SOFA, will be treated separately in another PR to handle the code fetch case through cmake FetchContent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4272
https://github.com/sofa-framework/sofa/pull/4273:242,Availability,avail,available,242,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273
https://github.com/sofa-framework/sofa/pull/4273:1331,Availability,failure,failures,1331,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273
https://github.com/sofa-framework/sofa/pull/4273:1380,Availability,failure,failures,1380,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273
https://github.com/sofa-framework/sofa/pull/4273:548,Integrability,depend,dependencies,548,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273
https://github.com/sofa-framework/sofa/pull/4273:177,Safety,avoid,avoid,177,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273
https://github.com/sofa-framework/sofa/pull/4273:950,Security,Certificate,Certificate,950,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273
https://github.com/sofa-framework/sofa/pull/4273:1061,Security,certificate,certificate-of-origin-dco,1061,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273
https://github.com/sofa-framework/sofa/pull/4273:1326,Testability,test,test,1326,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273
https://github.com/sofa-framework/sofa/pull/4273:1375,Testability,test,test,1375,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273
https://github.com/sofa-framework/sofa/pull/4273:273,Usability,simpl,simplified,273,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273
https://github.com/sofa-framework/sofa/pull/4274:135,Availability,error,error,135,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274
https://github.com/sofa-framework/sofa/pull/4274:1278,Availability,failure,failures,1278,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274
https://github.com/sofa-framework/sofa/pull/4274:1327,Availability,failure,failures,1327,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274
https://github.com/sofa-framework/sofa/pull/4274:623,Deployability,release,release,623,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274
https://github.com/sofa-framework/sofa/pull/4274:652,Deployability,release,released,652,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274
https://github.com/sofa-framework/sofa/pull/4274:897,Security,Certificate,Certificate,897,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274
https://github.com/sofa-framework/sofa/pull/4274:1008,Security,certificate,certificate-of-origin-dco,1008,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274
https://github.com/sofa-framework/sofa/pull/4274:232,Testability,test,test,232,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274
https://github.com/sofa-framework/sofa/pull/4274:1273,Testability,test,test,1273,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274
https://github.com/sofa-framework/sofa/pull/4274:1322,Testability,test,test,1322,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274
https://github.com/sofa-framework/sofa/pull/4279:636,Availability,failure,failures,636,"Using sofa::Index instead of int. \+ removing verbose types and using aggreg. contructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4279
https://github.com/sofa-framework/sofa/pull/4279:685,Availability,failure,failures,685,"Using sofa::Index instead of int. \+ removing verbose types and using aggreg. contructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4279
https://github.com/sofa-framework/sofa/pull/4279:255,Security,Certificate,Certificate,255,"Using sofa::Index instead of int. \+ removing verbose types and using aggreg. contructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4279
https://github.com/sofa-framework/sofa/pull/4279:366,Security,certificate,certificate-of-origin-dco,366,"Using sofa::Index instead of int. \+ removing verbose types and using aggreg. contructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4279
https://github.com/sofa-framework/sofa/pull/4279:631,Testability,test,test,631,"Using sofa::Index instead of int. \+ removing verbose types and using aggreg. contructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4279
https://github.com/sofa-framework/sofa/pull/4279:680,Testability,test,test,680,"Using sofa::Index instead of int. \+ removing verbose types and using aggreg. contructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4279
https://github.com/sofa-framework/sofa/issues/4283:100,Availability,error,errors,100,"### Problem. **Description**; Trying to build with SOFA_TRACY enabled on Ubuntu 23.04/gcc, got some errors when linking LinearSolver.Direct.; No such error with MSVC2022. Could be a bug from Tracy ? 🤔. **Steps to reproduce**; Enable SOFA_TRACY and TRACY_ENABLE on Ubuntu23.04 and gcc,. **Expected behavior**; Linking correctly 😅. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 23.04, gcc version 12.3.0 (Ubuntu 12.3.0-1ubuntu1~23.04); - Version of SOFA: master (https://github.com/sofa-framework/sofa/commit/22d783bb366fae979b31df6b22de60dde5a19d76). ### Logs. ```c++; /usr/bin/ld: Sofa/Component/LinearSolver/Direct/CMakeFiles/Sofa.Component.LinearSolver.Direct.dir/src/sofa/component/linearsolver/direct/SparseLDLSolver.cpp.o:(.data.rel.ro.local._ZZZN4sofa9component12linearsolver6direct15SparseLDLSolverINS_13linearalgebra35CompressedRowSparseMatrixMechanicalINS_4type3MatILj3ELj3EdEENS4_19CRSMechanicalPolicyEEENS4_10FullVectorIdEENS1_15NoThreadManagerEE17doAddJMInvJtLocalEPNS4_10BaseMatrixEPKNS4_12SparseMatrixIdEEdPNS2_23SparseLDLImplInvertDataINS6_6vectorIiNS6_16CPUMemoryManagerIiEEEENSM_IdNSN_IdEEEEEEENKUlRKT_E_clINS_10simulation5RangeIjEEEEDaSW_E26__tracy_source_location204[_ZZZN4sofa9component12linearsolver6direct15SparseLDLSolverINS_13linearalgebra35CompressedRowSparseMatrixMechanicalINS_4type3MatILj3ELj3EdEENS4_19CRSMechanicalPolicyEEENS4_10FullVectorIdEENS1_15NoThreadManagerEE17doAddJMInvJtLocalEPNS4_10BaseMatrixEPKNS4_12SparseMatrixIdEEdPNS2_23SparseLDLImplInvertDataINS6_6vectorIiNS6_16CPUMemoryManagerIiEEEENSM_IdNSN_IdEEEEEEENKUlRKT_E_clINS_10simulation5RangeIjEEEEDaSW_E26__tracy_source_location204]+0x8): undefined reference to `sofa::component::linearsolver::direct::SparseLDLSolver<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<sofa::type::Mat<3u, 3u, double>, sofa::linearalgebra::CRSMechanicalPolicy>, sofa::linearalgebra::FullVector<double>, sofa::component::linearsolver::NoThreadManager>::doAddJMInvJtLocal(s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4283
https://github.com/sofa-framework/sofa/issues/4283:150,Availability,error,error,150,"### Problem. **Description**; Trying to build with SOFA_TRACY enabled on Ubuntu 23.04/gcc, got some errors when linking LinearSolver.Direct.; No such error with MSVC2022. Could be a bug from Tracy ? 🤔. **Steps to reproduce**; Enable SOFA_TRACY and TRACY_ENABLE on Ubuntu23.04 and gcc,. **Expected behavior**; Linking correctly 😅. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 23.04, gcc version 12.3.0 (Ubuntu 12.3.0-1ubuntu1~23.04); - Version of SOFA: master (https://github.com/sofa-framework/sofa/commit/22d783bb366fae979b31df6b22de60dde5a19d76). ### Logs. ```c++; /usr/bin/ld: Sofa/Component/LinearSolver/Direct/CMakeFiles/Sofa.Component.LinearSolver.Direct.dir/src/sofa/component/linearsolver/direct/SparseLDLSolver.cpp.o:(.data.rel.ro.local._ZZZN4sofa9component12linearsolver6direct15SparseLDLSolverINS_13linearalgebra35CompressedRowSparseMatrixMechanicalINS_4type3MatILj3ELj3EdEENS4_19CRSMechanicalPolicyEEENS4_10FullVectorIdEENS1_15NoThreadManagerEE17doAddJMInvJtLocalEPNS4_10BaseMatrixEPKNS4_12SparseMatrixIdEEdPNS2_23SparseLDLImplInvertDataINS6_6vectorIiNS6_16CPUMemoryManagerIiEEEENSM_IdNSN_IdEEEEEEENKUlRKT_E_clINS_10simulation5RangeIjEEEEDaSW_E26__tracy_source_location204[_ZZZN4sofa9component12linearsolver6direct15SparseLDLSolverINS_13linearalgebra35CompressedRowSparseMatrixMechanicalINS_4type3MatILj3ELj3EdEENS4_19CRSMechanicalPolicyEEENS4_10FullVectorIdEENS1_15NoThreadManagerEE17doAddJMInvJtLocalEPNS4_10BaseMatrixEPKNS4_12SparseMatrixIdEEdPNS2_23SparseLDLImplInvertDataINS6_6vectorIiNS6_16CPUMemoryManagerIiEEEENSM_IdNSN_IdEEEEEEENKUlRKT_E_clINS_10simulation5RangeIjEEEEDaSW_E26__tracy_source_location204]+0x8): undefined reference to `sofa::component::linearsolver::direct::SparseLDLSolver<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<sofa::type::Mat<3u, 3u, double>, sofa::linearalgebra::CRSMechanicalPolicy>, sofa::linearalgebra::FullVector<double>, sofa::component::linearsolver::NoThreadManager>::doAddJMInvJtLocal(s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4283
https://github.com/sofa-framework/sofa/issues/4283:602,Testability,Log,Logs,602,"### Problem. **Description**; Trying to build with SOFA_TRACY enabled on Ubuntu 23.04/gcc, got some errors when linking LinearSolver.Direct.; No such error with MSVC2022. Could be a bug from Tracy ? 🤔. **Steps to reproduce**; Enable SOFA_TRACY and TRACY_ENABLE on Ubuntu23.04 and gcc,. **Expected behavior**; Linking correctly 😅. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 23.04, gcc version 12.3.0 (Ubuntu 12.3.0-1ubuntu1~23.04); - Version of SOFA: master (https://github.com/sofa-framework/sofa/commit/22d783bb366fae979b31df6b22de60dde5a19d76). ### Logs. ```c++; /usr/bin/ld: Sofa/Component/LinearSolver/Direct/CMakeFiles/Sofa.Component.LinearSolver.Direct.dir/src/sofa/component/linearsolver/direct/SparseLDLSolver.cpp.o:(.data.rel.ro.local._ZZZN4sofa9component12linearsolver6direct15SparseLDLSolverINS_13linearalgebra35CompressedRowSparseMatrixMechanicalINS_4type3MatILj3ELj3EdEENS4_19CRSMechanicalPolicyEEENS4_10FullVectorIdEENS1_15NoThreadManagerEE17doAddJMInvJtLocalEPNS4_10BaseMatrixEPKNS4_12SparseMatrixIdEEdPNS2_23SparseLDLImplInvertDataINS6_6vectorIiNS6_16CPUMemoryManagerIiEEEENSM_IdNSN_IdEEEEEEENKUlRKT_E_clINS_10simulation5RangeIjEEEEDaSW_E26__tracy_source_location204[_ZZZN4sofa9component12linearsolver6direct15SparseLDLSolverINS_13linearalgebra35CompressedRowSparseMatrixMechanicalINS_4type3MatILj3ELj3EdEENS4_19CRSMechanicalPolicyEEENS4_10FullVectorIdEENS1_15NoThreadManagerEE17doAddJMInvJtLocalEPNS4_10BaseMatrixEPKNS4_12SparseMatrixIdEEdPNS2_23SparseLDLImplInvertDataINS6_6vectorIiNS6_16CPUMemoryManagerIiEEEENSM_IdNSN_IdEEEEEEENKUlRKT_E_clINS_10simulation5RangeIjEEEEDaSW_E26__tracy_source_location204]+0x8): undefined reference to `sofa::component::linearsolver::direct::SparseLDLSolver<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<sofa::type::Mat<3u, 3u, double>, sofa::linearalgebra::CRSMechanicalPolicy>, sofa::linearalgebra::FullVector<double>, sofa::component::linearsolver::NoThreadManager>::doAddJMInvJtLocal(s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4283
https://github.com/sofa-framework/sofa/issues/4285:59,Deployability,integrat,integrated,59,"### Problem. **Description**; We have a Sofa Scene with an integrated python script controller. In this python controller we alter the rest position of a mechanical object with template 'CudaVec3f'. In the online documentation of SofaCUDA [https://www.sofa-framework.org/community/doc/plugins/usual-plugins/using-cuda/](url) there is an example C++ code to access and change parameters of a mechanical object when using SofaCUDA, but there is no corresponding python code snippet. When retrieving the rest position value, the python type is a numpy array in contrast to c++, which has no deviceRead and deviceWrite properties. As there is no direct access to cuda in the SofaPython3 wrapper, our question is how reading/writing can be done in SofaPython3. . When using SofaCUDA without the deviceRead and deviceWrite functions, the object in question randomly diverges, when a translation to `rest_position` is applied. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: 23.06 binary version; - State: binary version",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4285
https://github.com/sofa-framework/sofa/issues/4285:59,Integrability,integrat,integrated,59,"### Problem. **Description**; We have a Sofa Scene with an integrated python script controller. In this python controller we alter the rest position of a mechanical object with template 'CudaVec3f'. In the online documentation of SofaCUDA [https://www.sofa-framework.org/community/doc/plugins/usual-plugins/using-cuda/](url) there is an example C++ code to access and change parameters of a mechanical object when using SofaCUDA, but there is no corresponding python code snippet. When retrieving the rest position value, the python type is a numpy array in contrast to c++, which has no deviceRead and deviceWrite properties. As there is no direct access to cuda in the SofaPython3 wrapper, our question is how reading/writing can be done in SofaPython3. . When using SofaCUDA without the deviceRead and deviceWrite functions, the object in question randomly diverges, when a translation to `rest_position` is applied. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: 23.06 binary version; - State: binary version",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4285
https://github.com/sofa-framework/sofa/issues/4285:683,Integrability,wrap,wrapper,683,"### Problem. **Description**; We have a Sofa Scene with an integrated python script controller. In this python controller we alter the rest position of a mechanical object with template 'CudaVec3f'. In the online documentation of SofaCUDA [https://www.sofa-framework.org/community/doc/plugins/usual-plugins/using-cuda/](url) there is an example C++ code to access and change parameters of a mechanical object when using SofaCUDA, but there is no corresponding python code snippet. When retrieving the rest position value, the python type is a numpy array in contrast to c++, which has no deviceRead and deviceWrite properties. As there is no direct access to cuda in the SofaPython3 wrapper, our question is how reading/writing can be done in SofaPython3. . When using SofaCUDA without the deviceRead and deviceWrite functions, the object in question randomly diverges, when a translation to `rest_position` is applied. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: 23.06 binary version; - State: binary version",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4285
https://github.com/sofa-framework/sofa/issues/4285:285,Modifiability,plugin,plugins,285,"### Problem. **Description**; We have a Sofa Scene with an integrated python script controller. In this python controller we alter the rest position of a mechanical object with template 'CudaVec3f'. In the online documentation of SofaCUDA [https://www.sofa-framework.org/community/doc/plugins/usual-plugins/using-cuda/](url) there is an example C++ code to access and change parameters of a mechanical object when using SofaCUDA, but there is no corresponding python code snippet. When retrieving the rest position value, the python type is a numpy array in contrast to c++, which has no deviceRead and deviceWrite properties. As there is no direct access to cuda in the SofaPython3 wrapper, our question is how reading/writing can be done in SofaPython3. . When using SofaCUDA without the deviceRead and deviceWrite functions, the object in question randomly diverges, when a translation to `rest_position` is applied. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: 23.06 binary version; - State: binary version",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4285
https://github.com/sofa-framework/sofa/issues/4285:299,Modifiability,plugin,plugins,299,"### Problem. **Description**; We have a Sofa Scene with an integrated python script controller. In this python controller we alter the rest position of a mechanical object with template 'CudaVec3f'. In the online documentation of SofaCUDA [https://www.sofa-framework.org/community/doc/plugins/usual-plugins/using-cuda/](url) there is an example C++ code to access and change parameters of a mechanical object when using SofaCUDA, but there is no corresponding python code snippet. When retrieving the rest position value, the python type is a numpy array in contrast to c++, which has no deviceRead and deviceWrite properties. As there is no direct access to cuda in the SofaPython3 wrapper, our question is how reading/writing can be done in SofaPython3. . When using SofaCUDA without the deviceRead and deviceWrite functions, the object in question randomly diverges, when a translation to `rest_position` is applied. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: 23.06 binary version; - State: binary version",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4285
https://github.com/sofa-framework/sofa/issues/4285:357,Security,access,access,357,"### Problem. **Description**; We have a Sofa Scene with an integrated python script controller. In this python controller we alter the rest position of a mechanical object with template 'CudaVec3f'. In the online documentation of SofaCUDA [https://www.sofa-framework.org/community/doc/plugins/usual-plugins/using-cuda/](url) there is an example C++ code to access and change parameters of a mechanical object when using SofaCUDA, but there is no corresponding python code snippet. When retrieving the rest position value, the python type is a numpy array in contrast to c++, which has no deviceRead and deviceWrite properties. As there is no direct access to cuda in the SofaPython3 wrapper, our question is how reading/writing can be done in SofaPython3. . When using SofaCUDA without the deviceRead and deviceWrite functions, the object in question randomly diverges, when a translation to `rest_position` is applied. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: 23.06 binary version; - State: binary version",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4285
https://github.com/sofa-framework/sofa/issues/4285:649,Security,access,access,649,"### Problem. **Description**; We have a Sofa Scene with an integrated python script controller. In this python controller we alter the rest position of a mechanical object with template 'CudaVec3f'. In the online documentation of SofaCUDA [https://www.sofa-framework.org/community/doc/plugins/usual-plugins/using-cuda/](url) there is an example C++ code to access and change parameters of a mechanical object when using SofaCUDA, but there is no corresponding python code snippet. When retrieving the rest position value, the python type is a numpy array in contrast to c++, which has no deviceRead and deviceWrite properties. As there is no direct access to cuda in the SofaPython3 wrapper, our question is how reading/writing can be done in SofaPython3. . When using SofaCUDA without the deviceRead and deviceWrite functions, the object in question randomly diverges, when a translation to `rest_position` is applied. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: 23.06 binary version; - State: binary version",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4285
https://github.com/sofa-framework/sofa/pull/4290:1170,Availability,failure,failures,1170,"This PR adds a CMake find module for the QGLViewer used in SOFA.GUI.Qt.; The behavior here (already in place) is to look for an external package of QGLViewer and if not found, use the embeded code of QGLViewer (which is linked dynamically).; I may have missed something but it seems that QGLViewer does not provide CMake config files (neither from source, or in package managers such as APT, Conda and vcpkg). And as SOFA was not including a CMake module for it, there was no chance for it to be found externally.; Then, this should not break current behavior but just fix the possibility to use an external GLViewer package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4290
https://github.com/sofa-framework/sofa/pull/4290:1219,Availability,failure,failures,1219,"This PR adds a CMake find module for the QGLViewer used in SOFA.GUI.Qt.; The behavior here (already in place) is to look for an external package of QGLViewer and if not found, use the embeded code of QGLViewer (which is linked dynamically).; I may have missed something but it seems that QGLViewer does not provide CMake config files (neither from source, or in package managers such as APT, Conda and vcpkg). And as SOFA was not including a CMake module for it, there was no chance for it to be found externally.; Then, this should not break current behavior but just fix the possibility to use an external GLViewer package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4290
https://github.com/sofa-framework/sofa/pull/4290:321,Modifiability,config,config,321,"This PR adds a CMake find module for the QGLViewer used in SOFA.GUI.Qt.; The behavior here (already in place) is to look for an external package of QGLViewer and if not found, use the embeded code of QGLViewer (which is linked dynamically).; I may have missed something but it seems that QGLViewer does not provide CMake config files (neither from source, or in package managers such as APT, Conda and vcpkg). And as SOFA was not including a CMake module for it, there was no chance for it to be found externally.; Then, this should not break current behavior but just fix the possibility to use an external GLViewer package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4290
https://github.com/sofa-framework/sofa/pull/4290:789,Security,Certificate,Certificate,789,"This PR adds a CMake find module for the QGLViewer used in SOFA.GUI.Qt.; The behavior here (already in place) is to look for an external package of QGLViewer and if not found, use the embeded code of QGLViewer (which is linked dynamically).; I may have missed something but it seems that QGLViewer does not provide CMake config files (neither from source, or in package managers such as APT, Conda and vcpkg). And as SOFA was not including a CMake module for it, there was no chance for it to be found externally.; Then, this should not break current behavior but just fix the possibility to use an external GLViewer package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4290
https://github.com/sofa-framework/sofa/pull/4290:900,Security,certificate,certificate-of-origin-dco,900,"This PR adds a CMake find module for the QGLViewer used in SOFA.GUI.Qt.; The behavior here (already in place) is to look for an external package of QGLViewer and if not found, use the embeded code of QGLViewer (which is linked dynamically).; I may have missed something but it seems that QGLViewer does not provide CMake config files (neither from source, or in package managers such as APT, Conda and vcpkg). And as SOFA was not including a CMake module for it, there was no chance for it to be found externally.; Then, this should not break current behavior but just fix the possibility to use an external GLViewer package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4290
https://github.com/sofa-framework/sofa/pull/4290:1165,Testability,test,test,1165,"This PR adds a CMake find module for the QGLViewer used in SOFA.GUI.Qt.; The behavior here (already in place) is to look for an external package of QGLViewer and if not found, use the embeded code of QGLViewer (which is linked dynamically).; I may have missed something but it seems that QGLViewer does not provide CMake config files (neither from source, or in package managers such as APT, Conda and vcpkg). And as SOFA was not including a CMake module for it, there was no chance for it to be found externally.; Then, this should not break current behavior but just fix the possibility to use an external GLViewer package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4290
https://github.com/sofa-framework/sofa/pull/4290:1214,Testability,test,test,1214,"This PR adds a CMake find module for the QGLViewer used in SOFA.GUI.Qt.; The behavior here (already in place) is to look for an external package of QGLViewer and if not found, use the embeded code of QGLViewer (which is linked dynamically).; I may have missed something but it seems that QGLViewer does not provide CMake config files (neither from source, or in package managers such as APT, Conda and vcpkg). And as SOFA was not including a CMake module for it, there was no chance for it to be found externally.; Then, this should not break current behavior but just fix the possibility to use an external GLViewer package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4290
https://github.com/sofa-framework/sofa/pull/4291:668,Availability,failure,failures,668,":arrow_down_small: 161 → 86 warnings! (fedora); :arrow_down_small: 312 → 182 warnings! (ubuntu gcc). :fire: :fire: :fire: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4291
https://github.com/sofa-framework/sofa/pull/4291:717,Availability,failure,failures,717,":arrow_down_small: 161 → 86 warnings! (fedora); :arrow_down_small: 312 → 182 warnings! (ubuntu gcc). :fire: :fire: :fire: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4291
https://github.com/sofa-framework/sofa/pull/4291:287,Security,Certificate,Certificate,287,":arrow_down_small: 161 → 86 warnings! (fedora); :arrow_down_small: 312 → 182 warnings! (ubuntu gcc). :fire: :fire: :fire: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4291
https://github.com/sofa-framework/sofa/pull/4291:398,Security,certificate,certificate-of-origin-dco,398,":arrow_down_small: 161 → 86 warnings! (fedora); :arrow_down_small: 312 → 182 warnings! (ubuntu gcc). :fire: :fire: :fire: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4291
https://github.com/sofa-framework/sofa/pull/4291:663,Testability,test,test,663,":arrow_down_small: 161 → 86 warnings! (fedora); :arrow_down_small: 312 → 182 warnings! (ubuntu gcc). :fire: :fire: :fire: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4291
https://github.com/sofa-framework/sofa/pull/4291:712,Testability,test,test,712,":arrow_down_small: 161 → 86 warnings! (fedora); :arrow_down_small: 312 → 182 warnings! (ubuntu gcc). :fire: :fire: :fire: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4291
https://github.com/sofa-framework/sofa/pull/4293:720,Availability,failure,failures,720,"Apparently clang-mac is very picky about location of the symbols with LTO enabled, and this fact could expose some problem for explicit instanciations (typos, wrong location). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4293
https://github.com/sofa-framework/sofa/pull/4293:769,Availability,failure,failures,769,"Apparently clang-mac is very picky about location of the symbols with LTO enabled, and this fact could expose some problem for explicit instanciations (typos, wrong location). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4293
https://github.com/sofa-framework/sofa/pull/4293:103,Security,expose,expose,103,"Apparently clang-mac is very picky about location of the symbols with LTO enabled, and this fact could expose some problem for explicit instanciations (typos, wrong location). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4293
https://github.com/sofa-framework/sofa/pull/4293:339,Security,Certificate,Certificate,339,"Apparently clang-mac is very picky about location of the symbols with LTO enabled, and this fact could expose some problem for explicit instanciations (typos, wrong location). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4293
https://github.com/sofa-framework/sofa/pull/4293:450,Security,certificate,certificate-of-origin-dco,450,"Apparently clang-mac is very picky about location of the symbols with LTO enabled, and this fact could expose some problem for explicit instanciations (typos, wrong location). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4293
https://github.com/sofa-framework/sofa/pull/4293:715,Testability,test,test,715,"Apparently clang-mac is very picky about location of the symbols with LTO enabled, and this fact could expose some problem for explicit instanciations (typos, wrong location). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4293
https://github.com/sofa-framework/sofa/pull/4293:764,Testability,test,test,764,"Apparently clang-mac is very picky about location of the symbols with LTO enabled, and this fact could expose some problem for explicit instanciations (typos, wrong location). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4293
https://github.com/sofa-framework/sofa/pull/4294:1000,Availability,failure,failures,1000,"Related to #3967. I was not able to not unify a bit the behavior and clean some part of the code. . The non constant computation of the pressure is not valid as all the derivatives are zero in addDForce, addKtoMatrix... it is also not consistant with QuadPressureForceField. Moving to the situation with a valid non constant computation on both Triangle and Quad requires more work, so for the moment I prefer to just deprecate the non constant situation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4294
https://github.com/sofa-framework/sofa/pull/4294:1049,Availability,failure,failures,1049,"Related to #3967. I was not able to not unify a bit the behavior and clean some part of the code. . The non constant computation of the pressure is not valid as all the derivatives are zero in addDForce, addKtoMatrix... it is also not consistant with QuadPressureForceField. Moving to the situation with a valid non constant computation on both Triangle and Quad requires more work, so for the moment I prefer to just deprecate the non constant situation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4294
https://github.com/sofa-framework/sofa/pull/4294:619,Security,Certificate,Certificate,619,"Related to #3967. I was not able to not unify a bit the behavior and clean some part of the code. . The non constant computation of the pressure is not valid as all the derivatives are zero in addDForce, addKtoMatrix... it is also not consistant with QuadPressureForceField. Moving to the situation with a valid non constant computation on both Triangle and Quad requires more work, so for the moment I prefer to just deprecate the non constant situation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4294
https://github.com/sofa-framework/sofa/pull/4294:730,Security,certificate,certificate-of-origin-dco,730,"Related to #3967. I was not able to not unify a bit the behavior and clean some part of the code. . The non constant computation of the pressure is not valid as all the derivatives are zero in addDForce, addKtoMatrix... it is also not consistant with QuadPressureForceField. Moving to the situation with a valid non constant computation on both Triangle and Quad requires more work, so for the moment I prefer to just deprecate the non constant situation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4294
https://github.com/sofa-framework/sofa/pull/4294:995,Testability,test,test,995,"Related to #3967. I was not able to not unify a bit the behavior and clean some part of the code. . The non constant computation of the pressure is not valid as all the derivatives are zero in addDForce, addKtoMatrix... it is also not consistant with QuadPressureForceField. Moving to the situation with a valid non constant computation on both Triangle and Quad requires more work, so for the moment I prefer to just deprecate the non constant situation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4294
https://github.com/sofa-framework/sofa/pull/4294:1044,Testability,test,test,1044,"Related to #3967. I was not able to not unify a bit the behavior and clean some part of the code. . The non constant computation of the pressure is not valid as all the derivatives are zero in addDForce, addKtoMatrix... it is also not consistant with QuadPressureForceField. Moving to the situation with a valid non constant computation on both Triangle and Quad requires more work, so for the moment I prefer to just deprecate the non constant situation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4294
https://github.com/sofa-framework/sofa/pull/4295:651,Availability,failure,failures,651,"A task from https://github.com/sofa-framework/sofa/issues/3967. `addKToMatrix` was not implemented before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4295
https://github.com/sofa-framework/sofa/pull/4295:700,Availability,failure,failures,700,"A task from https://github.com/sofa-framework/sofa/issues/3967. `addKToMatrix` was not implemented before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4295
https://github.com/sofa-framework/sofa/pull/4295:270,Security,Certificate,Certificate,270,"A task from https://github.com/sofa-framework/sofa/issues/3967. `addKToMatrix` was not implemented before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4295
https://github.com/sofa-framework/sofa/pull/4295:381,Security,certificate,certificate-of-origin-dco,381,"A task from https://github.com/sofa-framework/sofa/issues/3967. `addKToMatrix` was not implemented before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4295
https://github.com/sofa-framework/sofa/pull/4295:646,Testability,test,test,646,"A task from https://github.com/sofa-framework/sofa/issues/3967. `addKToMatrix` was not implemented before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4295
https://github.com/sofa-framework/sofa/pull/4295:695,Testability,test,test,695,"A task from https://github.com/sofa-framework/sofa/issues/3967. `addKToMatrix` was not implemented before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4295
https://github.com/sofa-framework/sofa/pull/4296:2047,Availability,failure,failures,2047,"l, beamadapter scene) on Windows/msvc, linux/gcc and macos/clang. . ---; Benches: (Ubuntu, gcc); Unit:; https://ethercalc.net/jt9xe3yadxug. Mostly the same, except:; - zero-construct is faster; - mat<24> mult is slower but can be fixed easily (https://github.com/sofa-framework/sofa/blob/3fadc10492662a63eab725fa45894f2c5b3fe9bd/Sofa/framework/Type/src/sofa/type/Mat.h#L531C12-L531C12 may confuse the vectorizer).; EDIT: and apparently is mitigated by using LTO. Scenes :; caduceus:; - master: `10000 iterations done in 6.61867 s ( 1510.88 FPS)`; - pr: `10000 iterations done in 6.59469 s ( 1516.37 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.6086 s ( 320.336 FPS)`; - pr: `5000 iterations done in 15.6149 s ( 320.207 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.5179 s ( 163.838 FPS)`; - pr: `5000 iterations done in 30.2582 s ( 165.244 FPS)`. With LTO:; caduceus:; - master: `10000 iterations done in 6.55136 s ( 1526.4 FPS)`; - pr: `10000 iterations done in 6.49977 s ( 1538.52 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.4835 s ( 322.925 FPS)`; - pr: `5000 iterations done in 14.8696 s ( 336.256 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.0172 s ( 166.571 FPS)`; - pr: `5000 iterations done in 29.9373 s ( 167.016 FPS)`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4296
https://github.com/sofa-framework/sofa/pull/4296:2096,Availability,failure,failures,2096,"l, beamadapter scene) on Windows/msvc, linux/gcc and macos/clang. . ---; Benches: (Ubuntu, gcc); Unit:; https://ethercalc.net/jt9xe3yadxug. Mostly the same, except:; - zero-construct is faster; - mat<24> mult is slower but can be fixed easily (https://github.com/sofa-framework/sofa/blob/3fadc10492662a63eab725fa45894f2c5b3fe9bd/Sofa/framework/Type/src/sofa/type/Mat.h#L531C12-L531C12 may confuse the vectorizer).; EDIT: and apparently is mitigated by using LTO. Scenes :; caduceus:; - master: `10000 iterations done in 6.61867 s ( 1510.88 FPS)`; - pr: `10000 iterations done in 6.59469 s ( 1516.37 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.6086 s ( 320.336 FPS)`; - pr: `5000 iterations done in 15.6149 s ( 320.207 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.5179 s ( 163.838 FPS)`; - pr: `5000 iterations done in 30.2582 s ( 165.244 FPS)`. With LTO:; caduceus:; - master: `10000 iterations done in 6.55136 s ( 1526.4 FPS)`; - pr: `10000 iterations done in 6.49977 s ( 1538.52 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.4835 s ( 322.925 FPS)`; - pr: `5000 iterations done in 14.8696 s ( 336.256 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.0172 s ( 166.571 FPS)`; - pr: `5000 iterations done in 29.9373 s ( 167.016 FPS)`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4296
https://github.com/sofa-framework/sofa/pull/4296:64,Modifiability,inherit,inheritance,64,"- based on #4270 . Part of the task #4217 . This PR removes the inheritance on type::fixed_array and use std::array to store the elements. No performance change noticed on few scenes (caduceus, TorusFall, beamadapter scene) on Windows/msvc, linux/gcc and macos/clang. . ---; Benches: (Ubuntu, gcc); Unit:; https://ethercalc.net/jt9xe3yadxug. Mostly the same, except:; - zero-construct is faster; - mat<24> mult is slower but can be fixed easily (https://github.com/sofa-framework/sofa/blob/3fadc10492662a63eab725fa45894f2c5b3fe9bd/Sofa/framework/Type/src/sofa/type/Mat.h#L531C12-L531C12 may confuse the vectorizer).; EDIT: and apparently is mitigated by using LTO. Scenes :; caduceus:; - master: `10000 iterations done in 6.61867 s ( 1510.88 FPS)`; - pr: `10000 iterations done in 6.59469 s ( 1516.37 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.6086 s ( 320.336 FPS)`; - pr: `5000 iterations done in 15.6149 s ( 320.207 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.5179 s ( 163.838 FPS)`; - pr: `5000 iterations done in 30.2582 s ( 165.244 FPS)`. With LTO:; caduceus:; - master: `10000 iterations done in 6.55136 s ( 1526.4 FPS)`; - pr: `10000 iterations done in 6.49977 s ( 1538.52 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.4835 s ( 322.925 FPS)`; - pr: `5000 iterations done in 14.8696 s ( 336.256 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.0172 s ( 166.571 FPS)`; - pr: `5000 iterations done in 29.9373 s ( 167.016 FPS)`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new wa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4296
https://github.com/sofa-framework/sofa/pull/4296:142,Performance,perform,performance,142,"- based on #4270 . Part of the task #4217 . This PR removes the inheritance on type::fixed_array and use std::array to store the elements. No performance change noticed on few scenes (caduceus, TorusFall, beamadapter scene) on Windows/msvc, linux/gcc and macos/clang. . ---; Benches: (Ubuntu, gcc); Unit:; https://ethercalc.net/jt9xe3yadxug. Mostly the same, except:; - zero-construct is faster; - mat<24> mult is slower but can be fixed easily (https://github.com/sofa-framework/sofa/blob/3fadc10492662a63eab725fa45894f2c5b3fe9bd/Sofa/framework/Type/src/sofa/type/Mat.h#L531C12-L531C12 may confuse the vectorizer).; EDIT: and apparently is mitigated by using LTO. Scenes :; caduceus:; - master: `10000 iterations done in 6.61867 s ( 1510.88 FPS)`; - pr: `10000 iterations done in 6.59469 s ( 1516.37 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.6086 s ( 320.336 FPS)`; - pr: `5000 iterations done in 15.6149 s ( 320.207 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.5179 s ( 163.838 FPS)`; - pr: `5000 iterations done in 30.2582 s ( 165.244 FPS)`. With LTO:; caduceus:; - master: `10000 iterations done in 6.55136 s ( 1526.4 FPS)`; - pr: `10000 iterations done in 6.49977 s ( 1538.52 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.4835 s ( 322.925 FPS)`; - pr: `5000 iterations done in 14.8696 s ( 336.256 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.0172 s ( 166.571 FPS)`; - pr: `5000 iterations done in 29.9373 s ( 167.016 FPS)`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new wa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4296
https://github.com/sofa-framework/sofa/pull/4296:1666,Security,Certificate,Certificate,1666,"l, beamadapter scene) on Windows/msvc, linux/gcc and macos/clang. . ---; Benches: (Ubuntu, gcc); Unit:; https://ethercalc.net/jt9xe3yadxug. Mostly the same, except:; - zero-construct is faster; - mat<24> mult is slower but can be fixed easily (https://github.com/sofa-framework/sofa/blob/3fadc10492662a63eab725fa45894f2c5b3fe9bd/Sofa/framework/Type/src/sofa/type/Mat.h#L531C12-L531C12 may confuse the vectorizer).; EDIT: and apparently is mitigated by using LTO. Scenes :; caduceus:; - master: `10000 iterations done in 6.61867 s ( 1510.88 FPS)`; - pr: `10000 iterations done in 6.59469 s ( 1516.37 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.6086 s ( 320.336 FPS)`; - pr: `5000 iterations done in 15.6149 s ( 320.207 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.5179 s ( 163.838 FPS)`; - pr: `5000 iterations done in 30.2582 s ( 165.244 FPS)`. With LTO:; caduceus:; - master: `10000 iterations done in 6.55136 s ( 1526.4 FPS)`; - pr: `10000 iterations done in 6.49977 s ( 1538.52 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.4835 s ( 322.925 FPS)`; - pr: `5000 iterations done in 14.8696 s ( 336.256 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.0172 s ( 166.571 FPS)`; - pr: `5000 iterations done in 29.9373 s ( 167.016 FPS)`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4296
https://github.com/sofa-framework/sofa/pull/4296:1777,Security,certificate,certificate-of-origin-dco,1777,"l, beamadapter scene) on Windows/msvc, linux/gcc and macos/clang. . ---; Benches: (Ubuntu, gcc); Unit:; https://ethercalc.net/jt9xe3yadxug. Mostly the same, except:; - zero-construct is faster; - mat<24> mult is slower but can be fixed easily (https://github.com/sofa-framework/sofa/blob/3fadc10492662a63eab725fa45894f2c5b3fe9bd/Sofa/framework/Type/src/sofa/type/Mat.h#L531C12-L531C12 may confuse the vectorizer).; EDIT: and apparently is mitigated by using LTO. Scenes :; caduceus:; - master: `10000 iterations done in 6.61867 s ( 1510.88 FPS)`; - pr: `10000 iterations done in 6.59469 s ( 1516.37 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.6086 s ( 320.336 FPS)`; - pr: `5000 iterations done in 15.6149 s ( 320.207 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.5179 s ( 163.838 FPS)`; - pr: `5000 iterations done in 30.2582 s ( 165.244 FPS)`. With LTO:; caduceus:; - master: `10000 iterations done in 6.55136 s ( 1526.4 FPS)`; - pr: `10000 iterations done in 6.49977 s ( 1538.52 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.4835 s ( 322.925 FPS)`; - pr: `5000 iterations done in 14.8696 s ( 336.256 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.0172 s ( 166.571 FPS)`; - pr: `5000 iterations done in 29.9373 s ( 167.016 FPS)`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4296
https://github.com/sofa-framework/sofa/pull/4296:2042,Testability,test,test,2042,"l, beamadapter scene) on Windows/msvc, linux/gcc and macos/clang. . ---; Benches: (Ubuntu, gcc); Unit:; https://ethercalc.net/jt9xe3yadxug. Mostly the same, except:; - zero-construct is faster; - mat<24> mult is slower but can be fixed easily (https://github.com/sofa-framework/sofa/blob/3fadc10492662a63eab725fa45894f2c5b3fe9bd/Sofa/framework/Type/src/sofa/type/Mat.h#L531C12-L531C12 may confuse the vectorizer).; EDIT: and apparently is mitigated by using LTO. Scenes :; caduceus:; - master: `10000 iterations done in 6.61867 s ( 1510.88 FPS)`; - pr: `10000 iterations done in 6.59469 s ( 1516.37 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.6086 s ( 320.336 FPS)`; - pr: `5000 iterations done in 15.6149 s ( 320.207 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.5179 s ( 163.838 FPS)`; - pr: `5000 iterations done in 30.2582 s ( 165.244 FPS)`. With LTO:; caduceus:; - master: `10000 iterations done in 6.55136 s ( 1526.4 FPS)`; - pr: `10000 iterations done in 6.49977 s ( 1538.52 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.4835 s ( 322.925 FPS)`; - pr: `5000 iterations done in 14.8696 s ( 336.256 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.0172 s ( 166.571 FPS)`; - pr: `5000 iterations done in 29.9373 s ( 167.016 FPS)`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4296
https://github.com/sofa-framework/sofa/pull/4296:2091,Testability,test,test,2091,"l, beamadapter scene) on Windows/msvc, linux/gcc and macos/clang. . ---; Benches: (Ubuntu, gcc); Unit:; https://ethercalc.net/jt9xe3yadxug. Mostly the same, except:; - zero-construct is faster; - mat<24> mult is slower but can be fixed easily (https://github.com/sofa-framework/sofa/blob/3fadc10492662a63eab725fa45894f2c5b3fe9bd/Sofa/framework/Type/src/sofa/type/Mat.h#L531C12-L531C12 may confuse the vectorizer).; EDIT: and apparently is mitigated by using LTO. Scenes :; caduceus:; - master: `10000 iterations done in 6.61867 s ( 1510.88 FPS)`; - pr: `10000 iterations done in 6.59469 s ( 1516.37 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.6086 s ( 320.336 FPS)`; - pr: `5000 iterations done in 15.6149 s ( 320.207 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.5179 s ( 163.838 FPS)`; - pr: `5000 iterations done in 30.2582 s ( 165.244 FPS)`. With LTO:; caduceus:; - master: `10000 iterations done in 6.55136 s ( 1526.4 FPS)`; - pr: `10000 iterations done in 6.49977 s ( 1538.52 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.4835 s ( 322.925 FPS)`; - pr: `5000 iterations done in 14.8696 s ( 336.256 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.0172 s ( 166.571 FPS)`; - pr: `5000 iterations done in 29.9373 s ( 167.016 FPS)`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4296
https://github.com/sofa-framework/sofa/pull/4300:626,Availability,failure,failures,626,"Title is self-explanatory.; Follows discussion about redefining CI minimal scope. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4300
https://github.com/sofa-framework/sofa/pull/4300:675,Availability,failure,failures,675,"Title is self-explanatory.; Follows discussion about redefining CI minimal scope. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4300
https://github.com/sofa-framework/sofa/pull/4300:245,Security,Certificate,Certificate,245,"Title is self-explanatory.; Follows discussion about redefining CI minimal scope. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4300
https://github.com/sofa-framework/sofa/pull/4300:356,Security,certificate,certificate-of-origin-dco,356,"Title is self-explanatory.; Follows discussion about redefining CI minimal scope. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4300
https://github.com/sofa-framework/sofa/pull/4300:621,Testability,test,test,621,"Title is self-explanatory.; Follows discussion about redefining CI minimal scope. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4300
https://github.com/sofa-framework/sofa/pull/4300:670,Testability,test,test,670,"Title is self-explanatory.; Follows discussion about redefining CI minimal scope. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4300
https://github.com/sofa-framework/sofa/pull/4301:608,Availability,failure,failures,608,"A task from https://github.com/sofa-framework/sofa/issues/3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4301
https://github.com/sofa-framework/sofa/pull/4301:657,Availability,failure,failures,657,"A task from https://github.com/sofa-framework/sofa/issues/3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4301
https://github.com/sofa-framework/sofa/pull/4301:227,Security,Certificate,Certificate,227,"A task from https://github.com/sofa-framework/sofa/issues/3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4301
https://github.com/sofa-framework/sofa/pull/4301:338,Security,certificate,certificate-of-origin-dco,338,"A task from https://github.com/sofa-framework/sofa/issues/3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4301
https://github.com/sofa-framework/sofa/pull/4301:603,Testability,test,test,603,"A task from https://github.com/sofa-framework/sofa/issues/3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4301
https://github.com/sofa-framework/sofa/pull/4301:652,Testability,test,test,652,"A task from https://github.com/sofa-framework/sofa/issues/3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4301
https://github.com/sofa-framework/sofa/pull/4302:606,Safety,avoid,avoiding,606,"This PR is a first step for the issue #3952. . I modified the names of the constraints following the rule that we agreed upon. Still need to change spring force-fields that can behave as penalties. . The changes where straight, not more though than adding the type into the name was done. If any name doesn't fit your standard, feel free to suggest any changes. . This PR also add a componentRenamed mechanism that creates an alias automatically for renamed objects. TODO:. - [x] Edit Sofa/framework/Helper/src/sofa/helper/ComponentChange.cpp; - [x] Add a API in ComponentChange.cpp for Renamed component (avoiding to add an alias manually in the class); - [x] Move the C++ alias in the old header; - [x] Change name of projective constraints strating by `ProjectOn`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4302
https://github.com/sofa-framework/sofa/pull/4303:753,Availability,failure,failures,753,"As CImgPlugin became almost useless for loading images (jpg, etc #2551 ), its only usage is to ship cimg. ; So it would make sense to put it back in image (which is the main user of the lib cimg). Fix #4299 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4303
https://github.com/sofa-framework/sofa/pull/4303:802,Availability,failure,failures,802,"As CImgPlugin became almost useless for loading images (jpg, etc #2551 ), its only usage is to ship cimg. ; So it would make sense to put it back in image (which is the main user of the lib cimg). Fix #4299 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4303
https://github.com/sofa-framework/sofa/pull/4303:40,Performance,load,loading,40,"As CImgPlugin became almost useless for loading images (jpg, etc #2551 ), its only usage is to ship cimg. ; So it would make sense to put it back in image (which is the main user of the lib cimg). Fix #4299 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4303
https://github.com/sofa-framework/sofa/pull/4303:372,Security,Certificate,Certificate,372,"As CImgPlugin became almost useless for loading images (jpg, etc #2551 ), its only usage is to ship cimg. ; So it would make sense to put it back in image (which is the main user of the lib cimg). Fix #4299 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4303
https://github.com/sofa-framework/sofa/pull/4303:483,Security,certificate,certificate-of-origin-dco,483,"As CImgPlugin became almost useless for loading images (jpg, etc #2551 ), its only usage is to ship cimg. ; So it would make sense to put it back in image (which is the main user of the lib cimg). Fix #4299 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4303
https://github.com/sofa-framework/sofa/pull/4303:748,Testability,test,test,748,"As CImgPlugin became almost useless for loading images (jpg, etc #2551 ), its only usage is to ship cimg. ; So it would make sense to put it back in image (which is the main user of the lib cimg). Fix #4299 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4303
https://github.com/sofa-framework/sofa/pull/4303:797,Testability,test,test,797,"As CImgPlugin became almost useless for loading images (jpg, etc #2551 ), its only usage is to ship cimg. ; So it would make sense to put it back in image (which is the main user of the lib cimg). Fix #4299 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4303
https://github.com/sofa-framework/sofa/pull/4304:924,Availability,failure,failures,924,"- Massive cleaning; - Factorize duplicated code; - Fix storage of the local jacobian matrix. There was only one jacobian matrix for two springs, and the second spring always overwrote the values of the first jacobian matrix. There are now one jacobian matrix by spring.; - Implementation of `buildStiffnessMatrix` (a task from https://github.com/sofa-framework/sofa/issues/3967). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4304
https://github.com/sofa-framework/sofa/pull/4304:973,Availability,failure,failures,973,"- Massive cleaning; - Factorize duplicated code; - Fix storage of the local jacobian matrix. There was only one jacobian matrix for two springs, and the second spring always overwrote the values of the first jacobian matrix. There are now one jacobian matrix by spring.; - Implementation of `buildStiffnessMatrix` (a task from https://github.com/sofa-framework/sofa/issues/3967). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4304
https://github.com/sofa-framework/sofa/pull/4304:543,Security,Certificate,Certificate,543,"- Massive cleaning; - Factorize duplicated code; - Fix storage of the local jacobian matrix. There was only one jacobian matrix for two springs, and the second spring always overwrote the values of the first jacobian matrix. There are now one jacobian matrix by spring.; - Implementation of `buildStiffnessMatrix` (a task from https://github.com/sofa-framework/sofa/issues/3967). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4304
https://github.com/sofa-framework/sofa/pull/4304:654,Security,certificate,certificate-of-origin-dco,654,"- Massive cleaning; - Factorize duplicated code; - Fix storage of the local jacobian matrix. There was only one jacobian matrix for two springs, and the second spring always overwrote the values of the first jacobian matrix. There are now one jacobian matrix by spring.; - Implementation of `buildStiffnessMatrix` (a task from https://github.com/sofa-framework/sofa/issues/3967). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4304
https://github.com/sofa-framework/sofa/pull/4304:919,Testability,test,test,919,"- Massive cleaning; - Factorize duplicated code; - Fix storage of the local jacobian matrix. There was only one jacobian matrix for two springs, and the second spring always overwrote the values of the first jacobian matrix. There are now one jacobian matrix by spring.; - Implementation of `buildStiffnessMatrix` (a task from https://github.com/sofa-framework/sofa/issues/3967). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4304
https://github.com/sofa-framework/sofa/pull/4304:968,Testability,test,test,968,"- Massive cleaning; - Factorize duplicated code; - Fix storage of the local jacobian matrix. There was only one jacobian matrix for two springs, and the second spring always overwrote the values of the first jacobian matrix. There are now one jacobian matrix by spring.; - Implementation of `buildStiffnessMatrix` (a task from https://github.com/sofa-framework/sofa/issues/3967). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4304
https://github.com/sofa-framework/sofa/pull/4307:577,Availability,failure,failures,577,"It happened to me in debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4307
https://github.com/sofa-framework/sofa/pull/4307:626,Availability,failure,failures,626,"It happened to me in debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4307
https://github.com/sofa-framework/sofa/pull/4307:196,Security,Certificate,Certificate,196,"It happened to me in debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4307
https://github.com/sofa-framework/sofa/pull/4307:307,Security,certificate,certificate-of-origin-dco,307,"It happened to me in debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4307
https://github.com/sofa-framework/sofa/pull/4307:572,Testability,test,test,572,"It happened to me in debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4307
https://github.com/sofa-framework/sofa/pull/4307:621,Testability,test,test,621,"It happened to me in debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4307
https://github.com/sofa-framework/sofa/pull/4308:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4308
https://github.com/sofa-framework/sofa/pull/4308:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4308
https://github.com/sofa-framework/sofa/pull/4308:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4308
https://github.com/sofa-framework/sofa/pull/4308:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4308
https://github.com/sofa-framework/sofa/pull/4308:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4308
https://github.com/sofa-framework/sofa/pull/4308:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4308
https://github.com/sofa-framework/sofa/pull/4309:668,Availability,failure,failures,668,"- Implementation of applyConstraint (a task from https://github.com/sofa-framework/sofa/issues/3967); - some data cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4309
https://github.com/sofa-framework/sofa/pull/4309:717,Availability,failure,failures,717,"- Implementation of applyConstraint (a task from https://github.com/sofa-framework/sofa/issues/3967); - some data cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4309
https://github.com/sofa-framework/sofa/pull/4309:287,Security,Certificate,Certificate,287,"- Implementation of applyConstraint (a task from https://github.com/sofa-framework/sofa/issues/3967); - some data cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4309
https://github.com/sofa-framework/sofa/pull/4309:398,Security,certificate,certificate-of-origin-dco,398,"- Implementation of applyConstraint (a task from https://github.com/sofa-framework/sofa/issues/3967); - some data cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4309
https://github.com/sofa-framework/sofa/pull/4309:663,Testability,test,test,663,"- Implementation of applyConstraint (a task from https://github.com/sofa-framework/sofa/issues/3967); - some data cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4309
https://github.com/sofa-framework/sofa/pull/4309:712,Testability,test,test,712,"- Implementation of applyConstraint (a task from https://github.com/sofa-framework/sofa/issues/3967); - some data cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4309
https://github.com/sofa-framework/sofa/pull/4310:624,Availability,failure,failures,624,"Working with the changes from #4273 made me realize that we lack user insights. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4310
https://github.com/sofa-framework/sofa/pull/4310:673,Availability,failure,failures,673,"Working with the changes from #4273 made me realize that we lack user insights. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4310
https://github.com/sofa-framework/sofa/pull/4310:243,Security,Certificate,Certificate,243,"Working with the changes from #4273 made me realize that we lack user insights. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4310
https://github.com/sofa-framework/sofa/pull/4310:354,Security,certificate,certificate-of-origin-dco,354,"Working with the changes from #4273 made me realize that we lack user insights. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4310
https://github.com/sofa-framework/sofa/pull/4310:619,Testability,test,test,619,"Working with the changes from #4273 made me realize that we lack user insights. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4310
https://github.com/sofa-framework/sofa/pull/4310:668,Testability,test,test,668,"Working with the changes from #4273 made me realize that we lack user insights. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4310
https://github.com/sofa-framework/sofa/pull/4312:703,Availability,failure,failures,703,"Sofa.Gui is needed for mouse interactors and was implicitly linked through Sofa.GUI.Qt . Add it by default so SofaCUDA can be compiled even if Qt is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4312
https://github.com/sofa-framework/sofa/pull/4312:752,Availability,failure,failures,752,"Sofa.Gui is needed for mouse interactors and was implicitly linked through Sofa.GUI.Qt . Add it by default so SofaCUDA can be compiled even if Qt is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4312
https://github.com/sofa-framework/sofa/pull/4312:322,Security,Certificate,Certificate,322,"Sofa.Gui is needed for mouse interactors and was implicitly linked through Sofa.GUI.Qt . Add it by default so SofaCUDA can be compiled even if Qt is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4312
https://github.com/sofa-framework/sofa/pull/4312:433,Security,certificate,certificate-of-origin-dco,433,"Sofa.Gui is needed for mouse interactors and was implicitly linked through Sofa.GUI.Qt . Add it by default so SofaCUDA can be compiled even if Qt is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4312
https://github.com/sofa-framework/sofa/pull/4312:698,Testability,test,test,698,"Sofa.Gui is needed for mouse interactors and was implicitly linked through Sofa.GUI.Qt . Add it by default so SofaCUDA can be compiled even if Qt is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4312
https://github.com/sofa-framework/sofa/pull/4312:747,Testability,test,test,747,"Sofa.Gui is needed for mouse interactors and was implicitly linked through Sofa.GUI.Qt . Add it by default so SofaCUDA can be compiled even if Qt is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4312
https://github.com/sofa-framework/sofa/pull/4314:907,Availability,failure,failures,907,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314
https://github.com/sofa-framework/sofa/pull/4314:956,Availability,failure,failures,956,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314
https://github.com/sofa-framework/sofa/pull/4314:88,Modifiability,inherit,inherited,88,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314
https://github.com/sofa-framework/sofa/pull/4314:325,Performance,perform,performance,325,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314
https://github.com/sofa-framework/sofa/pull/4314:526,Security,Certificate,Certificate,526,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314
https://github.com/sofa-framework/sofa/pull/4314:637,Security,certificate,certificate-of-origin-dco,637,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314
https://github.com/sofa-framework/sofa/pull/4314:36,Testability,log,logical,36,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314
https://github.com/sofa-framework/sofa/pull/4314:269,Testability,Test,Tested,269,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314
https://github.com/sofa-framework/sofa/pull/4314:902,Testability,test,test,902,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314
https://github.com/sofa-framework/sofa/pull/4314:951,Testability,test,test,951,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314
https://github.com/sofa-framework/sofa/pull/4316:766,Availability,failure,failures,766,"Add option in ParticleSource to add random values in the particles generation.; Remove this option in the default scenes for the CI. [ci-depends-on https://github.com/https://github.com/sofa-framework/Regression/pull/58]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4316
https://github.com/sofa-framework/sofa/pull/4316:815,Availability,failure,failures,815,"Add option in ParticleSource to add random values in the particles generation.; Remove this option in the default scenes for the CI. [ci-depends-on https://github.com/https://github.com/sofa-framework/Regression/pull/58]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4316
https://github.com/sofa-framework/sofa/pull/4316:137,Integrability,depend,depends-on,137,"Add option in ParticleSource to add random values in the particles generation.; Remove this option in the default scenes for the CI. [ci-depends-on https://github.com/https://github.com/sofa-framework/Regression/pull/58]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4316
https://github.com/sofa-framework/sofa/pull/4316:385,Security,Certificate,Certificate,385,"Add option in ParticleSource to add random values in the particles generation.; Remove this option in the default scenes for the CI. [ci-depends-on https://github.com/https://github.com/sofa-framework/Regression/pull/58]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4316
https://github.com/sofa-framework/sofa/pull/4316:496,Security,certificate,certificate-of-origin-dco,496,"Add option in ParticleSource to add random values in the particles generation.; Remove this option in the default scenes for the CI. [ci-depends-on https://github.com/https://github.com/sofa-framework/Regression/pull/58]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4316
https://github.com/sofa-framework/sofa/pull/4316:761,Testability,test,test,761,"Add option in ParticleSource to add random values in the particles generation.; Remove this option in the default scenes for the CI. [ci-depends-on https://github.com/https://github.com/sofa-framework/Regression/pull/58]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4316
https://github.com/sofa-framework/sofa/pull/4316:810,Testability,test,test,810,"Add option in ParticleSource to add random values in the particles generation.; Remove this option in the default scenes for the CI. [ci-depends-on https://github.com/https://github.com/sofa-framework/Regression/pull/58]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4316
https://github.com/sofa-framework/sofa/pull/4317:579,Availability,failure,failures,579,"in case both mstates are the same. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4317
https://github.com/sofa-framework/sofa/pull/4317:628,Availability,failure,failures,628,"in case both mstates are the same. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4317
https://github.com/sofa-framework/sofa/pull/4317:198,Security,Certificate,Certificate,198,"in case both mstates are the same. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4317
https://github.com/sofa-framework/sofa/pull/4317:309,Security,certificate,certificate-of-origin-dco,309,"in case both mstates are the same. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4317
https://github.com/sofa-framework/sofa/pull/4317:574,Testability,test,test,574,"in case both mstates are the same. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4317
https://github.com/sofa-framework/sofa/pull/4317:623,Testability,test,test,623,"in case both mstates are the same. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4317
https://github.com/sofa-framework/sofa/issues/4318:100,Deployability,patch,patch,100,"Hi everyone!; I'm trying to develop a nodule detection exercise on SOFA v22.12. To do this I made a patch of skin: the behavior model is a box with a tetrahedral internal structure, the collision model is generated by making a topological mapping from those tetrahedra to triangles, and finally the visual model is defined as an identity mapping from the collision model. I want to create a sphere inside with a different stiffness's value so that a surgeon can feel the harder sphere inside the skin. The problem is that, although I feel the haptic feedback of both the skin and the sphere, it is very difficult to perceive the transition from the skin to the sphere, and it is impossible to perceive the size of the sphere. What can I do? Is there a way to manage the interface between two objects with different properties?. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4318
https://github.com/sofa-framework/sofa/issues/4318:770,Integrability,interface,interface,770,"Hi everyone!; I'm trying to develop a nodule detection exercise on SOFA v22.12. To do this I made a patch of skin: the behavior model is a box with a tetrahedral internal structure, the collision model is generated by making a topological mapping from those tetrahedra to triangles, and finally the visual model is defined as an identity mapping from the collision model. I want to create a sphere inside with a different stiffness's value so that a surgeon can feel the harder sphere inside the skin. The problem is that, although I feel the haptic feedback of both the skin and the sphere, it is very difficult to perceive the transition from the skin to the sphere, and it is impossible to perceive the size of the sphere. What can I do? Is there a way to manage the interface between two objects with different properties?. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4318
https://github.com/sofa-framework/sofa/issues/4318:45,Safety,detect,detection,45,"Hi everyone!; I'm trying to develop a nodule detection exercise on SOFA v22.12. To do this I made a patch of skin: the behavior model is a box with a tetrahedral internal structure, the collision model is generated by making a topological mapping from those tetrahedra to triangles, and finally the visual model is defined as an identity mapping from the collision model. I want to create a sphere inside with a different stiffness's value so that a surgeon can feel the harder sphere inside the skin. The problem is that, although I feel the haptic feedback of both the skin and the sphere, it is very difficult to perceive the transition from the skin to the sphere, and it is impossible to perceive the size of the sphere. What can I do? Is there a way to manage the interface between two objects with different properties?. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4318
https://github.com/sofa-framework/sofa/issues/4318:550,Usability,feedback,feedback,550,"Hi everyone!; I'm trying to develop a nodule detection exercise on SOFA v22.12. To do this I made a patch of skin: the behavior model is a box with a tetrahedral internal structure, the collision model is generated by making a topological mapping from those tetrahedra to triangles, and finally the visual model is defined as an identity mapping from the collision model. I want to create a sphere inside with a different stiffness's value so that a surgeon can feel the harder sphere inside the skin. The problem is that, although I feel the haptic feedback of both the skin and the sphere, it is very difficult to perceive the transition from the skin to the sphere, and it is impossible to perceive the size of the sphere. What can I do? Is there a way to manage the interface between two objects with different properties?. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4318
https://github.com/sofa-framework/sofa/pull/4319:837,Availability,failure,failures,837,"The method `umul24` disappeared fromt eh header `crt/device_functions.hpp` in cuda 12. It originally was just a wrapper for a call to `__umul24`, therefore the change. . This wrapper disappearing might indicate a deprecation, so this solution will maybe not be one with the next cuda release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4319
https://github.com/sofa-framework/sofa/pull/4319:886,Availability,failure,failures,886,"The method `umul24` disappeared fromt eh header `crt/device_functions.hpp` in cuda 12. It originally was just a wrapper for a call to `__umul24`, therefore the change. . This wrapper disappearing might indicate a deprecation, so this solution will maybe not be one with the next cuda release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4319
https://github.com/sofa-framework/sofa/pull/4319:284,Deployability,release,release,284,"The method `umul24` disappeared fromt eh header `crt/device_functions.hpp` in cuda 12. It originally was just a wrapper for a call to `__umul24`, therefore the change. . This wrapper disappearing might indicate a deprecation, so this solution will maybe not be one with the next cuda release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4319
https://github.com/sofa-framework/sofa/pull/4319:112,Integrability,wrap,wrapper,112,"The method `umul24` disappeared fromt eh header `crt/device_functions.hpp` in cuda 12. It originally was just a wrapper for a call to `__umul24`, therefore the change. . This wrapper disappearing might indicate a deprecation, so this solution will maybe not be one with the next cuda release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4319
https://github.com/sofa-framework/sofa/pull/4319:175,Integrability,wrap,wrapper,175,"The method `umul24` disappeared fromt eh header `crt/device_functions.hpp` in cuda 12. It originally was just a wrapper for a call to `__umul24`, therefore the change. . This wrapper disappearing might indicate a deprecation, so this solution will maybe not be one with the next cuda release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4319
https://github.com/sofa-framework/sofa/pull/4319:456,Security,Certificate,Certificate,456,"The method `umul24` disappeared fromt eh header `crt/device_functions.hpp` in cuda 12. It originally was just a wrapper for a call to `__umul24`, therefore the change. . This wrapper disappearing might indicate a deprecation, so this solution will maybe not be one with the next cuda release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4319
https://github.com/sofa-framework/sofa/pull/4319:567,Security,certificate,certificate-of-origin-dco,567,"The method `umul24` disappeared fromt eh header `crt/device_functions.hpp` in cuda 12. It originally was just a wrapper for a call to `__umul24`, therefore the change. . This wrapper disappearing might indicate a deprecation, so this solution will maybe not be one with the next cuda release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4319
https://github.com/sofa-framework/sofa/pull/4319:832,Testability,test,test,832,"The method `umul24` disappeared fromt eh header `crt/device_functions.hpp` in cuda 12. It originally was just a wrapper for a call to `__umul24`, therefore the change. . This wrapper disappearing might indicate a deprecation, so this solution will maybe not be one with the next cuda release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4319
https://github.com/sofa-framework/sofa/pull/4319:881,Testability,test,test,881,"The method `umul24` disappeared fromt eh header `crt/device_functions.hpp` in cuda 12. It originally was just a wrapper for a call to `__umul24`, therefore the change. . This wrapper disappearing might indicate a deprecation, so this solution will maybe not be one with the next cuda release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4319
https://github.com/sofa-framework/sofa/pull/4320:831,Availability,failure,failures,831,"Finally decided to remove the warning; `The collection SofaSimulation (/home/fred/sofa/src/current/applications/collections/deprecated/SofaSimulation) does not exist and will be ignored.` at every cmake config step. I guess this collection thingy should be deleted in the future anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4320
https://github.com/sofa-framework/sofa/pull/4320:880,Availability,failure,failures,880,"Finally decided to remove the warning; `The collection SofaSimulation (/home/fred/sofa/src/current/applications/collections/deprecated/SofaSimulation) does not exist and will be ignored.` at every cmake config step. I guess this collection thingy should be deleted in the future anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4320
https://github.com/sofa-framework/sofa/pull/4320:203,Modifiability,config,config,203,"Finally decided to remove the warning; `The collection SofaSimulation (/home/fred/sofa/src/current/applications/collections/deprecated/SofaSimulation) does not exist and will be ignored.` at every cmake config step. I guess this collection thingy should be deleted in the future anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4320
https://github.com/sofa-framework/sofa/pull/4320:450,Security,Certificate,Certificate,450,"Finally decided to remove the warning; `The collection SofaSimulation (/home/fred/sofa/src/current/applications/collections/deprecated/SofaSimulation) does not exist and will be ignored.` at every cmake config step. I guess this collection thingy should be deleted in the future anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4320
https://github.com/sofa-framework/sofa/pull/4320:561,Security,certificate,certificate-of-origin-dco,561,"Finally decided to remove the warning; `The collection SofaSimulation (/home/fred/sofa/src/current/applications/collections/deprecated/SofaSimulation) does not exist and will be ignored.` at every cmake config step. I guess this collection thingy should be deleted in the future anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4320
https://github.com/sofa-framework/sofa/pull/4320:826,Testability,test,test,826,"Finally decided to remove the warning; `The collection SofaSimulation (/home/fred/sofa/src/current/applications/collections/deprecated/SofaSimulation) does not exist and will be ignored.` at every cmake config step. I guess this collection thingy should be deleted in the future anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4320
https://github.com/sofa-framework/sofa/pull/4320:875,Testability,test,test,875,"Finally decided to remove the warning; `The collection SofaSimulation (/home/fred/sofa/src/current/applications/collections/deprecated/SofaSimulation) does not exist and will be ignored.` at every cmake config step. I guess this collection thingy should be deleted in the future anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4320
https://github.com/sofa-framework/sofa/issues/4321:349,Deployability,update,updated,349,"```cmake; find_package(Qt5 COMPONENTS Core QUIET); if (NOT Qt5Core_FOUND); if(CMAKE_VERSION VERSION_GREATER_EQUAL ""3.16""); find_package(Qt6 COMPONENTS Core CoreTools REQUIRED QUIET); if (Qt6Core_FOUND); qt6_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); message(FATAL_ERROR ""Image_gui is not compatible with Qt6 yet."") # to remove once image_gui has been updated; endif(); # else() should never happened as it would already break in Sofa.GUI.Qt; endif(); else(); qt5_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); endif(); ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4321
https://github.com/sofa-framework/sofa/issues/4321:248,Integrability,message,message,248,"```cmake; find_package(Qt5 COMPONENTS Core QUIET); if (NOT Qt5Core_FOUND); if(CMAKE_VERSION VERSION_GREATER_EQUAL ""3.16""); find_package(Qt6 COMPONENTS Core CoreTools REQUIRED QUIET); if (Qt6Core_FOUND); qt6_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); message(FATAL_ERROR ""Image_gui is not compatible with Qt6 yet."") # to remove once image_gui has been updated; endif(); # else() should never happened as it would already break in Sofa.GUI.Qt; endif(); else(); qt5_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); endif(); ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4321
https://github.com/sofa-framework/sofa/pull/4322:639,Availability,failure,failures,639,"Change the default plugins. Make multi-thread compiled by default, and removed cimg default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322
https://github.com/sofa-framework/sofa/pull/4322:688,Availability,failure,failures,688,"Change the default plugins. Make multi-thread compiled by default, and removed cimg default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322
https://github.com/sofa-framework/sofa/pull/4322:19,Modifiability,plugin,plugins,19,"Change the default plugins. Make multi-thread compiled by default, and removed cimg default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322
https://github.com/sofa-framework/sofa/pull/4322:33,Performance,multi-thread,multi-thread,33,"Change the default plugins. Make multi-thread compiled by default, and removed cimg default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322
https://github.com/sofa-framework/sofa/pull/4322:258,Security,Certificate,Certificate,258,"Change the default plugins. Make multi-thread compiled by default, and removed cimg default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322
https://github.com/sofa-framework/sofa/pull/4322:369,Security,certificate,certificate-of-origin-dco,369,"Change the default plugins. Make multi-thread compiled by default, and removed cimg default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322
https://github.com/sofa-framework/sofa/pull/4322:634,Testability,test,test,634,"Change the default plugins. Make multi-thread compiled by default, and removed cimg default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322
https://github.com/sofa-framework/sofa/pull/4322:683,Testability,test,test,683,"Change the default plugins. Make multi-thread compiled by default, and removed cimg default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322
https://github.com/sofa-framework/sofa/issues/4323:9,Testability,test,test,9,"The unit test `ParallelImplementationsRegistry_test` is failing for CGLinearSolver, stating that it has no creator although it is clear that such a component has one.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4323
https://github.com/sofa-framework/sofa/issues/4323:130,Usability,clear,clear,130,"The unit test `ParallelImplementationsRegistry_test` is failing for CGLinearSolver, stating that it has no creator although it is clear that such a component has one.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4323
https://github.com/sofa-framework/sofa/pull/4324:410,Integrability,message,message,410,"Based on; - #4302 . The map `uncreatableComponents` is used both by the factory when the object could not be created and by the alias check. So, cometimes, mif you used an alias of a component that has also been moved, a non sens was displayed. This pr divide this map in two : `uncreatableComponents` and `movedComponents` and only use the `uncreatableComponents` in scene check and also display the original message.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4324
https://github.com/sofa-framework/sofa/pull/4325:891,Availability,failure,failures,891,"Just curious to see any difference with this macro defined. FYI, I get the same perf for few scenes : caduceus, RungeKutta4 and EMBAR_CGLinearSolver.scn.; (SOFA_NO_VMULTIOP is also used for CGLinearSolver<GraphScattered>). Note: the CI is useless on this PR, as this macro as to be defined manually in CXX_FLAGS or added in sofa/config.h header); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4325
https://github.com/sofa-framework/sofa/pull/4325:940,Availability,failure,failures,940,"Just curious to see any difference with this macro defined. FYI, I get the same perf for few scenes : caduceus, RungeKutta4 and EMBAR_CGLinearSolver.scn.; (SOFA_NO_VMULTIOP is also used for CGLinearSolver<GraphScattered>). Note: the CI is useless on this PR, as this macro as to be defined manually in CXX_FLAGS or added in sofa/config.h header); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4325
https://github.com/sofa-framework/sofa/pull/4325:329,Modifiability,config,config,329,"Just curious to see any difference with this macro defined. FYI, I get the same perf for few scenes : caduceus, RungeKutta4 and EMBAR_CGLinearSolver.scn.; (SOFA_NO_VMULTIOP is also used for CGLinearSolver<GraphScattered>). Note: the CI is useless on this PR, as this macro as to be defined manually in CXX_FLAGS or added in sofa/config.h header); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4325
https://github.com/sofa-framework/sofa/pull/4325:510,Security,Certificate,Certificate,510,"Just curious to see any difference with this macro defined. FYI, I get the same perf for few scenes : caduceus, RungeKutta4 and EMBAR_CGLinearSolver.scn.; (SOFA_NO_VMULTIOP is also used for CGLinearSolver<GraphScattered>). Note: the CI is useless on this PR, as this macro as to be defined manually in CXX_FLAGS or added in sofa/config.h header); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4325
https://github.com/sofa-framework/sofa/pull/4325:621,Security,certificate,certificate-of-origin-dco,621,"Just curious to see any difference with this macro defined. FYI, I get the same perf for few scenes : caduceus, RungeKutta4 and EMBAR_CGLinearSolver.scn.; (SOFA_NO_VMULTIOP is also used for CGLinearSolver<GraphScattered>). Note: the CI is useless on this PR, as this macro as to be defined manually in CXX_FLAGS or added in sofa/config.h header); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4325
https://github.com/sofa-framework/sofa/pull/4325:886,Testability,test,test,886,"Just curious to see any difference with this macro defined. FYI, I get the same perf for few scenes : caduceus, RungeKutta4 and EMBAR_CGLinearSolver.scn.; (SOFA_NO_VMULTIOP is also used for CGLinearSolver<GraphScattered>). Note: the CI is useless on this PR, as this macro as to be defined manually in CXX_FLAGS or added in sofa/config.h header); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4325
https://github.com/sofa-framework/sofa/pull/4325:935,Testability,test,test,935,"Just curious to see any difference with this macro defined. FYI, I get the same perf for few scenes : caduceus, RungeKutta4 and EMBAR_CGLinearSolver.scn.; (SOFA_NO_VMULTIOP is also used for CGLinearSolver<GraphScattered>). Note: the CI is useless on this PR, as this macro as to be defined manually in CXX_FLAGS or added in sofa/config.h header); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4325
https://github.com/sofa-framework/sofa/pull/4326:620,Availability,failure,failures,620,"Fix the FindAssimp.cmake by changing variable set by assimp to new names. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4326
https://github.com/sofa-framework/sofa/pull/4326:669,Availability,failure,failures,669,"Fix the FindAssimp.cmake by changing variable set by assimp to new names. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4326
https://github.com/sofa-framework/sofa/pull/4326:37,Modifiability,variab,variable,37,"Fix the FindAssimp.cmake by changing variable set by assimp to new names. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4326
https://github.com/sofa-framework/sofa/pull/4326:239,Security,Certificate,Certificate,239,"Fix the FindAssimp.cmake by changing variable set by assimp to new names. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4326
https://github.com/sofa-framework/sofa/pull/4326:350,Security,certificate,certificate-of-origin-dco,350,"Fix the FindAssimp.cmake by changing variable set by assimp to new names. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4326
https://github.com/sofa-framework/sofa/pull/4326:615,Testability,test,test,615,"Fix the FindAssimp.cmake by changing variable set by assimp to new names. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4326
https://github.com/sofa-framework/sofa/pull/4326:664,Testability,test,test,664,"Fix the FindAssimp.cmake by changing variable set by assimp to new names. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4326
https://github.com/sofa-framework/sofa/pull/4327:1016,Availability,failure,failures,1016,"This PR deprecates LocalStorage and its (only) implementation CactusLocalStorage.; It seems it was planned for an eventual parallelization of the visitor traversal. Since then, it is not really relevant anymore (link, etc). Present since the beginning (16 years ago!) but it seems it was never used,; as the only implementation of LocalStorage (CactusLocalStorage) is never instanced anywhere. IMO we could even directly remove it as it is 99,99...9% sure nobody uses it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4327
https://github.com/sofa-framework/sofa/pull/4327:1065,Availability,failure,failures,1065,"This PR deprecates LocalStorage and its (only) implementation CactusLocalStorage.; It seems it was planned for an eventual parallelization of the visitor traversal. Since then, it is not really relevant anymore (link, etc). Present since the beginning (16 years ago!) but it seems it was never used,; as the only implementation of LocalStorage (CactusLocalStorage) is never instanced anywhere. IMO we could even directly remove it as it is 99,99...9% sure nobody uses it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4327
https://github.com/sofa-framework/sofa/pull/4327:635,Security,Certificate,Certificate,635,"This PR deprecates LocalStorage and its (only) implementation CactusLocalStorage.; It seems it was planned for an eventual parallelization of the visitor traversal. Since then, it is not really relevant anymore (link, etc). Present since the beginning (16 years ago!) but it seems it was never used,; as the only implementation of LocalStorage (CactusLocalStorage) is never instanced anywhere. IMO we could even directly remove it as it is 99,99...9% sure nobody uses it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4327
https://github.com/sofa-framework/sofa/pull/4327:746,Security,certificate,certificate-of-origin-dco,746,"This PR deprecates LocalStorage and its (only) implementation CactusLocalStorage.; It seems it was planned for an eventual parallelization of the visitor traversal. Since then, it is not really relevant anymore (link, etc). Present since the beginning (16 years ago!) but it seems it was never used,; as the only implementation of LocalStorage (CactusLocalStorage) is never instanced anywhere. IMO we could even directly remove it as it is 99,99...9% sure nobody uses it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4327
https://github.com/sofa-framework/sofa/pull/4327:1011,Testability,test,test,1011,"This PR deprecates LocalStorage and its (only) implementation CactusLocalStorage.; It seems it was planned for an eventual parallelization of the visitor traversal. Since then, it is not really relevant anymore (link, etc). Present since the beginning (16 years ago!) but it seems it was never used,; as the only implementation of LocalStorage (CactusLocalStorage) is never instanced anywhere. IMO we could even directly remove it as it is 99,99...9% sure nobody uses it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4327
https://github.com/sofa-framework/sofa/pull/4327:1060,Testability,test,test,1060,"This PR deprecates LocalStorage and its (only) implementation CactusLocalStorage.; It seems it was planned for an eventual parallelization of the visitor traversal. Since then, it is not really relevant anymore (link, etc). Present since the beginning (16 years ago!) but it seems it was never used,; as the only implementation of LocalStorage (CactusLocalStorage) is never instanced anywhere. IMO we could even directly remove it as it is 99,99...9% sure nobody uses it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4327
https://github.com/sofa-framework/sofa/pull/4328:828,Availability,failure,failures,828,"First task of removing(deprecating) the usage of nodeData (noticed in #4327). Those two visitors are using the pointer nodeData for local computations so It was changed to local (weak) stored pointers. ; Not fan of pointers but it does not break API. (a SReal to count is weird btw). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4328
https://github.com/sofa-framework/sofa/pull/4328:877,Availability,failure,failures,877,"First task of removing(deprecating) the usage of nodeData (noticed in #4327). Those two visitors are using the pointer nodeData for local computations so It was changed to local (weak) stored pointers. ; Not fan of pointers but it does not break API. (a SReal to count is weird btw). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4328
https://github.com/sofa-framework/sofa/pull/4328:447,Security,Certificate,Certificate,447,"First task of removing(deprecating) the usage of nodeData (noticed in #4327). Those two visitors are using the pointer nodeData for local computations so It was changed to local (weak) stored pointers. ; Not fan of pointers but it does not break API. (a SReal to count is weird btw). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4328
https://github.com/sofa-framework/sofa/pull/4328:558,Security,certificate,certificate-of-origin-dco,558,"First task of removing(deprecating) the usage of nodeData (noticed in #4327). Those two visitors are using the pointer nodeData for local computations so It was changed to local (weak) stored pointers. ; Not fan of pointers but it does not break API. (a SReal to count is weird btw). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4328
https://github.com/sofa-framework/sofa/pull/4328:823,Testability,test,test,823,"First task of removing(deprecating) the usage of nodeData (noticed in #4327). Those two visitors are using the pointer nodeData for local computations so It was changed to local (weak) stored pointers. ; Not fan of pointers but it does not break API. (a SReal to count is weird btw). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4328
https://github.com/sofa-framework/sofa/pull/4328:872,Testability,test,test,872,"First task of removing(deprecating) the usage of nodeData (noticed in #4327). Those two visitors are using the pointer nodeData for local computations so It was changed to local (weak) stored pointers. ; Not fan of pointers but it does not break API. (a SReal to count is weird btw). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4328
https://github.com/sofa-framework/sofa/issues/4329:179,Availability,down,download,179,"### Problem. **Description**; When i build sofa 22.12 in window10, i faced a issue in sofa.helper; (cmake configure and generate success, default settings, no change option after download). 4>FileSystem.cpp; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2588,74): error C2061: syntax error : identifier “byte”; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2602,62): error C2143: syntax error : missing ',' before '*'. What happened? it's seems that a contain error.; Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329
https://github.com/sofa-framework/sofa/issues/4329:272,Availability,error,error,272,"### Problem. **Description**; When i build sofa 22.12 in window10, i faced a issue in sofa.helper; (cmake configure and generate success, default settings, no change option after download). 4>FileSystem.cpp; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2588,74): error C2061: syntax error : identifier “byte”; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2602,62): error C2143: syntax error : missing ',' before '*'. What happened? it's seems that a contain error.; Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329
https://github.com/sofa-framework/sofa/issues/4329:292,Availability,error,error,292,"### Problem. **Description**; When i build sofa 22.12 in window10, i faced a issue in sofa.helper; (cmake configure and generate success, default settings, no change option after download). 4>FileSystem.cpp; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2588,74): error C2061: syntax error : identifier “byte”; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2602,62): error C2143: syntax error : missing ',' before '*'. What happened? it's seems that a contain error.; Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329
https://github.com/sofa-framework/sofa/issues/4329:383,Availability,error,error,383,"### Problem. **Description**; When i build sofa 22.12 in window10, i faced a issue in sofa.helper; (cmake configure and generate success, default settings, no change option after download). 4>FileSystem.cpp; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2588,74): error C2061: syntax error : identifier “byte”; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2602,62): error C2143: syntax error : missing ',' before '*'. What happened? it's seems that a contain error.; Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329
https://github.com/sofa-framework/sofa/issues/4329:403,Availability,error,error,403,"### Problem. **Description**; When i build sofa 22.12 in window10, i faced a issue in sofa.helper; (cmake configure and generate success, default settings, no change option after download). 4>FileSystem.cpp; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2588,74): error C2061: syntax error : identifier “byte”; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2602,62): error C2143: syntax error : missing ',' before '*'. What happened? it's seems that a contain error.; Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329
https://github.com/sofa-framework/sofa/issues/4329:476,Availability,error,error,476,"### Problem. **Description**; When i build sofa 22.12 in window10, i faced a issue in sofa.helper; (cmake configure and generate success, default settings, no change option after download). 4>FileSystem.cpp; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2588,74): error C2061: syntax error : identifier “byte”; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2602,62): error C2143: syntax error : missing ',' before '*'. What happened? it's seems that a contain error.; Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329
https://github.com/sofa-framework/sofa/issues/4329:106,Modifiability,config,configure,106,"### Problem. **Description**; When i build sofa 22.12 in window10, i faced a issue in sofa.helper; (cmake configure and generate success, default settings, no change option after download). 4>FileSystem.cpp; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2588,74): error C2061: syntax error : identifier “byte”; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2602,62): error C2143: syntax error : missing ',' before '*'. What happened? it's seems that a contain error.; Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329
https://github.com/sofa-framework/sofa/pull/4330:556,Availability,failure,failures,556,"Fix #4321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4330
https://github.com/sofa-framework/sofa/pull/4330:605,Availability,failure,failures,605,"Fix #4321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4330
https://github.com/sofa-framework/sofa/pull/4330:175,Security,Certificate,Certificate,175,"Fix #4321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4330
https://github.com/sofa-framework/sofa/pull/4330:286,Security,certificate,certificate-of-origin-dco,286,"Fix #4321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4330
https://github.com/sofa-framework/sofa/pull/4330:551,Testability,test,test,551,"Fix #4321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4330
https://github.com/sofa-framework/sofa/pull/4330:600,Testability,test,test,600,"Fix #4321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4330
https://github.com/sofa-framework/sofa/issues/4331:157,Performance,perform,performance,157,"For large displacements method:; initLarge:; ""mstate->read"" should return a reference instead of coord vector, this can significantly improve initialization performance, especially when the mesh is relatively large. I suggest checking the similar issues again.; applyStiffnessLarge:; TriangleInformation::rotation and its inverse right multiplication coord can be optimized，just like how we did in TriangleFEMUtils.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4331
https://github.com/sofa-framework/sofa/issues/4331:364,Performance,optimiz,optimized,364,"For large displacements method:; initLarge:; ""mstate->read"" should return a reference instead of coord vector, this can significantly improve initialization performance, especially when the mesh is relatively large. I suggest checking the similar issues again.; applyStiffnessLarge:; TriangleInformation::rotation and its inverse right multiplication coord can be optimized，just like how we did in TriangleFEMUtils.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4331
https://github.com/sofa-framework/sofa/pull/4332:798,Availability,failure,failures,798,"It has been noticed in https://github.com/sofa-framework/sofa/issues/4331. As it appears in the initialization, it won't affect the performances during the simulation. I took the opportunity to remove the useless collision pipeline in the example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4332
https://github.com/sofa-framework/sofa/pull/4332:847,Availability,failure,failures,847,"It has been noticed in https://github.com/sofa-framework/sofa/issues/4331. As it appears in the initialization, it won't affect the performances during the simulation. I took the opportunity to remove the useless collision pipeline in the example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4332
https://github.com/sofa-framework/sofa/pull/4332:223,Deployability,pipeline,pipeline,223,"It has been noticed in https://github.com/sofa-framework/sofa/issues/4331. As it appears in the initialization, it won't affect the performances during the simulation. I took the opportunity to remove the useless collision pipeline in the example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4332
https://github.com/sofa-framework/sofa/pull/4332:132,Performance,perform,performances,132,"It has been noticed in https://github.com/sofa-framework/sofa/issues/4331. As it appears in the initialization, it won't affect the performances during the simulation. I took the opportunity to remove the useless collision pipeline in the example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4332
https://github.com/sofa-framework/sofa/pull/4332:417,Security,Certificate,Certificate,417,"It has been noticed in https://github.com/sofa-framework/sofa/issues/4331. As it appears in the initialization, it won't affect the performances during the simulation. I took the opportunity to remove the useless collision pipeline in the example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4332
https://github.com/sofa-framework/sofa/pull/4332:528,Security,certificate,certificate-of-origin-dco,528,"It has been noticed in https://github.com/sofa-framework/sofa/issues/4331. As it appears in the initialization, it won't affect the performances during the simulation. I took the opportunity to remove the useless collision pipeline in the example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4332
https://github.com/sofa-framework/sofa/pull/4332:793,Testability,test,test,793,"It has been noticed in https://github.com/sofa-framework/sofa/issues/4331. As it appears in the initialization, it won't affect the performances during the simulation. I took the opportunity to remove the useless collision pipeline in the example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4332
https://github.com/sofa-framework/sofa/pull/4332:842,Testability,test,test,842,"It has been noticed in https://github.com/sofa-framework/sofa/issues/4331. As it appears in the initialization, it won't affect the performances during the simulation. I took the opportunity to remove the useless collision pipeline in the example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4332
https://github.com/sofa-framework/sofa/pull/4333:2057,Availability,failure,failures,2057,"::make_pair(vel.id(),1.0)); // <-- What does a pair represent? What does this list represent?; ops[0].second.push_back(std::make_pair(dx.id(),dt));; // pos += vel * dt; ops[1].first = pos2;; ops[1].second.push_back(std::make_pair(pos.id(),1.0));; ops[1].second.push_back(std::make_pair(vel2.id(),dt));; ```. to . ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2,; ScaledConstMultiVecId{vel.id(), 1._sreal} + ScaledConstMultiVecId{dx.id(), dt}};; // ok, now we know that the scalar and the MultiVecId are multiplied together.; // there is also an operator +, suggesting that the whole operation is a linear combination. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```. Note that in C++20, we can write something like:; ```C++; ops[1] = VMultiOpEntry{ .outputId = pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```; which is IMO clearer. **NOT IMPLEMENTED**:; I wanted to go even further (but there are problems of type conversion, so it's not yet ready):. ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2, vel.id() + dx.id() * dt};. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2, pos.id() + vel2.id() * dt};; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4333
https://github.com/sofa-framework/sofa/pull/4333:2106,Availability,failure,failures,2106,"::make_pair(vel.id(),1.0)); // <-- What does a pair represent? What does this list represent?; ops[0].second.push_back(std::make_pair(dx.id(),dt));; // pos += vel * dt; ops[1].first = pos2;; ops[1].second.push_back(std::make_pair(pos.id(),1.0));; ops[1].second.push_back(std::make_pair(vel2.id(),dt));; ```. to . ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2,; ScaledConstMultiVecId{vel.id(), 1._sreal} + ScaledConstMultiVecId{dx.id(), dt}};; // ok, now we know that the scalar and the MultiVecId are multiplied together.; // there is also an operator +, suggesting that the whole operation is a linear combination. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```. Note that in C++20, we can write something like:; ```C++; ops[1] = VMultiOpEntry{ .outputId = pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```; which is IMO clearer. **NOT IMPLEMENTED**:; I wanted to go even further (but there are problems of type conversion, so it's not yet ready):. ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2, vel.id() + dx.id() * dt};. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2, pos.id() + vel2.id() * dt};; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4333
https://github.com/sofa-framework/sofa/pull/4333:1676,Security,Certificate,Certificate,1676,"::make_pair(vel.id(),1.0)); // <-- What does a pair represent? What does this list represent?; ops[0].second.push_back(std::make_pair(dx.id(),dt));; // pos += vel * dt; ops[1].first = pos2;; ops[1].second.push_back(std::make_pair(pos.id(),1.0));; ops[1].second.push_back(std::make_pair(vel2.id(),dt));; ```. to . ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2,; ScaledConstMultiVecId{vel.id(), 1._sreal} + ScaledConstMultiVecId{dx.id(), dt}};; // ok, now we know that the scalar and the MultiVecId are multiplied together.; // there is also an operator +, suggesting that the whole operation is a linear combination. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```. Note that in C++20, we can write something like:; ```C++; ops[1] = VMultiOpEntry{ .outputId = pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```; which is IMO clearer. **NOT IMPLEMENTED**:; I wanted to go even further (but there are problems of type conversion, so it's not yet ready):. ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2, vel.id() + dx.id() * dt};. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2, pos.id() + vel2.id() * dt};; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4333
https://github.com/sofa-framework/sofa/pull/4333:1787,Security,certificate,certificate-of-origin-dco,1787,"::make_pair(vel.id(),1.0)); // <-- What does a pair represent? What does this list represent?; ops[0].second.push_back(std::make_pair(dx.id(),dt));; // pos += vel * dt; ops[1].first = pos2;; ops[1].second.push_back(std::make_pair(pos.id(),1.0));; ops[1].second.push_back(std::make_pair(vel2.id(),dt));; ```. to . ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2,; ScaledConstMultiVecId{vel.id(), 1._sreal} + ScaledConstMultiVecId{dx.id(), dt}};; // ok, now we know that the scalar and the MultiVecId are multiplied together.; // there is also an operator +, suggesting that the whole operation is a linear combination. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```. Note that in C++20, we can write something like:; ```C++; ops[1] = VMultiOpEntry{ .outputId = pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```; which is IMO clearer. **NOT IMPLEMENTED**:; I wanted to go even further (but there are problems of type conversion, so it's not yet ready):. ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2, vel.id() + dx.id() * dt};. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2, pos.id() + vel2.id() * dt};; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4333
https://github.com/sofa-framework/sofa/pull/4333:2052,Testability,test,test,2052,"::make_pair(vel.id(),1.0)); // <-- What does a pair represent? What does this list represent?; ops[0].second.push_back(std::make_pair(dx.id(),dt));; // pos += vel * dt; ops[1].first = pos2;; ops[1].second.push_back(std::make_pair(pos.id(),1.0));; ops[1].second.push_back(std::make_pair(vel2.id(),dt));; ```. to . ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2,; ScaledConstMultiVecId{vel.id(), 1._sreal} + ScaledConstMultiVecId{dx.id(), dt}};; // ok, now we know that the scalar and the MultiVecId are multiplied together.; // there is also an operator +, suggesting that the whole operation is a linear combination. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```. Note that in C++20, we can write something like:; ```C++; ops[1] = VMultiOpEntry{ .outputId = pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```; which is IMO clearer. **NOT IMPLEMENTED**:; I wanted to go even further (but there are problems of type conversion, so it's not yet ready):. ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2, vel.id() + dx.id() * dt};. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2, pos.id() + vel2.id() * dt};; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4333
https://github.com/sofa-framework/sofa/pull/4333:2101,Testability,test,test,2101,"::make_pair(vel.id(),1.0)); // <-- What does a pair represent? What does this list represent?; ops[0].second.push_back(std::make_pair(dx.id(),dt));; // pos += vel * dt; ops[1].first = pos2;; ops[1].second.push_back(std::make_pair(pos.id(),1.0));; ops[1].second.push_back(std::make_pair(vel2.id(),dt));; ```. to . ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2,; ScaledConstMultiVecId{vel.id(), 1._sreal} + ScaledConstMultiVecId{dx.id(), dt}};; // ok, now we know that the scalar and the MultiVecId are multiplied together.; // there is also an operator +, suggesting that the whole operation is a linear combination. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```. Note that in C++20, we can write something like:; ```C++; ops[1] = VMultiOpEntry{ .outputId = pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```; which is IMO clearer. **NOT IMPLEMENTED**:; I wanted to go even further (but there are problems of type conversion, so it's not yet ready):. ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2, vel.id() + dx.id() * dt};. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2, pos.id() + vel2.id() * dt};; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4333
https://github.com/sofa-framework/sofa/pull/4333:15,Usability,simpl,simplify,15,"My goal was to simplify the writing of vector operations in ODE solvers. Before. ```C++; VMultiOp ops;; ops.resize(2);; // vel += dx * dt; ops[0].first = vel2; // <-- What is first???; ops[0].second.push_back(std::make_pair(vel.id(),1.0)); // <-- What does a pair represent? What does this list represent?; ops[0].second.push_back(std::make_pair(dx.id(),dt));; // pos += vel * dt; ops[1].first = pos2;; ops[1].second.push_back(std::make_pair(pos.id(),1.0));; ops[1].second.push_back(std::make_pair(vel2.id(),dt));; ```. to . ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2,; ScaledConstMultiVecId{vel.id(), 1._sreal} + ScaledConstMultiVecId{dx.id(), dt}};; // ok, now we know that the scalar and the MultiVecId are multiplied together.; // there is also an operator +, suggesting that the whole operation is a linear combination. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```. Note that in C++20, we can write something like:; ```C++; ops[1] = VMultiOpEntry{ .outputId = pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```; which is IMO clearer. **NOT IMPLEMENTED**:; I wanted to go even further (but there are problems of type conversion, so it's not yet ready):. ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2, vel.id() + dx.id() * dt};. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2, pos.id() + vel2.id() * dt};; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not gener",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4333
https://github.com/sofa-framework/sofa/pull/4333:1199,Usability,clear,clearer,1199,"s[0].second.push_back(std::make_pair(vel.id(),1.0)); // <-- What does a pair represent? What does this list represent?; ops[0].second.push_back(std::make_pair(dx.id(),dt));; // pos += vel * dt; ops[1].first = pos2;; ops[1].second.push_back(std::make_pair(pos.id(),1.0));; ops[1].second.push_back(std::make_pair(vel2.id(),dt));; ```. to . ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2,; ScaledConstMultiVecId{vel.id(), 1._sreal} + ScaledConstMultiVecId{dx.id(), dt}};; // ok, now we know that the scalar and the MultiVecId are multiplied together.; // there is also an operator +, suggesting that the whole operation is a linear combination. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```. Note that in C++20, we can write something like:; ```C++; ops[1] = VMultiOpEntry{ .outputId = pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```; which is IMO clearer. **NOT IMPLEMENTED**:; I wanted to go even further (but there are problems of type conversion, so it's not yet ready):. ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2, vel.id() + dx.id() * dt};. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2, pos.id() + vel2.id() * dt};; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4333
https://github.com/sofa-framework/sofa/pull/4334:1346,Availability,failure,failures,1346,"This could be a step toward the removal of some visitors. The goal is to write something like the following instead of going through visitors:. ```C++; //simple counter of BaseMechanicalState; std::size_t counter {};; for (const auto* state : simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMechanicalState>(root.get())); {; ++counter;; }. // The following replaces the visitor MechanicalGetNonDiagonalMassesCountVisitor; const auto massTraversal = simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMass>(this->getContext());; const std::size_t nbNonDiagonalMasses = std::count_if(massTraversal.begin(), massTraversal.end(), ; [](auto* mass){ return !mass->isDiagonal();});; //note that these lines don't compile yet because this->getContext() does not give a Node*; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4334
https://github.com/sofa-framework/sofa/pull/4334:1395,Availability,failure,failures,1395,"This could be a step toward the removal of some visitors. The goal is to write something like the following instead of going through visitors:. ```C++; //simple counter of BaseMechanicalState; std::size_t counter {};; for (const auto* state : simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMechanicalState>(root.get())); {; ++counter;; }. // The following replaces the visitor MechanicalGetNonDiagonalMassesCountVisitor; const auto massTraversal = simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMass>(this->getContext());; const std::size_t nbNonDiagonalMasses = std::count_if(massTraversal.begin(), massTraversal.end(), ; [](auto* mass){ return !mass->isDiagonal();});; //note that these lines don't compile yet because this->getContext() does not give a Node*; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4334
https://github.com/sofa-framework/sofa/pull/4334:965,Security,Certificate,Certificate,965,"This could be a step toward the removal of some visitors. The goal is to write something like the following instead of going through visitors:. ```C++; //simple counter of BaseMechanicalState; std::size_t counter {};; for (const auto* state : simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMechanicalState>(root.get())); {; ++counter;; }. // The following replaces the visitor MechanicalGetNonDiagonalMassesCountVisitor; const auto massTraversal = simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMass>(this->getContext());; const std::size_t nbNonDiagonalMasses = std::count_if(massTraversal.begin(), massTraversal.end(), ; [](auto* mass){ return !mass->isDiagonal();});; //note that these lines don't compile yet because this->getContext() does not give a Node*; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4334
https://github.com/sofa-framework/sofa/pull/4334:1076,Security,certificate,certificate-of-origin-dco,1076,"This could be a step toward the removal of some visitors. The goal is to write something like the following instead of going through visitors:. ```C++; //simple counter of BaseMechanicalState; std::size_t counter {};; for (const auto* state : simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMechanicalState>(root.get())); {; ++counter;; }. // The following replaces the visitor MechanicalGetNonDiagonalMassesCountVisitor; const auto massTraversal = simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMass>(this->getContext());; const std::size_t nbNonDiagonalMasses = std::count_if(massTraversal.begin(), massTraversal.end(), ; [](auto* mass){ return !mass->isDiagonal();});; //note that these lines don't compile yet because this->getContext() does not give a Node*; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4334
https://github.com/sofa-framework/sofa/pull/4334:1341,Testability,test,test,1341,"This could be a step toward the removal of some visitors. The goal is to write something like the following instead of going through visitors:. ```C++; //simple counter of BaseMechanicalState; std::size_t counter {};; for (const auto* state : simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMechanicalState>(root.get())); {; ++counter;; }. // The following replaces the visitor MechanicalGetNonDiagonalMassesCountVisitor; const auto massTraversal = simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMass>(this->getContext());; const std::size_t nbNonDiagonalMasses = std::count_if(massTraversal.begin(), massTraversal.end(), ; [](auto* mass){ return !mass->isDiagonal();});; //note that these lines don't compile yet because this->getContext() does not give a Node*; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4334
https://github.com/sofa-framework/sofa/pull/4334:1390,Testability,test,test,1390,"This could be a step toward the removal of some visitors. The goal is to write something like the following instead of going through visitors:. ```C++; //simple counter of BaseMechanicalState; std::size_t counter {};; for (const auto* state : simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMechanicalState>(root.get())); {; ++counter;; }. // The following replaces the visitor MechanicalGetNonDiagonalMassesCountVisitor; const auto massTraversal = simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMass>(this->getContext());; const std::size_t nbNonDiagonalMasses = std::count_if(massTraversal.begin(), massTraversal.end(), ; [](auto* mass){ return !mass->isDiagonal();});; //note that these lines don't compile yet because this->getContext() does not give a Node*; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4334
https://github.com/sofa-framework/sofa/pull/4334:154,Usability,simpl,simple,154,"This could be a step toward the removal of some visitors. The goal is to write something like the following instead of going through visitors:. ```C++; //simple counter of BaseMechanicalState; std::size_t counter {};; for (const auto* state : simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMechanicalState>(root.get())); {; ++counter;; }. // The following replaces the visitor MechanicalGetNonDiagonalMassesCountVisitor; const auto massTraversal = simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMass>(this->getContext());; const std::size_t nbNonDiagonalMasses = std::count_if(massTraversal.begin(), massTraversal.end(), ; [](auto* mass){ return !mass->isDiagonal();});; //note that these lines don't compile yet because this->getContext() does not give a Node*; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4334
https://github.com/sofa-framework/sofa/pull/4338:669,Availability,failure,failures,669,"CMake now passes with SOFA-NG; Fixed some types and includes due to changes from SOFA-NG. The plugin still does not compile. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4338
https://github.com/sofa-framework/sofa/pull/4338:718,Availability,failure,failures,718,"CMake now passes with SOFA-NG; Fixed some types and includes due to changes from SOFA-NG. The plugin still does not compile. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4338
https://github.com/sofa-framework/sofa/pull/4338:94,Modifiability,plugin,plugin,94,"CMake now passes with SOFA-NG; Fixed some types and includes due to changes from SOFA-NG. The plugin still does not compile. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4338
https://github.com/sofa-framework/sofa/pull/4338:288,Security,Certificate,Certificate,288,"CMake now passes with SOFA-NG; Fixed some types and includes due to changes from SOFA-NG. The plugin still does not compile. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4338
https://github.com/sofa-framework/sofa/pull/4338:399,Security,certificate,certificate-of-origin-dco,399,"CMake now passes with SOFA-NG; Fixed some types and includes due to changes from SOFA-NG. The plugin still does not compile. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4338
https://github.com/sofa-framework/sofa/pull/4338:664,Testability,test,test,664,"CMake now passes with SOFA-NG; Fixed some types and includes due to changes from SOFA-NG. The plugin still does not compile. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4338
https://github.com/sofa-framework/sofa/pull/4338:713,Testability,test,test,713,"CMake now passes with SOFA-NG; Fixed some types and includes due to changes from SOFA-NG. The plugin still does not compile. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4338
https://github.com/sofa-framework/sofa/pull/4341:594,Availability,failure,failures,594,"Convert double to SReal in NewmarkImplicitSolver. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4341
https://github.com/sofa-framework/sofa/pull/4341:643,Availability,failure,failures,643,"Convert double to SReal in NewmarkImplicitSolver. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4341
https://github.com/sofa-framework/sofa/pull/4341:213,Security,Certificate,Certificate,213,"Convert double to SReal in NewmarkImplicitSolver. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4341
https://github.com/sofa-framework/sofa/pull/4341:324,Security,certificate,certificate-of-origin-dco,324,"Convert double to SReal in NewmarkImplicitSolver. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4341
https://github.com/sofa-framework/sofa/pull/4341:589,Testability,test,test,589,"Convert double to SReal in NewmarkImplicitSolver. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4341
https://github.com/sofa-framework/sofa/pull/4341:638,Testability,test,test,638,"Convert double to SReal in NewmarkImplicitSolver. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4341
https://github.com/sofa-framework/sofa/issues/4343:602,Availability,down,download,602,"### Problem. **Description**; I get difficulties to compile SOFA, due to some incompatibilities. **Steps to reproduce**; Compile SOFA with CMake GUI, and run compilation with ninja. ---------------------------------------------. ### Environment. I tried to compile SOFA again , and I get some trouble that was'nt trivial for me. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: SOFA v23.12.99. ###. I get two different troubles :. - First of all, by mistake, I once checked the SOFA_FETCH_SOFAPYTHON3 value in the cmake-gui (I was thinking it was necessary to link SofaPython3 in the good way), and it download the plugin directly in the source code. But, as I already download the SofaPython3 source myself as an external plugins, it create a conflict between the two versions at configuration. . - Also, I get an error during the compilation, because I did'nt disable the SOFA_GUI_QT_ENABLE_QDOCBROWSER value in cmake-gui. What is this feature for ? Maybe it could be better to disable it by default ?. Now everything is working well on my side. Thanks a lot.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4343
https://github.com/sofa-framework/sofa/issues/4343:669,Availability,down,download,669,"### Problem. **Description**; I get difficulties to compile SOFA, due to some incompatibilities. **Steps to reproduce**; Compile SOFA with CMake GUI, and run compilation with ninja. ---------------------------------------------. ### Environment. I tried to compile SOFA again , and I get some trouble that was'nt trivial for me. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: SOFA v23.12.99. ###. I get two different troubles :. - First of all, by mistake, I once checked the SOFA_FETCH_SOFAPYTHON3 value in the cmake-gui (I was thinking it was necessary to link SofaPython3 in the good way), and it download the plugin directly in the source code. But, as I already download the SofaPython3 source myself as an external plugins, it create a conflict between the two versions at configuration. . - Also, I get an error during the compilation, because I did'nt disable the SOFA_GUI_QT_ENABLE_QDOCBROWSER value in cmake-gui. What is this feature for ? Maybe it could be better to disable it by default ?. Now everything is working well on my side. Thanks a lot.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4343
https://github.com/sofa-framework/sofa/issues/4343:815,Availability,error,error,815,"### Problem. **Description**; I get difficulties to compile SOFA, due to some incompatibilities. **Steps to reproduce**; Compile SOFA with CMake GUI, and run compilation with ninja. ---------------------------------------------. ### Environment. I tried to compile SOFA again , and I get some trouble that was'nt trivial for me. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: SOFA v23.12.99. ###. I get two different troubles :. - First of all, by mistake, I once checked the SOFA_FETCH_SOFAPYTHON3 value in the cmake-gui (I was thinking it was necessary to link SofaPython3 in the good way), and it download the plugin directly in the source code. But, as I already download the SofaPython3 source myself as an external plugins, it create a conflict between the two versions at configuration. . - Also, I get an error during the compilation, because I did'nt disable the SOFA_GUI_QT_ENABLE_QDOCBROWSER value in cmake-gui. What is this feature for ? Maybe it could be better to disable it by default ?. Now everything is working well on my side. Thanks a lot.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4343
https://github.com/sofa-framework/sofa/issues/4343:781,Deployability,configurat,configuration,781,"### Problem. **Description**; I get difficulties to compile SOFA, due to some incompatibilities. **Steps to reproduce**; Compile SOFA with CMake GUI, and run compilation with ninja. ---------------------------------------------. ### Environment. I tried to compile SOFA again , and I get some trouble that was'nt trivial for me. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: SOFA v23.12.99. ###. I get two different troubles :. - First of all, by mistake, I once checked the SOFA_FETCH_SOFAPYTHON3 value in the cmake-gui (I was thinking it was necessary to link SofaPython3 in the good way), and it download the plugin directly in the source code. But, as I already download the SofaPython3 source myself as an external plugins, it create a conflict between the two versions at configuration. . - Also, I get an error during the compilation, because I did'nt disable the SOFA_GUI_QT_ENABLE_QDOCBROWSER value in cmake-gui. What is this feature for ? Maybe it could be better to disable it by default ?. Now everything is working well on my side. Thanks a lot.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4343
https://github.com/sofa-framework/sofa/issues/4343:615,Modifiability,plugin,plugin,615,"### Problem. **Description**; I get difficulties to compile SOFA, due to some incompatibilities. **Steps to reproduce**; Compile SOFA with CMake GUI, and run compilation with ninja. ---------------------------------------------. ### Environment. I tried to compile SOFA again , and I get some trouble that was'nt trivial for me. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: SOFA v23.12.99. ###. I get two different troubles :. - First of all, by mistake, I once checked the SOFA_FETCH_SOFAPYTHON3 value in the cmake-gui (I was thinking it was necessary to link SofaPython3 in the good way), and it download the plugin directly in the source code. But, as I already download the SofaPython3 source myself as an external plugins, it create a conflict between the two versions at configuration. . - Also, I get an error during the compilation, because I did'nt disable the SOFA_GUI_QT_ENABLE_QDOCBROWSER value in cmake-gui. What is this feature for ? Maybe it could be better to disable it by default ?. Now everything is working well on my side. Thanks a lot.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4343
https://github.com/sofa-framework/sofa/issues/4343:723,Modifiability,plugin,plugins,723,"### Problem. **Description**; I get difficulties to compile SOFA, due to some incompatibilities. **Steps to reproduce**; Compile SOFA with CMake GUI, and run compilation with ninja. ---------------------------------------------. ### Environment. I tried to compile SOFA again , and I get some trouble that was'nt trivial for me. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: SOFA v23.12.99. ###. I get two different troubles :. - First of all, by mistake, I once checked the SOFA_FETCH_SOFAPYTHON3 value in the cmake-gui (I was thinking it was necessary to link SofaPython3 in the good way), and it download the plugin directly in the source code. But, as I already download the SofaPython3 source myself as an external plugins, it create a conflict between the two versions at configuration. . - Also, I get an error during the compilation, because I did'nt disable the SOFA_GUI_QT_ENABLE_QDOCBROWSER value in cmake-gui. What is this feature for ? Maybe it could be better to disable it by default ?. Now everything is working well on my side. Thanks a lot.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4343
https://github.com/sofa-framework/sofa/issues/4343:781,Modifiability,config,configuration,781,"### Problem. **Description**; I get difficulties to compile SOFA, due to some incompatibilities. **Steps to reproduce**; Compile SOFA with CMake GUI, and run compilation with ninja. ---------------------------------------------. ### Environment. I tried to compile SOFA again , and I get some trouble that was'nt trivial for me. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: SOFA v23.12.99. ###. I get two different troubles :. - First of all, by mistake, I once checked the SOFA_FETCH_SOFAPYTHON3 value in the cmake-gui (I was thinking it was necessary to link SofaPython3 in the good way), and it download the plugin directly in the source code. But, as I already download the SofaPython3 source myself as an external plugins, it create a conflict between the two versions at configuration. . - Also, I get an error during the compilation, because I did'nt disable the SOFA_GUI_QT_ENABLE_QDOCBROWSER value in cmake-gui. What is this feature for ? Maybe it could be better to disable it by default ?. Now everything is working well on my side. Thanks a lot.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4343
https://github.com/sofa-framework/sofa/pull/4347:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4347
https://github.com/sofa-framework/sofa/pull/4347:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4347
https://github.com/sofa-framework/sofa/pull/4347:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4347
https://github.com/sofa-framework/sofa/pull/4347:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4347
https://github.com/sofa-framework/sofa/pull/4347:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4347
https://github.com/sofa-framework/sofa/pull/4347:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4347
https://github.com/sofa-framework/sofa/pull/4348:915,Availability,failure,failures,915,"Fix the script, now ready to in service :100: !. Examples:; - warning message, example in [Discussion #4076](https://github.com/sofa-framework/sofa/discussions/4076#discussioncomment-7819845); - soon closed message, example in [Discussion #4188](https://github.com/sofa-framework/sofa/discussions/4188#discussioncomment-7819844). To be discussed at the SOFA dev meeting; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4348
https://github.com/sofa-framework/sofa/pull/4348:964,Availability,failure,failures,964,"Fix the script, now ready to in service :100: !. Examples:; - warning message, example in [Discussion #4076](https://github.com/sofa-framework/sofa/discussions/4076#discussioncomment-7819845); - soon closed message, example in [Discussion #4188](https://github.com/sofa-framework/sofa/discussions/4188#discussioncomment-7819844). To be discussed at the SOFA dev meeting; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4348
https://github.com/sofa-framework/sofa/pull/4348:70,Integrability,message,message,70,"Fix the script, now ready to in service :100: !. Examples:; - warning message, example in [Discussion #4076](https://github.com/sofa-framework/sofa/discussions/4076#discussioncomment-7819845); - soon closed message, example in [Discussion #4188](https://github.com/sofa-framework/sofa/discussions/4188#discussioncomment-7819844). To be discussed at the SOFA dev meeting; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4348
https://github.com/sofa-framework/sofa/pull/4348:207,Integrability,message,message,207,"Fix the script, now ready to in service :100: !. Examples:; - warning message, example in [Discussion #4076](https://github.com/sofa-framework/sofa/discussions/4076#discussioncomment-7819845); - soon closed message, example in [Discussion #4188](https://github.com/sofa-framework/sofa/discussions/4188#discussioncomment-7819844). To be discussed at the SOFA dev meeting; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4348
https://github.com/sofa-framework/sofa/pull/4348:534,Security,Certificate,Certificate,534,"Fix the script, now ready to in service :100: !. Examples:; - warning message, example in [Discussion #4076](https://github.com/sofa-framework/sofa/discussions/4076#discussioncomment-7819845); - soon closed message, example in [Discussion #4188](https://github.com/sofa-framework/sofa/discussions/4188#discussioncomment-7819844). To be discussed at the SOFA dev meeting; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4348
https://github.com/sofa-framework/sofa/pull/4348:645,Security,certificate,certificate-of-origin-dco,645,"Fix the script, now ready to in service :100: !. Examples:; - warning message, example in [Discussion #4076](https://github.com/sofa-framework/sofa/discussions/4076#discussioncomment-7819845); - soon closed message, example in [Discussion #4188](https://github.com/sofa-framework/sofa/discussions/4188#discussioncomment-7819844). To be discussed at the SOFA dev meeting; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4348
https://github.com/sofa-framework/sofa/pull/4348:910,Testability,test,test,910,"Fix the script, now ready to in service :100: !. Examples:; - warning message, example in [Discussion #4076](https://github.com/sofa-framework/sofa/discussions/4076#discussioncomment-7819845); - soon closed message, example in [Discussion #4188](https://github.com/sofa-framework/sofa/discussions/4188#discussioncomment-7819844). To be discussed at the SOFA dev meeting; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4348
https://github.com/sofa-framework/sofa/pull/4348:959,Testability,test,test,959,"Fix the script, now ready to in service :100: !. Examples:; - warning message, example in [Discussion #4076](https://github.com/sofa-framework/sofa/discussions/4076#discussioncomment-7819845); - soon closed message, example in [Discussion #4188](https://github.com/sofa-framework/sofa/discussions/4188#discussioncomment-7819844). To be discussed at the SOFA dev meeting; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4348
https://github.com/sofa-framework/sofa/pull/4350:812,Availability,failure,failures,812,"It was only used if a ""LocalStorage"" stack was provided but #4327 showed that it was not used actually.; (and #4328 showed it was used it in a wrong way). So this PR makes all the related stuff (nodedata member, readNodeData and writeNodeData) non-functional at all . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4350
https://github.com/sofa-framework/sofa/pull/4350:861,Availability,failure,failures,861,"It was only used if a ""LocalStorage"" stack was provided but #4327 showed that it was not used actually.; (and #4328 showed it was used it in a wrong way). So this PR makes all the related stuff (nodedata member, readNodeData and writeNodeData) non-functional at all . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4350
https://github.com/sofa-framework/sofa/pull/4350:431,Security,Certificate,Certificate,431,"It was only used if a ""LocalStorage"" stack was provided but #4327 showed that it was not used actually.; (and #4328 showed it was used it in a wrong way). So this PR makes all the related stuff (nodedata member, readNodeData and writeNodeData) non-functional at all . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4350
https://github.com/sofa-framework/sofa/pull/4350:542,Security,certificate,certificate-of-origin-dco,542,"It was only used if a ""LocalStorage"" stack was provided but #4327 showed that it was not used actually.; (and #4328 showed it was used it in a wrong way). So this PR makes all the related stuff (nodedata member, readNodeData and writeNodeData) non-functional at all . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4350
https://github.com/sofa-framework/sofa/pull/4350:807,Testability,test,test,807,"It was only used if a ""LocalStorage"" stack was provided but #4327 showed that it was not used actually.; (and #4328 showed it was used it in a wrong way). So this PR makes all the related stuff (nodedata member, readNodeData and writeNodeData) non-functional at all . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4350
https://github.com/sofa-framework/sofa/pull/4350:856,Testability,test,test,856,"It was only used if a ""LocalStorage"" stack was provided but #4327 showed that it was not used actually.; (and #4328 showed it was used it in a wrong way). So this PR makes all the related stuff (nodedata member, readNodeData and writeNodeData) non-functional at all . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4350
https://github.com/sofa-framework/sofa/pull/4351:693,Availability,failure,failures,693,"This is allowed since C++17: https://en.cppreference.com/w/cpp/language/class_template_argument_deduction. And it is, in my opinion, easier to read. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4351
https://github.com/sofa-framework/sofa/pull/4351:742,Availability,failure,failures,742,"This is allowed since C++17: https://en.cppreference.com/w/cpp/language/class_template_argument_deduction. And it is, in my opinion, easier to read. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4351
https://github.com/sofa-framework/sofa/pull/4351:312,Security,Certificate,Certificate,312,"This is allowed since C++17: https://en.cppreference.com/w/cpp/language/class_template_argument_deduction. And it is, in my opinion, easier to read. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4351
https://github.com/sofa-framework/sofa/pull/4351:423,Security,certificate,certificate-of-origin-dco,423,"This is allowed since C++17: https://en.cppreference.com/w/cpp/language/class_template_argument_deduction. And it is, in my opinion, easier to read. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4351
https://github.com/sofa-framework/sofa/pull/4351:688,Testability,test,test,688,"This is allowed since C++17: https://en.cppreference.com/w/cpp/language/class_template_argument_deduction. And it is, in my opinion, easier to read. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4351
https://github.com/sofa-framework/sofa/pull/4351:737,Testability,test,test,737,"This is allowed since C++17: https://en.cppreference.com/w/cpp/language/class_template_argument_deduction. And it is, in my opinion, easier to read. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4351
https://github.com/sofa-framework/sofa/pull/4352:667,Availability,failure,failures,667,"`transpose` and `add` are known at compile-time, so a `constexpr if` can be used to evaluate them, and discard statements. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4352
https://github.com/sofa-framework/sofa/pull/4352:716,Availability,failure,failures,716,"`transpose` and `add` are known at compile-time, so a `constexpr if` can be used to evaluate them, and discard statements. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4352
https://github.com/sofa-framework/sofa/pull/4352:286,Security,Certificate,Certificate,286,"`transpose` and `add` are known at compile-time, so a `constexpr if` can be used to evaluate them, and discard statements. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4352
https://github.com/sofa-framework/sofa/pull/4352:397,Security,certificate,certificate-of-origin-dco,397,"`transpose` and `add` are known at compile-time, so a `constexpr if` can be used to evaluate them, and discard statements. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4352
https://github.com/sofa-framework/sofa/pull/4352:662,Testability,test,test,662,"`transpose` and `add` are known at compile-time, so a `constexpr if` can be used to evaluate them, and discard statements. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4352
https://github.com/sofa-framework/sofa/pull/4352:711,Testability,test,test,711,"`transpose` and `add` are known at compile-time, so a `constexpr if` can be used to evaluate them, and discard statements. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4352
https://github.com/sofa-framework/sofa/pull/4354:697,Availability,failure,failures,697,"FIX qt target handling. ; The QT_TARGETS variable used to store qt targets that the project depends on, was overridden by the libQGLViewer CMakeLists. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4354
https://github.com/sofa-framework/sofa/pull/4354:746,Availability,failure,failures,746,"FIX qt target handling. ; The QT_TARGETS variable used to store qt targets that the project depends on, was overridden by the libQGLViewer CMakeLists. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4354
https://github.com/sofa-framework/sofa/pull/4354:92,Integrability,depend,depends,92,"FIX qt target handling. ; The QT_TARGETS variable used to store qt targets that the project depends on, was overridden by the libQGLViewer CMakeLists. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4354
https://github.com/sofa-framework/sofa/pull/4354:41,Modifiability,variab,variable,41,"FIX qt target handling. ; The QT_TARGETS variable used to store qt targets that the project depends on, was overridden by the libQGLViewer CMakeLists. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4354
https://github.com/sofa-framework/sofa/pull/4354:316,Security,Certificate,Certificate,316,"FIX qt target handling. ; The QT_TARGETS variable used to store qt targets that the project depends on, was overridden by the libQGLViewer CMakeLists. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4354
https://github.com/sofa-framework/sofa/pull/4354:427,Security,certificate,certificate-of-origin-dco,427,"FIX qt target handling. ; The QT_TARGETS variable used to store qt targets that the project depends on, was overridden by the libQGLViewer CMakeLists. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4354
https://github.com/sofa-framework/sofa/pull/4354:692,Testability,test,test,692,"FIX qt target handling. ; The QT_TARGETS variable used to store qt targets that the project depends on, was overridden by the libQGLViewer CMakeLists. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4354
https://github.com/sofa-framework/sofa/pull/4354:741,Testability,test,test,741,"FIX qt target handling. ; The QT_TARGETS variable used to store qt targets that the project depends on, was overridden by the libQGLViewer CMakeLists. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4354
https://github.com/sofa-framework/sofa/pull/4355:577,Availability,failure,failures,577,"The code was duplicated 4 times. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4355
https://github.com/sofa-framework/sofa/pull/4355:626,Availability,failure,failures,626,"The code was duplicated 4 times. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4355
https://github.com/sofa-framework/sofa/pull/4355:196,Security,Certificate,Certificate,196,"The code was duplicated 4 times. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4355
https://github.com/sofa-framework/sofa/pull/4355:307,Security,certificate,certificate-of-origin-dco,307,"The code was duplicated 4 times. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4355
https://github.com/sofa-framework/sofa/pull/4355:572,Testability,test,test,572,"The code was duplicated 4 times. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4355
https://github.com/sofa-framework/sofa/pull/4355:621,Testability,test,test,621,"The code was duplicated 4 times. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4355
https://github.com/sofa-framework/sofa/pull/4356:710,Availability,failure,failures,710,"... when AUTO_SET_TARGET_PROPERTIES is set. (useful for external header-only targets). EDIT: a lot of cases will be handled in cmake >3.24 a(avoiding lots of tests). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356
https://github.com/sofa-framework/sofa/pull/4356:759,Availability,failure,failures,759,"... when AUTO_SET_TARGET_PROPERTIES is set. (useful for external header-only targets). EDIT: a lot of cases will be handled in cmake >3.24 a(avoiding lots of tests). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356
https://github.com/sofa-framework/sofa/pull/4356:141,Safety,avoid,avoiding,141,"... when AUTO_SET_TARGET_PROPERTIES is set. (useful for external header-only targets). EDIT: a lot of cases will be handled in cmake >3.24 a(avoiding lots of tests). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356
https://github.com/sofa-framework/sofa/pull/4356:329,Security,Certificate,Certificate,329,"... when AUTO_SET_TARGET_PROPERTIES is set. (useful for external header-only targets). EDIT: a lot of cases will be handled in cmake >3.24 a(avoiding lots of tests). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356
https://github.com/sofa-framework/sofa/pull/4356:440,Security,certificate,certificate-of-origin-dco,440,"... when AUTO_SET_TARGET_PROPERTIES is set. (useful for external header-only targets). EDIT: a lot of cases will be handled in cmake >3.24 a(avoiding lots of tests). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356
https://github.com/sofa-framework/sofa/pull/4356:158,Testability,test,tests,158,"... when AUTO_SET_TARGET_PROPERTIES is set. (useful for external header-only targets). EDIT: a lot of cases will be handled in cmake >3.24 a(avoiding lots of tests). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356
https://github.com/sofa-framework/sofa/pull/4356:705,Testability,test,test,705,"... when AUTO_SET_TARGET_PROPERTIES is set. (useful for external header-only targets). EDIT: a lot of cases will be handled in cmake >3.24 a(avoiding lots of tests). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356
https://github.com/sofa-framework/sofa/pull/4356:754,Testability,test,test,754,"... when AUTO_SET_TARGET_PROPERTIES is set. (useful for external header-only targets). EDIT: a lot of cases will be handled in cmake >3.24 a(avoiding lots of tests). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356
https://github.com/sofa-framework/sofa/pull/4357:1057,Availability,failure,failures,1057,"Based on:; - #4356 . Remove the (really old) cimg version and fetch it from cimg git repository (or let the user set-up its own cimg version. ; Not a requirement for #4221 anyway (header-only are acceptable). - \+200k lines removed; - fix compilation for newer version of cimg; - learnt how to export a symbol without the `declspec` shenanigans on MSVC 🫠 As the current cimg.h file has been modified to add a export symbol macro...). (compiles with the cimg provided by Ubuntu v22.04 and latest cimg on Windows). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4357
https://github.com/sofa-framework/sofa/pull/4357:1106,Availability,failure,failures,1106,"Based on:; - #4356 . Remove the (really old) cimg version and fetch it from cimg git repository (or let the user set-up its own cimg version. ; Not a requirement for #4221 anyway (header-only are acceptable). - \+200k lines removed; - fix compilation for newer version of cimg; - learnt how to export a symbol without the `declspec` shenanigans on MSVC 🫠 As the current cimg.h file has been modified to add a export symbol macro...). (compiles with the cimg provided by Ubuntu v22.04 and latest cimg on Windows). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4357
https://github.com/sofa-framework/sofa/pull/4357:676,Security,Certificate,Certificate,676,"Based on:; - #4356 . Remove the (really old) cimg version and fetch it from cimg git repository (or let the user set-up its own cimg version. ; Not a requirement for #4221 anyway (header-only are acceptable). - \+200k lines removed; - fix compilation for newer version of cimg; - learnt how to export a symbol without the `declspec` shenanigans on MSVC 🫠 As the current cimg.h file has been modified to add a export symbol macro...). (compiles with the cimg provided by Ubuntu v22.04 and latest cimg on Windows). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4357
https://github.com/sofa-framework/sofa/pull/4357:787,Security,certificate,certificate-of-origin-dco,787,"Based on:; - #4356 . Remove the (really old) cimg version and fetch it from cimg git repository (or let the user set-up its own cimg version. ; Not a requirement for #4221 anyway (header-only are acceptable). - \+200k lines removed; - fix compilation for newer version of cimg; - learnt how to export a symbol without the `declspec` shenanigans on MSVC 🫠 As the current cimg.h file has been modified to add a export symbol macro...). (compiles with the cimg provided by Ubuntu v22.04 and latest cimg on Windows). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4357
https://github.com/sofa-framework/sofa/pull/4357:1052,Testability,test,test,1052,"Based on:; - #4356 . Remove the (really old) cimg version and fetch it from cimg git repository (or let the user set-up its own cimg version. ; Not a requirement for #4221 anyway (header-only are acceptable). - \+200k lines removed; - fix compilation for newer version of cimg; - learnt how to export a symbol without the `declspec` shenanigans on MSVC 🫠 As the current cimg.h file has been modified to add a export symbol macro...). (compiles with the cimg provided by Ubuntu v22.04 and latest cimg on Windows). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4357
https://github.com/sofa-framework/sofa/pull/4357:1101,Testability,test,test,1101,"Based on:; - #4356 . Remove the (really old) cimg version and fetch it from cimg git repository (or let the user set-up its own cimg version. ; Not a requirement for #4221 anyway (header-only are acceptable). - \+200k lines removed; - fix compilation for newer version of cimg; - learnt how to export a symbol without the `declspec` shenanigans on MSVC 🫠 As the current cimg.h file has been modified to add a export symbol macro...). (compiles with the cimg provided by Ubuntu v22.04 and latest cimg on Windows). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4357
https://github.com/sofa-framework/sofa/pull/4357:280,Usability,learn,learnt,280,"Based on:; - #4356 . Remove the (really old) cimg version and fetch it from cimg git repository (or let the user set-up its own cimg version. ; Not a requirement for #4221 anyway (header-only are acceptable). - \+200k lines removed; - fix compilation for newer version of cimg; - learnt how to export a symbol without the `declspec` shenanigans on MSVC 🫠 As the current cimg.h file has been modified to add a export symbol macro...). (compiles with the cimg provided by Ubuntu v22.04 and latest cimg on Windows). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4357
https://github.com/sofa-framework/sofa/pull/4360:856,Availability,failure,failures,856,"setMechanical() and isMechanical() use the boolean states of forces, masses and constraints.; But the ""meta-alias""(?) `isMechanical` only link forces and masses. So it would make sense to add constraints 🤔. Avoid cases like https://github.com/fredroy/BeamAdapter/commit/58b3db1eb11dab501eec7d6a50b6cce3fcaf9a51. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4360
https://github.com/sofa-framework/sofa/pull/4360:905,Availability,failure,failures,905,"setMechanical() and isMechanical() use the boolean states of forces, masses and constraints.; But the ""meta-alias""(?) `isMechanical` only link forces and masses. So it would make sense to add constraints 🤔. Avoid cases like https://github.com/fredroy/BeamAdapter/commit/58b3db1eb11dab501eec7d6a50b6cce3fcaf9a51. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4360
https://github.com/sofa-framework/sofa/pull/4360:207,Safety,Avoid,Avoid,207,"setMechanical() and isMechanical() use the boolean states of forces, masses and constraints.; But the ""meta-alias""(?) `isMechanical` only link forces and masses. So it would make sense to add constraints 🤔. Avoid cases like https://github.com/fredroy/BeamAdapter/commit/58b3db1eb11dab501eec7d6a50b6cce3fcaf9a51. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4360
https://github.com/sofa-framework/sofa/pull/4360:475,Security,Certificate,Certificate,475,"setMechanical() and isMechanical() use the boolean states of forces, masses and constraints.; But the ""meta-alias""(?) `isMechanical` only link forces and masses. So it would make sense to add constraints 🤔. Avoid cases like https://github.com/fredroy/BeamAdapter/commit/58b3db1eb11dab501eec7d6a50b6cce3fcaf9a51. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4360
https://github.com/sofa-framework/sofa/pull/4360:586,Security,certificate,certificate-of-origin-dco,586,"setMechanical() and isMechanical() use the boolean states of forces, masses and constraints.; But the ""meta-alias""(?) `isMechanical` only link forces and masses. So it would make sense to add constraints 🤔. Avoid cases like https://github.com/fredroy/BeamAdapter/commit/58b3db1eb11dab501eec7d6a50b6cce3fcaf9a51. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4360
https://github.com/sofa-framework/sofa/pull/4360:851,Testability,test,test,851,"setMechanical() and isMechanical() use the boolean states of forces, masses and constraints.; But the ""meta-alias""(?) `isMechanical` only link forces and masses. So it would make sense to add constraints 🤔. Avoid cases like https://github.com/fredroy/BeamAdapter/commit/58b3db1eb11dab501eec7d6a50b6cce3fcaf9a51. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4360
https://github.com/sofa-framework/sofa/pull/4360:900,Testability,test,test,900,"setMechanical() and isMechanical() use the boolean states of forces, masses and constraints.; But the ""meta-alias""(?) `isMechanical` only link forces and masses. So it would make sense to add constraints 🤔. Avoid cases like https://github.com/fredroy/BeamAdapter/commit/58b3db1eb11dab501eec7d6a50b6cce3fcaf9a51. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4360
https://github.com/sofa-framework/sofa/pull/4361:221,Availability,error,error,221,"Edge2QuadTopologicalMapping needs QuadSet container and modifier, and was merely just searching into its node for them, with no check whatsoever. So if one of the two was not present, a crash happened without any warning/error... So in this PR, links are added (so no need to search the context every time), warn the user if not set and let the component to Invalid. \+ some cleanups for good measure. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4361
https://github.com/sofa-framework/sofa/pull/4361:946,Availability,failure,failures,946,"Edge2QuadTopologicalMapping needs QuadSet container and modifier, and was merely just searching into its node for them, with no check whatsoever. So if one of the two was not present, a crash happened without any warning/error... So in this PR, links are added (so no need to search the context every time), warn the user if not set and let the component to Invalid. \+ some cleanups for good measure. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4361
https://github.com/sofa-framework/sofa/pull/4361:995,Availability,failure,failures,995,"Edge2QuadTopologicalMapping needs QuadSet container and modifier, and was merely just searching into its node for them, with no check whatsoever. So if one of the two was not present, a crash happened without any warning/error... So in this PR, links are added (so no need to search the context every time), warn the user if not set and let the component to Invalid. \+ some cleanups for good measure. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4361
https://github.com/sofa-framework/sofa/pull/4361:565,Security,Certificate,Certificate,565,"Edge2QuadTopologicalMapping needs QuadSet container and modifier, and was merely just searching into its node for them, with no check whatsoever. So if one of the two was not present, a crash happened without any warning/error... So in this PR, links are added (so no need to search the context every time), warn the user if not set and let the component to Invalid. \+ some cleanups for good measure. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4361
https://github.com/sofa-framework/sofa/pull/4361:676,Security,certificate,certificate-of-origin-dco,676,"Edge2QuadTopologicalMapping needs QuadSet container and modifier, and was merely just searching into its node for them, with no check whatsoever. So if one of the two was not present, a crash happened without any warning/error... So in this PR, links are added (so no need to search the context every time), warn the user if not set and let the component to Invalid. \+ some cleanups for good measure. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4361
https://github.com/sofa-framework/sofa/pull/4361:941,Testability,test,test,941,"Edge2QuadTopologicalMapping needs QuadSet container and modifier, and was merely just searching into its node for them, with no check whatsoever. So if one of the two was not present, a crash happened without any warning/error... So in this PR, links are added (so no need to search the context every time), warn the user if not set and let the component to Invalid. \+ some cleanups for good measure. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4361
https://github.com/sofa-framework/sofa/pull/4361:990,Testability,test,test,990,"Edge2QuadTopologicalMapping needs QuadSet container and modifier, and was merely just searching into its node for them, with no check whatsoever. So if one of the two was not present, a crash happened without any warning/error... So in this PR, links are added (so no need to search the context every time), warn the user if not set and let the component to Invalid. \+ some cleanups for good measure. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4361
https://github.com/sofa-framework/sofa/pull/4362:617,Availability,failure,failures,617,"... and not only mechanical ones. removing some unncessary includes too. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4362
https://github.com/sofa-framework/sofa/pull/4362:666,Availability,failure,failures,666,"... and not only mechanical ones. removing some unncessary includes too. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4362
https://github.com/sofa-framework/sofa/pull/4362:236,Security,Certificate,Certificate,236,"... and not only mechanical ones. removing some unncessary includes too. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4362
https://github.com/sofa-framework/sofa/pull/4362:347,Security,certificate,certificate-of-origin-dco,347,"... and not only mechanical ones. removing some unncessary includes too. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4362
https://github.com/sofa-framework/sofa/pull/4362:612,Testability,test,test,612,"... and not only mechanical ones. removing some unncessary includes too. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4362
https://github.com/sofa-framework/sofa/pull/4362:661,Testability,test,test,661,"... and not only mechanical ones. removing some unncessary includes too. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4362
https://github.com/sofa-framework/sofa/pull/4363:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4363
https://github.com/sofa-framework/sofa/pull/4363:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4363
https://github.com/sofa-framework/sofa/pull/4363:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4363
https://github.com/sofa-framework/sofa/pull/4363:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4363
https://github.com/sofa-framework/sofa/pull/4363:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4363
https://github.com/sofa-framework/sofa/pull/4363:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4363
https://github.com/sofa-framework/sofa/pull/4370:1325,Availability,failure,failures,1325,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370
https://github.com/sofa-framework/sofa/pull/4370:1374,Availability,failure,failures,1374,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370
https://github.com/sofa-framework/sofa/pull/4370:271,Energy Efficiency,efficient,efficient,271,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370
https://github.com/sofa-framework/sofa/pull/4370:329,Energy Efficiency,efficient,efficient,329,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370
https://github.com/sofa-framework/sofa/pull/4370:672,Integrability,depend,depends,672,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370
https://github.com/sofa-framework/sofa/pull/4370:944,Security,Certificate,Certificate,944,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370
https://github.com/sofa-framework/sofa/pull/4370:1055,Security,certificate,certificate-of-origin-dco,1055,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370
https://github.com/sofa-framework/sofa/pull/4370:358,Testability,test,tested,358,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370
https://github.com/sofa-framework/sofa/pull/4370:1320,Testability,test,test,1320,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370
https://github.com/sofa-framework/sofa/pull/4370:1369,Testability,test,test,1369,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370
https://github.com/sofa-framework/sofa/pull/4386:639,Availability,failure,failures,639,"New action checking if a label is at least 7 days old OR if the label `pr: fast merge` is set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4386
https://github.com/sofa-framework/sofa/pull/4386:688,Availability,failure,failures,688,"New action checking if a label is at least 7 days old OR if the label `pr: fast merge` is set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4386
https://github.com/sofa-framework/sofa/pull/4386:258,Security,Certificate,Certificate,258,"New action checking if a label is at least 7 days old OR if the label `pr: fast merge` is set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4386
https://github.com/sofa-framework/sofa/pull/4386:369,Security,certificate,certificate-of-origin-dco,369,"New action checking if a label is at least 7 days old OR if the label `pr: fast merge` is set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4386
https://github.com/sofa-framework/sofa/pull/4386:634,Testability,test,test,634,"New action checking if a label is at least 7 days old OR if the label `pr: fast merge` is set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4386
https://github.com/sofa-framework/sofa/pull/4386:683,Testability,test,test,683,"New action checking if a label is at least 7 days old OR if the label `pr: fast merge` is set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4386
https://github.com/sofa-framework/sofa/pull/4388:1454,Availability,failure,failures,1454,"Based on ; - #4362 ; (for the scene, not compilation). diff: https://github.com/fredroy/sofa/compare/geoalgo_states..edge2quad_state. No need to pass by a intermediary MechanicalObject anymore (+subsequent Mapping as well). Avoids:; - using mechanical mappings for visual mappings (no useless applyJ/applyJT calls); - to call an other mapping as well; - setting the (not doing its purpose) `isMechanical` flag. ---; - With the example (Edge2QuadTopologicalMapping.scn). with GUI (glfw); ```; master 10000 iterations done in 20.618 s ( 485.013 FPS); pr 10000 iterations done in 16.601 s ( 602.373 FPS); ```. no GUI (batch); ```; master 10000 iterations done in 17.3933 s ( 574.935 FPS); pr 10000 iterations done in 13.6906 s ( 730.43 FPS); ```. - With [modified] BeamAdapter's scene (with gui); ```; master 5000 iterations done in 35.184 s ( 142.11 FPS); pr 5000 iterations done in 29.48 s ( 169.607 FPS); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4388
https://github.com/sofa-framework/sofa/pull/4388:1503,Availability,failure,failures,1503,"Based on ; - #4362 ; (for the scene, not compilation). diff: https://github.com/fredroy/sofa/compare/geoalgo_states..edge2quad_state. No need to pass by a intermediary MechanicalObject anymore (+subsequent Mapping as well). Avoids:; - using mechanical mappings for visual mappings (no useless applyJ/applyJT calls); - to call an other mapping as well; - setting the (not doing its purpose) `isMechanical` flag. ---; - With the example (Edge2QuadTopologicalMapping.scn). with GUI (glfw); ```; master 10000 iterations done in 20.618 s ( 485.013 FPS); pr 10000 iterations done in 16.601 s ( 602.373 FPS); ```. no GUI (batch); ```; master 10000 iterations done in 17.3933 s ( 574.935 FPS); pr 10000 iterations done in 13.6906 s ( 730.43 FPS); ```. - With [modified] BeamAdapter's scene (with gui); ```; master 5000 iterations done in 35.184 s ( 142.11 FPS); pr 5000 iterations done in 29.48 s ( 169.607 FPS); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4388
https://github.com/sofa-framework/sofa/pull/4388:224,Safety,Avoid,Avoids,224,"Based on ; - #4362 ; (for the scene, not compilation). diff: https://github.com/fredroy/sofa/compare/geoalgo_states..edge2quad_state. No need to pass by a intermediary MechanicalObject anymore (+subsequent Mapping as well). Avoids:; - using mechanical mappings for visual mappings (no useless applyJ/applyJT calls); - to call an other mapping as well; - setting the (not doing its purpose) `isMechanical` flag. ---; - With the example (Edge2QuadTopologicalMapping.scn). with GUI (glfw); ```; master 10000 iterations done in 20.618 s ( 485.013 FPS); pr 10000 iterations done in 16.601 s ( 602.373 FPS); ```. no GUI (batch); ```; master 10000 iterations done in 17.3933 s ( 574.935 FPS); pr 10000 iterations done in 13.6906 s ( 730.43 FPS); ```. - With [modified] BeamAdapter's scene (with gui); ```; master 5000 iterations done in 35.184 s ( 142.11 FPS); pr 5000 iterations done in 29.48 s ( 169.607 FPS); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4388
https://github.com/sofa-framework/sofa/pull/4388:1073,Security,Certificate,Certificate,1073,"Based on ; - #4362 ; (for the scene, not compilation). diff: https://github.com/fredroy/sofa/compare/geoalgo_states..edge2quad_state. No need to pass by a intermediary MechanicalObject anymore (+subsequent Mapping as well). Avoids:; - using mechanical mappings for visual mappings (no useless applyJ/applyJT calls); - to call an other mapping as well; - setting the (not doing its purpose) `isMechanical` flag. ---; - With the example (Edge2QuadTopologicalMapping.scn). with GUI (glfw); ```; master 10000 iterations done in 20.618 s ( 485.013 FPS); pr 10000 iterations done in 16.601 s ( 602.373 FPS); ```. no GUI (batch); ```; master 10000 iterations done in 17.3933 s ( 574.935 FPS); pr 10000 iterations done in 13.6906 s ( 730.43 FPS); ```. - With [modified] BeamAdapter's scene (with gui); ```; master 5000 iterations done in 35.184 s ( 142.11 FPS); pr 5000 iterations done in 29.48 s ( 169.607 FPS); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4388
https://github.com/sofa-framework/sofa/pull/4388:1184,Security,certificate,certificate-of-origin-dco,1184,"Based on ; - #4362 ; (for the scene, not compilation). diff: https://github.com/fredroy/sofa/compare/geoalgo_states..edge2quad_state. No need to pass by a intermediary MechanicalObject anymore (+subsequent Mapping as well). Avoids:; - using mechanical mappings for visual mappings (no useless applyJ/applyJT calls); - to call an other mapping as well; - setting the (not doing its purpose) `isMechanical` flag. ---; - With the example (Edge2QuadTopologicalMapping.scn). with GUI (glfw); ```; master 10000 iterations done in 20.618 s ( 485.013 FPS); pr 10000 iterations done in 16.601 s ( 602.373 FPS); ```. no GUI (batch); ```; master 10000 iterations done in 17.3933 s ( 574.935 FPS); pr 10000 iterations done in 13.6906 s ( 730.43 FPS); ```. - With [modified] BeamAdapter's scene (with gui); ```; master 5000 iterations done in 35.184 s ( 142.11 FPS); pr 5000 iterations done in 29.48 s ( 169.607 FPS); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4388
https://github.com/sofa-framework/sofa/pull/4388:1449,Testability,test,test,1449,"Based on ; - #4362 ; (for the scene, not compilation). diff: https://github.com/fredroy/sofa/compare/geoalgo_states..edge2quad_state. No need to pass by a intermediary MechanicalObject anymore (+subsequent Mapping as well). Avoids:; - using mechanical mappings for visual mappings (no useless applyJ/applyJT calls); - to call an other mapping as well; - setting the (not doing its purpose) `isMechanical` flag. ---; - With the example (Edge2QuadTopologicalMapping.scn). with GUI (glfw); ```; master 10000 iterations done in 20.618 s ( 485.013 FPS); pr 10000 iterations done in 16.601 s ( 602.373 FPS); ```. no GUI (batch); ```; master 10000 iterations done in 17.3933 s ( 574.935 FPS); pr 10000 iterations done in 13.6906 s ( 730.43 FPS); ```. - With [modified] BeamAdapter's scene (with gui); ```; master 5000 iterations done in 35.184 s ( 142.11 FPS); pr 5000 iterations done in 29.48 s ( 169.607 FPS); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4388
https://github.com/sofa-framework/sofa/pull/4388:1498,Testability,test,test,1498,"Based on ; - #4362 ; (for the scene, not compilation). diff: https://github.com/fredroy/sofa/compare/geoalgo_states..edge2quad_state. No need to pass by a intermediary MechanicalObject anymore (+subsequent Mapping as well). Avoids:; - using mechanical mappings for visual mappings (no useless applyJ/applyJT calls); - to call an other mapping as well; - setting the (not doing its purpose) `isMechanical` flag. ---; - With the example (Edge2QuadTopologicalMapping.scn). with GUI (glfw); ```; master 10000 iterations done in 20.618 s ( 485.013 FPS); pr 10000 iterations done in 16.601 s ( 602.373 FPS); ```. no GUI (batch); ```; master 10000 iterations done in 17.3933 s ( 574.935 FPS); pr 10000 iterations done in 13.6906 s ( 730.43 FPS); ```. - With [modified] BeamAdapter's scene (with gui); ```; master 5000 iterations done in 35.184 s ( 142.11 FPS); pr 5000 iterations done in 29.48 s ( 169.607 FPS); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4388
https://github.com/sofa-framework/sofa/pull/4389:796,Availability,failure,failures,796,"The construction of xId caused an assert when `cParams->constOrder() == sofa::core::ConstraintOrder::VEL`. It happens only in debug, and it had no consequence because it was not used. Bug introduced in https://github.com/sofa-framework/sofa/pull/4213. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4389
https://github.com/sofa-framework/sofa/pull/4389:845,Availability,failure,failures,845,"The construction of xId caused an assert when `cParams->constOrder() == sofa::core::ConstraintOrder::VEL`. It happens only in debug, and it had no consequence because it was not used. Bug introduced in https://github.com/sofa-framework/sofa/pull/4213. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4389
https://github.com/sofa-framework/sofa/pull/4389:415,Security,Certificate,Certificate,415,"The construction of xId caused an assert when `cParams->constOrder() == sofa::core::ConstraintOrder::VEL`. It happens only in debug, and it had no consequence because it was not used. Bug introduced in https://github.com/sofa-framework/sofa/pull/4213. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4389
https://github.com/sofa-framework/sofa/pull/4389:526,Security,certificate,certificate-of-origin-dco,526,"The construction of xId caused an assert when `cParams->constOrder() == sofa::core::ConstraintOrder::VEL`. It happens only in debug, and it had no consequence because it was not used. Bug introduced in https://github.com/sofa-framework/sofa/pull/4213. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4389
https://github.com/sofa-framework/sofa/pull/4389:34,Testability,assert,assert,34,"The construction of xId caused an assert when `cParams->constOrder() == sofa::core::ConstraintOrder::VEL`. It happens only in debug, and it had no consequence because it was not used. Bug introduced in https://github.com/sofa-framework/sofa/pull/4213. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4389
https://github.com/sofa-framework/sofa/pull/4389:791,Testability,test,test,791,"The construction of xId caused an assert when `cParams->constOrder() == sofa::core::ConstraintOrder::VEL`. It happens only in debug, and it had no consequence because it was not used. Bug introduced in https://github.com/sofa-framework/sofa/pull/4213. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4389
https://github.com/sofa-framework/sofa/pull/4389:840,Testability,test,test,840,"The construction of xId caused an assert when `cParams->constOrder() == sofa::core::ConstraintOrder::VEL`. It happens only in debug, and it had no consequence because it was not used. Bug introduced in https://github.com/sofa-framework/sofa/pull/4213. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4389
https://github.com/sofa-framework/sofa/pull/4390:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4390
https://github.com/sofa-framework/sofa/pull/4390:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4390
https://github.com/sofa-framework/sofa/pull/4390:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4390
https://github.com/sofa-framework/sofa/pull/4390:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4390
https://github.com/sofa-framework/sofa/pull/4390:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4390
https://github.com/sofa-framework/sofa/pull/4390:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4390
https://github.com/sofa-framework/sofa/pull/4391:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4391
https://github.com/sofa-framework/sofa/pull/4391:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4391
https://github.com/sofa-framework/sofa/pull/4391:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4391
https://github.com/sofa-framework/sofa/pull/4391:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4391
https://github.com/sofa-framework/sofa/pull/4391:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4391
https://github.com/sofa-framework/sofa/pull/4391:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4391
https://github.com/sofa-framework/sofa/pull/4392:602,Availability,failure,failures,602,"Fixes https://github.com/sofa-framework/sofa/issues/4323. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4392
https://github.com/sofa-framework/sofa/pull/4392:651,Availability,failure,failures,651,"Fixes https://github.com/sofa-framework/sofa/issues/4323. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4392
https://github.com/sofa-framework/sofa/pull/4392:221,Security,Certificate,Certificate,221,"Fixes https://github.com/sofa-framework/sofa/issues/4323. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4392
https://github.com/sofa-framework/sofa/pull/4392:332,Security,certificate,certificate-of-origin-dco,332,"Fixes https://github.com/sofa-framework/sofa/issues/4323. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4392
https://github.com/sofa-framework/sofa/pull/4392:597,Testability,test,test,597,"Fixes https://github.com/sofa-framework/sofa/issues/4323. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4392
https://github.com/sofa-framework/sofa/pull/4392:646,Testability,test,test,646,"Fixes https://github.com/sofa-framework/sofa/issues/4323. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4392
https://github.com/sofa-framework/sofa/pull/4393:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4393
https://github.com/sofa-framework/sofa/pull/4393:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4393
https://github.com/sofa-framework/sofa/pull/4393:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4393
https://github.com/sofa-framework/sofa/pull/4393:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4393
https://github.com/sofa-framework/sofa/pull/4393:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4393
https://github.com/sofa-framework/sofa/pull/4393:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4393
https://github.com/sofa-framework/sofa/pull/4395:762,Availability,failure,failures,762,"… into a dedicated plugin. The plugin VolumetricRendering needed a bit of cleaning too. The new folder hierarchy is the following:. - SofaCUDA; - VolumetricRendering; - VolumetricRendering; - VolumetricRendering.CUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395
https://github.com/sofa-framework/sofa/pull/4395:811,Availability,failure,failures,811,"… into a dedicated plugin. The plugin VolumetricRendering needed a bit of cleaning too. The new folder hierarchy is the following:. - SofaCUDA; - VolumetricRendering; - VolumetricRendering; - VolumetricRendering.CUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395
https://github.com/sofa-framework/sofa/pull/4395:19,Modifiability,plugin,plugin,19,"… into a dedicated plugin. The plugin VolumetricRendering needed a bit of cleaning too. The new folder hierarchy is the following:. - SofaCUDA; - VolumetricRendering; - VolumetricRendering; - VolumetricRendering.CUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395
https://github.com/sofa-framework/sofa/pull/4395:31,Modifiability,plugin,plugin,31,"… into a dedicated plugin. The plugin VolumetricRendering needed a bit of cleaning too. The new folder hierarchy is the following:. - SofaCUDA; - VolumetricRendering; - VolumetricRendering; - VolumetricRendering.CUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395
https://github.com/sofa-framework/sofa/pull/4395:381,Security,Certificate,Certificate,381,"… into a dedicated plugin. The plugin VolumetricRendering needed a bit of cleaning too. The new folder hierarchy is the following:. - SofaCUDA; - VolumetricRendering; - VolumetricRendering; - VolumetricRendering.CUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395
https://github.com/sofa-framework/sofa/pull/4395:492,Security,certificate,certificate-of-origin-dco,492,"… into a dedicated plugin. The plugin VolumetricRendering needed a bit of cleaning too. The new folder hierarchy is the following:. - SofaCUDA; - VolumetricRendering; - VolumetricRendering; - VolumetricRendering.CUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395
https://github.com/sofa-framework/sofa/pull/4395:757,Testability,test,test,757,"… into a dedicated plugin. The plugin VolumetricRendering needed a bit of cleaning too. The new folder hierarchy is the following:. - SofaCUDA; - VolumetricRendering; - VolumetricRendering; - VolumetricRendering.CUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395
https://github.com/sofa-framework/sofa/pull/4395:806,Testability,test,test,806,"… into a dedicated plugin. The plugin VolumetricRendering needed a bit of cleaning too. The new folder hierarchy is the following:. - SofaCUDA; - VolumetricRendering; - VolumetricRendering; - VolumetricRendering.CUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395
https://github.com/sofa-framework/sofa/pull/4396:826,Availability,failure,failures,826,"Following; - #4296 . (Part of the task #4217 ). Mat<> is now a composition of std::array of line (which is vec) instead of inhering fixed_array<Vec>. Note: The change in ParallelTetra is due to a static_assert triggered (N >0 in Vec) in the lambda in MSVC, I dont understand why 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4396
https://github.com/sofa-framework/sofa/pull/4396:875,Availability,failure,failures,875,"Following; - #4296 . (Part of the task #4217 ). Mat<> is now a composition of std::array of line (which is vec) instead of inhering fixed_array<Vec>. Note: The change in ParallelTetra is due to a static_assert triggered (N >0 in Vec) in the lambda in MSVC, I dont understand why 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4396
https://github.com/sofa-framework/sofa/pull/4396:445,Security,Certificate,Certificate,445,"Following; - #4296 . (Part of the task #4217 ). Mat<> is now a composition of std::array of line (which is vec) instead of inhering fixed_array<Vec>. Note: The change in ParallelTetra is due to a static_assert triggered (N >0 in Vec) in the lambda in MSVC, I dont understand why 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4396
https://github.com/sofa-framework/sofa/pull/4396:556,Security,certificate,certificate-of-origin-dco,556,"Following; - #4296 . (Part of the task #4217 ). Mat<> is now a composition of std::array of line (which is vec) instead of inhering fixed_array<Vec>. Note: The change in ParallelTetra is due to a static_assert triggered (N >0 in Vec) in the lambda in MSVC, I dont understand why 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4396
https://github.com/sofa-framework/sofa/pull/4396:821,Testability,test,test,821,"Following; - #4296 . (Part of the task #4217 ). Mat<> is now a composition of std::array of line (which is vec) instead of inhering fixed_array<Vec>. Note: The change in ParallelTetra is due to a static_assert triggered (N >0 in Vec) in the lambda in MSVC, I dont understand why 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4396
https://github.com/sofa-framework/sofa/pull/4396:870,Testability,test,test,870,"Following; - #4296 . (Part of the task #4217 ). Mat<> is now a composition of std::array of line (which is vec) instead of inhering fixed_array<Vec>. Note: The change in ParallelTetra is due to a static_assert triggered (N >0 in Vec) in the lambda in MSVC, I dont understand why 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4396
https://github.com/sofa-framework/sofa/issues/4397:154,Modifiability,inherit,inheritance,154,"Work on merging BaseContext and BaseNode should first be addressed since the iterator would need to be able to iterate on both, but they have a different inheritance. To be further discussed in a STC!. _Originally posted by @hugtalbot in https://github.com/sofa-framework/sofa/issues/4334#issuecomment-1864102974_",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4397
https://github.com/sofa-framework/sofa/pull/4398:881,Availability,failure,failures,881,"But scenes crash. Before going further with https://github.com/sofa-framework/sofa/pull/4395, it is wiser to first fix the compilation of the plugin. We can even wonder if we keep this plugin since it has not been maintained for a while. Note that this plugin is not compiled on the CI. See https://github.com/sofa-framework/ci/pull/32. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398
https://github.com/sofa-framework/sofa/pull/4398:930,Availability,failure,failures,930,"But scenes crash. Before going further with https://github.com/sofa-framework/sofa/pull/4395, it is wiser to first fix the compilation of the plugin. We can even wonder if we keep this plugin since it has not been maintained for a while. Note that this plugin is not compiled on the CI. See https://github.com/sofa-framework/ci/pull/32. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398
https://github.com/sofa-framework/sofa/pull/4398:142,Modifiability,plugin,plugin,142,"But scenes crash. Before going further with https://github.com/sofa-framework/sofa/pull/4395, it is wiser to first fix the compilation of the plugin. We can even wonder if we keep this plugin since it has not been maintained for a while. Note that this plugin is not compiled on the CI. See https://github.com/sofa-framework/ci/pull/32. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398
https://github.com/sofa-framework/sofa/pull/4398:185,Modifiability,plugin,plugin,185,"But scenes crash. Before going further with https://github.com/sofa-framework/sofa/pull/4395, it is wiser to first fix the compilation of the plugin. We can even wonder if we keep this plugin since it has not been maintained for a while. Note that this plugin is not compiled on the CI. See https://github.com/sofa-framework/ci/pull/32. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398
https://github.com/sofa-framework/sofa/pull/4398:253,Modifiability,plugin,plugin,253,"But scenes crash. Before going further with https://github.com/sofa-framework/sofa/pull/4395, it is wiser to first fix the compilation of the plugin. We can even wonder if we keep this plugin since it has not been maintained for a while. Note that this plugin is not compiled on the CI. See https://github.com/sofa-framework/ci/pull/32. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398
https://github.com/sofa-framework/sofa/pull/4398:500,Security,Certificate,Certificate,500,"But scenes crash. Before going further with https://github.com/sofa-framework/sofa/pull/4395, it is wiser to first fix the compilation of the plugin. We can even wonder if we keep this plugin since it has not been maintained for a while. Note that this plugin is not compiled on the CI. See https://github.com/sofa-framework/ci/pull/32. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398
https://github.com/sofa-framework/sofa/pull/4398:611,Security,certificate,certificate-of-origin-dco,611,"But scenes crash. Before going further with https://github.com/sofa-framework/sofa/pull/4395, it is wiser to first fix the compilation of the plugin. We can even wonder if we keep this plugin since it has not been maintained for a while. Note that this plugin is not compiled on the CI. See https://github.com/sofa-framework/ci/pull/32. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398
https://github.com/sofa-framework/sofa/pull/4398:876,Testability,test,test,876,"But scenes crash. Before going further with https://github.com/sofa-framework/sofa/pull/4395, it is wiser to first fix the compilation of the plugin. We can even wonder if we keep this plugin since it has not been maintained for a while. Note that this plugin is not compiled on the CI. See https://github.com/sofa-framework/ci/pull/32. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398
https://github.com/sofa-framework/sofa/pull/4398:925,Testability,test,test,925,"But scenes crash. Before going further with https://github.com/sofa-framework/sofa/pull/4395, it is wiser to first fix the compilation of the plugin. We can even wonder if we keep this plugin since it has not been maintained for a while. Note that this plugin is not compiled on the CI. See https://github.com/sofa-framework/ci/pull/32. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398
https://github.com/sofa-framework/sofa/issues/4399:15,Safety,avoid,avoid,15,"### _or how to avoid calling applyJ/applyJT on non-mechanical-purposed mappings (mainly for visual mapping)_. A mapping is considered mechanical from a MechanicalVisitor POV if:. 1. isMechanical is true (i.e mapForces, mapConstraints and mapMasses is true). It looks logical but certain Visitors, especially MechanicalPropagateDxVisitor, just ignore this trait and just calls go through all the mappings anyway; https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Simulation/Core/src/sofa/simulation/mechanicalvisitor/MechanicalPropagateDxVisitor.cpp#L48-L54. 2. MechanicalPropagateDxVisitor is still called on (supposedly) non-mechanical mapping but applyJ() (more especially the implementation in Mappings), wont be called if the State does not store velocities. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Core/src/sofa/core/Mapping.inl#L150-L163. _**In a nutshell, ultimately avoiding calling applyJ/applyJT means that the output of a mapping should not be a **MechanicalObject** (the only implementation of State that store velocities, AFAIK)**_. ---. It should be more clearer on why there are MechanicalVisitors which still calls mechanical functions on flagged non-mechanical mappings, i.e why the ignore flag is true for MechanicalPropagateDxVisitor in FreeMotionAnimationLoop for example. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/Component/AnimationLoop/src/sofa/component/animationloop/FreeMotionAnimationLoop.cpp#L392",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4399
https://github.com/sofa-framework/sofa/issues/4399:984,Safety,avoid,avoiding,984,"### _or how to avoid calling applyJ/applyJT on non-mechanical-purposed mappings (mainly for visual mapping)_. A mapping is considered mechanical from a MechanicalVisitor POV if:. 1. isMechanical is true (i.e mapForces, mapConstraints and mapMasses is true). It looks logical but certain Visitors, especially MechanicalPropagateDxVisitor, just ignore this trait and just calls go through all the mappings anyway; https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Simulation/Core/src/sofa/simulation/mechanicalvisitor/MechanicalPropagateDxVisitor.cpp#L48-L54. 2. MechanicalPropagateDxVisitor is still called on (supposedly) non-mechanical mapping but applyJ() (more especially the implementation in Mappings), wont be called if the State does not store velocities. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Core/src/sofa/core/Mapping.inl#L150-L163. _**In a nutshell, ultimately avoiding calling applyJ/applyJT means that the output of a mapping should not be a **MechanicalObject** (the only implementation of State that store velocities, AFAIK)**_. ---. It should be more clearer on why there are MechanicalVisitors which still calls mechanical functions on flagged non-mechanical mappings, i.e why the ignore flag is true for MechanicalPropagateDxVisitor in FreeMotionAnimationLoop for example. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/Component/AnimationLoop/src/sofa/component/animationloop/FreeMotionAnimationLoop.cpp#L392",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4399
https://github.com/sofa-framework/sofa/issues/4399:267,Testability,log,logical,267,"### _or how to avoid calling applyJ/applyJT on non-mechanical-purposed mappings (mainly for visual mapping)_. A mapping is considered mechanical from a MechanicalVisitor POV if:. 1. isMechanical is true (i.e mapForces, mapConstraints and mapMasses is true). It looks logical but certain Visitors, especially MechanicalPropagateDxVisitor, just ignore this trait and just calls go through all the mappings anyway; https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Simulation/Core/src/sofa/simulation/mechanicalvisitor/MechanicalPropagateDxVisitor.cpp#L48-L54. 2. MechanicalPropagateDxVisitor is still called on (supposedly) non-mechanical mapping but applyJ() (more especially the implementation in Mappings), wont be called if the State does not store velocities. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Core/src/sofa/core/Mapping.inl#L150-L163. _**In a nutshell, ultimately avoiding calling applyJ/applyJT means that the output of a mapping should not be a **MechanicalObject** (the only implementation of State that store velocities, AFAIK)**_. ---. It should be more clearer on why there are MechanicalVisitors which still calls mechanical functions on flagged non-mechanical mappings, i.e why the ignore flag is true for MechanicalPropagateDxVisitor in FreeMotionAnimationLoop for example. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/Component/AnimationLoop/src/sofa/component/animationloop/FreeMotionAnimationLoop.cpp#L392",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4399
https://github.com/sofa-framework/sofa/issues/4399:1179,Usability,clear,clearer,1179,"### _or how to avoid calling applyJ/applyJT on non-mechanical-purposed mappings (mainly for visual mapping)_. A mapping is considered mechanical from a MechanicalVisitor POV if:. 1. isMechanical is true (i.e mapForces, mapConstraints and mapMasses is true). It looks logical but certain Visitors, especially MechanicalPropagateDxVisitor, just ignore this trait and just calls go through all the mappings anyway; https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Simulation/Core/src/sofa/simulation/mechanicalvisitor/MechanicalPropagateDxVisitor.cpp#L48-L54. 2. MechanicalPropagateDxVisitor is still called on (supposedly) non-mechanical mapping but applyJ() (more especially the implementation in Mappings), wont be called if the State does not store velocities. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Core/src/sofa/core/Mapping.inl#L150-L163. _**In a nutshell, ultimately avoiding calling applyJ/applyJT means that the output of a mapping should not be a **MechanicalObject** (the only implementation of State that store velocities, AFAIK)**_. ---. It should be more clearer on why there are MechanicalVisitors which still calls mechanical functions on flagged non-mechanical mappings, i.e why the ignore flag is true for MechanicalPropagateDxVisitor in FreeMotionAnimationLoop for example. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/Component/AnimationLoop/src/sofa/component/animationloop/FreeMotionAnimationLoop.cpp#L392",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4399
https://github.com/sofa-framework/sofa/issues/4402:130,Availability,error,errors,130,"Hi,. While trying to compile SOFA(https://github.com/sofa-framework/sofa => branch ""v23.06"") with LLVM 16 , we are getting linker errors as below,. ld.lld: error: undefined symbol: vtable for sofa::linearalgebra::FullVector<double>; >>> referenced by ld-temp.o; >>> lto.tmp:(sofa::component::odesolver::testing::getVector(boost::intrusive_ptr<sofa::simulation::Node>, sofa::core::TVecId<(sofa::core::; VecType)0, (sofa::core::VecAccess)0>, bool)); >>> did you mean: typeinfo for sofa::linearalgebra::FullVector<double>; >>> defined in: ../../../../../lib/libSofa.LinearAlgebra.so.23.06.00; >>> the vtable symbol may be undefined because the class is missing its key function (see https://lld.llvm.org/missingkeyfunction); clang-16: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/build.make:212: bin/Sofa.Component.ODESolver; .Backward_test] Error 1; make[1]: *** [CMakeFiles/Makefile2:5981: Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs... To Resolve this, we have included definition of key function of FullVector calss in FullVector.cpp. The key function seems to be resize() - i.e the first non-pure, non-linear and virtual function in a polymorphic class. The actual definition of resize() is present in FullVector.inl file and we have commented it out. . Please let us know if the changes are good. . Thanks,; Sandeep.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402
https://github.com/sofa-framework/sofa/issues/4402:156,Availability,error,error,156,"Hi,. While trying to compile SOFA(https://github.com/sofa-framework/sofa => branch ""v23.06"") with LLVM 16 , we are getting linker errors as below,. ld.lld: error: undefined symbol: vtable for sofa::linearalgebra::FullVector<double>; >>> referenced by ld-temp.o; >>> lto.tmp:(sofa::component::odesolver::testing::getVector(boost::intrusive_ptr<sofa::simulation::Node>, sofa::core::TVecId<(sofa::core::; VecType)0, (sofa::core::VecAccess)0>, bool)); >>> did you mean: typeinfo for sofa::linearalgebra::FullVector<double>; >>> defined in: ../../../../../lib/libSofa.LinearAlgebra.so.23.06.00; >>> the vtable symbol may be undefined because the class is missing its key function (see https://lld.llvm.org/missingkeyfunction); clang-16: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/build.make:212: bin/Sofa.Component.ODESolver; .Backward_test] Error 1; make[1]: *** [CMakeFiles/Makefile2:5981: Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs... To Resolve this, we have included definition of key function of FullVector calss in FullVector.cpp. The key function seems to be resize() - i.e the first non-pure, non-linear and virtual function in a polymorphic class. The actual definition of resize() is present in FullVector.inl file and we have commented it out. . Please let us know if the changes are good. . Thanks,; Sandeep.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402
https://github.com/sofa-framework/sofa/issues/4402:732,Availability,error,error,732,"Hi,. While trying to compile SOFA(https://github.com/sofa-framework/sofa => branch ""v23.06"") with LLVM 16 , we are getting linker errors as below,. ld.lld: error: undefined symbol: vtable for sofa::linearalgebra::FullVector<double>; >>> referenced by ld-temp.o; >>> lto.tmp:(sofa::component::odesolver::testing::getVector(boost::intrusive_ptr<sofa::simulation::Node>, sofa::core::TVecId<(sofa::core::; VecType)0, (sofa::core::VecAccess)0>, bool)); >>> did you mean: typeinfo for sofa::linearalgebra::FullVector<double>; >>> defined in: ../../../../../lib/libSofa.LinearAlgebra.so.23.06.00; >>> the vtable symbol may be undefined because the class is missing its key function (see https://lld.llvm.org/missingkeyfunction); clang-16: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/build.make:212: bin/Sofa.Component.ODESolver; .Backward_test] Error 1; make[1]: *** [CMakeFiles/Makefile2:5981: Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs... To Resolve this, we have included definition of key function of FullVector calss in FullVector.cpp. The key function seems to be resize() - i.e the first non-pure, non-linear and virtual function in a polymorphic class. The actual definition of resize() is present in FullVector.inl file and we have commented it out. . Please let us know if the changes are good. . Thanks,; Sandeep.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402
https://github.com/sofa-framework/sofa/issues/4402:976,Availability,Error,Error,976,"Hi,. While trying to compile SOFA(https://github.com/sofa-framework/sofa => branch ""v23.06"") with LLVM 16 , we are getting linker errors as below,. ld.lld: error: undefined symbol: vtable for sofa::linearalgebra::FullVector<double>; >>> referenced by ld-temp.o; >>> lto.tmp:(sofa::component::odesolver::testing::getVector(boost::intrusive_ptr<sofa::simulation::Node>, sofa::core::TVecId<(sofa::core::; VecType)0, (sofa::core::VecAccess)0>, bool)); >>> did you mean: typeinfo for sofa::linearalgebra::FullVector<double>; >>> defined in: ../../../../../lib/libSofa.LinearAlgebra.so.23.06.00; >>> the vtable symbol may be undefined because the class is missing its key function (see https://lld.llvm.org/missingkeyfunction); clang-16: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/build.make:212: bin/Sofa.Component.ODESolver; .Backward_test] Error 1; make[1]: *** [CMakeFiles/Makefile2:5981: Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs... To Resolve this, we have included definition of key function of FullVector calss in FullVector.cpp. The key function seems to be resize() - i.e the first non-pure, non-linear and virtual function in a polymorphic class. The actual definition of resize() is present in FullVector.inl file and we have commented it out. . Please let us know if the changes are good. . Thanks,; Sandeep.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402
https://github.com/sofa-framework/sofa/issues/4402:1125,Availability,Error,Error,1125,"Hi,. While trying to compile SOFA(https://github.com/sofa-framework/sofa => branch ""v23.06"") with LLVM 16 , we are getting linker errors as below,. ld.lld: error: undefined symbol: vtable for sofa::linearalgebra::FullVector<double>; >>> referenced by ld-temp.o; >>> lto.tmp:(sofa::component::odesolver::testing::getVector(boost::intrusive_ptr<sofa::simulation::Node>, sofa::core::TVecId<(sofa::core::; VecType)0, (sofa::core::VecAccess)0>, bool)); >>> did you mean: typeinfo for sofa::linearalgebra::FullVector<double>; >>> defined in: ../../../../../lib/libSofa.LinearAlgebra.so.23.06.00; >>> the vtable symbol may be undefined because the class is missing its key function (see https://lld.llvm.org/missingkeyfunction); clang-16: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/build.make:212: bin/Sofa.Component.ODESolver; .Backward_test] Error 1; make[1]: *** [CMakeFiles/Makefile2:5981: Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs... To Resolve this, we have included definition of key function of FullVector calss in FullVector.cpp. The key function seems to be resize() - i.e the first non-pure, non-linear and virtual function in a polymorphic class. The actual definition of resize() is present in FullVector.inl file and we have commented it out. . Please let us know if the changes are good. . Thanks,; Sandeep.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402
https://github.com/sofa-framework/sofa/issues/4402:1379,Modifiability,polymorphi,polymorphic,1379,"Hi,. While trying to compile SOFA(https://github.com/sofa-framework/sofa => branch ""v23.06"") with LLVM 16 , we are getting linker errors as below,. ld.lld: error: undefined symbol: vtable for sofa::linearalgebra::FullVector<double>; >>> referenced by ld-temp.o; >>> lto.tmp:(sofa::component::odesolver::testing::getVector(boost::intrusive_ptr<sofa::simulation::Node>, sofa::core::TVecId<(sofa::core::; VecType)0, (sofa::core::VecAccess)0>, bool)); >>> did you mean: typeinfo for sofa::linearalgebra::FullVector<double>; >>> defined in: ../../../../../lib/libSofa.LinearAlgebra.so.23.06.00; >>> the vtable symbol may be undefined because the class is missing its key function (see https://lld.llvm.org/missingkeyfunction); clang-16: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/build.make:212: bin/Sofa.Component.ODESolver; .Backward_test] Error 1; make[1]: *** [CMakeFiles/Makefile2:5981: Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs... To Resolve this, we have included definition of key function of FullVector calss in FullVector.cpp. The key function seems to be resize() - i.e the first non-pure, non-linear and virtual function in a polymorphic class. The actual definition of resize() is present in FullVector.inl file and we have commented it out. . Please let us know if the changes are good. . Thanks,; Sandeep.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402
https://github.com/sofa-framework/sofa/issues/4402:303,Testability,test,testing,303,"Hi,. While trying to compile SOFA(https://github.com/sofa-framework/sofa => branch ""v23.06"") with LLVM 16 , we are getting linker errors as below,. ld.lld: error: undefined symbol: vtable for sofa::linearalgebra::FullVector<double>; >>> referenced by ld-temp.o; >>> lto.tmp:(sofa::component::odesolver::testing::getVector(boost::intrusive_ptr<sofa::simulation::Node>, sofa::core::TVecId<(sofa::core::; VecType)0, (sofa::core::VecAccess)0>, bool)); >>> did you mean: typeinfo for sofa::linearalgebra::FullVector<double>; >>> defined in: ../../../../../lib/libSofa.LinearAlgebra.so.23.06.00; >>> the vtable symbol may be undefined because the class is missing its key function (see https://lld.llvm.org/missingkeyfunction); clang-16: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/build.make:212: bin/Sofa.Component.ODESolver; .Backward_test] Error 1; make[1]: *** [CMakeFiles/Makefile2:5981: Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs... To Resolve this, we have included definition of key function of FullVector calss in FullVector.cpp. The key function seems to be resize() - i.e the first non-pure, non-linear and virtual function in a polymorphic class. The actual definition of resize() is present in FullVector.inl file and we have commented it out. . Please let us know if the changes are good. . Thanks,; Sandeep.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402
https://github.com/sofa-framework/sofa/issues/4402:854,Testability,test,tests,854,"Hi,. While trying to compile SOFA(https://github.com/sofa-framework/sofa => branch ""v23.06"") with LLVM 16 , we are getting linker errors as below,. ld.lld: error: undefined symbol: vtable for sofa::linearalgebra::FullVector<double>; >>> referenced by ld-temp.o; >>> lto.tmp:(sofa::component::odesolver::testing::getVector(boost::intrusive_ptr<sofa::simulation::Node>, sofa::core::TVecId<(sofa::core::; VecType)0, (sofa::core::VecAccess)0>, bool)); >>> did you mean: typeinfo for sofa::linearalgebra::FullVector<double>; >>> defined in: ../../../../../lib/libSofa.LinearAlgebra.so.23.06.00; >>> the vtable symbol may be undefined because the class is missing its key function (see https://lld.llvm.org/missingkeyfunction); clang-16: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/build.make:212: bin/Sofa.Component.ODESolver; .Backward_test] Error 1; make[1]: *** [CMakeFiles/Makefile2:5981: Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs... To Resolve this, we have included definition of key function of FullVector calss in FullVector.cpp. The key function seems to be resize() - i.e the first non-pure, non-linear and virtual function in a polymorphic class. The actual definition of resize() is present in FullVector.inl file and we have commented it out. . Please let us know if the changes are good. . Thanks,; Sandeep.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402
https://github.com/sofa-framework/sofa/issues/4402:1060,Testability,test,tests,1060,"Hi,. While trying to compile SOFA(https://github.com/sofa-framework/sofa => branch ""v23.06"") with LLVM 16 , we are getting linker errors as below,. ld.lld: error: undefined symbol: vtable for sofa::linearalgebra::FullVector<double>; >>> referenced by ld-temp.o; >>> lto.tmp:(sofa::component::odesolver::testing::getVector(boost::intrusive_ptr<sofa::simulation::Node>, sofa::core::TVecId<(sofa::core::; VecType)0, (sofa::core::VecAccess)0>, bool)); >>> did you mean: typeinfo for sofa::linearalgebra::FullVector<double>; >>> defined in: ../../../../../lib/libSofa.LinearAlgebra.so.23.06.00; >>> the vtable symbol may be undefined because the class is missing its key function (see https://lld.llvm.org/missingkeyfunction); clang-16: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/build.make:212: bin/Sofa.Component.ODESolver; .Backward_test] Error 1; make[1]: *** [CMakeFiles/Makefile2:5981: Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs... To Resolve this, we have included definition of key function of FullVector calss in FullVector.cpp. The key function seems to be resize() - i.e the first non-pure, non-linear and virtual function in a polymorphic class. The actual definition of resize() is present in FullVector.inl file and we have commented it out. . Please let us know if the changes are good. . Thanks,; Sandeep.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402
https://github.com/sofa-framework/sofa/issues/4407:284,Testability,assert,asserts,284,"after 200 steps:. v22.12; <img src=""https://github.com/sofa-framework/sofa/assets/11028016/94b95e00-f68b-464e-8e19-96bb6332a282"" width=""400"" />. v23.06; <img src=""https://github.com/sofa-framework/sofa/assets/11028016/69dde38e-8b34-4771-aa4a-09889fdea45e"" width=""400"" />. Moreover it asserts in Debug, while browsing the elements (so I guess it explains why the rest of tetra are blue in not debug)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4407
https://github.com/sofa-framework/sofa/pull/4408:874,Availability,failure,failures,874,"it was not noticed in #4270 that the two version of RGB from HSV was different on Hue value ; (one is normalized [0...1], the other in RGBAColor is not and is in degree [0...360]). for those interested : http://wiki.gis.com/wiki/index.php/HSV_Color_Space. FYI while debugging, an issue in TetraFEMForcefield has been found #4407; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4408
https://github.com/sofa-framework/sofa/pull/4408:923,Availability,failure,failures,923,"it was not noticed in #4270 that the two version of RGB from HSV was different on Hue value ; (one is normalized [0...1], the other in RGBAColor is not and is in degree [0...360]). for those interested : http://wiki.gis.com/wiki/index.php/HSV_Color_Space. FYI while debugging, an issue in TetraFEMForcefield has been found #4407; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4408
https://github.com/sofa-framework/sofa/pull/4408:493,Security,Certificate,Certificate,493,"it was not noticed in #4270 that the two version of RGB from HSV was different on Hue value ; (one is normalized [0...1], the other in RGBAColor is not and is in degree [0...360]). for those interested : http://wiki.gis.com/wiki/index.php/HSV_Color_Space. FYI while debugging, an issue in TetraFEMForcefield has been found #4407; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4408
https://github.com/sofa-framework/sofa/pull/4408:604,Security,certificate,certificate-of-origin-dco,604,"it was not noticed in #4270 that the two version of RGB from HSV was different on Hue value ; (one is normalized [0...1], the other in RGBAColor is not and is in degree [0...360]). for those interested : http://wiki.gis.com/wiki/index.php/HSV_Color_Space. FYI while debugging, an issue in TetraFEMForcefield has been found #4407; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4408
https://github.com/sofa-framework/sofa/pull/4408:869,Testability,test,test,869,"it was not noticed in #4270 that the two version of RGB from HSV was different on Hue value ; (one is normalized [0...1], the other in RGBAColor is not and is in degree [0...360]). for those interested : http://wiki.gis.com/wiki/index.php/HSV_Color_Space. FYI while debugging, an issue in TetraFEMForcefield has been found #4407; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4408
https://github.com/sofa-framework/sofa/pull/4408:918,Testability,test,test,918,"it was not noticed in #4270 that the two version of RGB from HSV was different on Hue value ; (one is normalized [0...1], the other in RGBAColor is not and is in degree [0...360]). for those interested : http://wiki.gis.com/wiki/index.php/HSV_Color_Space. FYI while debugging, an issue in TetraFEMForcefield has been found #4407; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4408
https://github.com/sofa-framework/sofa/issues/4409:14,Modifiability,plugin,plugins,14,"When fetching plugins such as **SofaPython3** or **BeamAdapter** directly at CMake configure time, the plugin is well added in the list of _applications/plugins/_ but it create also add a .gitignore file (which is not in the plugin repository).; This .gitignore file has in it:; > ```*``` . thus all new file created in the plugin are ignored. Is it a wanted behavior?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4409
https://github.com/sofa-framework/sofa/issues/4409:83,Modifiability,config,configure,83,"When fetching plugins such as **SofaPython3** or **BeamAdapter** directly at CMake configure time, the plugin is well added in the list of _applications/plugins/_ but it create also add a .gitignore file (which is not in the plugin repository).; This .gitignore file has in it:; > ```*``` . thus all new file created in the plugin are ignored. Is it a wanted behavior?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4409
https://github.com/sofa-framework/sofa/issues/4409:103,Modifiability,plugin,plugin,103,"When fetching plugins such as **SofaPython3** or **BeamAdapter** directly at CMake configure time, the plugin is well added in the list of _applications/plugins/_ but it create also add a .gitignore file (which is not in the plugin repository).; This .gitignore file has in it:; > ```*``` . thus all new file created in the plugin are ignored. Is it a wanted behavior?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4409
https://github.com/sofa-framework/sofa/issues/4409:153,Modifiability,plugin,plugins,153,"When fetching plugins such as **SofaPython3** or **BeamAdapter** directly at CMake configure time, the plugin is well added in the list of _applications/plugins/_ but it create also add a .gitignore file (which is not in the plugin repository).; This .gitignore file has in it:; > ```*``` . thus all new file created in the plugin are ignored. Is it a wanted behavior?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4409
https://github.com/sofa-framework/sofa/issues/4409:225,Modifiability,plugin,plugin,225,"When fetching plugins such as **SofaPython3** or **BeamAdapter** directly at CMake configure time, the plugin is well added in the list of _applications/plugins/_ but it create also add a .gitignore file (which is not in the plugin repository).; This .gitignore file has in it:; > ```*``` . thus all new file created in the plugin are ignored. Is it a wanted behavior?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4409
https://github.com/sofa-framework/sofa/issues/4409:324,Modifiability,plugin,plugin,324,"When fetching plugins such as **SofaPython3** or **BeamAdapter** directly at CMake configure time, the plugin is well added in the list of _applications/plugins/_ but it create also add a .gitignore file (which is not in the plugin repository).; This .gitignore file has in it:; > ```*``` . thus all new file created in the plugin are ignored. Is it a wanted behavior?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4409
https://github.com/sofa-framework/sofa/pull/4410:789,Availability,failure,failures,789,"Regnerated using github template.; It should now properly label the repository on the top right corner and when appearing in research. ; Also it should be added as a second tab as the readme on the main page. PR Candidate for SOFA 2024 awards!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4410
https://github.com/sofa-framework/sofa/pull/4410:838,Availability,failure,failures,838,"Regnerated using github template.; It should now properly label the repository on the top right corner and when appearing in research. ; Also it should be added as a second tab as the readme on the main page. PR Candidate for SOFA 2024 awards!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4410
https://github.com/sofa-framework/sofa/pull/4410:408,Security,Certificate,Certificate,408,"Regnerated using github template.; It should now properly label the repository on the top right corner and when appearing in research. ; Also it should be added as a second tab as the readme on the main page. PR Candidate for SOFA 2024 awards!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4410
https://github.com/sofa-framework/sofa/pull/4410:519,Security,certificate,certificate-of-origin-dco,519,"Regnerated using github template.; It should now properly label the repository on the top right corner and when appearing in research. ; Also it should be added as a second tab as the readme on the main page. PR Candidate for SOFA 2024 awards!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4410
https://github.com/sofa-framework/sofa/pull/4410:784,Testability,test,test,784,"Regnerated using github template.; It should now properly label the repository on the top right corner and when appearing in research. ; Also it should be added as a second tab as the readme on the main page. PR Candidate for SOFA 2024 awards!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4410
https://github.com/sofa-framework/sofa/pull/4410:833,Testability,test,test,833,"Regnerated using github template.; It should now properly label the repository on the top right corner and when appearing in research. ; Also it should be added as a second tab as the readme on the main page. PR Candidate for SOFA 2024 awards!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4410
https://github.com/sofa-framework/sofa/pull/4417:579,Availability,failure,failures,579,"Reorder / recolor / change badges. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4417
https://github.com/sofa-framework/sofa/pull/4417:628,Availability,failure,failures,628,"Reorder / recolor / change badges. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4417
https://github.com/sofa-framework/sofa/pull/4417:198,Security,Certificate,Certificate,198,"Reorder / recolor / change badges. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4417
https://github.com/sofa-framework/sofa/pull/4417:309,Security,certificate,certificate-of-origin-dco,309,"Reorder / recolor / change badges. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4417
https://github.com/sofa-framework/sofa/pull/4417:574,Testability,test,test,574,"Reorder / recolor / change badges. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4417
https://github.com/sofa-framework/sofa/pull/4417:623,Testability,test,test,623,"Reorder / recolor / change badges. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4417
https://github.com/sofa-framework/sofa/pull/4420:1533,Availability,failure,failures,1533,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:1582,Availability,failure,failures,1582,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:4,Integrability,depend,depends-on,4,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:74,Integrability,depend,depends-on,74,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:299,Modifiability,plugin,plugins,299,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:347,Modifiability,plugin,plugin,347,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:1152,Security,Certificate,Certificate,1152,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:1263,Security,certificate,certificate-of-origin-dco,1263,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:290,Testability,test,tests,290,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:441,Testability,test,tests,441,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:814,Testability,test,test,814,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:912,Testability,Test,Tested,912,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:962,Testability,test,test,962,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:1528,Testability,test,test,1528,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4420:1577,Testability,test,test,1577,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420
https://github.com/sofa-framework/sofa/pull/4422:4519,Availability,failure,failures,4519,"dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Component.LinearSystem; Sofa.Component.Mapping.Linear; Sofa.Component.Mass; Sofa.Component.ODESolver.Backward; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.StateContainer; Sofa.Component.Topology.Container.Constant; Sofa.Component.Topology.Container.Grid; Sofa.Component.Visual; Sofa.GL.Component.Rendering3D; Sofa.GL.Component.Shader; Sofa.Simulation.Core; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:4568,Availability,failure,failures,4568,"dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Component.LinearSystem; Sofa.Component.Mapping.Linear; Sofa.Component.Mass; Sofa.Component.ODESolver.Backward; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.StateContainer; Sofa.Component.Topology.Container.Constant; Sofa.Component.Topology.Container.Grid; Sofa.Component.Visual; Sofa.GL.Component.Rendering3D; Sofa.GL.Component.Shader; Sofa.Simulation.Core; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:133,Modifiability,Plugin,PluginManager,133,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:155,Modifiability,plugin,plugin,155,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:255,Modifiability,Plugin,PluginManager,255,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:277,Modifiability,plugin,plugin,277,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:393,Modifiability,Plugin,PluginManager,393,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:415,Modifiability,plugin,plugin,415,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:534,Modifiability,Plugin,PluginManager,534,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:556,Modifiability,plugin,plugin,556,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:661,Modifiability,Plugin,PluginManager,661,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:683,Modifiability,plugin,plugin,683,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:796,Modifiability,Plugin,PluginManager,796,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:818,Modifiability,plugin,plugin,818,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:937,Modifiability,Plugin,PluginManager,937,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:959,Modifiability,plugin,plugin,959,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1074,Modifiability,Plugin,PluginManager,1074,\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1096,Modifiability,plugin,plugin,1096,\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1190,Modifiability,Plugin,PluginManager,1190,t.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] L,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1212,Modifiability,plugin,plugin,1212,t.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] L,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1321,Modifiability,Plugin,PluginManager,1321,on.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1343,Modifiability,plugin,plugin,1343,on.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1444,Modifiability,Plugin,PluginManager,1444,mponent.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1466,Modifiability,plugin,plugin,1466,mponent.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1557,Modifiability,Plugin,PluginManager,1557,s/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1579,Modifiability,plugin,plugin,1579,s/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1684,Modifiability,Plugin,PluginManager,1684,s/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; Barycent,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1706,Modifiability,plugin,plugin,1706,s/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; Barycent,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1819,Modifiability,Plugin,PluginManager,1819,s/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; H,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1841,Modifiability,plugin,plugin,1841,s/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; H,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1942,Modifiability,Plugin,PluginManager,1942,ex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; Mecha,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1964,Modifiability,plugin,plugin,1964,ex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; Mecha,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2078,Modifiability,Plugin,PluginManager,2078,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificatio,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2100,Modifiability,plugin,plugin,2100,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificatio,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2210,Modifiability,Plugin,PluginManager,2210,ilds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Compone,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2232,Modifiability,plugin,plugin,2232,ilds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Compone,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2325,Modifiability,Plugin,PluginManager,2325,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; So,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2347,Modifiability,plugin,plugin,2347,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; So,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2448,Modifiability,Plugin,PluginManager,2448,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2470,Modifiability,plugin,plugin,2470,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2566,Modifiability,Plugin,PluginManager,2566,ev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Com,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2588,Modifiability,plugin,plugin,2588,ev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Com,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:148,Performance,Load,Loaded,148,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:270,Performance,Load,Loaded,270,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:408,Performance,Load,Loaded,408,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:549,Performance,Load,Loaded,549,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:676,Performance,Load,Loaded,676,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:811,Performance,Load,Loaded,811,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:952,Performance,Load,Loaded,952,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1089,Performance,Load,Loaded,1089,\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1205,Performance,Load,Loaded,1205,t.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] L,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1336,Performance,Load,Loaded,1336,on.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1459,Performance,Load,Loaded,1459,mponent.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1572,Performance,Load,Loaded,1572,s/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1699,Performance,Load,Loaded,1699,s/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; Barycent,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1834,Performance,Load,Loaded,1834,s/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; H,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:1957,Performance,Load,Loaded,1957,ex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; Mecha,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2093,Performance,Load,Loaded,2093,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificatio,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2225,Performance,Load,Loaded,2225,ilds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Compone,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2340,Performance,Load,Loaded,2340,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; So,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2463,Performance,Load,Loaded,2463,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:2581,Performance,Load,Loaded,2581,ev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Com,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:360,Safety,Detect,Detection,360,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:498,Safety,Detect,Detection,498,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:3289,Safety,Detect,Detection,3289,".Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Component.LinearSystem; Sofa.Component.Mapping.Linear; Sofa.Component.Mass; Sofa.Component.ODESolver.Backward; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.StateContainer; Sofa.Component.Topology.Container.Constant; Sofa.Component.Topology.Container.Grid; Sofa.Component.Visual; Sofa.GL.Component.Rendering3D; Sofa.GL.Component.Shader; Sofa.Simulation.Core; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:3335,Safety,Detect,Detection,3335,"Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Component.LinearSystem; Sofa.Component.Mapping.Linear; Sofa.Component.Mass; Sofa.Component.ODESolver.Backward; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.StateContainer; Sofa.Component.Topology.Container.Constant; Sofa.Component.Topology.Container.Grid; Sofa.Component.Visual; Sofa.GL.Component.Rendering3D; Sofa.GL.Component.Shader; Sofa.Simulation.Core; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Re",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:4138,Security,Certificate,Certificate,4138,"dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Component.LinearSystem; Sofa.Component.Mapping.Linear; Sofa.Component.Mass; Sofa.Component.ODESolver.Backward; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.StateContainer; Sofa.Component.Topology.Container.Constant; Sofa.Component.Topology.Container.Grid; Sofa.Component.Visual; Sofa.GL.Component.Rendering3D; Sofa.GL.Component.Shader; Sofa.Simulation.Core; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:4249,Security,certificate,certificate-of-origin-dco,4249,"dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Component.LinearSystem; Sofa.Component.Mapping.Linear; Sofa.Component.Mass; Sofa.Component.ODESolver.Backward; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.StateContainer; Sofa.Component.Topology.Container.Constant; Sofa.Component.Topology.Container.Grid; Sofa.Component.Visual; Sofa.GL.Component.Rendering3D; Sofa.GL.Component.Shader; Sofa.Simulation.Core; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:4514,Testability,test,test,4514,"dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Component.LinearSystem; Sofa.Component.Mapping.Linear; Sofa.Component.Mass; Sofa.Component.ODESolver.Backward; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.StateContainer; Sofa.Component.Topology.Container.Constant; Sofa.Component.Topology.Container.Grid; Sofa.Component.Visual; Sofa.GL.Component.Rendering3D; Sofa.GL.Component.Shader; Sofa.Simulation.Core; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/pull/4422:4563,Testability,test,test,4563,"dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Component.LinearSystem; Sofa.Component.Mapping.Linear; Sofa.Component.Mass; Sofa.Component.ODESolver.Backward; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.StateContainer; Sofa.Component.Topology.Container.Constant; Sofa.Component.Topology.Container.Grid; Sofa.Component.Visual; Sofa.GL.Component.Rendering3D; Sofa.GL.Component.Shader; Sofa.Simulation.Core; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422
https://github.com/sofa-framework/sofa/issues/4423:383,Performance,perform,performance,383,"i use sofa 22.12 by vs2022; cmake 3.27.2; Selecting Windows SDK version 10.0.20348.0 to target Windows 10.0.19045.; just use option SOFACUDA_THRUST in plugin_sofacuda; and; i use rtx 4060, nvidia driver 546.12, cuda 11.8, cudnn 8.9.6. I successfully compiled plugin_sofacuda, ran liver-CUDA.scn using runsofa, and I noticed that only the GPU0(Intel(R) UHD Graphics) were used in the performance probe instead of the GPU1(GeForce RTX 4060 Laptop GPU) (just 0%!). how to use 4060 to Accelerating my sofa simulation？",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4423
https://github.com/sofa-framework/sofa/issues/4424:136,Modifiability,plugin,plugin,136,Following https://github.com/sofa-framework/sofa/pull/4420. A good idea would be to centralize the regression-tests files in Regression plugin. . This would require multiple changes like being able to find the path of all compiled plugins to find the scenes and the regression references when they are inside of the plugin instead of Regression.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4424
https://github.com/sofa-framework/sofa/issues/4424:231,Modifiability,plugin,plugins,231,Following https://github.com/sofa-framework/sofa/pull/4420. A good idea would be to centralize the regression-tests files in Regression plugin. . This would require multiple changes like being able to find the path of all compiled plugins to find the scenes and the regression references when they are inside of the plugin instead of Regression.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4424
https://github.com/sofa-framework/sofa/issues/4424:316,Modifiability,plugin,plugin,316,Following https://github.com/sofa-framework/sofa/pull/4420. A good idea would be to centralize the regression-tests files in Regression plugin. . This would require multiple changes like being able to find the path of all compiled plugins to find the scenes and the regression references when they are inside of the plugin instead of Regression.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4424
https://github.com/sofa-framework/sofa/issues/4424:110,Testability,test,tests,110,Following https://github.com/sofa-framework/sofa/pull/4420. A good idea would be to centralize the regression-tests files in Regression plugin. . This would require multiple changes like being able to find the path of all compiled plugins to find the scenes and the regression references when they are inside of the plugin instead of Regression.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4424
https://github.com/sofa-framework/sofa/pull/4425:592,Availability,failure,failures,592,"Fix #4416. This PR should allow to merge #4410. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4425
https://github.com/sofa-framework/sofa/pull/4425:641,Availability,failure,failures,641,"Fix #4416. This PR should allow to merge #4410. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4425
https://github.com/sofa-framework/sofa/pull/4425:211,Security,Certificate,Certificate,211,"Fix #4416. This PR should allow to merge #4410. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4425
https://github.com/sofa-framework/sofa/pull/4425:322,Security,certificate,certificate-of-origin-dco,322,"Fix #4416. This PR should allow to merge #4410. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4425
https://github.com/sofa-framework/sofa/pull/4425:587,Testability,test,test,587,"Fix #4416. This PR should allow to merge #4410. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4425
https://github.com/sofa-framework/sofa/pull/4425:636,Testability,test,test,636,"Fix #4416. This PR should allow to merge #4410. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4425
https://github.com/sofa-framework/sofa/pull/4428:281,Availability,error,error,281,"ConstantSparsityPatternSystem relies on the assumption that the sparsity pattern of the mechanical matrix is constant. If the pattern is not constant, the component crashes.; This PR introduces a verification that the pattern follows the initial pattern. In case of a mismatch, an error is emitted and the insertion is skipped. This allows the simulation not to crash and inform the user. However, this behavior is available only if `checkIndices` is enabled. It is disabled by default because the check is time consuming, and the goal of this component is performance-oriented. To illustrate the new behavior, one can test the following scene:. ```xml; <Node name=""root"" dt=""0.02"" gravity=""0 -10 0"">; <Node name=""plugins"">; <RequiredPlugin name=""Sofa.Component.Constraint.Projective""/> <!-- Needed to use components [FixedProjectiveConstraint] -->; <RequiredPlugin name=""Sofa.Component.Engine.Select""/> <!-- Needed to use components [BoxROI] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [EigenSimplicialLDLT] -->; <RequiredPlugin name=""Sofa.Component.LinearSystem""/> <!-- Needed to use components [ConstantSparsityPatternSystem] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [PlaneForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [HexahedronFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; </Node>. <VisualStyle displayFlags=""showBeha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428
https://github.com/sofa-framework/sofa/pull/4428:415,Availability,avail,available,415,"ConstantSparsityPatternSystem relies on the assumption that the sparsity pattern of the mechanical matrix is constant. If the pattern is not constant, the component crashes.; This PR introduces a verification that the pattern follows the initial pattern. In case of a mismatch, an error is emitted and the insertion is skipped. This allows the simulation not to crash and inform the user. However, this behavior is available only if `checkIndices` is enabled. It is disabled by default because the check is time consuming, and the goal of this component is performance-oriented. To illustrate the new behavior, one can test the following scene:. ```xml; <Node name=""root"" dt=""0.02"" gravity=""0 -10 0"">; <Node name=""plugins"">; <RequiredPlugin name=""Sofa.Component.Constraint.Projective""/> <!-- Needed to use components [FixedProjectiveConstraint] -->; <RequiredPlugin name=""Sofa.Component.Engine.Select""/> <!-- Needed to use components [BoxROI] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [EigenSimplicialLDLT] -->; <RequiredPlugin name=""Sofa.Component.LinearSystem""/> <!-- Needed to use components [ConstantSparsityPatternSystem] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [PlaneForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [HexahedronFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; </Node>. <VisualStyle displayFlags=""showBeha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428
https://github.com/sofa-framework/sofa/pull/4428:3924,Availability,failure,failures,3924,"Loop/>. <EulerImplicitSolver name=""odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <!-- A constant sparsity pattern is assumed, but the presence of PlaneForceField invalid this assumption; Indices checking is enabled in order to detect that the pattern is not constant.; As soon as the pattern is no longer constant, insertions in the matrix are ignored.; Since it happens for all forces from PlaneForceField, they can be considered semi-explicit.; -->; <ConstantSparsityPatternSystem template=""CompressedRowSparseMatrix"" name=""A"" printLog=""true"" checkIndices=""true""/>; <EigenSimplicialLDLT template=""CompressedRowSparseMatrix"" linearSystem=""@A""/>; <MechanicalObject name=""DoFs"" />; <UniformMass name=""mass"" totalMass=""320"" />; <RegularGridTopology name=""grid"" nx=""4"" ny=""4"" nz=""20"" xmin=""-9"" xmax=""-6"" ymin=""0"" ymax=""3"" zmin=""0"" zmax=""19"" />; <BoxROI name=""box"" box=""-10 -1 -0.0001 -5 4 0.0001""/>; <FixedProjectiveConstraint indices=""@box.indices"" />; <HexahedronFEMForceField name=""FEM"" youngModulus=""4000"" poissonRatio=""0.3"" method=""large"" />; <PlaneForceField name=""planeForce"" stiffness=""1000"" damping=""20"" normal=""0 1 0"" d=""-3"" showPlane=""true""/>. </Node>; ```. Note that a lot of changes was about fixing the index checking in ConstantSparsityPatternSystem. It was never implemented. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428
https://github.com/sofa-framework/sofa/pull/4428:3973,Availability,failure,failures,3973,"Loop/>. <EulerImplicitSolver name=""odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <!-- A constant sparsity pattern is assumed, but the presence of PlaneForceField invalid this assumption; Indices checking is enabled in order to detect that the pattern is not constant.; As soon as the pattern is no longer constant, insertions in the matrix are ignored.; Since it happens for all forces from PlaneForceField, they can be considered semi-explicit.; -->; <ConstantSparsityPatternSystem template=""CompressedRowSparseMatrix"" name=""A"" printLog=""true"" checkIndices=""true""/>; <EigenSimplicialLDLT template=""CompressedRowSparseMatrix"" linearSystem=""@A""/>; <MechanicalObject name=""DoFs"" />; <UniformMass name=""mass"" totalMass=""320"" />; <RegularGridTopology name=""grid"" nx=""4"" ny=""4"" nz=""20"" xmin=""-9"" xmax=""-6"" ymin=""0"" ymax=""3"" zmin=""0"" zmax=""19"" />; <BoxROI name=""box"" box=""-10 -1 -0.0001 -5 4 0.0001""/>; <FixedProjectiveConstraint indices=""@box.indices"" />; <HexahedronFEMForceField name=""FEM"" youngModulus=""4000"" poissonRatio=""0.3"" method=""large"" />; <PlaneForceField name=""planeForce"" stiffness=""1000"" damping=""20"" normal=""0 1 0"" d=""-3"" showPlane=""true""/>. </Node>; ```. Note that a lot of changes was about fixing the index checking in ConstantSparsityPatternSystem. It was never implemented. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428
https://github.com/sofa-framework/sofa/pull/4428:714,Modifiability,plugin,plugins,714,"ConstantSparsityPatternSystem relies on the assumption that the sparsity pattern of the mechanical matrix is constant. If the pattern is not constant, the component crashes.; This PR introduces a verification that the pattern follows the initial pattern. In case of a mismatch, an error is emitted and the insertion is skipped. This allows the simulation not to crash and inform the user. However, this behavior is available only if `checkIndices` is enabled. It is disabled by default because the check is time consuming, and the goal of this component is performance-oriented. To illustrate the new behavior, one can test the following scene:. ```xml; <Node name=""root"" dt=""0.02"" gravity=""0 -10 0"">; <Node name=""plugins"">; <RequiredPlugin name=""Sofa.Component.Constraint.Projective""/> <!-- Needed to use components [FixedProjectiveConstraint] -->; <RequiredPlugin name=""Sofa.Component.Engine.Select""/> <!-- Needed to use components [BoxROI] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [EigenSimplicialLDLT] -->; <RequiredPlugin name=""Sofa.Component.LinearSystem""/> <!-- Needed to use components [ConstantSparsityPatternSystem] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [PlaneForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [HexahedronFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; </Node>. <VisualStyle displayFlags=""showBeha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428
https://github.com/sofa-framework/sofa/pull/4428:557,Performance,perform,performance-oriented,557,"ConstantSparsityPatternSystem relies on the assumption that the sparsity pattern of the mechanical matrix is constant. If the pattern is not constant, the component crashes.; This PR introduces a verification that the pattern follows the initial pattern. In case of a mismatch, an error is emitted and the insertion is skipped. This allows the simulation not to crash and inform the user. However, this behavior is available only if `checkIndices` is enabled. It is disabled by default because the check is time consuming, and the goal of this component is performance-oriented. To illustrate the new behavior, one can test the following scene:. ```xml; <Node name=""root"" dt=""0.02"" gravity=""0 -10 0"">; <Node name=""plugins"">; <RequiredPlugin name=""Sofa.Component.Constraint.Projective""/> <!-- Needed to use components [FixedProjectiveConstraint] -->; <RequiredPlugin name=""Sofa.Component.Engine.Select""/> <!-- Needed to use components [BoxROI] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [EigenSimplicialLDLT] -->; <RequiredPlugin name=""Sofa.Component.LinearSystem""/> <!-- Needed to use components [ConstantSparsityPatternSystem] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [PlaneForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [HexahedronFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; </Node>. <VisualStyle displayFlags=""showBeha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428
https://github.com/sofa-framework/sofa/pull/4428:2318,Safety,detect,detect,2318,"UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [PlaneForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [HexahedronFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; </Node>. <VisualStyle displayFlags=""showBehaviorModels showForceFields"" />. <DefaultAnimationLoop/>; <DefaultVisualManagerLoop/>. <EulerImplicitSolver name=""odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <!-- A constant sparsity pattern is assumed, but the presence of PlaneForceField invalid this assumption; Indices checking is enabled in order to detect that the pattern is not constant.; As soon as the pattern is no longer constant, insertions in the matrix are ignored.; Since it happens for all forces from PlaneForceField, they can be considered semi-explicit.; -->; <ConstantSparsityPatternSystem template=""CompressedRowSparseMatrix"" name=""A"" printLog=""true"" checkIndices=""true""/>; <EigenSimplicialLDLT template=""CompressedRowSparseMatrix"" linearSystem=""@A""/>; <MechanicalObject name=""DoFs"" />; <UniformMass name=""mass"" totalMass=""320"" />; <RegularGridTopology name=""grid"" nx=""4"" ny=""4"" nz=""20"" xmin=""-9"" xmax=""-6"" ymin=""0"" ymax=""3"" zmin=""0"" zmax=""19"" />; <BoxROI name=""box"" box=""-10 -1 -0.0001 -5 4 0.0001""/>; <FixedProjectiveConstraint indices=""@box.indices"" />; <HexahedronFEMForceField name=""FEM"" youngModulus=""4000"" poissonRatio=""0.3"" method=""large"" />; <PlaneForceField name=""planeForce"" stiffness=""1000"" damping=""20"" normal=""0 1 0"" d=""-3"" showPlane=""true""/>. </Node>; ```. Note ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428
https://github.com/sofa-framework/sofa/pull/4428:3543,Security,Certificate,Certificate,3543,"Loop/>. <EulerImplicitSolver name=""odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <!-- A constant sparsity pattern is assumed, but the presence of PlaneForceField invalid this assumption; Indices checking is enabled in order to detect that the pattern is not constant.; As soon as the pattern is no longer constant, insertions in the matrix are ignored.; Since it happens for all forces from PlaneForceField, they can be considered semi-explicit.; -->; <ConstantSparsityPatternSystem template=""CompressedRowSparseMatrix"" name=""A"" printLog=""true"" checkIndices=""true""/>; <EigenSimplicialLDLT template=""CompressedRowSparseMatrix"" linearSystem=""@A""/>; <MechanicalObject name=""DoFs"" />; <UniformMass name=""mass"" totalMass=""320"" />; <RegularGridTopology name=""grid"" nx=""4"" ny=""4"" nz=""20"" xmin=""-9"" xmax=""-6"" ymin=""0"" ymax=""3"" zmin=""0"" zmax=""19"" />; <BoxROI name=""box"" box=""-10 -1 -0.0001 -5 4 0.0001""/>; <FixedProjectiveConstraint indices=""@box.indices"" />; <HexahedronFEMForceField name=""FEM"" youngModulus=""4000"" poissonRatio=""0.3"" method=""large"" />; <PlaneForceField name=""planeForce"" stiffness=""1000"" damping=""20"" normal=""0 1 0"" d=""-3"" showPlane=""true""/>. </Node>; ```. Note that a lot of changes was about fixing the index checking in ConstantSparsityPatternSystem. It was never implemented. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428
https://github.com/sofa-framework/sofa/pull/4428:3654,Security,certificate,certificate-of-origin-dco,3654,"Loop/>. <EulerImplicitSolver name=""odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <!-- A constant sparsity pattern is assumed, but the presence of PlaneForceField invalid this assumption; Indices checking is enabled in order to detect that the pattern is not constant.; As soon as the pattern is no longer constant, insertions in the matrix are ignored.; Since it happens for all forces from PlaneForceField, they can be considered semi-explicit.; -->; <ConstantSparsityPatternSystem template=""CompressedRowSparseMatrix"" name=""A"" printLog=""true"" checkIndices=""true""/>; <EigenSimplicialLDLT template=""CompressedRowSparseMatrix"" linearSystem=""@A""/>; <MechanicalObject name=""DoFs"" />; <UniformMass name=""mass"" totalMass=""320"" />; <RegularGridTopology name=""grid"" nx=""4"" ny=""4"" nz=""20"" xmin=""-9"" xmax=""-6"" ymin=""0"" ymax=""3"" zmin=""0"" zmax=""19"" />; <BoxROI name=""box"" box=""-10 -1 -0.0001 -5 4 0.0001""/>; <FixedProjectiveConstraint indices=""@box.indices"" />; <HexahedronFEMForceField name=""FEM"" youngModulus=""4000"" poissonRatio=""0.3"" method=""large"" />; <PlaneForceField name=""planeForce"" stiffness=""1000"" damping=""20"" normal=""0 1 0"" d=""-3"" showPlane=""true""/>. </Node>; ```. Note that a lot of changes was about fixing the index checking in ConstantSparsityPatternSystem. It was never implemented. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428
https://github.com/sofa-framework/sofa/pull/4428:619,Testability,test,test,619,"ConstantSparsityPatternSystem relies on the assumption that the sparsity pattern of the mechanical matrix is constant. If the pattern is not constant, the component crashes.; This PR introduces a verification that the pattern follows the initial pattern. In case of a mismatch, an error is emitted and the insertion is skipped. This allows the simulation not to crash and inform the user. However, this behavior is available only if `checkIndices` is enabled. It is disabled by default because the check is time consuming, and the goal of this component is performance-oriented. To illustrate the new behavior, one can test the following scene:. ```xml; <Node name=""root"" dt=""0.02"" gravity=""0 -10 0"">; <Node name=""plugins"">; <RequiredPlugin name=""Sofa.Component.Constraint.Projective""/> <!-- Needed to use components [FixedProjectiveConstraint] -->; <RequiredPlugin name=""Sofa.Component.Engine.Select""/> <!-- Needed to use components [BoxROI] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [EigenSimplicialLDLT] -->; <RequiredPlugin name=""Sofa.Component.LinearSystem""/> <!-- Needed to use components [ConstantSparsityPatternSystem] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [PlaneForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [HexahedronFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; </Node>. <VisualStyle displayFlags=""showBeha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428
https://github.com/sofa-framework/sofa/pull/4428:3919,Testability,test,test,3919,"Loop/>. <EulerImplicitSolver name=""odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <!-- A constant sparsity pattern is assumed, but the presence of PlaneForceField invalid this assumption; Indices checking is enabled in order to detect that the pattern is not constant.; As soon as the pattern is no longer constant, insertions in the matrix are ignored.; Since it happens for all forces from PlaneForceField, they can be considered semi-explicit.; -->; <ConstantSparsityPatternSystem template=""CompressedRowSparseMatrix"" name=""A"" printLog=""true"" checkIndices=""true""/>; <EigenSimplicialLDLT template=""CompressedRowSparseMatrix"" linearSystem=""@A""/>; <MechanicalObject name=""DoFs"" />; <UniformMass name=""mass"" totalMass=""320"" />; <RegularGridTopology name=""grid"" nx=""4"" ny=""4"" nz=""20"" xmin=""-9"" xmax=""-6"" ymin=""0"" ymax=""3"" zmin=""0"" zmax=""19"" />; <BoxROI name=""box"" box=""-10 -1 -0.0001 -5 4 0.0001""/>; <FixedProjectiveConstraint indices=""@box.indices"" />; <HexahedronFEMForceField name=""FEM"" youngModulus=""4000"" poissonRatio=""0.3"" method=""large"" />; <PlaneForceField name=""planeForce"" stiffness=""1000"" damping=""20"" normal=""0 1 0"" d=""-3"" showPlane=""true""/>. </Node>; ```. Note that a lot of changes was about fixing the index checking in ConstantSparsityPatternSystem. It was never implemented. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428
https://github.com/sofa-framework/sofa/pull/4428:3968,Testability,test,test,3968,"Loop/>. <EulerImplicitSolver name=""odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <!-- A constant sparsity pattern is assumed, but the presence of PlaneForceField invalid this assumption; Indices checking is enabled in order to detect that the pattern is not constant.; As soon as the pattern is no longer constant, insertions in the matrix are ignored.; Since it happens for all forces from PlaneForceField, they can be considered semi-explicit.; -->; <ConstantSparsityPatternSystem template=""CompressedRowSparseMatrix"" name=""A"" printLog=""true"" checkIndices=""true""/>; <EigenSimplicialLDLT template=""CompressedRowSparseMatrix"" linearSystem=""@A""/>; <MechanicalObject name=""DoFs"" />; <UniformMass name=""mass"" totalMass=""320"" />; <RegularGridTopology name=""grid"" nx=""4"" ny=""4"" nz=""20"" xmin=""-9"" xmax=""-6"" ymin=""0"" ymax=""3"" zmin=""0"" zmax=""19"" />; <BoxROI name=""box"" box=""-10 -1 -0.0001 -5 4 0.0001""/>; <FixedProjectiveConstraint indices=""@box.indices"" />; <HexahedronFEMForceField name=""FEM"" youngModulus=""4000"" poissonRatio=""0.3"" method=""large"" />; <PlaneForceField name=""planeForce"" stiffness=""1000"" damping=""20"" normal=""0 1 0"" d=""-3"" showPlane=""true""/>. </Node>; ```. Note that a lot of changes was about fixing the index checking in ConstantSparsityPatternSystem. It was never implemented. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428
https://github.com/sofa-framework/sofa/pull/4429:1339,Availability,failure,failures,1339,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:1388,Availability,failure,failures,1388,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:154,Modifiability,plugin,plugins,154,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:396,Modifiability,plugin,plugins,396,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:549,Modifiability,Plugin,PluginManager,549,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:670,Modifiability,plugin,plugin,670,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:711,Modifiability,Plugin,PluginManager,711,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:735,Modifiability,refactor,refactored,735,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:127,Performance,load,loading,127,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:601,Performance,load,loadPlugin,601,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:622,Performance,load,loadPlugin,622,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:660,Performance,load,loading,660,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:760,Performance,load,loadPlugin,760,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:958,Security,Certificate,Certificate,958,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:1069,Security,certificate,certificate-of-origin-dco,1069,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:384,Testability,test,tests,384,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:1334,Testability,test,test,1334,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:1383,Testability,test,test,1383,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4429:581,Usability,simpl,simply,581,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429
https://github.com/sofa-framework/sofa/pull/4430:630,Availability,failure,failures,630,"`msg_info` is used instead of `std::cout`. `msg_info` is also used in `mycudaPrintf`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430
https://github.com/sofa-framework/sofa/pull/4430:679,Availability,failure,failures,679,"`msg_info` is used instead of `std::cout`. `msg_info` is also used in `mycudaPrintf`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430
https://github.com/sofa-framework/sofa/pull/4430:249,Security,Certificate,Certificate,249,"`msg_info` is used instead of `std::cout`. `msg_info` is also used in `mycudaPrintf`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430
https://github.com/sofa-framework/sofa/pull/4430:360,Security,certificate,certificate-of-origin-dco,360,"`msg_info` is used instead of `std::cout`. `msg_info` is also used in `mycudaPrintf`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430
https://github.com/sofa-framework/sofa/pull/4430:625,Testability,test,test,625,"`msg_info` is used instead of `std::cout`. `msg_info` is also used in `mycudaPrintf`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430
https://github.com/sofa-framework/sofa/pull/4430:674,Testability,test,test,674,"`msg_info` is used instead of `std::cout`. `msg_info` is also used in `mycudaPrintf`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430
https://github.com/sofa-framework/sofa/pull/4431:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4431
https://github.com/sofa-framework/sofa/pull/4431:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4431
https://github.com/sofa-framework/sofa/pull/4431:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4431
https://github.com/sofa-framework/sofa/pull/4431:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4431
https://github.com/sofa-framework/sofa/pull/4431:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4431
https://github.com/sofa-framework/sofa/pull/4431:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4431
https://github.com/sofa-framework/sofa/pull/4432:605,Availability,failure,failures,605,"Even if this pattern is a code smell, this call was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4432
https://github.com/sofa-framework/sofa/pull/4432:654,Availability,failure,failures,654,"Even if this pattern is a code smell, this call was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4432
https://github.com/sofa-framework/sofa/pull/4432:224,Security,Certificate,Certificate,224,"Even if this pattern is a code smell, this call was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4432
https://github.com/sofa-framework/sofa/pull/4432:335,Security,certificate,certificate-of-origin-dco,335,"Even if this pattern is a code smell, this call was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4432
https://github.com/sofa-framework/sofa/pull/4432:600,Testability,test,test,600,"Even if this pattern is a code smell, this call was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4432
https://github.com/sofa-framework/sofa/pull/4432:649,Testability,test,test,649,"Even if this pattern is a code smell, this call was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4432
https://github.com/sofa-framework/sofa/pull/4436:1047,Availability,failure,failures,1047,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436
https://github.com/sofa-framework/sofa/pull/4436:1096,Availability,failure,failures,1096,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436
https://github.com/sofa-framework/sofa/pull/4436:62,Deployability,update,update,62,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436
https://github.com/sofa-framework/sofa/pull/4436:107,Deployability,update,updateVisual,107,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436
https://github.com/sofa-framework/sofa/pull/4436:178,Deployability,update,updateVisual,178,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436
https://github.com/sofa-framework/sofa/pull/4436:308,Deployability,update,updateVisual,308,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436
https://github.com/sofa-framework/sofa/pull/4436:666,Security,Certificate,Certificate,666,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436
https://github.com/sofa-framework/sofa/pull/4436:777,Security,certificate,certificate-of-origin-dco,777,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436
https://github.com/sofa-framework/sofa/pull/4436:1042,Testability,test,test,1042,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436
https://github.com/sofa-framework/sofa/pull/4436:1091,Testability,test,test,1091,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436
https://github.com/sofa-framework/sofa/pull/4436:161,Usability,simpl,simply,161,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436
https://github.com/sofa-framework/sofa/pull/4442:773,Availability,failure,failures,773,"The template specializations that were in the cpp file are now supported in the non-specialized function in the .h file.; The changes also add support of filtering from CompressedRowSparseMatrixConstraint and any type of blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4442
https://github.com/sofa-framework/sofa/pull/4442:822,Availability,failure,failures,822,"The template specializations that were in the cpp file are now supported in the non-specialized function in the .h file.; The changes also add support of filtering from CompressedRowSparseMatrixConstraint and any type of blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4442
https://github.com/sofa-framework/sofa/pull/4442:392,Security,Certificate,Certificate,392,"The template specializations that were in the cpp file are now supported in the non-specialized function in the .h file.; The changes also add support of filtering from CompressedRowSparseMatrixConstraint and any type of blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4442
https://github.com/sofa-framework/sofa/pull/4442:503,Security,certificate,certificate-of-origin-dco,503,"The template specializations that were in the cpp file are now supported in the non-specialized function in the .h file.; The changes also add support of filtering from CompressedRowSparseMatrixConstraint and any type of blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4442
https://github.com/sofa-framework/sofa/pull/4442:768,Testability,test,test,768,"The template specializations that were in the cpp file are now supported in the non-specialized function in the .h file.; The changes also add support of filtering from CompressedRowSparseMatrixConstraint and any type of blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4442
https://github.com/sofa-framework/sofa/pull/4442:817,Testability,test,test,817,"The template specializations that were in the cpp file are now supported in the non-specialized function in the .h file.; The changes also add support of filtering from CompressedRowSparseMatrixConstraint and any type of blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4442
https://github.com/sofa-framework/sofa/pull/4443:3279,Availability,failure,failures,3279," MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.26 2.27 4.52 31.65 ......projectMappedMatrices; 7 8.28 12 0 0.54 0.03 0.04 0.34 2.35 .......copyToBaseMatrix; 7 8.37 12 0 0.23 0.02 0.02 0.21 1.48 .......fullRows; ```. #### After. ```; [INFO] [BatchGUI] 1000 iterations done in 16.4943 s ( 60.6268 FPS). ; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.11 2 0.04 12.74 1.94 1.95 3.89 28.81 ......projectMappedMatrices; 7 8.13 12 0 0.14 0.01 0.02 0.18 1.32 .......copyToBaseMatrix; 7 8.17 12 0 0.05 0 0 0 0.02 .......fullRows; ```. ### Conclusion. In both scenes, the timer `fullRows` is almost at zero because the functions `copyNonZeros` already produces a compressed matrix. In addition, the timer `copyToBaseMatrix` is faster. FYI @olivier-goury @VannesteFelix ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443
https://github.com/sofa-framework/sofa/pull/4443:3328,Availability,failure,failures,3328," MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.26 2.27 4.52 31.65 ......projectMappedMatrices; 7 8.28 12 0 0.54 0.03 0.04 0.34 2.35 .......copyToBaseMatrix; 7 8.37 12 0 0.23 0.02 0.02 0.21 1.48 .......fullRows; ```. #### After. ```; [INFO] [BatchGUI] 1000 iterations done in 16.4943 s ( 60.6268 FPS). ; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.11 2 0.04 12.74 1.94 1.95 3.89 28.81 ......projectMappedMatrices; 7 8.13 12 0 0.14 0.01 0.02 0.18 1.32 .......copyToBaseMatrix; 7 8.17 12 0 0.05 0 0 0 0.02 .......fullRows; ```. ### Conclusion. In both scenes, the timer `fullRows` is almost at zero because the functions `copyNonZeros` already produces a compressed matrix. In addition, the timer `copyToBaseMatrix` is faster. FYI @olivier-goury @VannesteFelix ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443
https://github.com/sofa-framework/sofa/pull/4443:836,Energy Efficiency,Reduce,Reduced,836,"Based on https://github.com/sofa-framework/sofa/pull/4442; Diff: https://github.com/alxbilger/sofa/compare/filtervalues...alxbilger:sofa:copymatrixderiv. The goal is to accelerate the computation of mappings jacobians when projecting the mapped stiffness matrices. In some cases, the conversion from the MatrixDeriv (stored in the mechanical objects) is really slow, even slower than the actual computation of the matrix. A special case is now added when the destination is a `CompressedRowSparseMatrixMechanical`. Unfortunately, this is detected with a `dynamic_cast`. To benchmark the changes, let's add the following timers in MatrixLinearSystem.inl (line 1076):; ```cpp; {; SCOPED_TIMER(""copyToBaseMatrix"");; input->copyToBaseMatrix(J.get(), mappingJacobianId, offset);; }; {; SCOPED_TIMER(""fullRows"");; J->fullRows();; }; ```. ### Reduced Diamond (1000 time steps). ModelOrderReduction relies heavily on mapped matrices (a huge matrix projected on a small matrix). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 22.5868 s ( 44.2737 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.06 1 14.53 33.47 16.75 2.42 16.75 90.54 ......projectMappedMatrices; 7 3.08 1 3.72 11.63 4.31 0.89 4.31 23.29 .......copyToBaseMatrix; 7 7.39 1 1.78 7.48 2.05 0.52 2.05 11.10 .......fullRows; ```. #### After; ```; [INFO] [BatchGUI] 1000 iterations done in 16.4596 s ( 60.7547 FPS).; ```; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443
https://github.com/sofa-framework/sofa/pull/4443:1732,Performance,bottleneck,bottleneck,1732,"obianId, offset);; }; {; SCOPED_TIMER(""fullRows"");; J->fullRows();; }; ```. ### Reduced Diamond (1000 time steps). ModelOrderReduction relies heavily on mapped matrices (a huge matrix projected on a small matrix). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 22.5868 s ( 44.2737 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.06 1 14.53 33.47 16.75 2.42 16.75 90.54 ......projectMappedMatrices; 7 3.08 1 3.72 11.63 4.31 0.89 4.31 23.29 .......copyToBaseMatrix; 7 7.39 1 1.78 7.48 2.05 0.52 2.05 11.10 .......fullRows; ```. #### After; ```; [INFO] [BatchGUI] 1000 iterations done in 16.4596 s ( 60.7547 FPS).; ```; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.26 2.27 4.52 31.65 ......projectMappedMatrices; 7 8.28 12 0 0.54 0.03 0.04 0.34 2.35 .......copyToBaseMatrix; 7 8.37 12 0 0.23 0.02 0.02 0.21 1.48 .......fullRows; ```. #### After. ```; [INFO] [BatchGUI] 1000 iterations done in 16.4943 s ( 60.6268 FPS). ; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.11 2 0.04 12.74 1.94 1.95 3.89 28.81 ......projectMappedMatrices; 7 8.13 12 0 0.14 0.01 0.02 0.18 1.32 .......copyToBaseMatrix; 7 8.17 12 0 0.05 0 0 0 0.02 .......fullRows; ```. ### Conclusion. In both scenes, the timer `fullRows` is almost at zero because the functions `copyNonZeros` already produces a compressed matrix. In addition, the timer `copyToBaseMatrix` is faster. FYI @olivier-goury @VannesteFelix ; ______________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443
https://github.com/sofa-framework/sofa/pull/4443:538,Safety,detect,detected,538,"Based on https://github.com/sofa-framework/sofa/pull/4442; Diff: https://github.com/alxbilger/sofa/compare/filtervalues...alxbilger:sofa:copymatrixderiv. The goal is to accelerate the computation of mappings jacobians when projecting the mapped stiffness matrices. In some cases, the conversion from the MatrixDeriv (stored in the mechanical objects) is really slow, even slower than the actual computation of the matrix. A special case is now added when the destination is a `CompressedRowSparseMatrixMechanical`. Unfortunately, this is detected with a `dynamic_cast`. To benchmark the changes, let's add the following timers in MatrixLinearSystem.inl (line 1076):; ```cpp; {; SCOPED_TIMER(""copyToBaseMatrix"");; input->copyToBaseMatrix(J.get(), mappingJacobianId, offset);; }; {; SCOPED_TIMER(""fullRows"");; J->fullRows();; }; ```. ### Reduced Diamond (1000 time steps). ModelOrderReduction relies heavily on mapped matrices (a huge matrix projected on a small matrix). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 22.5868 s ( 44.2737 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.06 1 14.53 33.47 16.75 2.42 16.75 90.54 ......projectMappedMatrices; 7 3.08 1 3.72 11.63 4.31 0.89 4.31 23.29 .......copyToBaseMatrix; 7 7.39 1 1.78 7.48 2.05 0.52 2.05 11.10 .......fullRows; ```. #### After; ```; [INFO] [BatchGUI] 1000 iterations done in 16.4596 s ( 60.7547 FPS).; ```; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443
https://github.com/sofa-framework/sofa/pull/4443:2898,Security,Certificate,Certificate,2898," MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.26 2.27 4.52 31.65 ......projectMappedMatrices; 7 8.28 12 0 0.54 0.03 0.04 0.34 2.35 .......copyToBaseMatrix; 7 8.37 12 0 0.23 0.02 0.02 0.21 1.48 .......fullRows; ```. #### After. ```; [INFO] [BatchGUI] 1000 iterations done in 16.4943 s ( 60.6268 FPS). ; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.11 2 0.04 12.74 1.94 1.95 3.89 28.81 ......projectMappedMatrices; 7 8.13 12 0 0.14 0.01 0.02 0.18 1.32 .......copyToBaseMatrix; 7 8.17 12 0 0.05 0 0 0 0.02 .......fullRows; ```. ### Conclusion. In both scenes, the timer `fullRows` is almost at zero because the functions `copyNonZeros` already produces a compressed matrix. In addition, the timer `copyToBaseMatrix` is faster. FYI @olivier-goury @VannesteFelix ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443
https://github.com/sofa-framework/sofa/pull/4443:3009,Security,certificate,certificate-of-origin-dco,3009," MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.26 2.27 4.52 31.65 ......projectMappedMatrices; 7 8.28 12 0 0.54 0.03 0.04 0.34 2.35 .......copyToBaseMatrix; 7 8.37 12 0 0.23 0.02 0.02 0.21 1.48 .......fullRows; ```. #### After. ```; [INFO] [BatchGUI] 1000 iterations done in 16.4943 s ( 60.6268 FPS). ; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.11 2 0.04 12.74 1.94 1.95 3.89 28.81 ......projectMappedMatrices; 7 8.13 12 0 0.14 0.01 0.02 0.18 1.32 .......copyToBaseMatrix; 7 8.17 12 0 0.05 0 0 0 0.02 .......fullRows; ```. ### Conclusion. In both scenes, the timer `fullRows` is almost at zero because the functions `copyNonZeros` already produces a compressed matrix. In addition, the timer `copyToBaseMatrix` is faster. FYI @olivier-goury @VannesteFelix ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443
https://github.com/sofa-framework/sofa/pull/4443:573,Testability,benchmark,benchmark,573,"Based on https://github.com/sofa-framework/sofa/pull/4442; Diff: https://github.com/alxbilger/sofa/compare/filtervalues...alxbilger:sofa:copymatrixderiv. The goal is to accelerate the computation of mappings jacobians when projecting the mapped stiffness matrices. In some cases, the conversion from the MatrixDeriv (stored in the mechanical objects) is really slow, even slower than the actual computation of the matrix. A special case is now added when the destination is a `CompressedRowSparseMatrixMechanical`. Unfortunately, this is detected with a `dynamic_cast`. To benchmark the changes, let's add the following timers in MatrixLinearSystem.inl (line 1076):; ```cpp; {; SCOPED_TIMER(""copyToBaseMatrix"");; input->copyToBaseMatrix(J.get(), mappingJacobianId, offset);; }; {; SCOPED_TIMER(""fullRows"");; J->fullRows();; }; ```. ### Reduced Diamond (1000 time steps). ModelOrderReduction relies heavily on mapped matrices (a huge matrix projected on a small matrix). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 22.5868 s ( 44.2737 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.06 1 14.53 33.47 16.75 2.42 16.75 90.54 ......projectMappedMatrices; 7 3.08 1 3.72 11.63 4.31 0.89 4.31 23.29 .......copyToBaseMatrix; 7 7.39 1 1.78 7.48 2.05 0.52 2.05 11.10 .......fullRows; ```. #### After; ```; [INFO] [BatchGUI] 1000 iterations done in 16.4596 s ( 60.7547 FPS).; ```; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443
https://github.com/sofa-framework/sofa/pull/4443:3274,Testability,test,test,3274," MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.26 2.27 4.52 31.65 ......projectMappedMatrices; 7 8.28 12 0 0.54 0.03 0.04 0.34 2.35 .......copyToBaseMatrix; 7 8.37 12 0 0.23 0.02 0.02 0.21 1.48 .......fullRows; ```. #### After. ```; [INFO] [BatchGUI] 1000 iterations done in 16.4943 s ( 60.6268 FPS). ; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.11 2 0.04 12.74 1.94 1.95 3.89 28.81 ......projectMappedMatrices; 7 8.13 12 0 0.14 0.01 0.02 0.18 1.32 .......copyToBaseMatrix; 7 8.17 12 0 0.05 0 0 0 0.02 .......fullRows; ```. ### Conclusion. In both scenes, the timer `fullRows` is almost at zero because the functions `copyNonZeros` already produces a compressed matrix. In addition, the timer `copyToBaseMatrix` is faster. FYI @olivier-goury @VannesteFelix ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443
https://github.com/sofa-framework/sofa/pull/4443:3323,Testability,test,test,3323," MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.26 2.27 4.52 31.65 ......projectMappedMatrices; 7 8.28 12 0 0.54 0.03 0.04 0.34 2.35 .......copyToBaseMatrix; 7 8.37 12 0 0.23 0.02 0.02 0.21 1.48 .......fullRows; ```. #### After. ```; [INFO] [BatchGUI] 1000 iterations done in 16.4943 s ( 60.6268 FPS). ; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.11 2 0.04 12.74 1.94 1.95 3.89 28.81 ......projectMappedMatrices; 7 8.13 12 0 0.14 0.01 0.02 0.18 1.32 .......copyToBaseMatrix; 7 8.17 12 0 0.05 0 0 0 0.02 .......fullRows; ```. ### Conclusion. In both scenes, the timer `fullRows` is almost at zero because the functions `copyNonZeros` already produces a compressed matrix. In addition, the timer `copyToBaseMatrix` is faster. FYI @olivier-goury @VannesteFelix ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443
https://github.com/sofa-framework/sofa/pull/4444:675,Availability,failure,failures,675,"- Rename label checker with `pr-` prefix; - Remove useless code in github request api; - Add Yinoussa among core reviewers on GHD. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4444
https://github.com/sofa-framework/sofa/pull/4444:724,Availability,failure,failures,724,"- Rename label checker with `pr-` prefix; - Remove useless code in github request api; - Add Yinoussa among core reviewers on GHD. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4444
https://github.com/sofa-framework/sofa/pull/4444:294,Security,Certificate,Certificate,294,"- Rename label checker with `pr-` prefix; - Remove useless code in github request api; - Add Yinoussa among core reviewers on GHD. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4444
https://github.com/sofa-framework/sofa/pull/4444:405,Security,certificate,certificate-of-origin-dco,405,"- Rename label checker with `pr-` prefix; - Remove useless code in github request api; - Add Yinoussa among core reviewers on GHD. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4444
https://github.com/sofa-framework/sofa/pull/4444:670,Testability,test,test,670,"- Rename label checker with `pr-` prefix; - Remove useless code in github request api; - Add Yinoussa among core reviewers on GHD. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4444
https://github.com/sofa-framework/sofa/pull/4444:719,Testability,test,test,719,"- Rename label checker with `pr-` prefix; - Remove useless code in github request api; - Add Yinoussa among core reviewers on GHD. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4444
https://github.com/sofa-framework/sofa/pull/4445:1096,Availability,failure,failures,1096,"This PR awaits first a migration to Discord. These actions allow 4 new notifications:; - when a new release of SOFA is done; - weekly to set up the SOFA dev meeting agenda; - weekly to summarize posts on GH discussions awaiting for a reply; - notification for all GH discussions ""Announcements"" or ""Share your achievements""; - forward all GH notifications (PR, issues, stars) in a minimalist and visual way in the main channel; - rename existing actions to better identify/distinguish them all. Python API has been factorized to use mostly one script. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4445
https://github.com/sofa-framework/sofa/pull/4445:1145,Availability,failure,failures,1145,"This PR awaits first a migration to Discord. These actions allow 4 new notifications:; - when a new release of SOFA is done; - weekly to set up the SOFA dev meeting agenda; - weekly to summarize posts on GH discussions awaiting for a reply; - notification for all GH discussions ""Announcements"" or ""Share your achievements""; - forward all GH notifications (PR, issues, stars) in a minimalist and visual way in the main channel; - rename existing actions to better identify/distinguish them all. Python API has been factorized to use mostly one script. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4445
https://github.com/sofa-framework/sofa/pull/4445:100,Deployability,release,release,100,"This PR awaits first a migration to Discord. These actions allow 4 new notifications:; - when a new release of SOFA is done; - weekly to set up the SOFA dev meeting agenda; - weekly to summarize posts on GH discussions awaiting for a reply; - notification for all GH discussions ""Announcements"" or ""Share your achievements""; - forward all GH notifications (PR, issues, stars) in a minimalist and visual way in the main channel; - rename existing actions to better identify/distinguish them all. Python API has been factorized to use mostly one script. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4445
https://github.com/sofa-framework/sofa/pull/4445:715,Security,Certificate,Certificate,715,"This PR awaits first a migration to Discord. These actions allow 4 new notifications:; - when a new release of SOFA is done; - weekly to set up the SOFA dev meeting agenda; - weekly to summarize posts on GH discussions awaiting for a reply; - notification for all GH discussions ""Announcements"" or ""Share your achievements""; - forward all GH notifications (PR, issues, stars) in a minimalist and visual way in the main channel; - rename existing actions to better identify/distinguish them all. Python API has been factorized to use mostly one script. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4445
https://github.com/sofa-framework/sofa/pull/4445:826,Security,certificate,certificate-of-origin-dco,826,"This PR awaits first a migration to Discord. These actions allow 4 new notifications:; - when a new release of SOFA is done; - weekly to set up the SOFA dev meeting agenda; - weekly to summarize posts on GH discussions awaiting for a reply; - notification for all GH discussions ""Announcements"" or ""Share your achievements""; - forward all GH notifications (PR, issues, stars) in a minimalist and visual way in the main channel; - rename existing actions to better identify/distinguish them all. Python API has been factorized to use mostly one script. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4445
https://github.com/sofa-framework/sofa/pull/4445:1091,Testability,test,test,1091,"This PR awaits first a migration to Discord. These actions allow 4 new notifications:; - when a new release of SOFA is done; - weekly to set up the SOFA dev meeting agenda; - weekly to summarize posts on GH discussions awaiting for a reply; - notification for all GH discussions ""Announcements"" or ""Share your achievements""; - forward all GH notifications (PR, issues, stars) in a minimalist and visual way in the main channel; - rename existing actions to better identify/distinguish them all. Python API has been factorized to use mostly one script. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4445
https://github.com/sofa-framework/sofa/pull/4445:1140,Testability,test,test,1140,"This PR awaits first a migration to Discord. These actions allow 4 new notifications:; - when a new release of SOFA is done; - weekly to set up the SOFA dev meeting agenda; - weekly to summarize posts on GH discussions awaiting for a reply; - notification for all GH discussions ""Announcements"" or ""Share your achievements""; - forward all GH notifications (PR, issues, stars) in a minimalist and visual way in the main channel; - rename existing actions to better identify/distinguish them all. Python API has been factorized to use mostly one script. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4445
https://github.com/sofa-framework/sofa/pull/4447:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4447
https://github.com/sofa-framework/sofa/pull/4447:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4447
https://github.com/sofa-framework/sofa/pull/4447:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4447
https://github.com/sofa-framework/sofa/pull/4447:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4447
https://github.com/sofa-framework/sofa/pull/4447:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4447
https://github.com/sofa-framework/sofa/pull/4447:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4447
https://github.com/sofa-framework/sofa/pull/4448:771,Availability,failure,failures,771,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448
https://github.com/sofa-framework/sofa/pull/4448:820,Availability,failure,failures,820,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448
https://github.com/sofa-framework/sofa/pull/4448:103,Deployability,release,release,103,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448
https://github.com/sofa-framework/sofa/pull/4448:14,Modifiability,config,configure,14,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448
https://github.com/sofa-framework/sofa/pull/4448:85,Modifiability,plugin,plugins,85,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448
https://github.com/sofa-framework/sofa/pull/4448:390,Security,Certificate,Certificate,390,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448
https://github.com/sofa-framework/sofa/pull/4448:501,Security,certificate,certificate-of-origin-dco,501,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448
https://github.com/sofa-framework/sofa/pull/4448:766,Testability,test,test,766,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448
https://github.com/sofa-framework/sofa/pull/4448:815,Testability,test,test,815,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448
https://github.com/sofa-framework/sofa/pull/4449:188,Availability,avail,available,188,"As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?). ; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4449
https://github.com/sofa-framework/sofa/pull/4449:932,Availability,failure,failures,932,"As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?). ; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4449
https://github.com/sofa-framework/sofa/pull/4449:981,Availability,failure,failures,981,"As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?). ; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4449
https://github.com/sofa-framework/sofa/pull/4449:81,Safety,avoid,avoid,81,"As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?). ; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4449
https://github.com/sofa-framework/sofa/pull/4449:551,Security,Certificate,Certificate,551,"As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?). ; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4449
https://github.com/sofa-framework/sofa/pull/4449:662,Security,certificate,certificate-of-origin-dco,662,"As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?). ; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4449
https://github.com/sofa-framework/sofa/pull/4449:134,Testability,Test,Tests,134,"As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?). ; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4449
https://github.com/sofa-framework/sofa/pull/4449:927,Testability,test,test,927,"As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?). ; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4449
https://github.com/sofa-framework/sofa/pull/4449:976,Testability,test,test,976,"As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?). ; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4449
https://github.com/sofa-framework/sofa/pull/4450:212,Availability,avail,available,212,"Continuation of #4266 . As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?).; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450
https://github.com/sofa-framework/sofa/pull/4450:955,Availability,failure,failures,955,"Continuation of #4266 . As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?).; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450
https://github.com/sofa-framework/sofa/pull/4450:1004,Availability,failure,failures,1004,"Continuation of #4266 . As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?).; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450
https://github.com/sofa-framework/sofa/pull/4450:105,Safety,avoid,avoid,105,"Continuation of #4266 . As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?).; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450
https://github.com/sofa-framework/sofa/pull/4450:574,Security,Certificate,Certificate,574,"Continuation of #4266 . As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?).; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450
https://github.com/sofa-framework/sofa/pull/4450:685,Security,certificate,certificate-of-origin-dco,685,"Continuation of #4266 . As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?).; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450
https://github.com/sofa-framework/sofa/pull/4450:158,Testability,Test,Tests,158,"Continuation of #4266 . As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?).; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450
https://github.com/sofa-framework/sofa/pull/4450:950,Testability,test,test,950,"Continuation of #4266 . As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?).; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450
https://github.com/sofa-framework/sofa/pull/4450:999,Testability,test,test,999,"Continuation of #4266 . As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?).; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450
https://github.com/sofa-framework/sofa/pull/4451:597,Availability,failure,failures,597,"Fix install further to #4410 ; \+ minor warning fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4451
https://github.com/sofa-framework/sofa/pull/4451:646,Availability,failure,failures,646,"Fix install further to #4410 ; \+ minor warning fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4451
https://github.com/sofa-framework/sofa/pull/4451:4,Deployability,install,install,4,"Fix install further to #4410 ; \+ minor warning fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4451
https://github.com/sofa-framework/sofa/pull/4451:216,Security,Certificate,Certificate,216,"Fix install further to #4410 ; \+ minor warning fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4451
https://github.com/sofa-framework/sofa/pull/4451:327,Security,certificate,certificate-of-origin-dco,327,"Fix install further to #4410 ; \+ minor warning fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4451
https://github.com/sofa-framework/sofa/pull/4451:592,Testability,test,test,592,"Fix install further to #4410 ; \+ minor warning fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4451
https://github.com/sofa-framework/sofa/pull/4451:641,Testability,test,test,641,"Fix install further to #4410 ; \+ minor warning fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4451
https://github.com/sofa-framework/sofa/pull/4453:612,Availability,failure,failures,612,"With this PR, `sofa::gpu::cuda::init()` can be called from outside. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4453
https://github.com/sofa-framework/sofa/pull/4453:661,Availability,failure,failures,661,"With this PR, `sofa::gpu::cuda::init()` can be called from outside. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4453
https://github.com/sofa-framework/sofa/pull/4453:231,Security,Certificate,Certificate,231,"With this PR, `sofa::gpu::cuda::init()` can be called from outside. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4453
https://github.com/sofa-framework/sofa/pull/4453:342,Security,certificate,certificate-of-origin-dco,342,"With this PR, `sofa::gpu::cuda::init()` can be called from outside. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4453
https://github.com/sofa-framework/sofa/pull/4453:607,Testability,test,test,607,"With this PR, `sofa::gpu::cuda::init()` can be called from outside. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4453
https://github.com/sofa-framework/sofa/pull/4453:656,Testability,test,test,656,"With this PR, `sofa::gpu::cuda::init()` can be called from outside. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4453
https://github.com/sofa-framework/sofa/pull/4454:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4454
https://github.com/sofa-framework/sofa/pull/4454:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4454
https://github.com/sofa-framework/sofa/pull/4454:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4454
https://github.com/sofa-framework/sofa/pull/4454:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4454
https://github.com/sofa-framework/sofa/pull/4454:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4454
https://github.com/sofa-framework/sofa/pull/4454:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4454
https://github.com/sofa-framework/sofa/pull/4455:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4455
https://github.com/sofa-framework/sofa/pull/4455:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4455
https://github.com/sofa-framework/sofa/pull/4455:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4455
https://github.com/sofa-framework/sofa/pull/4455:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4455
https://github.com/sofa-framework/sofa/pull/4455:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4455
https://github.com/sofa-framework/sofa/pull/4455:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4455
https://github.com/sofa-framework/sofa/pull/4456:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4456
https://github.com/sofa-framework/sofa/pull/4456:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4456
https://github.com/sofa-framework/sofa/pull/4456:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4456
https://github.com/sofa-framework/sofa/pull/4456:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4456
https://github.com/sofa-framework/sofa/pull/4456:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4456
https://github.com/sofa-framework/sofa/pull/4456:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4456
https://github.com/sofa-framework/sofa/pull/4459:852,Availability,failure,failures,852,"... unless there is a good reason to keep built even if tests are not built ?; In the case we have to keep it built, we will have to handle the embedded dependency google test (linked dynamically), probably in a similar manner than other libs such as metis (find package or fetch code and link dynamically). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459
https://github.com/sofa-framework/sofa/pull/4459:901,Availability,failure,failures,901,"... unless there is a good reason to keep built even if tests are not built ?; In the case we have to keep it built, we will have to handle the embedded dependency google test (linked dynamically), probably in a similar manner than other libs such as metis (find package or fetch code and link dynamically). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459
https://github.com/sofa-framework/sofa/pull/4459:153,Integrability,depend,dependency,153,"... unless there is a good reason to keep built even if tests are not built ?; In the case we have to keep it built, we will have to handle the embedded dependency google test (linked dynamically), probably in a similar manner than other libs such as metis (find package or fetch code and link dynamically). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459
https://github.com/sofa-framework/sofa/pull/4459:471,Security,Certificate,Certificate,471,"... unless there is a good reason to keep built even if tests are not built ?; In the case we have to keep it built, we will have to handle the embedded dependency google test (linked dynamically), probably in a similar manner than other libs such as metis (find package or fetch code and link dynamically). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459
https://github.com/sofa-framework/sofa/pull/4459:582,Security,certificate,certificate-of-origin-dco,582,"... unless there is a good reason to keep built even if tests are not built ?; In the case we have to keep it built, we will have to handle the embedded dependency google test (linked dynamically), probably in a similar manner than other libs such as metis (find package or fetch code and link dynamically). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459
https://github.com/sofa-framework/sofa/pull/4459:56,Testability,test,tests,56,"... unless there is a good reason to keep built even if tests are not built ?; In the case we have to keep it built, we will have to handle the embedded dependency google test (linked dynamically), probably in a similar manner than other libs such as metis (find package or fetch code and link dynamically). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459
https://github.com/sofa-framework/sofa/pull/4459:171,Testability,test,test,171,"... unless there is a good reason to keep built even if tests are not built ?; In the case we have to keep it built, we will have to handle the embedded dependency google test (linked dynamically), probably in a similar manner than other libs such as metis (find package or fetch code and link dynamically). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459
https://github.com/sofa-framework/sofa/pull/4459:847,Testability,test,test,847,"... unless there is a good reason to keep built even if tests are not built ?; In the case we have to keep it built, we will have to handle the embedded dependency google test (linked dynamically), probably in a similar manner than other libs such as metis (find package or fetch code and link dynamically). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459
https://github.com/sofa-framework/sofa/pull/4459:896,Testability,test,test,896,"... unless there is a good reason to keep built even if tests are not built ?; In the case we have to keep it built, we will have to handle the embedded dependency google test (linked dynamically), probably in a similar manner than other libs such as metis (find package or fetch code and link dynamically). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459
https://github.com/sofa-framework/sofa/issues/4461:155,Modifiability,rewrite,rewrite,155,"Hello developers of the Sofa framework, I found a tearing example that I need on this forum, but it is based on Sofa v21.06. Could you advise me on how to rewrite it for Sofa v23.06? Is there an API comparison chart or something similar that could assist me? Thank you so much for assisting me. https://github.com/alireza-montazeri/SofaTearing",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4461
https://github.com/sofa-framework/sofa/issues/4462:31,Integrability,depend,dependency,31,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:550,Integrability,depend,dependency,550,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:1024,Integrability,depend,dependency,1024,"gin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; https://github.com/sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:1522,Integrability,depend,dependency,1522,"then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; https://github.com/sofa-framework/sofa/blob/1e0df59953a085785a45bf97e182e01efea0c354/Sofa/framework/Helper/src/sofa/helper/system/DynamicLibrary.cpp#L78; would fix the bug, but it is still showing the same behavior 😓",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:1566,Integrability,depend,dependency,1566,"then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; https://github.com/sofa-framework/sofa/blob/1e0df59953a085785a45bf97e182e01efea0c354/Sofa/framework/Helper/src/sofa/helper/system/DynamicLibrary.cpp#L78; would fix the bug, but it is still showing the same behavior 😓",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:17,Modifiability,plugin,plugin,17,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:45,Modifiability,plugin,plugin,45,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:93,Modifiability,plugin,plugin,93,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:132,Modifiability,plugin,plugin,132,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:166,Modifiability,Plugin,PluginManger,166,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:194,Modifiability,plugin,plugin,194,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:236,Modifiability,plugin,plugin,236,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:252,Modifiability,Plugin,PluginManger,252,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:290,Modifiability,plugin,plugin,290,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:410,Modifiability,plugin,plugin,410,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:531,Modifiability,plugin,plugin,531,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:632,Modifiability,plugin,plugin,632,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:1241,Modifiability,Plugin,PluginManager,1241,"n A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; https://github.com/sofa-framework/sofa/blob/1e0df59953a085785a45bf97e182e01efea0c354/Sofa/framework/Helper/src/sofa/helper/system/DynamicLibrary.cpp#L78; would fix the bug, but it is still showing the ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:1850,Modifiability,plugin,plugins,1850,"then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; https://github.com/sofa-framework/sofa/blob/1e0df59953a085785a45bf97e182e01efea0c354/Sofa/framework/Helper/src/sofa/helper/system/DynamicLibrary.cpp#L78; would fix the bug, but it is still showing the same behavior 😓",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:189,Performance,load,load,189,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:231,Performance,load,load,231,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:572,Performance,load,loaded,572,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:689,Testability,test,tested,689,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/issues/4462:717,Testability,test,test,717,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462
https://github.com/sofa-framework/sofa/pull/4464:565,Availability,failure,failures,565,"Illustrating #4462 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4464
https://github.com/sofa-framework/sofa/pull/4464:614,Availability,failure,failures,614,"Illustrating #4462 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4464
https://github.com/sofa-framework/sofa/pull/4464:184,Security,Certificate,Certificate,184,"Illustrating #4462 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4464
https://github.com/sofa-framework/sofa/pull/4464:295,Security,certificate,certificate-of-origin-dco,295,"Illustrating #4462 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4464
https://github.com/sofa-framework/sofa/pull/4464:560,Testability,test,test,560,"Illustrating #4462 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4464
https://github.com/sofa-framework/sofa/pull/4464:609,Testability,test,test,609,"Illustrating #4462 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4464
https://github.com/sofa-framework/sofa/pull/4465:750,Availability,failure,failures,750,"Those headers are included almost everywhere so it triggers a large number of ""unused var"" warnings (~2k in a standard compilation), leading to big log files on the CI 😵. Only with clang though apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4465
https://github.com/sofa-framework/sofa/pull/4465:799,Availability,failure,failures,799,"Those headers are included almost everywhere so it triggers a large number of ""unused var"" warnings (~2k in a standard compilation), leading to big log files on the CI 😵. Only with clang though apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4465
https://github.com/sofa-framework/sofa/pull/4465:369,Security,Certificate,Certificate,369,"Those headers are included almost everywhere so it triggers a large number of ""unused var"" warnings (~2k in a standard compilation), leading to big log files on the CI 😵. Only with clang though apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4465
https://github.com/sofa-framework/sofa/pull/4465:480,Security,certificate,certificate-of-origin-dco,480,"Those headers are included almost everywhere so it triggers a large number of ""unused var"" warnings (~2k in a standard compilation), leading to big log files on the CI 😵. Only with clang though apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4465
https://github.com/sofa-framework/sofa/pull/4465:148,Testability,log,log,148,"Those headers are included almost everywhere so it triggers a large number of ""unused var"" warnings (~2k in a standard compilation), leading to big log files on the CI 😵. Only with clang though apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4465
https://github.com/sofa-framework/sofa/pull/4465:745,Testability,test,test,745,"Those headers are included almost everywhere so it triggers a large number of ""unused var"" warnings (~2k in a standard compilation), leading to big log files on the CI 😵. Only with clang though apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4465
https://github.com/sofa-framework/sofa/pull/4465:794,Testability,test,test,794,"Those headers are included almost everywhere so it triggers a large number of ""unused var"" warnings (~2k in a standard compilation), leading to big log files on the CI 😵. Only with clang though apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4465
https://github.com/sofa-framework/sofa/pull/4466:829,Availability,failure,failures,829,"Based on; - #4464. Fix ; - #4462 . This PR check the provenance of the loaded symbol, if it is consistent with the given filename of the plugin; Using the system function `dladdr()` https://man7.org/linux/man-pages/man3/dladdr.3.html. Fix the newly introduced (failing) test in #4464; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466
https://github.com/sofa-framework/sofa/pull/4466:878,Availability,failure,failures,878,"Based on; - #4464. Fix ; - #4462 . This PR check the provenance of the loaded symbol, if it is consistent with the given filename of the plugin; Using the system function `dladdr()` https://man7.org/linux/man-pages/man3/dladdr.3.html. Fix the newly introduced (failing) test in #4464; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466
https://github.com/sofa-framework/sofa/pull/4466:137,Modifiability,plugin,plugin,137,"Based on; - #4464. Fix ; - #4462 . This PR check the provenance of the loaded symbol, if it is consistent with the given filename of the plugin; Using the system function `dladdr()` https://man7.org/linux/man-pages/man3/dladdr.3.html. Fix the newly introduced (failing) test in #4464; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466
https://github.com/sofa-framework/sofa/pull/4466:71,Performance,load,loaded,71,"Based on; - #4464. Fix ; - #4462 . This PR check the provenance of the loaded symbol, if it is consistent with the given filename of the plugin; Using the system function `dladdr()` https://man7.org/linux/man-pages/man3/dladdr.3.html. Fix the newly introduced (failing) test in #4464; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466
https://github.com/sofa-framework/sofa/pull/4466:448,Security,Certificate,Certificate,448,"Based on; - #4464. Fix ; - #4462 . This PR check the provenance of the loaded symbol, if it is consistent with the given filename of the plugin; Using the system function `dladdr()` https://man7.org/linux/man-pages/man3/dladdr.3.html. Fix the newly introduced (failing) test in #4464; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466
https://github.com/sofa-framework/sofa/pull/4466:559,Security,certificate,certificate-of-origin-dco,559,"Based on; - #4464. Fix ; - #4462 . This PR check the provenance of the loaded symbol, if it is consistent with the given filename of the plugin; Using the system function `dladdr()` https://man7.org/linux/man-pages/man3/dladdr.3.html. Fix the newly introduced (failing) test in #4464; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466
https://github.com/sofa-framework/sofa/pull/4466:270,Testability,test,test,270,"Based on; - #4464. Fix ; - #4462 . This PR check the provenance of the loaded symbol, if it is consistent with the given filename of the plugin; Using the system function `dladdr()` https://man7.org/linux/man-pages/man3/dladdr.3.html. Fix the newly introduced (failing) test in #4464; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466
https://github.com/sofa-framework/sofa/pull/4466:824,Testability,test,test,824,"Based on; - #4464. Fix ; - #4462 . This PR check the provenance of the loaded symbol, if it is consistent with the given filename of the plugin; Using the system function `dladdr()` https://man7.org/linux/man-pages/man3/dladdr.3.html. Fix the newly introduced (failing) test in #4464; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466
https://github.com/sofa-framework/sofa/pull/4466:873,Testability,test,test,873,"Based on; - #4464. Fix ; - #4462 . This PR check the provenance of the loaded symbol, if it is consistent with the given filename of the plugin; Using the system function `dladdr()` https://man7.org/linux/man-pages/man3/dladdr.3.html. Fix the newly introduced (failing) test in #4464; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466
https://github.com/sofa-framework/sofa/pull/4467:731,Availability,failure,failures,731,"BaseSimulationTest::importPlugin() and simpleapi::importPlugin() are exactly the same.; With SimpleApi, it does not really make sense to have this function anymore in BaseSimulationTest. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4467
https://github.com/sofa-framework/sofa/pull/4467:780,Availability,failure,failures,780,"BaseSimulationTest::importPlugin() and simpleapi::importPlugin() are exactly the same.; With SimpleApi, it does not really make sense to have this function anymore in BaseSimulationTest. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4467
https://github.com/sofa-framework/sofa/pull/4467:350,Security,Certificate,Certificate,350,"BaseSimulationTest::importPlugin() and simpleapi::importPlugin() are exactly the same.; With SimpleApi, it does not really make sense to have this function anymore in BaseSimulationTest. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4467
https://github.com/sofa-framework/sofa/pull/4467:461,Security,certificate,certificate-of-origin-dco,461,"BaseSimulationTest::importPlugin() and simpleapi::importPlugin() are exactly the same.; With SimpleApi, it does not really make sense to have this function anymore in BaseSimulationTest. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4467
https://github.com/sofa-framework/sofa/pull/4467:726,Testability,test,test,726,"BaseSimulationTest::importPlugin() and simpleapi::importPlugin() are exactly the same.; With SimpleApi, it does not really make sense to have this function anymore in BaseSimulationTest. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4467
https://github.com/sofa-framework/sofa/pull/4467:775,Testability,test,test,775,"BaseSimulationTest::importPlugin() and simpleapi::importPlugin() are exactly the same.; With SimpleApi, it does not really make sense to have this function anymore in BaseSimulationTest. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4467
https://github.com/sofa-framework/sofa/pull/4467:39,Usability,simpl,simpleapi,39,"BaseSimulationTest::importPlugin() and simpleapi::importPlugin() are exactly the same.; With SimpleApi, it does not really make sense to have this function anymore in BaseSimulationTest. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4467
https://github.com/sofa-framework/sofa/pull/4467:93,Usability,Simpl,SimpleApi,93,"BaseSimulationTest::importPlugin() and simpleapi::importPlugin() are exactly the same.; With SimpleApi, it does not really make sense to have this function anymore in BaseSimulationTest. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4467
https://github.com/sofa-framework/sofa/pull/4468:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4468
https://github.com/sofa-framework/sofa/pull/4468:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4468
https://github.com/sofa-framework/sofa/pull/4468:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4468
https://github.com/sofa-framework/sofa/pull/4468:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4468
https://github.com/sofa-framework/sofa/pull/4468:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4468
https://github.com/sofa-framework/sofa/pull/4468:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4468
https://github.com/sofa-framework/sofa/pull/4469:668,Availability,failure,failures,668,"https://cmake.org/cmake/help/latest/policy/CMP0144.html; and make consistent the required version of cmake in Haptics_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4469
https://github.com/sofa-framework/sofa/pull/4469:717,Availability,failure,failures,717,"https://cmake.org/cmake/help/latest/policy/CMP0144.html; and make consistent the required version of cmake in Haptics_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4469
https://github.com/sofa-framework/sofa/pull/4469:287,Security,Certificate,Certificate,287,"https://cmake.org/cmake/help/latest/policy/CMP0144.html; and make consistent the required version of cmake in Haptics_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4469
https://github.com/sofa-framework/sofa/pull/4469:398,Security,certificate,certificate-of-origin-dco,398,"https://cmake.org/cmake/help/latest/policy/CMP0144.html; and make consistent the required version of cmake in Haptics_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4469
https://github.com/sofa-framework/sofa/pull/4469:663,Testability,test,test,663,"https://cmake.org/cmake/help/latest/policy/CMP0144.html; and make consistent the required version of cmake in Haptics_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4469
https://github.com/sofa-framework/sofa/pull/4469:712,Testability,test,test,712,"https://cmake.org/cmake/help/latest/policy/CMP0144.html; and make consistent the required version of cmake in Haptics_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4469
https://github.com/sofa-framework/sofa/pull/4471:1256,Availability,failure,failures,1256,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471
https://github.com/sofa-framework/sofa/pull/4471:1305,Availability,failure,failures,1305,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471
https://github.com/sofa-framework/sofa/pull/4471:69,Deployability,upgrade,upgrade,69,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471
https://github.com/sofa-framework/sofa/pull/4471:234,Deployability,update,update,234,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471
https://github.com/sofa-framework/sofa/pull/4471:427,Deployability,install,install,427,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471
https://github.com/sofa-framework/sofa/pull/4471:644,Integrability,depend,depends-on,644,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471
https://github.com/sofa-framework/sofa/pull/4471:689,Modifiability,Plugin,PluginExample,689,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471
https://github.com/sofa-framework/sofa/pull/4471:875,Security,Certificate,Certificate,875,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471
https://github.com/sofa-framework/sofa/pull/4471:986,Security,certificate,certificate-of-origin-dco,986,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471
https://github.com/sofa-framework/sofa/pull/4471:1251,Testability,test,test,1251,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471
https://github.com/sofa-framework/sofa/pull/4471:1300,Testability,test,test,1300,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471
https://github.com/sofa-framework/sofa/pull/4471:227,Usability,simpl,simply,227,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471
https://github.com/sofa-framework/sofa/pull/4474:610,Availability,failure,failures,610,"Just for @fredroy :eyes:; .. We lack a ""pr: super fast merge"" :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4474
https://github.com/sofa-framework/sofa/pull/4474:659,Availability,failure,failures,659,"Just for @fredroy :eyes:; .. We lack a ""pr: super fast merge"" :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4474
https://github.com/sofa-framework/sofa/pull/4474:229,Security,Certificate,Certificate,229,"Just for @fredroy :eyes:; .. We lack a ""pr: super fast merge"" :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4474
https://github.com/sofa-framework/sofa/pull/4474:340,Security,certificate,certificate-of-origin-dco,340,"Just for @fredroy :eyes:; .. We lack a ""pr: super fast merge"" :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4474
https://github.com/sofa-framework/sofa/pull/4474:605,Testability,test,test,605,"Just for @fredroy :eyes:; .. We lack a ""pr: super fast merge"" :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4474
https://github.com/sofa-framework/sofa/pull/4474:654,Testability,test,test,654,"Just for @fredroy :eyes:; .. We lack a ""pr: super fast merge"" :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4474
https://github.com/sofa-framework/sofa/pull/4475:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4475
https://github.com/sofa-framework/sofa/pull/4475:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4475
https://github.com/sofa-framework/sofa/pull/4475:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4475
https://github.com/sofa-framework/sofa/pull/4475:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4475
https://github.com/sofa-framework/sofa/pull/4475:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4475
https://github.com/sofa-framework/sofa/pull/4475:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4475
https://github.com/sofa-framework/sofa/pull/4476:643,Availability,failure,failures,643,"`pull_request` event prevented from using secrets value since it arises from PR author repository. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4476
https://github.com/sofa-framework/sofa/pull/4476:692,Availability,failure,failures,692,"`pull_request` event prevented from using secrets value since it arises from PR author repository. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4476
https://github.com/sofa-framework/sofa/pull/4476:262,Security,Certificate,Certificate,262,"`pull_request` event prevented from using secrets value since it arises from PR author repository. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4476
https://github.com/sofa-framework/sofa/pull/4476:373,Security,certificate,certificate-of-origin-dco,373,"`pull_request` event prevented from using secrets value since it arises from PR author repository. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4476
https://github.com/sofa-framework/sofa/pull/4476:638,Testability,test,test,638,"`pull_request` event prevented from using secrets value since it arises from PR author repository. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4476
https://github.com/sofa-framework/sofa/pull/4476:687,Testability,test,test,687,"`pull_request` event prevented from using secrets value since it arises from PR author repository. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4476
https://github.com/sofa-framework/sofa/pull/4477:2615,Availability,failure,failures,2615,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:2664,Availability,failure,failures,2664,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:1915,Deployability,Update,Update,1915,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:1952,Deployability,Update,Update,1952,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:595,Integrability,depend,dependency,595,"`BaseOrderingMethod` is introduced as an abstract component in `Sofa.Core`. It is the base class of a new category of components. Then, a new module is introduced. In this module, the components are derived from `BaseOrderingMethod`. Therefore, its name is `Sofa.Component.LinearSolver.Ordering`. It is in `LinearSolver` because an ordering method is only used with linear solvers, more specifically sparse direct linear solvers. Only one ordering method is still in `LinearSolver.Direct`: `MetisOrderingMethod`. The goal is to move later this component in a plugin so that METIS is no longer a dependency of SOFA core. In the meantime, this method is still the preferred one for legacy reasons. Eigen-based solvers were problematic. In Eigen, everything is defined at compile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS de",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:1999,Integrability,depend,dependency,1999,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:559,Modifiability,plugin,plugin,559,"`BaseOrderingMethod` is introduced as an abstract component in `Sofa.Core`. It is the base class of a new category of components. Then, a new module is introduced. In this module, the components are derived from `BaseOrderingMethod`. Therefore, its name is `Sofa.Component.LinearSolver.Ordering`. It is in `LinearSolver` because an ordering method is only used with linear solvers, more specifically sparse direct linear solvers. Only one ordering method is still in `LinearSolver.Direct`: `MetisOrderingMethod`. The goal is to move later this component in a plugin so that METIS is no longer a dependency of SOFA core. In the meantime, this method is still the preferred one for legacy reasons. Eigen-based solvers were problematic. In Eigen, everything is defined at compile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS de",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:821,Modifiability,polymorphi,polymorphism,821,"`BaseOrderingMethod` is introduced as an abstract component in `Sofa.Core`. It is the base class of a new category of components. Then, a new module is introduced. In this module, the components are derived from `BaseOrderingMethod`. Therefore, its name is `Sofa.Component.LinearSolver.Ordering`. It is in `LinearSolver` because an ordering method is only used with linear solvers, more specifically sparse direct linear solvers. Only one ordering method is still in `LinearSolver.Direct`: `MetisOrderingMethod`. The goal is to move later this component in a plugin so that METIS is no longer a dependency of SOFA core. In the meantime, this method is still the preferred one for legacy reasons. Eigen-based solvers were problematic. In Eigen, everything is defined at compile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS de",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:1014,Modifiability,plugin,plugin,1014,"`BaseOrderingMethod` is introduced as an abstract component in `Sofa.Core`. It is the base class of a new category of components. Then, a new module is introduced. In this module, the components are derived from `BaseOrderingMethod`. Therefore, its name is `Sofa.Component.LinearSolver.Ordering`. It is in `LinearSolver` because an ordering method is only used with linear solvers, more specifically sparse direct linear solvers. Only one ordering method is still in `LinearSolver.Direct`: `MetisOrderingMethod`. The goal is to move later this component in a plugin so that METIS is no longer a dependency of SOFA core. In the meantime, this method is still the preferred one for legacy reasons. Eigen-based solvers were problematic. In Eigen, everything is defined at compile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS de",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:1077,Modifiability,polymorphi,polymorphism,1077,"a.Core`. It is the base class of a new category of components. Then, a new module is introduced. In this module, the components are derived from `BaseOrderingMethod`. Therefore, its name is `Sofa.Component.LinearSolver.Ordering`. It is in `LinearSolver` because an ordering method is only used with linear solvers, more specifically sparse direct linear solvers. Only one ordering method is still in `LinearSolver.Direct`: `MetisOrderingMethod`. The goal is to move later this component in a plugin so that METIS is no longer a dependency of SOFA core. In the meantime, this method is still the preferred one for legacy reasons. Eigen-based solvers were problematic. In Eigen, everything is defined at compile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scot",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:1806,Modifiability,plugin,plugin,1806,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:1864,Modifiability,plugin,plugin,1864,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:1904,Modifiability,plugin,plugin,1904,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:2052,Modifiability,plugin,plugin,2052,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:2234,Security,Certificate,Certificate,2234,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:2345,Security,certificate,certificate-of-origin-dco,2345,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:1890,Testability,test,tests,1890,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:2610,Testability,test,test,2610,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:2659,Testability,test,test,2659,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4477:1245,Usability,simpl,simple,1245,"LinearSolver.Ordering`. It is in `LinearSolver` because an ordering method is only used with linear solvers, more specifically sparse direct linear solvers. Only one ordering method is still in `LinearSolver.Direct`: `MetisOrderingMethod`. The goal is to move later this component in a plugin so that METIS is no longer a dependency of SOFA core. In the meantime, this method is still the preferred one for legacy reasons. Eigen-based solvers were problematic. In Eigen, everything is defined at compile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://gi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477
https://github.com/sofa-framework/sofa/pull/4478:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4478
https://github.com/sofa-framework/sofa/pull/4478:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4478
https://github.com/sofa-framework/sofa/pull/4478:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4478
https://github.com/sofa-framework/sofa/pull/4478:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4478
https://github.com/sofa-framework/sofa/pull/4478:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4478
https://github.com/sofa-framework/sofa/pull/4478:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4478
https://github.com/sofa-framework/sofa/pull/4482:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4482
https://github.com/sofa-framework/sofa/pull/4482:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4482
https://github.com/sofa-framework/sofa/pull/4482:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4482
https://github.com/sofa-framework/sofa/pull/4482:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4482
https://github.com/sofa-framework/sofa/pull/4482:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4482
https://github.com/sofa-framework/sofa/pull/4482:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4482
https://github.com/sofa-framework/sofa/pull/4483:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4483
https://github.com/sofa-framework/sofa/pull/4483:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4483
https://github.com/sofa-framework/sofa/pull/4483:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4483
https://github.com/sofa-framework/sofa/pull/4483:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4483
https://github.com/sofa-framework/sofa/pull/4483:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4483
https://github.com/sofa-framework/sofa/pull/4483:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4483
https://github.com/sofa-framework/sofa/pull/4484:23,Availability,Error,Error,23,"Plugin `image` fails (`Error C2672 : 'std::max': no matching overloaded function found`) when compiling `ImageFilter` with the first template parameter being `long` or `unsigned long`. This happens when `PLUGIN_IMAGE_COMPILE_SET` is set to `full`. The compilation fails only with MSVC. The fix is not tested and may change the accuracy because of an additional conversion to `float`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4484
https://github.com/sofa-framework/sofa/pull/4484:928,Availability,failure,failures,928,"Plugin `image` fails (`Error C2672 : 'std::max': no matching overloaded function found`) when compiling `ImageFilter` with the first template parameter being `long` or `unsigned long`. This happens when `PLUGIN_IMAGE_COMPILE_SET` is set to `full`. The compilation fails only with MSVC. The fix is not tested and may change the accuracy because of an additional conversion to `float`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4484
https://github.com/sofa-framework/sofa/pull/4484:977,Availability,failure,failures,977,"Plugin `image` fails (`Error C2672 : 'std::max': no matching overloaded function found`) when compiling `ImageFilter` with the first template parameter being `long` or `unsigned long`. This happens when `PLUGIN_IMAGE_COMPILE_SET` is set to `full`. The compilation fails only with MSVC. The fix is not tested and may change the accuracy because of an additional conversion to `float`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4484
https://github.com/sofa-framework/sofa/pull/4484:0,Modifiability,Plugin,Plugin,0,"Plugin `image` fails (`Error C2672 : 'std::max': no matching overloaded function found`) when compiling `ImageFilter` with the first template parameter being `long` or `unsigned long`. This happens when `PLUGIN_IMAGE_COMPILE_SET` is set to `full`. The compilation fails only with MSVC. The fix is not tested and may change the accuracy because of an additional conversion to `float`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4484
https://github.com/sofa-framework/sofa/pull/4484:547,Security,Certificate,Certificate,547,"Plugin `image` fails (`Error C2672 : 'std::max': no matching overloaded function found`) when compiling `ImageFilter` with the first template parameter being `long` or `unsigned long`. This happens when `PLUGIN_IMAGE_COMPILE_SET` is set to `full`. The compilation fails only with MSVC. The fix is not tested and may change the accuracy because of an additional conversion to `float`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4484
https://github.com/sofa-framework/sofa/pull/4484:658,Security,certificate,certificate-of-origin-dco,658,"Plugin `image` fails (`Error C2672 : 'std::max': no matching overloaded function found`) when compiling `ImageFilter` with the first template parameter being `long` or `unsigned long`. This happens when `PLUGIN_IMAGE_COMPILE_SET` is set to `full`. The compilation fails only with MSVC. The fix is not tested and may change the accuracy because of an additional conversion to `float`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4484
https://github.com/sofa-framework/sofa/pull/4484:301,Testability,test,tested,301,"Plugin `image` fails (`Error C2672 : 'std::max': no matching overloaded function found`) when compiling `ImageFilter` with the first template parameter being `long` or `unsigned long`. This happens when `PLUGIN_IMAGE_COMPILE_SET` is set to `full`. The compilation fails only with MSVC. The fix is not tested and may change the accuracy because of an additional conversion to `float`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4484
https://github.com/sofa-framework/sofa/pull/4484:923,Testability,test,test,923,"Plugin `image` fails (`Error C2672 : 'std::max': no matching overloaded function found`) when compiling `ImageFilter` with the first template parameter being `long` or `unsigned long`. This happens when `PLUGIN_IMAGE_COMPILE_SET` is set to `full`. The compilation fails only with MSVC. The fix is not tested and may change the accuracy because of an additional conversion to `float`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4484
https://github.com/sofa-framework/sofa/pull/4484:972,Testability,test,test,972,"Plugin `image` fails (`Error C2672 : 'std::max': no matching overloaded function found`) when compiling `ImageFilter` with the first template parameter being `long` or `unsigned long`. This happens when `PLUGIN_IMAGE_COMPILE_SET` is set to `full`. The compilation fails only with MSVC. The fix is not tested and may change the accuracy because of an additional conversion to `float`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4484
https://github.com/sofa-framework/sofa/pull/4485:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4485
https://github.com/sofa-framework/sofa/pull/4485:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4485
https://github.com/sofa-framework/sofa/pull/4485:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4485
https://github.com/sofa-framework/sofa/pull/4485:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4485
https://github.com/sofa-framework/sofa/pull/4485:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4485
https://github.com/sofa-framework/sofa/pull/4485:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4485
https://github.com/sofa-framework/sofa/pull/4486:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4486
https://github.com/sofa-framework/sofa/pull/4486:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4486
https://github.com/sofa-framework/sofa/pull/4486:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4486
https://github.com/sofa-framework/sofa/pull/4486:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4486
https://github.com/sofa-framework/sofa/pull/4486:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4486
https://github.com/sofa-framework/sofa/pull/4486:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4486
https://github.com/sofa-framework/sofa/pull/4487:839,Availability,failure,failures,839,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487
https://github.com/sofa-framework/sofa/pull/4487:888,Availability,failure,failures,888,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487
https://github.com/sofa-framework/sofa/pull/4487:19,Modifiability,plugin,plugin,19,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487
https://github.com/sofa-framework/sofa/pull/4487:155,Modifiability,plugin,plugin,155,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487
https://github.com/sofa-framework/sofa/pull/4487:265,Modifiability,plugin,plugin,265,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487
https://github.com/sofa-framework/sofa/pull/4487:273,Modifiability,plugin,plugin-architecture,273,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487
https://github.com/sofa-framework/sofa/pull/4487:458,Security,Certificate,Certificate,458,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487
https://github.com/sofa-framework/sofa/pull/4487:569,Security,certificate,certificate-of-origin-dco,569,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487
https://github.com/sofa-framework/sofa/pull/4487:834,Testability,test,test,834,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487
https://github.com/sofa-framework/sofa/pull/4487:883,Testability,test,test,883,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487
https://github.com/sofa-framework/sofa/pull/4489:721,Availability,failure,failures,721,"... or so it seems. There is not CI process for the install process and I could compile BeamAdapter_test target out of tree, but I would prefer if other people could test it 🧐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4489
https://github.com/sofa-framework/sofa/pull/4489:770,Availability,failure,failures,770,"... or so it seems. There is not CI process for the install process and I could compile BeamAdapter_test target out of tree, but I would prefer if other people could test it 🧐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4489
https://github.com/sofa-framework/sofa/pull/4489:52,Deployability,install,install,52,"... or so it seems. There is not CI process for the install process and I could compile BeamAdapter_test target out of tree, but I would prefer if other people could test it 🧐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4489
https://github.com/sofa-framework/sofa/pull/4489:340,Security,Certificate,Certificate,340,"... or so it seems. There is not CI process for the install process and I could compile BeamAdapter_test target out of tree, but I would prefer if other people could test it 🧐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4489
https://github.com/sofa-framework/sofa/pull/4489:451,Security,certificate,certificate-of-origin-dco,451,"... or so it seems. There is not CI process for the install process and I could compile BeamAdapter_test target out of tree, but I would prefer if other people could test it 🧐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4489
https://github.com/sofa-framework/sofa/pull/4489:166,Testability,test,test,166,"... or so it seems. There is not CI process for the install process and I could compile BeamAdapter_test target out of tree, but I would prefer if other people could test it 🧐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4489
https://github.com/sofa-framework/sofa/pull/4489:716,Testability,test,test,716,"... or so it seems. There is not CI process for the install process and I could compile BeamAdapter_test target out of tree, but I would prefer if other people could test it 🧐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4489
https://github.com/sofa-framework/sofa/pull/4489:765,Testability,test,test,765,"... or so it seems. There is not CI process for the install process and I could compile BeamAdapter_test target out of tree, but I would prefer if other people could test it 🧐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4489
https://github.com/sofa-framework/sofa/pull/4490:2303,Availability,failure,failures,2303,"he user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490
https://github.com/sofa-framework/sofa/pull/4490:2352,Availability,failure,failures,2352,"he user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490
https://github.com/sofa-framework/sofa/pull/4490:681,Energy Efficiency,reduce,reduced,681,"In some simulations relying on mappings, a computation intensive task is the product `J^T * K * J` (including the computation of `J`). To offer the user a choice of strategy regarding the way to compute this product, I introduce a component `MatrixMapping`. This component is optional in a scene. If not present, it will be created automatically with a generic-purpose strategy, i.e. the one already implemented. In order to illustrate the options given to the user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490
https://github.com/sofa-framework/sofa/pull/4490:1647,Performance,perform,performances,1647,"he user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490
https://github.com/sofa-framework/sofa/pull/4490:1922,Security,Certificate,Certificate,1922,"he user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490
https://github.com/sofa-framework/sofa/pull/4490:2033,Security,certificate,certificate-of-origin-dco,2033,"he user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490
https://github.com/sofa-framework/sofa/pull/4490:665,Testability,benchmark,benchmarked,665,"In some simulations relying on mappings, a computation intensive task is the product `J^T * K * J` (including the computation of `J`). To offer the user a choice of strategy regarding the way to compute this product, I introduce a component `MatrixMapping`. This component is optional in a scene. If not present, it will be created automatically with a generic-purpose strategy, i.e. the one already implemented. In order to illustrate the options given to the user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490
https://github.com/sofa-framework/sofa/pull/4490:738,Testability,benchmark,benchmark,738,"In some simulations relying on mappings, a computation intensive task is the product `J^T * K * J` (including the computation of `J`). To offer the user a choice of strategy regarding the way to compute this product, I introduce a component `MatrixMapping`. This component is optional in a scene. If not present, it will be created automatically with a generic-purpose strategy, i.e. the one already implemented. In order to illustrate the options given to the user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490
https://github.com/sofa-framework/sofa/pull/4490:2298,Testability,test,test,2298,"he user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490
https://github.com/sofa-framework/sofa/pull/4490:2347,Testability,test,test,2347,"he user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490
https://github.com/sofa-framework/sofa/pull/4491:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4491
https://github.com/sofa-framework/sofa/pull/4491:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4491
https://github.com/sofa-framework/sofa/pull/4491:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4491
https://github.com/sofa-framework/sofa/pull/4491:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4491
https://github.com/sofa-framework/sofa/pull/4491:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4491
https://github.com/sofa-framework/sofa/pull/4491:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4491
https://github.com/sofa-framework/sofa/issues/4493:67,Availability,error,error,67,"I am trying to add sofapython3 plugin using GUI, but the following error is showing up ; ![Capture_1](https://github.com/sofa-framework/sofa/assets/65168029/237e63a7-f0df-48f9-9935-e1985e084687); I have tried all other fixes (fixing sofa root, sofa python root, python home and so on), but no avail. I have even checked if its issue with .dll file, hence ran REGSVR32 using the .dll file, and Im getting the exact same error saying ""the specified module could not be found"". Kindly help me fix this. My OS is windows 10, and I have both python 3.8 and 3.9 on my system, and I have routed all sofapython related paths to python 3.8 only.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4493
https://github.com/sofa-framework/sofa/issues/4493:293,Availability,avail,avail,293,"I am trying to add sofapython3 plugin using GUI, but the following error is showing up ; ![Capture_1](https://github.com/sofa-framework/sofa/assets/65168029/237e63a7-f0df-48f9-9935-e1985e084687); I have tried all other fixes (fixing sofa root, sofa python root, python home and so on), but no avail. I have even checked if its issue with .dll file, hence ran REGSVR32 using the .dll file, and Im getting the exact same error saying ""the specified module could not be found"". Kindly help me fix this. My OS is windows 10, and I have both python 3.8 and 3.9 on my system, and I have routed all sofapython related paths to python 3.8 only.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4493
https://github.com/sofa-framework/sofa/issues/4493:419,Availability,error,error,419,"I am trying to add sofapython3 plugin using GUI, but the following error is showing up ; ![Capture_1](https://github.com/sofa-framework/sofa/assets/65168029/237e63a7-f0df-48f9-9935-e1985e084687); I have tried all other fixes (fixing sofa root, sofa python root, python home and so on), but no avail. I have even checked if its issue with .dll file, hence ran REGSVR32 using the .dll file, and Im getting the exact same error saying ""the specified module could not be found"". Kindly help me fix this. My OS is windows 10, and I have both python 3.8 and 3.9 on my system, and I have routed all sofapython related paths to python 3.8 only.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4493
https://github.com/sofa-framework/sofa/issues/4493:581,Integrability,rout,routed,581,"I am trying to add sofapython3 plugin using GUI, but the following error is showing up ; ![Capture_1](https://github.com/sofa-framework/sofa/assets/65168029/237e63a7-f0df-48f9-9935-e1985e084687); I have tried all other fixes (fixing sofa root, sofa python root, python home and so on), but no avail. I have even checked if its issue with .dll file, hence ran REGSVR32 using the .dll file, and Im getting the exact same error saying ""the specified module could not be found"". Kindly help me fix this. My OS is windows 10, and I have both python 3.8 and 3.9 on my system, and I have routed all sofapython related paths to python 3.8 only.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4493
https://github.com/sofa-framework/sofa/issues/4493:31,Modifiability,plugin,plugin,31,"I am trying to add sofapython3 plugin using GUI, but the following error is showing up ; ![Capture_1](https://github.com/sofa-framework/sofa/assets/65168029/237e63a7-f0df-48f9-9935-e1985e084687); I have tried all other fixes (fixing sofa root, sofa python root, python home and so on), but no avail. I have even checked if its issue with .dll file, hence ran REGSVR32 using the .dll file, and Im getting the exact same error saying ""the specified module could not be found"". Kindly help me fix this. My OS is windows 10, and I have both python 3.8 and 3.9 on my system, and I have routed all sofapython related paths to python 3.8 only.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4493
https://github.com/sofa-framework/sofa/pull/4494:456,Availability,error,error,456,"Method isQuadDeulaunayOriented was only handling some specific case. Use directly the computation of angles to check flipping Delaunay condition to triangulate a quad see [wikipedia page](https://en.wikipedia.org/wiki/Delaunay_triangulation#Visual_Delaunay_definition:_Flipping) . And in fact the method was not working well but the method splitAlongPath used for triangular incision was calling it with wrong quad structure. ; Luckily in this case we had error*error = good behavior... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494
https://github.com/sofa-framework/sofa/pull/4494:462,Availability,error,error,462,"Method isQuadDeulaunayOriented was only handling some specific case. Use directly the computation of angles to check flipping Delaunay condition to triangulate a quad see [wikipedia page](https://en.wikipedia.org/wiki/Delaunay_triangulation#Visual_Delaunay_definition:_Flipping) . And in fact the method was not working well but the method splitAlongPath used for triangular incision was calling it with wrong quad structure. ; Luckily in this case we had error*error = good behavior... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494
https://github.com/sofa-framework/sofa/pull/4494:1033,Availability,failure,failures,1033,"Method isQuadDeulaunayOriented was only handling some specific case. Use directly the computation of angles to check flipping Delaunay condition to triangulate a quad see [wikipedia page](https://en.wikipedia.org/wiki/Delaunay_triangulation#Visual_Delaunay_definition:_Flipping) . And in fact the method was not working well but the method splitAlongPath used for triangular incision was calling it with wrong quad structure. ; Luckily in this case we had error*error = good behavior... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494
https://github.com/sofa-framework/sofa/pull/4494:1082,Availability,failure,failures,1082,"Method isQuadDeulaunayOriented was only handling some specific case. Use directly the computation of angles to check flipping Delaunay condition to triangulate a quad see [wikipedia page](https://en.wikipedia.org/wiki/Delaunay_triangulation#Visual_Delaunay_definition:_Flipping) . And in fact the method was not working well but the method splitAlongPath used for triangular incision was calling it with wrong quad structure. ; Luckily in this case we had error*error = good behavior... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494
https://github.com/sofa-framework/sofa/pull/4494:652,Security,Certificate,Certificate,652,"Method isQuadDeulaunayOriented was only handling some specific case. Use directly the computation of angles to check flipping Delaunay condition to triangulate a quad see [wikipedia page](https://en.wikipedia.org/wiki/Delaunay_triangulation#Visual_Delaunay_definition:_Flipping) . And in fact the method was not working well but the method splitAlongPath used for triangular incision was calling it with wrong quad structure. ; Luckily in this case we had error*error = good behavior... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494
https://github.com/sofa-framework/sofa/pull/4494:763,Security,certificate,certificate-of-origin-dco,763,"Method isQuadDeulaunayOriented was only handling some specific case. Use directly the computation of angles to check flipping Delaunay condition to triangulate a quad see [wikipedia page](https://en.wikipedia.org/wiki/Delaunay_triangulation#Visual_Delaunay_definition:_Flipping) . And in fact the method was not working well but the method splitAlongPath used for triangular incision was calling it with wrong quad structure. ; Luckily in this case we had error*error = good behavior... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494
https://github.com/sofa-framework/sofa/pull/4494:1028,Testability,test,test,1028,"Method isQuadDeulaunayOriented was only handling some specific case. Use directly the computation of angles to check flipping Delaunay condition to triangulate a quad see [wikipedia page](https://en.wikipedia.org/wiki/Delaunay_triangulation#Visual_Delaunay_definition:_Flipping) . And in fact the method was not working well but the method splitAlongPath used for triangular incision was calling it with wrong quad structure. ; Luckily in this case we had error*error = good behavior... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494
https://github.com/sofa-framework/sofa/pull/4494:1077,Testability,test,test,1077,"Method isQuadDeulaunayOriented was only handling some specific case. Use directly the computation of angles to check flipping Delaunay condition to triangulate a quad see [wikipedia page](https://en.wikipedia.org/wiki/Delaunay_triangulation#Visual_Delaunay_definition:_Flipping) . And in fact the method was not working well but the method splitAlongPath used for triangular incision was calling it with wrong quad structure. ; Luckily in this case we had error*error = good behavior... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494
https://github.com/sofa-framework/sofa/pull/4495:1118,Availability,failure,failures,1118,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495
https://github.com/sofa-framework/sofa/pull/4495:1167,Availability,failure,failures,1167,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495
https://github.com/sofa-framework/sofa/pull/4495:78,Integrability,depend,dependency,78,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495
https://github.com/sofa-framework/sofa/pull/4495:506,Integrability,depend,depends-on,506,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495
https://github.com/sofa-framework/sofa/pull/4495:737,Security,Certificate,Certificate,737,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495
https://github.com/sofa-framework/sofa/pull/4495:848,Security,certificate,certificate-of-origin-dco,848,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495
https://github.com/sofa-framework/sofa/pull/4495:380,Testability,Test,Testing,380,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495
https://github.com/sofa-framework/sofa/pull/4495:1113,Testability,test,test,1113,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495
https://github.com/sofa-framework/sofa/pull/4495:1162,Testability,test,test,1162,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495
https://github.com/sofa-framework/sofa/pull/4495:0,Usability,Simpl,SimpleApi,0,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495
https://github.com/sofa-framework/sofa/pull/4495:157,Usability,Simpl,SimpleApi,157,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495
https://github.com/sofa-framework/sofa/pull/4495:210,Usability,simpl,simpleapi,210,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495
https://github.com/sofa-framework/sofa/pull/4495:408,Usability,Simpl,SimpleApi,408,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495
https://github.com/sofa-framework/sofa/pull/4496:135,Availability,failure,failures,135,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/pull/4496:895,Availability,failure,failures,895,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/pull/4496:944,Availability,failure,failures,944,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/pull/4496:61,Deployability,configurat,configuration,61,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/pull/4496:269,Deployability,release,release,269,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/pull/4496:61,Modifiability,config,configuration,61,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/pull/4496:167,Safety,timeout,timeouts,167,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/pull/4496:514,Security,Certificate,Certificate,514,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/pull/4496:625,Security,certificate,certificate-of-origin-dco,625,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/pull/4496:255,Testability,assert,assertions,255,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/pull/4496:331,Testability,assert,assertions,331,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/pull/4496:890,Testability,test,test,890,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/pull/4496:939,Testability,test,test,939,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/pull/4496:241,Usability,simpl,simply,241,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496
https://github.com/sofa-framework/sofa/issues/4497:314,Usability,simpl,simplify,314,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3131. <div type='discussions-op-text'>. <sup>Originally posted by **damienmarchal** July 14, 2022</sup>; Currently in runSofa we are maintaining two different viewer with more or less the same functionnalitities. . Could we remove one of them to simplify the codebase (and make usability clearer)</div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4497
https://github.com/sofa-framework/sofa/issues/4497:346,Usability,usab,usability,346,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3131. <div type='discussions-op-text'>. <sup>Originally posted by **damienmarchal** July 14, 2022</sup>; Currently in runSofa we are maintaining two different viewer with more or less the same functionnalitities. . Could we remove one of them to simplify the codebase (and make usability clearer)</div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4497
https://github.com/sofa-framework/sofa/issues/4497:356,Usability,clear,clearer,356,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3131. <div type='discussions-op-text'>. <sup>Originally posted by **damienmarchal** July 14, 2022</sup>; Currently in runSofa we are maintaining two different viewer with more or less the same functionnalitities. . Could we remove one of them to simplify the codebase (and make usability clearer)</div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4497
https://github.com/sofa-framework/sofa/pull/4498:570,Availability,failure,failures,570,"Change Gitter to Discord. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4498
https://github.com/sofa-framework/sofa/pull/4498:619,Availability,failure,failures,619,"Change Gitter to Discord. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4498
https://github.com/sofa-framework/sofa/pull/4498:189,Security,Certificate,Certificate,189,"Change Gitter to Discord. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4498
https://github.com/sofa-framework/sofa/pull/4498:300,Security,certificate,certificate-of-origin-dco,300,"Change Gitter to Discord. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4498
https://github.com/sofa-framework/sofa/pull/4498:565,Testability,test,test,565,"Change Gitter to Discord. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4498
https://github.com/sofa-framework/sofa/pull/4498:614,Testability,test,test,614,"Change Gitter to Discord. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4498
https://github.com/sofa-framework/sofa/pull/4500:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4500
https://github.com/sofa-framework/sofa/pull/4500:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4500
https://github.com/sofa-framework/sofa/pull/4500:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4500
https://github.com/sofa-framework/sofa/pull/4500:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4500
https://github.com/sofa-framework/sofa/pull/4500:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4500
https://github.com/sofa-framework/sofa/pull/4500:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4500
https://github.com/sofa-framework/sofa/pull/4502:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4502
https://github.com/sofa-framework/sofa/pull/4502:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4502
https://github.com/sofa-framework/sofa/pull/4502:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4502
https://github.com/sofa-framework/sofa/pull/4502:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4502
https://github.com/sofa-framework/sofa/pull/4502:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4502
https://github.com/sofa-framework/sofa/pull/4502:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4502
https://github.com/sofa-framework/sofa/pull/4504:174,Availability,down,download,174,"Move there: https://github.com/sofa-framework/MeshSTEPLoader. Part of ; - https://github.com/sofa-framework/sofa/issues/1442. Need OpenCascade SDK, which needs an account to download 👺. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4504
https://github.com/sofa-framework/sofa/pull/4504:730,Availability,failure,failures,730,"Move there: https://github.com/sofa-framework/MeshSTEPLoader. Part of ; - https://github.com/sofa-framework/sofa/issues/1442. Need OpenCascade SDK, which needs an account to download 👺. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4504
https://github.com/sofa-framework/sofa/pull/4504:779,Availability,failure,failures,779,"Move there: https://github.com/sofa-framework/MeshSTEPLoader. Part of ; - https://github.com/sofa-framework/sofa/issues/1442. Need OpenCascade SDK, which needs an account to download 👺. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4504
https://github.com/sofa-framework/sofa/pull/4504:349,Security,Certificate,Certificate,349,"Move there: https://github.com/sofa-framework/MeshSTEPLoader. Part of ; - https://github.com/sofa-framework/sofa/issues/1442. Need OpenCascade SDK, which needs an account to download 👺. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4504
https://github.com/sofa-framework/sofa/pull/4504:460,Security,certificate,certificate-of-origin-dco,460,"Move there: https://github.com/sofa-framework/MeshSTEPLoader. Part of ; - https://github.com/sofa-framework/sofa/issues/1442. Need OpenCascade SDK, which needs an account to download 👺. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4504
https://github.com/sofa-framework/sofa/pull/4504:725,Testability,test,test,725,"Move there: https://github.com/sofa-framework/MeshSTEPLoader. Part of ; - https://github.com/sofa-framework/sofa/issues/1442. Need OpenCascade SDK, which needs an account to download 👺. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4504
https://github.com/sofa-framework/sofa/pull/4504:774,Testability,test,test,774,"Move there: https://github.com/sofa-framework/MeshSTEPLoader. Part of ; - https://github.com/sofa-framework/sofa/issues/1442. Need OpenCascade SDK, which needs an account to download 👺. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4504
https://github.com/sofa-framework/sofa/pull/4505:1016,Availability,failure,failures,1016,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:1065,Availability,failure,failures,1065,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:301,Integrability,depend,depend,301,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:38,Modifiability,plugin,plugin,38,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:87,Modifiability,plugin,plugin,87,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:208,Modifiability,config,configure,208,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:237,Modifiability,plugin,plugins,237,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:270,Modifiability,plugin,plugins,270,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:282,Modifiability,plugin,plugins,282,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:383,Modifiability,plugin,plugins,383,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:436,Modifiability,plugin,plugins,436,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:635,Security,Certificate,Certificate,635,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:746,Security,certificate,certificate-of-origin-dco,746,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:1011,Testability,test,test,1011,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4505:1060,Testability,test,test,1060,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505
https://github.com/sofa-framework/sofa/pull/4506:712,Availability,failure,failures,712,"Remove tinyXML find package in the common config file because the linkage is private and thus it is not required to find it for links against Sofa.Simulation.Common. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4506
https://github.com/sofa-framework/sofa/pull/4506:761,Availability,failure,failures,761,"Remove tinyXML find package in the common config file because the linkage is private and thus it is not required to find it for links against Sofa.Simulation.Common. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4506
https://github.com/sofa-framework/sofa/pull/4506:42,Modifiability,config,config,42,"Remove tinyXML find package in the common config file because the linkage is private and thus it is not required to find it for links against Sofa.Simulation.Common. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4506
https://github.com/sofa-framework/sofa/pull/4506:331,Security,Certificate,Certificate,331,"Remove tinyXML find package in the common config file because the linkage is private and thus it is not required to find it for links against Sofa.Simulation.Common. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4506
https://github.com/sofa-framework/sofa/pull/4506:442,Security,certificate,certificate-of-origin-dco,442,"Remove tinyXML find package in the common config file because the linkage is private and thus it is not required to find it for links against Sofa.Simulation.Common. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4506
https://github.com/sofa-framework/sofa/pull/4506:707,Testability,test,test,707,"Remove tinyXML find package in the common config file because the linkage is private and thus it is not required to find it for links against Sofa.Simulation.Common. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4506
https://github.com/sofa-framework/sofa/pull/4506:756,Testability,test,test,756,"Remove tinyXML find package in the common config file because the linkage is private and thus it is not required to find it for links against Sofa.Simulation.Common. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4506
https://github.com/sofa-framework/sofa/pull/4507:602,Availability,failure,failures,602,"Really just for logs to understand more what is pulled. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4507
https://github.com/sofa-framework/sofa/pull/4507:651,Availability,failure,failures,651,"Really just for logs to understand more what is pulled. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4507
https://github.com/sofa-framework/sofa/pull/4507:221,Security,Certificate,Certificate,221,"Really just for logs to understand more what is pulled. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4507
https://github.com/sofa-framework/sofa/pull/4507:332,Security,certificate,certificate-of-origin-dco,332,"Really just for logs to understand more what is pulled. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4507
https://github.com/sofa-framework/sofa/pull/4507:16,Testability,log,logs,16,"Really just for logs to understand more what is pulled. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4507
https://github.com/sofa-framework/sofa/pull/4507:597,Testability,test,test,597,"Really just for logs to understand more what is pulled. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4507
https://github.com/sofa-framework/sofa/pull/4507:646,Testability,test,test,646,"Really just for logs to understand more what is pulled. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4507
https://github.com/sofa-framework/sofa/pull/4509:1283,Availability,failure,failures,1283,"With runSofa and SceneChecking, `RequiredPlugin` is calling `loadPlugin()` twice; - once at the `parse()` step; - and a second time when `SceneCheckMissingRequiredPlugin` at the `init()` step. `SceneCheckMissingRequiredPlugin` browses all `RequiredPlugin` and checks each entry on `d_loadedPlugins`.; https://github.com/sofa-framework/sofa/blob/af8f98a668dee73e21fac19da31d181baf137a99/applications/projects/SceneChecking/src/SceneChecking/SceneCheckMissingRequiredPlugin.cpp#L144-L150; But `d_loadedPlugin`s is set dirty at parse() so calling `d_loadedPlugins.getValue()` will trigger an other `loadPlugin()`, because of the callback. So this PR forcefully sets `d_loadedPlugins` to **not dirty** but maybe there is a better solution.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4509
https://github.com/sofa-framework/sofa/pull/4509:1332,Availability,failure,failures,1332,"With runSofa and SceneChecking, `RequiredPlugin` is calling `loadPlugin()` twice; - once at the `parse()` step; - and a second time when `SceneCheckMissingRequiredPlugin` at the `init()` step. `SceneCheckMissingRequiredPlugin` browses all `RequiredPlugin` and checks each entry on `d_loadedPlugins`.; https://github.com/sofa-framework/sofa/blob/af8f98a668dee73e21fac19da31d181baf137a99/applications/projects/SceneChecking/src/SceneChecking/SceneCheckMissingRequiredPlugin.cpp#L144-L150; But `d_loadedPlugin`s is set dirty at parse() so calling `d_loadedPlugins.getValue()` will trigger an other `loadPlugin()`, because of the callback. So this PR forcefully sets `d_loadedPlugins` to **not dirty** but maybe there is a better solution.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4509
https://github.com/sofa-framework/sofa/pull/4509:61,Performance,load,loadPlugin,61,"With runSofa and SceneChecking, `RequiredPlugin` is calling `loadPlugin()` twice; - once at the `parse()` step; - and a second time when `SceneCheckMissingRequiredPlugin` at the `init()` step. `SceneCheckMissingRequiredPlugin` browses all `RequiredPlugin` and checks each entry on `d_loadedPlugins`.; https://github.com/sofa-framework/sofa/blob/af8f98a668dee73e21fac19da31d181baf137a99/applications/projects/SceneChecking/src/SceneChecking/SceneCheckMissingRequiredPlugin.cpp#L144-L150; But `d_loadedPlugin`s is set dirty at parse() so calling `d_loadedPlugins.getValue()` will trigger an other `loadPlugin()`, because of the callback. So this PR forcefully sets `d_loadedPlugins` to **not dirty** but maybe there is a better solution.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4509
https://github.com/sofa-framework/sofa/pull/4509:596,Performance,load,loadPlugin,596,"With runSofa and SceneChecking, `RequiredPlugin` is calling `loadPlugin()` twice; - once at the `parse()` step; - and a second time when `SceneCheckMissingRequiredPlugin` at the `init()` step. `SceneCheckMissingRequiredPlugin` browses all `RequiredPlugin` and checks each entry on `d_loadedPlugins`.; https://github.com/sofa-framework/sofa/blob/af8f98a668dee73e21fac19da31d181baf137a99/applications/projects/SceneChecking/src/SceneChecking/SceneCheckMissingRequiredPlugin.cpp#L144-L150; But `d_loadedPlugin`s is set dirty at parse() so calling `d_loadedPlugins.getValue()` will trigger an other `loadPlugin()`, because of the callback. So this PR forcefully sets `d_loadedPlugins` to **not dirty** but maybe there is a better solution.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4509
https://github.com/sofa-framework/sofa/pull/4509:902,Security,Certificate,Certificate,902,"With runSofa and SceneChecking, `RequiredPlugin` is calling `loadPlugin()` twice; - once at the `parse()` step; - and a second time when `SceneCheckMissingRequiredPlugin` at the `init()` step. `SceneCheckMissingRequiredPlugin` browses all `RequiredPlugin` and checks each entry on `d_loadedPlugins`.; https://github.com/sofa-framework/sofa/blob/af8f98a668dee73e21fac19da31d181baf137a99/applications/projects/SceneChecking/src/SceneChecking/SceneCheckMissingRequiredPlugin.cpp#L144-L150; But `d_loadedPlugin`s is set dirty at parse() so calling `d_loadedPlugins.getValue()` will trigger an other `loadPlugin()`, because of the callback. So this PR forcefully sets `d_loadedPlugins` to **not dirty** but maybe there is a better solution.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4509
https://github.com/sofa-framework/sofa/pull/4509:1013,Security,certificate,certificate-of-origin-dco,1013,"With runSofa and SceneChecking, `RequiredPlugin` is calling `loadPlugin()` twice; - once at the `parse()` step; - and a second time when `SceneCheckMissingRequiredPlugin` at the `init()` step. `SceneCheckMissingRequiredPlugin` browses all `RequiredPlugin` and checks each entry on `d_loadedPlugins`.; https://github.com/sofa-framework/sofa/blob/af8f98a668dee73e21fac19da31d181baf137a99/applications/projects/SceneChecking/src/SceneChecking/SceneCheckMissingRequiredPlugin.cpp#L144-L150; But `d_loadedPlugin`s is set dirty at parse() so calling `d_loadedPlugins.getValue()` will trigger an other `loadPlugin()`, because of the callback. So this PR forcefully sets `d_loadedPlugins` to **not dirty** but maybe there is a better solution.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4509
https://github.com/sofa-framework/sofa/pull/4509:1278,Testability,test,test,1278,"With runSofa and SceneChecking, `RequiredPlugin` is calling `loadPlugin()` twice; - once at the `parse()` step; - and a second time when `SceneCheckMissingRequiredPlugin` at the `init()` step. `SceneCheckMissingRequiredPlugin` browses all `RequiredPlugin` and checks each entry on `d_loadedPlugins`.; https://github.com/sofa-framework/sofa/blob/af8f98a668dee73e21fac19da31d181baf137a99/applications/projects/SceneChecking/src/SceneChecking/SceneCheckMissingRequiredPlugin.cpp#L144-L150; But `d_loadedPlugin`s is set dirty at parse() so calling `d_loadedPlugins.getValue()` will trigger an other `loadPlugin()`, because of the callback. So this PR forcefully sets `d_loadedPlugins` to **not dirty** but maybe there is a better solution.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4509
https://github.com/sofa-framework/sofa/pull/4509:1327,Testability,test,test,1327,"With runSofa and SceneChecking, `RequiredPlugin` is calling `loadPlugin()` twice; - once at the `parse()` step; - and a second time when `SceneCheckMissingRequiredPlugin` at the `init()` step. `SceneCheckMissingRequiredPlugin` browses all `RequiredPlugin` and checks each entry on `d_loadedPlugins`.; https://github.com/sofa-framework/sofa/blob/af8f98a668dee73e21fac19da31d181baf137a99/applications/projects/SceneChecking/src/SceneChecking/SceneCheckMissingRequiredPlugin.cpp#L144-L150; But `d_loadedPlugin`s is set dirty at parse() so calling `d_loadedPlugins.getValue()` will trigger an other `loadPlugin()`, because of the callback. So this PR forcefully sets `d_loadedPlugins` to **not dirty** but maybe there is a better solution.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4509
https://github.com/sofa-framework/sofa/pull/4513:691,Availability,failure,failures,691,"`SpatialVector` and `Transform` are extracted from `SolidTypes`. Plan for a future PR: update code including `SolidTypes` just to get `Transform`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4513
https://github.com/sofa-framework/sofa/pull/4513:740,Availability,failure,failures,740,"`SpatialVector` and `Transform` are extracted from `SolidTypes`. Plan for a future PR: update code including `SolidTypes` just to get `Transform`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4513
https://github.com/sofa-framework/sofa/pull/4513:87,Deployability,update,update,87,"`SpatialVector` and `Transform` are extracted from `SolidTypes`. Plan for a future PR: update code including `SolidTypes` just to get `Transform`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4513
https://github.com/sofa-framework/sofa/pull/4513:310,Security,Certificate,Certificate,310,"`SpatialVector` and `Transform` are extracted from `SolidTypes`. Plan for a future PR: update code including `SolidTypes` just to get `Transform`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4513
https://github.com/sofa-framework/sofa/pull/4513:421,Security,certificate,certificate-of-origin-dco,421,"`SpatialVector` and `Transform` are extracted from `SolidTypes`. Plan for a future PR: update code including `SolidTypes` just to get `Transform`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4513
https://github.com/sofa-framework/sofa/pull/4513:686,Testability,test,test,686,"`SpatialVector` and `Transform` are extracted from `SolidTypes`. Plan for a future PR: update code including `SolidTypes` just to get `Transform`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4513
https://github.com/sofa-framework/sofa/pull/4513:735,Testability,test,test,735,"`SpatialVector` and `Transform` are extracted from `SolidTypes`. Plan for a future PR: update code including `SolidTypes` just to get `Transform`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4513
https://github.com/sofa-framework/sofa/issues/4514:884,Integrability,depend,depending,884,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3179. <div type='discussions-op-text'>. <sup>Originally posted by **alxbilger** July 27, 2022</sup>; NameDecoder has functions to get the name, template name, namespace etc as a string based on a type. Currently, functions are runtime.; Since types are known at compile-time, it would make sense that NameDecoder could be `constexpr`.; The problem is that C++ does not offer compile-time and portable features to do such a thing. I found a solution on the web, but it is not portable:. - https://stackoverflow.com/a/59522794; - https://bitwizeshift.github.io/posts/2021/03/09/getting-an-unmangled-type-name-at-compile-time/. It uses `__PRETTY_FUNCTION__` (for clang and msvc) and `__FUNCSIG__` for msvc. . Some problems with this solution:. - Other compilers are not supported.; - `__FUNCSIG__` might not be defined depending on the compilation options. ; - `__PRETTY_FUNCTION__` is not defined with old gcc. Open-source libraries I found (such as https://github.com/Manu343726/ctti or https://github.com/adambadura/type_name) also use the `__PRETTY_FUNCTION__` solution. I think it would not affect any of us if we start using this non-portable C++ since the modern compilers that we use support it. But, to be safe, I start the discussion if we go to this direction.</div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4514
https://github.com/sofa-framework/sofa/issues/4514:460,Modifiability,portab,portable,460,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3179. <div type='discussions-op-text'>. <sup>Originally posted by **alxbilger** July 27, 2022</sup>; NameDecoder has functions to get the name, template name, namespace etc as a string based on a type. Currently, functions are runtime.; Since types are known at compile-time, it would make sense that NameDecoder could be `constexpr`.; The problem is that C++ does not offer compile-time and portable features to do such a thing. I found a solution on the web, but it is not portable:. - https://stackoverflow.com/a/59522794; - https://bitwizeshift.github.io/posts/2021/03/09/getting-an-unmangled-type-name-at-compile-time/. It uses `__PRETTY_FUNCTION__` (for clang and msvc) and `__FUNCSIG__` for msvc. . Some problems with this solution:. - Other compilers are not supported.; - `__FUNCSIG__` might not be defined depending on the compilation options. ; - `__PRETTY_FUNCTION__` is not defined with old gcc. Open-source libraries I found (such as https://github.com/Manu343726/ctti or https://github.com/adambadura/type_name) also use the `__PRETTY_FUNCTION__` solution. I think it would not affect any of us if we start using this non-portable C++ since the modern compilers that we use support it. But, to be safe, I start the discussion if we go to this direction.</div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4514
https://github.com/sofa-framework/sofa/issues/4514:543,Modifiability,portab,portable,543,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3179. <div type='discussions-op-text'>. <sup>Originally posted by **alxbilger** July 27, 2022</sup>; NameDecoder has functions to get the name, template name, namespace etc as a string based on a type. Currently, functions are runtime.; Since types are known at compile-time, it would make sense that NameDecoder could be `constexpr`.; The problem is that C++ does not offer compile-time and portable features to do such a thing. I found a solution on the web, but it is not portable:. - https://stackoverflow.com/a/59522794; - https://bitwizeshift.github.io/posts/2021/03/09/getting-an-unmangled-type-name-at-compile-time/. It uses `__PRETTY_FUNCTION__` (for clang and msvc) and `__FUNCSIG__` for msvc. . Some problems with this solution:. - Other compilers are not supported.; - `__FUNCSIG__` might not be defined depending on the compilation options. ; - `__PRETTY_FUNCTION__` is not defined with old gcc. Open-source libraries I found (such as https://github.com/Manu343726/ctti or https://github.com/adambadura/type_name) also use the `__PRETTY_FUNCTION__` solution. I think it would not affect any of us if we start using this non-portable C++ since the modern compilers that we use support it. But, to be safe, I start the discussion if we go to this direction.</div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4514
https://github.com/sofa-framework/sofa/issues/4514:1205,Modifiability,portab,portable,1205,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3179. <div type='discussions-op-text'>. <sup>Originally posted by **alxbilger** July 27, 2022</sup>; NameDecoder has functions to get the name, template name, namespace etc as a string based on a type. Currently, functions are runtime.; Since types are known at compile-time, it would make sense that NameDecoder could be `constexpr`.; The problem is that C++ does not offer compile-time and portable features to do such a thing. I found a solution on the web, but it is not portable:. - https://stackoverflow.com/a/59522794; - https://bitwizeshift.github.io/posts/2021/03/09/getting-an-unmangled-type-name-at-compile-time/. It uses `__PRETTY_FUNCTION__` (for clang and msvc) and `__FUNCSIG__` for msvc. . Some problems with this solution:. - Other compilers are not supported.; - `__FUNCSIG__` might not be defined depending on the compilation options. ; - `__PRETTY_FUNCTION__` is not defined with old gcc. Open-source libraries I found (such as https://github.com/Manu343726/ctti or https://github.com/adambadura/type_name) also use the `__PRETTY_FUNCTION__` solution. I think it would not affect any of us if we start using this non-portable C++ since the modern compilers that we use support it. But, to be safe, I start the discussion if we go to this direction.</div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4514
https://github.com/sofa-framework/sofa/issues/4514:1280,Safety,safe,safe,1280,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3179. <div type='discussions-op-text'>. <sup>Originally posted by **alxbilger** July 27, 2022</sup>; NameDecoder has functions to get the name, template name, namespace etc as a string based on a type. Currently, functions are runtime.; Since types are known at compile-time, it would make sense that NameDecoder could be `constexpr`.; The problem is that C++ does not offer compile-time and portable features to do such a thing. I found a solution on the web, but it is not portable:. - https://stackoverflow.com/a/59522794; - https://bitwizeshift.github.io/posts/2021/03/09/getting-an-unmangled-type-name-at-compile-time/. It uses `__PRETTY_FUNCTION__` (for clang and msvc) and `__FUNCSIG__` for msvc. . Some problems with this solution:. - Other compilers are not supported.; - `__FUNCSIG__` might not be defined depending on the compilation options. ; - `__PRETTY_FUNCTION__` is not defined with old gcc. Open-source libraries I found (such as https://github.com/Manu343726/ctti or https://github.com/adambadura/type_name) also use the `__PRETTY_FUNCTION__` solution. I think it would not affect any of us if we start using this non-portable C++ since the modern compilers that we use support it. But, to be safe, I start the discussion if we go to this direction.</div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4514
https://github.com/sofa-framework/sofa/pull/4517:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4517
https://github.com/sofa-framework/sofa/pull/4517:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4517
https://github.com/sofa-framework/sofa/pull/4517:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4517
https://github.com/sofa-framework/sofa/pull/4517:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4517
https://github.com/sofa-framework/sofa/pull/4517:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4517
https://github.com/sofa-framework/sofa/pull/4517:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4517
https://github.com/sofa-framework/sofa/pull/4521:607,Availability,failure,failures,607,"Fixes https://github.com/sofa-framework/sofa/discussions/4520. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4521
https://github.com/sofa-framework/sofa/pull/4521:656,Availability,failure,failures,656,"Fixes https://github.com/sofa-framework/sofa/discussions/4520. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4521
https://github.com/sofa-framework/sofa/pull/4521:226,Security,Certificate,Certificate,226,"Fixes https://github.com/sofa-framework/sofa/discussions/4520. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4521
https://github.com/sofa-framework/sofa/pull/4521:337,Security,certificate,certificate-of-origin-dco,337,"Fixes https://github.com/sofa-framework/sofa/discussions/4520. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4521
https://github.com/sofa-framework/sofa/pull/4521:602,Testability,test,test,602,"Fixes https://github.com/sofa-framework/sofa/discussions/4520. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4521
https://github.com/sofa-framework/sofa/pull/4521:651,Testability,test,test,651,"Fixes https://github.com/sofa-framework/sofa/discussions/4520. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4521
https://github.com/sofa-framework/sofa/pull/4522:35,Availability,error,errors,35,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:674,Availability,Error,Error,674,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:691,Availability,error,error,691,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:1431,Availability,failure,failures,1431,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:1480,Availability,failure,failures,1480,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:404,Deployability,integrat,integration,404,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:736,Deployability,integrat,integration,736,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:786,Deployability,update,updates,786,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:855,Deployability,update,updates,855,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:404,Integrability,integrat,integration,404,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:736,Integrability,integrat,integration,736,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:156,Security,secur,security,156,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:390,Security,access,accessible,390,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:722,Security,access,accessible,722,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:1050,Security,Certificate,Certificate,1050,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:1161,Security,certificate,certificate-of-origin-dco,1161,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:1426,Testability,test,test,1426,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:1475,Testability,test,test,1475,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4522:169,Usability,usab,usability,169,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522
https://github.com/sofa-framework/sofa/pull/4523:672,Availability,failure,failures,672,"Since SOFA is no modeler, remove the New option form the GUI as pointed out in #4520; However, the code in RealGUI.cpp remains. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4523
https://github.com/sofa-framework/sofa/pull/4523:721,Availability,failure,failures,721,"Since SOFA is no modeler, remove the New option form the GUI as pointed out in #4520; However, the code in RealGUI.cpp remains. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4523
https://github.com/sofa-framework/sofa/pull/4523:291,Security,Certificate,Certificate,291,"Since SOFA is no modeler, remove the New option form the GUI as pointed out in #4520; However, the code in RealGUI.cpp remains. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4523
https://github.com/sofa-framework/sofa/pull/4523:402,Security,certificate,certificate-of-origin-dco,402,"Since SOFA is no modeler, remove the New option form the GUI as pointed out in #4520; However, the code in RealGUI.cpp remains. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4523
https://github.com/sofa-framework/sofa/pull/4523:667,Testability,test,test,667,"Since SOFA is no modeler, remove the New option form the GUI as pointed out in #4520; However, the code in RealGUI.cpp remains. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4523
https://github.com/sofa-framework/sofa/pull/4523:716,Testability,test,test,716,"Since SOFA is no modeler, remove the New option form the GUI as pointed out in #4520; However, the code in RealGUI.cpp remains. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4523
https://github.com/sofa-framework/sofa/pull/4525:535,Availability,failure,failures,535,"_____________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4525
https://github.com/sofa-framework/sofa/pull/4525:584,Availability,failure,failures,584,"_____________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4525
https://github.com/sofa-framework/sofa/pull/4525:154,Security,Certificate,Certificate,154,"_____________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4525
https://github.com/sofa-framework/sofa/pull/4525:265,Security,certificate,certificate-of-origin-dco,265,"_____________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4525
https://github.com/sofa-framework/sofa/pull/4525:530,Testability,test,test,530,"_____________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4525
https://github.com/sofa-framework/sofa/pull/4525:579,Testability,test,test,579,"_____________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4525
https://github.com/sofa-framework/sofa/pull/4526:969,Availability,failure,failures,969,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526
https://github.com/sofa-framework/sofa/pull/4526:1018,Availability,failure,failures,1018,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526
https://github.com/sofa-framework/sofa/pull/4526:151,Deployability,configurat,configurations,151,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526
https://github.com/sofa-framework/sofa/pull/4526:297,Integrability,depend,depends-on,297,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526
https://github.com/sofa-framework/sofa/pull/4526:367,Integrability,depend,depends-on,367,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526
https://github.com/sofa-framework/sofa/pull/4526:16,Modifiability,plugin,plugin,16,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526
https://github.com/sofa-framework/sofa/pull/4526:151,Modifiability,config,configurations,151,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526
https://github.com/sofa-framework/sofa/pull/4526:200,Modifiability,plugin,plugin,200,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526
https://github.com/sofa-framework/sofa/pull/4526:588,Security,Certificate,Certificate,588,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526
https://github.com/sofa-framework/sofa/pull/4526:699,Security,certificate,certificate-of-origin-dco,699,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526
https://github.com/sofa-framework/sofa/pull/4526:106,Testability,test,tests,106,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526
https://github.com/sofa-framework/sofa/pull/4526:964,Testability,test,test,964,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526
https://github.com/sofa-framework/sofa/pull/4526:1013,Testability,test,test,1013,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526
https://github.com/sofa-framework/sofa/issues/4527:3162,Availability,error,error,3162,"hon3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.di",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:3564,Availability,Error,Error,3564, Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:3737,Availability,error,error,3737,inManager.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSyste,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:3967,Availability,error,error,3967,system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Help,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:4376,Availability,Error,Error,4376,.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o] Error 1; CMakeFiles/Makefile2:3837: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all' failed; make[1]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all] Error 2; Makefile:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:4677,Availability,Error,Error,4677,ofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o] Error 1; CMakeFiles/Makefile2:3837: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all' failed; make[1]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all] Error 2; Makefile:135: recipe for target 'all' failed; make: *** [all] Error 2. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14392233/CMakeCache.txt). ---------------------------------------------; Thank you in advance!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:4801,Availability,error,error,4801,ofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o] Error 1; CMakeFiles/Makefile2:3837: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all' failed; make[1]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all] Error 2; Makefile:135: recipe for target 'all' failed; make: *** [all] Error 2. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14392233/CMakeCache.txt). ---------------------------------------------; Thank you in advance!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:5195,Availability,Error,Error,5195,ofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o] Error 1; CMakeFiles/Makefile2:3837: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all' failed; make[1]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all] Error 2; Makefile:135: recipe for target 'all' failed; make: *** [all] Error 2. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14392233/CMakeCache.txt). ---------------------------------------------; Thank you in advance!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:5380,Availability,Error,Error,5380,ofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o] Error 1; CMakeFiles/Makefile2:3837: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all' failed; make[1]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all] Error 2; Makefile:135: recipe for target 'all' failed; make: *** [all] Error 2. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14392233/CMakeCache.txt). ---------------------------------------------; Thank you in advance!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:5451,Availability,Error,Error,5451,ofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o] Error 1; CMakeFiles/Makefile2:3837: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all' failed; make[1]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all] Error 2; Makefile:135: recipe for target 'all' failed; make: *** [all] Error 2. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14392233/CMakeCache.txt). ---------------------------------------------; Thank you in advance!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:83,Deployability,install,install,83,"### Problem. **Description**; When I run `cmake --build $FOLDER_TARGET -j --target install`, it failed due to compiler is unable to find `filesystem`. **Steps to reproduce**; I was installing SOFA following instruction from here https://github.com/ScheiklP/sofa_env/blob/main/docs/source/setting_up_sofa.rst; Follow everything from top to ""Compile SOFA"" part at `cmake --build $FOLDER_TARGET -j --target install`. **Expected behavior**; No idea, as it is my first time trying to install it. ---------------------------------------------. ### Environment. **Context**. - System: < Ubuntu 18.04.5 LTS >; - Version of SOFA: I don't really know but below is the code I used for SOFA installation.; ```; git clone https://github.com/sofa-framework/sofa.git $FOLDER_SRC; cd $FOLDER_SRC; git checkout v23.06; cd $FOLDER_SP3; git init; git remote add origin https://github.com/sofa-framework/SofaPython3.git; git pull origin master; git checkout 5a7371616fe8914530d44bf25ea6b724a6b1a08e; ```; - State: < Build directory >. **Command called**. ```txt; FOLDER_TARGET=$HOME/sofa/build; cmake --build $FOLDER_TARGET -j --target install; ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/sna",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:181,Deployability,install,installing,181,"### Problem. **Description**; When I run `cmake --build $FOLDER_TARGET -j --target install`, it failed due to compiler is unable to find `filesystem`. **Steps to reproduce**; I was installing SOFA following instruction from here https://github.com/ScheiklP/sofa_env/blob/main/docs/source/setting_up_sofa.rst; Follow everything from top to ""Compile SOFA"" part at `cmake --build $FOLDER_TARGET -j --target install`. **Expected behavior**; No idea, as it is my first time trying to install it. ---------------------------------------------. ### Environment. **Context**. - System: < Ubuntu 18.04.5 LTS >; - Version of SOFA: I don't really know but below is the code I used for SOFA installation.; ```; git clone https://github.com/sofa-framework/sofa.git $FOLDER_SRC; cd $FOLDER_SRC; git checkout v23.06; cd $FOLDER_SP3; git init; git remote add origin https://github.com/sofa-framework/SofaPython3.git; git pull origin master; git checkout 5a7371616fe8914530d44bf25ea6b724a6b1a08e; ```; - State: < Build directory >. **Command called**. ```txt; FOLDER_TARGET=$HOME/sofa/build; cmake --build $FOLDER_TARGET -j --target install; ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/sna",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:404,Deployability,install,install,404,"### Problem. **Description**; When I run `cmake --build $FOLDER_TARGET -j --target install`, it failed due to compiler is unable to find `filesystem`. **Steps to reproduce**; I was installing SOFA following instruction from here https://github.com/ScheiklP/sofa_env/blob/main/docs/source/setting_up_sofa.rst; Follow everything from top to ""Compile SOFA"" part at `cmake --build $FOLDER_TARGET -j --target install`. **Expected behavior**; No idea, as it is my first time trying to install it. ---------------------------------------------. ### Environment. **Context**. - System: < Ubuntu 18.04.5 LTS >; - Version of SOFA: I don't really know but below is the code I used for SOFA installation.; ```; git clone https://github.com/sofa-framework/sofa.git $FOLDER_SRC; cd $FOLDER_SRC; git checkout v23.06; cd $FOLDER_SP3; git init; git remote add origin https://github.com/sofa-framework/SofaPython3.git; git pull origin master; git checkout 5a7371616fe8914530d44bf25ea6b724a6b1a08e; ```; - State: < Build directory >. **Command called**. ```txt; FOLDER_TARGET=$HOME/sofa/build; cmake --build $FOLDER_TARGET -j --target install; ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/sna",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:479,Deployability,install,install,479,"### Problem. **Description**; When I run `cmake --build $FOLDER_TARGET -j --target install`, it failed due to compiler is unable to find `filesystem`. **Steps to reproduce**; I was installing SOFA following instruction from here https://github.com/ScheiklP/sofa_env/blob/main/docs/source/setting_up_sofa.rst; Follow everything from top to ""Compile SOFA"" part at `cmake --build $FOLDER_TARGET -j --target install`. **Expected behavior**; No idea, as it is my first time trying to install it. ---------------------------------------------. ### Environment. **Context**. - System: < Ubuntu 18.04.5 LTS >; - Version of SOFA: I don't really know but below is the code I used for SOFA installation.; ```; git clone https://github.com/sofa-framework/sofa.git $FOLDER_SRC; cd $FOLDER_SRC; git checkout v23.06; cd $FOLDER_SP3; git init; git remote add origin https://github.com/sofa-framework/SofaPython3.git; git pull origin master; git checkout 5a7371616fe8914530d44bf25ea6b724a6b1a08e; ```; - State: < Build directory >. **Command called**. ```txt; FOLDER_TARGET=$HOME/sofa/build; cmake --build $FOLDER_TARGET -j --target install; ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/sna",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:679,Deployability,install,installation,679,"### Problem. **Description**; When I run `cmake --build $FOLDER_TARGET -j --target install`, it failed due to compiler is unable to find `filesystem`. **Steps to reproduce**; I was installing SOFA following instruction from here https://github.com/ScheiklP/sofa_env/blob/main/docs/source/setting_up_sofa.rst; Follow everything from top to ""Compile SOFA"" part at `cmake --build $FOLDER_TARGET -j --target install`. **Expected behavior**; No idea, as it is my first time trying to install it. ---------------------------------------------. ### Environment. **Context**. - System: < Ubuntu 18.04.5 LTS >; - Version of SOFA: I don't really know but below is the code I used for SOFA installation.; ```; git clone https://github.com/sofa-framework/sofa.git $FOLDER_SRC; cd $FOLDER_SRC; git checkout v23.06; cd $FOLDER_SP3; git init; git remote add origin https://github.com/sofa-framework/SofaPython3.git; git pull origin master; git checkout 5a7371616fe8914530d44bf25ea6b724a6b1a08e; ```; - State: < Build directory >. **Command called**. ```txt; FOLDER_TARGET=$HOME/sofa/build; cmake --build $FOLDER_TARGET -j --target install; ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/sna",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:1116,Deployability,install,install,1116,"t install`, it failed due to compiler is unable to find `filesystem`. **Steps to reproduce**; I was installing SOFA following instruction from here https://github.com/ScheiklP/sofa_env/blob/main/docs/source/setting_up_sofa.rst; Follow everything from top to ""Compile SOFA"" part at `cmake --build $FOLDER_TARGET -j --target install`. **Expected behavior**; No idea, as it is my first time trying to install it. ---------------------------------------------. ### Environment. **Context**. - System: < Ubuntu 18.04.5 LTS >; - Version of SOFA: I don't really know but below is the code I used for SOFA installation.; ```; git clone https://github.com/sofa-framework/sofa.git $FOLDER_SRC; cd $FOLDER_SRC; git checkout v23.06; cd $FOLDER_SP3; git init; git remote add origin https://github.com/sofa-framework/SofaPython3.git; git pull origin master; git checkout 5a7371616fe8914530d44bf25ea6b724a6b1a08e; ```; - State: < Build directory >. **Command called**. ```txt; FOLDER_TARGET=$HOME/sofa/build; cmake --build $FOLDER_TARGET -j --target install; ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targary",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:2777,Modifiability,Plugin,PluginManager,2777,"; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:3706,Modifiability,Plugin,PluginManager,3706,em.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:4541,Modifiability,Plugin,PluginManager,4541,/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o] Error 1; CMakeFiles/Makefile2:3837: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all' failed; make[1]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all] Error 2; Makefile:135: recipe for target 'all' failed; make: *** [all] Error 2. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://gith,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:4656,Modifiability,Plugin,PluginManager,4656,et/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o] Error 1; CMakeFiles/Makefile2:3837: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all' failed; make[1]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all] Error 2; Makefile:135: recipe for target 'all' failed; make: *** [all] Error 2. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14392233/CMakeCache.txt). ---------------------------------------------; Thank you,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/issues/4527:2530,Testability,Log,Logs,2530," pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/he",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527
https://github.com/sofa-framework/sofa/pull/4529:621,Availability,failure,failures,621,"While starting the lifecycle for v24.06, found some minor fixes of warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4529
https://github.com/sofa-framework/sofa/pull/4529:670,Availability,failure,failures,670,"While starting the lifecycle for v24.06, found some minor fixes of warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4529
https://github.com/sofa-framework/sofa/pull/4529:240,Security,Certificate,Certificate,240,"While starting the lifecycle for v24.06, found some minor fixes of warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4529
https://github.com/sofa-framework/sofa/pull/4529:351,Security,certificate,certificate-of-origin-dco,351,"While starting the lifecycle for v24.06, found some minor fixes of warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4529
https://github.com/sofa-framework/sofa/pull/4529:616,Testability,test,test,616,"While starting the lifecycle for v24.06, found some minor fixes of warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4529
https://github.com/sofa-framework/sofa/pull/4529:665,Testability,test,test,665,"While starting the lifecycle for v24.06, found some minor fixes of warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4529
https://github.com/sofa-framework/sofa/pull/4530:619,Availability,failure,failures,619,"Announcement messages on Discord showed some issues, this should fix them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4530
https://github.com/sofa-framework/sofa/pull/4530:668,Availability,failure,failures,668,"Announcement messages on Discord showed some issues, this should fix them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4530
https://github.com/sofa-framework/sofa/pull/4530:13,Integrability,message,messages,13,"Announcement messages on Discord showed some issues, this should fix them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4530
https://github.com/sofa-framework/sofa/pull/4530:238,Security,Certificate,Certificate,238,"Announcement messages on Discord showed some issues, this should fix them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4530
https://github.com/sofa-framework/sofa/pull/4530:349,Security,certificate,certificate-of-origin-dco,349,"Announcement messages on Discord showed some issues, this should fix them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4530
https://github.com/sofa-framework/sofa/pull/4530:614,Testability,test,test,614,"Announcement messages on Discord showed some issues, this should fix them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4530
https://github.com/sofa-framework/sofa/pull/4530:663,Testability,test,test,663,"Announcement messages on Discord showed some issues, this should fix them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4530
https://github.com/sofa-framework/sofa/pull/4532:1078,Availability,failure,failures,1078,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532
https://github.com/sofa-framework/sofa/pull/4532:1127,Availability,failure,failures,1127,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532
https://github.com/sofa-framework/sofa/pull/4532:190,Deployability,release,release,190,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532
https://github.com/sofa-framework/sofa/pull/4532:309,Integrability,depend,depends,309,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532
https://github.com/sofa-framework/sofa/pull/4532:328,Integrability,depend,depends-on,328,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532
https://github.com/sofa-framework/sofa/pull/4532:396,Integrability,depend,depends-on,396,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532
https://github.com/sofa-framework/sofa/pull/4532:468,Integrability,depend,depends-on,468,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532
https://github.com/sofa-framework/sofa/pull/4532:697,Security,Certificate,Certificate,697,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532
https://github.com/sofa-framework/sofa/pull/4532:808,Security,certificate,certificate-of-origin-dco,808,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532
https://github.com/sofa-framework/sofa/pull/4532:1073,Testability,test,test,1073,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532
https://github.com/sofa-framework/sofa/pull/4532:1122,Testability,test,test,1122,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532
https://github.com/sofa-framework/sofa/pull/4533:1032,Availability,failure,failures,1032,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533
https://github.com/sofa-framework/sofa/pull/4533:1081,Availability,failure,failures,1081,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533
https://github.com/sofa-framework/sofa/pull/4533:119,Integrability,depend,depends,119,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533
https://github.com/sofa-framework/sofa/pull/4533:138,Integrability,depend,depends-on,138,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533
https://github.com/sofa-framework/sofa/pull/4533:206,Integrability,depend,depends-on,206,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533
https://github.com/sofa-framework/sofa/pull/4533:278,Integrability,depend,depends-on,278,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533
https://github.com/sofa-framework/sofa/pull/4533:348,Integrability,depend,depends-on,348,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533
https://github.com/sofa-framework/sofa/pull/4533:420,Integrability,depend,depends-on,420,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533
https://github.com/sofa-framework/sofa/pull/4533:465,Modifiability,Plugin,PluginExample,465,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533
https://github.com/sofa-framework/sofa/pull/4533:651,Security,Certificate,Certificate,651,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533
https://github.com/sofa-framework/sofa/pull/4533:762,Security,certificate,certificate-of-origin-dco,762,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533
https://github.com/sofa-framework/sofa/pull/4533:1027,Testability,test,test,1027,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533
https://github.com/sofa-framework/sofa/pull/4533:1076,Testability,test,test,1076,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533
https://github.com/sofa-framework/sofa/pull/4534:95,Availability,avail,available,95,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534
https://github.com/sofa-framework/sofa/pull/4534:736,Availability,failure,failures,736,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534
https://github.com/sofa-framework/sofa/pull/4534:785,Availability,failure,failures,785,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534
https://github.com/sofa-framework/sofa/pull/4534:47,Performance,race condition,race conditions,47,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534
https://github.com/sofa-framework/sofa/pull/4534:14,Security,sanitiz,sanitizer,14,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534
https://github.com/sofa-framework/sofa/pull/4534:150,Security,sanitiz,sanitizers,150,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534
https://github.com/sofa-framework/sofa/pull/4534:355,Security,Certificate,Certificate,355,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534
https://github.com/sofa-framework/sofa/pull/4534:466,Security,certificate,certificate-of-origin-dco,466,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534
https://github.com/sofa-framework/sofa/pull/4534:731,Testability,test,test,731,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534
https://github.com/sofa-framework/sofa/pull/4534:780,Testability,test,test,780,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534
https://github.com/sofa-framework/sofa/pull/4535:903,Availability,failure,failures,903,"Based on ; - #4534 . Some race conditions arise in the DefautlTaskScheduler, main ones are; - usage of m_mainTaskStatus (solved with an atomic?); - start() and create_and_attach() are racing for m_taskScheduler (solved with a small change of place of affectation). Obviously, the opinion of @alxbilger about the fix in this PR would be greatly beneficial 😅 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4535
https://github.com/sofa-framework/sofa/pull/4535:952,Availability,failure,failures,952,"Based on ; - #4534 . Some race conditions arise in the DefautlTaskScheduler, main ones are; - usage of m_mainTaskStatus (solved with an atomic?); - start() and create_and_attach() are racing for m_taskScheduler (solved with a small change of place of affectation). Obviously, the opinion of @alxbilger about the fix in this PR would be greatly beneficial 😅 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4535
https://github.com/sofa-framework/sofa/pull/4535:26,Performance,race condition,race conditions,26,"Based on ; - #4534 . Some race conditions arise in the DefautlTaskScheduler, main ones are; - usage of m_mainTaskStatus (solved with an atomic?); - start() and create_and_attach() are racing for m_taskScheduler (solved with a small change of place of affectation). Obviously, the opinion of @alxbilger about the fix in this PR would be greatly beneficial 😅 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4535
https://github.com/sofa-framework/sofa/pull/4535:522,Security,Certificate,Certificate,522,"Based on ; - #4534 . Some race conditions arise in the DefautlTaskScheduler, main ones are; - usage of m_mainTaskStatus (solved with an atomic?); - start() and create_and_attach() are racing for m_taskScheduler (solved with a small change of place of affectation). Obviously, the opinion of @alxbilger about the fix in this PR would be greatly beneficial 😅 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4535
https://github.com/sofa-framework/sofa/pull/4535:633,Security,certificate,certificate-of-origin-dco,633,"Based on ; - #4534 . Some race conditions arise in the DefautlTaskScheduler, main ones are; - usage of m_mainTaskStatus (solved with an atomic?); - start() and create_and_attach() are racing for m_taskScheduler (solved with a small change of place of affectation). Obviously, the opinion of @alxbilger about the fix in this PR would be greatly beneficial 😅 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4535
https://github.com/sofa-framework/sofa/pull/4535:898,Testability,test,test,898,"Based on ; - #4534 . Some race conditions arise in the DefautlTaskScheduler, main ones are; - usage of m_mainTaskStatus (solved with an atomic?); - start() and create_and_attach() are racing for m_taskScheduler (solved with a small change of place of affectation). Obviously, the opinion of @alxbilger about the fix in this PR would be greatly beneficial 😅 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4535
https://github.com/sofa-framework/sofa/pull/4535:947,Testability,test,test,947,"Based on ; - #4534 . Some race conditions arise in the DefautlTaskScheduler, main ones are; - usage of m_mainTaskStatus (solved with an atomic?); - start() and create_and_attach() are racing for m_taskScheduler (solved with a small change of place of affectation). Obviously, the opinion of @alxbilger about the fix in this PR would be greatly beneficial 😅 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4535
https://github.com/sofa-framework/sofa/pull/4536:1130,Availability,failure,failures,1130,"The current implementation has flawns among which:; - lack of factorization between node & object rendering in the scenegraph view;; - the use of hardcoded color scheme in simulation:Colors. Here is a small attempt to change some of these aspects without the ambition to fix everything. ; Additionally, I would like to be able to add more colors/rendering scheme for objects that are not part of the base framework and wonder if we need to implement an extension mechanism so that object defines in plugins (eg: sofapython3::BasePrefab) can propose their own icon in the scene graph. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536
https://github.com/sofa-framework/sofa/pull/4536:1179,Availability,failure,failures,1179,"The current implementation has flawns among which:; - lack of factorization between node & object rendering in the scenegraph view;; - the use of hardcoded color scheme in simulation:Colors. Here is a small attempt to change some of these aspects without the ambition to fix everything. ; Additionally, I would like to be able to add more colors/rendering scheme for objects that are not part of the base framework and wonder if we need to implement an extension mechanism so that object defines in plugins (eg: sofapython3::BasePrefab) can propose their own icon in the scene graph. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536
https://github.com/sofa-framework/sofa/pull/4536:499,Modifiability,plugin,plugins,499,"The current implementation has flawns among which:; - lack of factorization between node & object rendering in the scenegraph view;; - the use of hardcoded color scheme in simulation:Colors. Here is a small attempt to change some of these aspects without the ambition to fix everything. ; Additionally, I would like to be able to add more colors/rendering scheme for objects that are not part of the base framework and wonder if we need to implement an extension mechanism so that object defines in plugins (eg: sofapython3::BasePrefab) can propose their own icon in the scene graph. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536
https://github.com/sofa-framework/sofa/pull/4536:749,Security,Certificate,Certificate,749,"The current implementation has flawns among which:; - lack of factorization between node & object rendering in the scenegraph view;; - the use of hardcoded color scheme in simulation:Colors. Here is a small attempt to change some of these aspects without the ambition to fix everything. ; Additionally, I would like to be able to add more colors/rendering scheme for objects that are not part of the base framework and wonder if we need to implement an extension mechanism so that object defines in plugins (eg: sofapython3::BasePrefab) can propose their own icon in the scene graph. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536
https://github.com/sofa-framework/sofa/pull/4536:860,Security,certificate,certificate-of-origin-dco,860,"The current implementation has flawns among which:; - lack of factorization between node & object rendering in the scenegraph view;; - the use of hardcoded color scheme in simulation:Colors. Here is a small attempt to change some of these aspects without the ambition to fix everything. ; Additionally, I would like to be able to add more colors/rendering scheme for objects that are not part of the base framework and wonder if we need to implement an extension mechanism so that object defines in plugins (eg: sofapython3::BasePrefab) can propose their own icon in the scene graph. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536
https://github.com/sofa-framework/sofa/pull/4536:1125,Testability,test,test,1125,"The current implementation has flawns among which:; - lack of factorization between node & object rendering in the scenegraph view;; - the use of hardcoded color scheme in simulation:Colors. Here is a small attempt to change some of these aspects without the ambition to fix everything. ; Additionally, I would like to be able to add more colors/rendering scheme for objects that are not part of the base framework and wonder if we need to implement an extension mechanism so that object defines in plugins (eg: sofapython3::BasePrefab) can propose their own icon in the scene graph. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536
https://github.com/sofa-framework/sofa/pull/4536:1174,Testability,test,test,1174,"The current implementation has flawns among which:; - lack of factorization between node & object rendering in the scenegraph view;; - the use of hardcoded color scheme in simulation:Colors. Here is a small attempt to change some of these aspects without the ambition to fix everything. ; Additionally, I would like to be able to add more colors/rendering scheme for objects that are not part of the base framework and wonder if we need to implement an extension mechanism so that object defines in plugins (eg: sofapython3::BasePrefab) can propose their own icon in the scene graph. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536
https://github.com/sofa-framework/sofa/pull/4538:664,Availability,failure,failures,664,"Helper for the case where the user wants to use external cxxopts, as cmake does not provides a find module for cxxopts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4538
https://github.com/sofa-framework/sofa/pull/4538:713,Availability,failure,failures,713,"Helper for the case where the user wants to use external cxxopts, as cmake does not provides a find module for cxxopts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4538
https://github.com/sofa-framework/sofa/pull/4538:283,Security,Certificate,Certificate,283,"Helper for the case where the user wants to use external cxxopts, as cmake does not provides a find module for cxxopts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4538
https://github.com/sofa-framework/sofa/pull/4538:394,Security,certificate,certificate-of-origin-dco,394,"Helper for the case where the user wants to use external cxxopts, as cmake does not provides a find module for cxxopts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4538
https://github.com/sofa-framework/sofa/pull/4538:659,Testability,test,test,659,"Helper for the case where the user wants to use external cxxopts, as cmake does not provides a find module for cxxopts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4538
https://github.com/sofa-framework/sofa/pull/4538:708,Testability,test,test,708,"Helper for the case where the user wants to use external cxxopts, as cmake does not provides a find module for cxxopts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4538
https://github.com/sofa-framework/sofa/pull/4540:804,Availability,failure,failures,804,"Based on #4533. - Clean the use of old lib names in `importPlugin()` and in `RequiredPlugin` (mostly tests); - Remove last uses of `setSimulation`. Commit of interest is : https://github.com/sofa-framework/sofa/commit/0d87075b5aa74a5e6471bd8f3f66d5706f93e2c0. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4540
https://github.com/sofa-framework/sofa/pull/4540:853,Availability,failure,failures,853,"Based on #4533. - Clean the use of old lib names in `importPlugin()` and in `RequiredPlugin` (mostly tests); - Remove last uses of `setSimulation`. Commit of interest is : https://github.com/sofa-framework/sofa/commit/0d87075b5aa74a5e6471bd8f3f66d5706f93e2c0. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4540
https://github.com/sofa-framework/sofa/pull/4540:423,Security,Certificate,Certificate,423,"Based on #4533. - Clean the use of old lib names in `importPlugin()` and in `RequiredPlugin` (mostly tests); - Remove last uses of `setSimulation`. Commit of interest is : https://github.com/sofa-framework/sofa/commit/0d87075b5aa74a5e6471bd8f3f66d5706f93e2c0. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4540
https://github.com/sofa-framework/sofa/pull/4540:534,Security,certificate,certificate-of-origin-dco,534,"Based on #4533. - Clean the use of old lib names in `importPlugin()` and in `RequiredPlugin` (mostly tests); - Remove last uses of `setSimulation`. Commit of interest is : https://github.com/sofa-framework/sofa/commit/0d87075b5aa74a5e6471bd8f3f66d5706f93e2c0. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4540
https://github.com/sofa-framework/sofa/pull/4540:101,Testability,test,tests,101,"Based on #4533. - Clean the use of old lib names in `importPlugin()` and in `RequiredPlugin` (mostly tests); - Remove last uses of `setSimulation`. Commit of interest is : https://github.com/sofa-framework/sofa/commit/0d87075b5aa74a5e6471bd8f3f66d5706f93e2c0. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4540
https://github.com/sofa-framework/sofa/pull/4540:799,Testability,test,test,799,"Based on #4533. - Clean the use of old lib names in `importPlugin()` and in `RequiredPlugin` (mostly tests); - Remove last uses of `setSimulation`. Commit of interest is : https://github.com/sofa-framework/sofa/commit/0d87075b5aa74a5e6471bd8f3f66d5706f93e2c0. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4540
https://github.com/sofa-framework/sofa/pull/4540:848,Testability,test,test,848,"Based on #4533. - Clean the use of old lib names in `importPlugin()` and in `RequiredPlugin` (mostly tests); - Remove last uses of `setSimulation`. Commit of interest is : https://github.com/sofa-framework/sofa/commit/0d87075b5aa74a5e6471bd8f3f66d5706f93e2c0. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4540
https://github.com/sofa-framework/sofa/pull/4542:180,Availability,Error,Error,180,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:589,Availability,error,errors,589,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:1156,Availability,failure,failures,1156,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:1205,Availability,failure,failures,1205,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:254,Deployability,configurat,configuration,254,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:278,Deployability,a/B,a/BeamAdapter,278,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:254,Modifiability,config,configuration,254,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:565,Modifiability,Config,Configuring,565,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:775,Security,Certificate,Certificate,775,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:886,Security,certificate,certificate-of-origin-dco,886,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:324,Testability,Test,Testing,324,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:337,Testability,Test,TestingConfig,337,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:414,Testability,Test,Testing,414,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:1151,Testability,test,test,1151,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:1200,Testability,test,test,1200,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/pull/4542:551,Usability,Simpl,SimpleApi,551,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542
https://github.com/sofa-framework/sofa/issues/4543:158,Performance,perform,performed,158,"Based on #3019, we should incorporate tests assessing stability and associated regression references for SOFA.; Traction but also compression tests should be performed.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4543
https://github.com/sofa-framework/sofa/issues/4543:38,Testability,test,tests,38,"Based on #3019, we should incorporate tests assessing stability and associated regression references for SOFA.; Traction but also compression tests should be performed.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4543
https://github.com/sofa-framework/sofa/issues/4543:142,Testability,test,tests,142,"Based on #3019, we should incorporate tests assessing stability and associated regression references for SOFA.; Traction but also compression tests should be performed.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4543
https://github.com/sofa-framework/sofa/pull/4544:651,Availability,failure,failures,651,"![image](https://64.media.tumblr.com/e9b89b6d4267542a7ca85b661ba09045/tumblr_o3soekOhX61ulpmhpo1_500.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4544
https://github.com/sofa-framework/sofa/pull/4544:700,Availability,failure,failures,700,"![image](https://64.media.tumblr.com/e9b89b6d4267542a7ca85b661ba09045/tumblr_o3soekOhX61ulpmhpo1_500.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4544
https://github.com/sofa-framework/sofa/pull/4544:270,Security,Certificate,Certificate,270,"![image](https://64.media.tumblr.com/e9b89b6d4267542a7ca85b661ba09045/tumblr_o3soekOhX61ulpmhpo1_500.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4544
https://github.com/sofa-framework/sofa/pull/4544:381,Security,certificate,certificate-of-origin-dco,381,"![image](https://64.media.tumblr.com/e9b89b6d4267542a7ca85b661ba09045/tumblr_o3soekOhX61ulpmhpo1_500.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4544
https://github.com/sofa-framework/sofa/pull/4544:646,Testability,test,test,646,"![image](https://64.media.tumblr.com/e9b89b6d4267542a7ca85b661ba09045/tumblr_o3soekOhX61ulpmhpo1_500.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4544
https://github.com/sofa-framework/sofa/pull/4544:695,Testability,test,test,695,"![image](https://64.media.tumblr.com/e9b89b6d4267542a7ca85b661ba09045/tumblr_o3soekOhX61ulpmhpo1_500.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4544
https://github.com/sofa-framework/sofa/pull/4545:605,Availability,failure,failures,605,"Install FindTinyXML2 for OOT compilation using the binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4545
https://github.com/sofa-framework/sofa/pull/4545:654,Availability,failure,failures,654,"Install FindTinyXML2 for OOT compilation using the binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4545
https://github.com/sofa-framework/sofa/pull/4545:0,Deployability,Install,Install,0,"Install FindTinyXML2 for OOT compilation using the binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4545
https://github.com/sofa-framework/sofa/pull/4545:224,Security,Certificate,Certificate,224,"Install FindTinyXML2 for OOT compilation using the binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4545
https://github.com/sofa-framework/sofa/pull/4545:335,Security,certificate,certificate-of-origin-dco,335,"Install FindTinyXML2 for OOT compilation using the binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4545
https://github.com/sofa-framework/sofa/pull/4545:600,Testability,test,test,600,"Install FindTinyXML2 for OOT compilation using the binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4545
https://github.com/sofa-framework/sofa/pull/4545:649,Testability,test,test,649,"Install FindTinyXML2 for OOT compilation using the binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4545
https://github.com/sofa-framework/sofa/pull/4547:2106,Availability,failure,failures,2106," implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:2155,Availability,failure,failures,2155," implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:507,Deployability,configurat,configuration,507,"1. All types of Eigen::SparseMatrix are now supported. For that, the implementation relies completely on the Eigen matrix product to compute the intersection. The trick is to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:849,Deployability,configurat,configuration,849,"1. All types of Eigen::SparseMatrix are now supported. For that, the implementation relies completely on the Eigen matrix product to compute the intersection. The trick is to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:1088,Energy Efficiency,adapt,adapted,1088," to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:507,Modifiability,config,configuration,507,"1. All types of Eigen::SparseMatrix are now supported. For that, the implementation relies completely on the Eigen matrix product to compute the intersection. The trick is to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:849,Modifiability,config,configuration,849,"1. All types of Eigen::SparseMatrix are now supported. For that, the implementation relies completely on the Eigen matrix product to compute the intersection. The trick is to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:1088,Modifiability,adapt,adapted,1088," to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:1725,Security,Certificate,Certificate,1725," implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:1836,Security,certificate,certificate-of-origin-dco,1836," implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:463,Testability,test,tests,463,"1. All types of Eigen::SparseMatrix are now supported. For that, the implementation relies completely on the Eigen matrix product to compute the intersection. The trick is to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:489,Testability,test,test,489,"1. All types of Eigen::SparseMatrix are now supported. For that, the implementation relies completely on the Eigen matrix product to compute the intersection. The trick is to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:730,Testability,Benchmark,Benchmarks,730,"1. All types of Eigen::SparseMatrix are now supported. For that, the implementation relies completely on the Eigen matrix product to compute the intersection. The trick is to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:825,Testability,benchmark,benchmarks,825,"1. All types of Eigen::SparseMatrix are now supported. For that, the implementation relies completely on the Eigen matrix product to compute the intersection. The trick is to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:2101,Testability,test,test,2101," implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4547:2150,Testability,test,test,2150," implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547
https://github.com/sofa-framework/sofa/pull/4552:2866,Availability,failure,failures,2866,"## ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552
https://github.com/sofa-framework/sofa/pull/4552:2915,Availability,failure,failures,2915,"## ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552
https://github.com/sofa-framework/sofa/pull/4552:1925,Deployability,configurat,configuration,1925,"s; ```. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merg",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552
https://github.com/sofa-framework/sofa/pull/4552:366,Energy Efficiency,reduce,reduced,366,Based on https://github.com/sofa-framework/sofa/pull/4547. The diff: https://github.com/alxbilger/sofa/compare/sparsematrixproduct...alxbilger:sofa:constantsparsityprojection. Matrix projection method taking advantage of the constant sparsity of the matrices in the computation of sparse matrix product. A boolean Data enables parallel computation. Benchmark on the reduced diamond for 1000 time steps (previous results in https://github.com/sofa-framework/sofa/pull/4490):. ### MatrixProjectionMethod + areJacobiansConstant=False. This is the most generic method. ```; [INFO] [BatchGUI] 1000 iterations done in 13.576 s ( 73.6594 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.84 1 9.59 24.93 11.24 2.22 11.24 88.66 ......projectMappedMatrices; ```. ### MatrixProjectionMethod + areJacobiansConstant=True. ```; [INFO] [BatchGUI] 1000 iterations done in 8.1806 s ( 122.24 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 5.53 17.84 6.32 0.88 6.32 83.28 ......projectMappedMatrices; ```. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstan,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552
https://github.com/sofa-framework/sofa/pull/4552:2258,Energy Efficiency,reduce,reduced,2258,"## ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552
https://github.com/sofa-framework/sofa/pull/4552:1925,Modifiability,config,configuration,1925,"s; ```. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merg",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552
https://github.com/sofa-framework/sofa/pull/4552:2190,Modifiability,enhance,enhancement,2190,"## ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552
https://github.com/sofa-framework/sofa/pull/4552:2485,Security,Certificate,Certificate,2485,"## ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552
https://github.com/sofa-framework/sofa/pull/4552:2596,Security,certificate,certificate-of-origin-dco,2596,"## ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552
https://github.com/sofa-framework/sofa/pull/4552:349,Testability,Benchmark,Benchmark,349,Based on https://github.com/sofa-framework/sofa/pull/4547. The diff: https://github.com/alxbilger/sofa/compare/sparsematrixproduct...alxbilger:sofa:constantsparsityprojection. Matrix projection method taking advantage of the constant sparsity of the matrices in the computation of sparse matrix product. A boolean Data enables parallel computation. Benchmark on the reduced diamond for 1000 time steps (previous results in https://github.com/sofa-framework/sofa/pull/4490):. ### MatrixProjectionMethod + areJacobiansConstant=False. This is the most generic method. ```; [INFO] [BatchGUI] 1000 iterations done in 13.576 s ( 73.6594 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.84 1 9.59 24.93 11.24 2.22 11.24 88.66 ......projectMappedMatrices; ```. ### MatrixProjectionMethod + areJacobiansConstant=True. ```; [INFO] [BatchGUI] 1000 iterations done in 8.1806 s ( 122.24 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 5.53 17.84 6.32 0.88 6.32 83.28 ......projectMappedMatrices; ```. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstan,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552
https://github.com/sofa-framework/sofa/pull/4552:2861,Testability,test,test,2861,"## ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552
https://github.com/sofa-framework/sofa/pull/4552:2910,Testability,test,test,2910,"## ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552
https://github.com/sofa-framework/sofa/pull/4554:7,Availability,error,error,7,"Remove error and send warning when cxxopt is found but version mismatch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554
https://github.com/sofa-framework/sofa/pull/4554:617,Availability,failure,failures,617,"Remove error and send warning when cxxopt is found but version mismatch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554
https://github.com/sofa-framework/sofa/pull/4554:666,Availability,failure,failures,666,"Remove error and send warning when cxxopt is found but version mismatch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554
https://github.com/sofa-framework/sofa/pull/4554:236,Security,Certificate,Certificate,236,"Remove error and send warning when cxxopt is found but version mismatch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554
https://github.com/sofa-framework/sofa/pull/4554:347,Security,certificate,certificate-of-origin-dco,347,"Remove error and send warning when cxxopt is found but version mismatch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554
https://github.com/sofa-framework/sofa/pull/4554:612,Testability,test,test,612,"Remove error and send warning when cxxopt is found but version mismatch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554
https://github.com/sofa-framework/sofa/pull/4554:661,Testability,test,test,661,"Remove error and send warning when cxxopt is found but version mismatch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554
https://github.com/sofa-framework/sofa/pull/4555:616,Availability,failure,failures,616,"Remove the find_package(tinyxml2 REQUIRED) because the link is private. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4555
https://github.com/sofa-framework/sofa/pull/4555:665,Availability,failure,failures,665,"Remove the find_package(tinyxml2 REQUIRED) because the link is private. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4555
https://github.com/sofa-framework/sofa/pull/4555:235,Security,Certificate,Certificate,235,"Remove the find_package(tinyxml2 REQUIRED) because the link is private. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4555
https://github.com/sofa-framework/sofa/pull/4555:346,Security,certificate,certificate-of-origin-dco,346,"Remove the find_package(tinyxml2 REQUIRED) because the link is private. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4555
https://github.com/sofa-framework/sofa/pull/4555:611,Testability,test,test,611,"Remove the find_package(tinyxml2 REQUIRED) because the link is private. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4555
https://github.com/sofa-framework/sofa/pull/4555:660,Testability,test,test,660,"Remove the find_package(tinyxml2 REQUIRED) because the link is private. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4555
https://github.com/sofa-framework/sofa/issues/4556:83,Modifiability,plugin,plugins,83,Review and udpate doc : https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins. - InvertibleFVM (TO DEPRECATE); - ManifoldTopologies; - MeshSTEPLoader; - ExternalBehaviorModel; - ManualMapping. Remove SOFA from plugin names:; - SofaCarving; - SofaDistanceGrid; - SofaEulerianFluid; - SofaImplicitField. Rename:; - SofaMatrix; - Caribou,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4556
https://github.com/sofa-framework/sofa/issues/4556:223,Modifiability,plugin,plugin,223,Review and udpate doc : https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins. - InvertibleFVM (TO DEPRECATE); - ManifoldTopologies; - MeshSTEPLoader; - ExternalBehaviorModel; - ManualMapping. Remove SOFA from plugin names:; - SofaCarving; - SofaDistanceGrid; - SofaEulerianFluid; - SofaImplicitField. Rename:; - SofaMatrix; - Caribou,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4556
https://github.com/sofa-framework/sofa/pull/4557:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4557
https://github.com/sofa-framework/sofa/pull/4557:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4557
https://github.com/sofa-framework/sofa/pull/4557:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4557
https://github.com/sofa-framework/sofa/pull/4557:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4557
https://github.com/sofa-framework/sofa/pull/4557:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4557
https://github.com/sofa-framework/sofa/pull/4557:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4557
https://github.com/sofa-framework/sofa/pull/4558:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4558
https://github.com/sofa-framework/sofa/pull/4558:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4558
https://github.com/sofa-framework/sofa/pull/4558:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4558
https://github.com/sofa-framework/sofa/pull/4558:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4558
https://github.com/sofa-framework/sofa/pull/4558:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4558
https://github.com/sofa-framework/sofa/pull/4558:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4558
https://github.com/sofa-framework/sofa/pull/4560:652,Availability,failure,failures,652,"All is in the title; Unfortunately, closing did not work due to missing return string. Now this will work!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4560
https://github.com/sofa-framework/sofa/pull/4560:701,Availability,failure,failures,701,"All is in the title; Unfortunately, closing did not work due to missing return string. Now this will work!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4560
https://github.com/sofa-framework/sofa/pull/4560:271,Security,Certificate,Certificate,271,"All is in the title; Unfortunately, closing did not work due to missing return string. Now this will work!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4560
https://github.com/sofa-framework/sofa/pull/4560:382,Security,certificate,certificate-of-origin-dco,382,"All is in the title; Unfortunately, closing did not work due to missing return string. Now this will work!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4560
https://github.com/sofa-framework/sofa/pull/4560:647,Testability,test,test,647,"All is in the title; Unfortunately, closing did not work due to missing return string. Now this will work!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4560
https://github.com/sofa-framework/sofa/pull/4560:696,Testability,test,test,696,"All is in the title; Unfortunately, closing did not work due to missing return string. Now this will work!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4560
https://github.com/sofa-framework/sofa/pull/4562:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4562
https://github.com/sofa-framework/sofa/pull/4562:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4562
https://github.com/sofa-framework/sofa/pull/4562:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4562
https://github.com/sofa-framework/sofa/pull/4562:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4562
https://github.com/sofa-framework/sofa/pull/4562:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4562
https://github.com/sofa-framework/sofa/pull/4562:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4562
https://github.com/sofa-framework/sofa/pull/4564:16,Availability,Error,Error,16,"Based on #4554. Error raised when a find_package of cxxopt was not providing a version number because `cxxopts_FIND_VERSION` was not set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4564
https://github.com/sofa-framework/sofa/pull/4564:682,Availability,failure,failures,682,"Based on #4554. Error raised when a find_package of cxxopt was not providing a version number because `cxxopts_FIND_VERSION` was not set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4564
https://github.com/sofa-framework/sofa/pull/4564:731,Availability,failure,failures,731,"Based on #4554. Error raised when a find_package of cxxopt was not providing a version number because `cxxopts_FIND_VERSION` was not set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4564
https://github.com/sofa-framework/sofa/pull/4564:301,Security,Certificate,Certificate,301,"Based on #4554. Error raised when a find_package of cxxopt was not providing a version number because `cxxopts_FIND_VERSION` was not set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4564
https://github.com/sofa-framework/sofa/pull/4564:412,Security,certificate,certificate-of-origin-dco,412,"Based on #4554. Error raised when a find_package of cxxopt was not providing a version number because `cxxopts_FIND_VERSION` was not set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4564
https://github.com/sofa-framework/sofa/pull/4564:677,Testability,test,test,677,"Based on #4554. Error raised when a find_package of cxxopt was not providing a version number because `cxxopts_FIND_VERSION` was not set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4564
https://github.com/sofa-framework/sofa/pull/4564:726,Testability,test,test,726,"Based on #4554. Error raised when a find_package of cxxopt was not providing a version number because `cxxopts_FIND_VERSION` was not set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4564
https://github.com/sofa-framework/sofa/pull/4565:928,Availability,failure,failures,928,"Both plugins are removed from sources and **NOT** fetchable since they are not of interest/use anymore:; - [ExternalBehaviorModel](https://github.com/sofa-framework/ExternalBehaviorModel); - [ManualMapping](https://github.com/sofa-framework/ManualMapping). I even hesitated to archive them directly. But let's be gentle. Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4565
https://github.com/sofa-framework/sofa/pull/4565:977,Availability,failure,failures,977,"Both plugins are removed from sources and **NOT** fetchable since they are not of interest/use anymore:; - [ExternalBehaviorModel](https://github.com/sofa-framework/ExternalBehaviorModel); - [ManualMapping](https://github.com/sofa-framework/ManualMapping). I even hesitated to archive them directly. But let's be gentle. Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4565
https://github.com/sofa-framework/sofa/pull/4565:5,Modifiability,plugin,plugins,5,"Both plugins are removed from sources and **NOT** fetchable since they are not of interest/use anymore:; - [ExternalBehaviorModel](https://github.com/sofa-framework/ExternalBehaviorModel); - [ManualMapping](https://github.com/sofa-framework/ManualMapping). I even hesitated to archive them directly. But let's be gentle. Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4565
https://github.com/sofa-framework/sofa/pull/4565:547,Security,Certificate,Certificate,547,"Both plugins are removed from sources and **NOT** fetchable since they are not of interest/use anymore:; - [ExternalBehaviorModel](https://github.com/sofa-framework/ExternalBehaviorModel); - [ManualMapping](https://github.com/sofa-framework/ManualMapping). I even hesitated to archive them directly. But let's be gentle. Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4565
https://github.com/sofa-framework/sofa/pull/4565:658,Security,certificate,certificate-of-origin-dco,658,"Both plugins are removed from sources and **NOT** fetchable since they are not of interest/use anymore:; - [ExternalBehaviorModel](https://github.com/sofa-framework/ExternalBehaviorModel); - [ManualMapping](https://github.com/sofa-framework/ManualMapping). I even hesitated to archive them directly. But let's be gentle. Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4565
https://github.com/sofa-framework/sofa/pull/4565:923,Testability,test,test,923,"Both plugins are removed from sources and **NOT** fetchable since they are not of interest/use anymore:; - [ExternalBehaviorModel](https://github.com/sofa-framework/ExternalBehaviorModel); - [ManualMapping](https://github.com/sofa-framework/ManualMapping). I even hesitated to archive them directly. But let's be gentle. Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4565
https://github.com/sofa-framework/sofa/pull/4565:972,Testability,test,test,972,"Both plugins are removed from sources and **NOT** fetchable since they are not of interest/use anymore:; - [ExternalBehaviorModel](https://github.com/sofa-framework/ExternalBehaviorModel); - [ManualMapping](https://github.com/sofa-framework/ManualMapping). I even hesitated to archive them directly. But let's be gentle. Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4565
https://github.com/sofa-framework/sofa/pull/4570:1180,Availability,failure,failures,1180,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570
https://github.com/sofa-framework/sofa/pull/4570:1229,Availability,failure,failures,1229,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570
https://github.com/sofa-framework/sofa/pull/4570:45,Deployability,install,installed,45,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570
https://github.com/sofa-framework/sofa/pull/4570:69,Modifiability,config,config,69,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570
https://github.com/sofa-framework/sofa/pull/4570:151,Modifiability,config,config,151,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570
https://github.com/sofa-framework/sofa/pull/4570:341,Modifiability,variab,variables,341,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570
https://github.com/sofa-framework/sofa/pull/4570:443,Modifiability,config,config,443,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570
https://github.com/sofa-framework/sofa/pull/4570:799,Security,Certificate,Certificate,799,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570
https://github.com/sofa-framework/sofa/pull/4570:910,Security,certificate,certificate-of-origin-dco,910,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570
https://github.com/sofa-framework/sofa/pull/4570:1175,Testability,test,test,1175,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570
https://github.com/sofa-framework/sofa/pull/4570:1224,Testability,test,test,1224,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570
https://github.com/sofa-framework/sofa/pull/4572:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4572
https://github.com/sofa-framework/sofa/pull/4572:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4572
https://github.com/sofa-framework/sofa/pull/4572:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4572
https://github.com/sofa-framework/sofa/pull/4572:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4572
https://github.com/sofa-framework/sofa/pull/4572:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4572
https://github.com/sofa-framework/sofa/pull/4572:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4572
https://github.com/sofa-framework/sofa/pull/4573:4,Availability,avail,available,4,"Now available here :arrow_right: [SofaDistanceGrid](https://github.com/sofa-framework/SofaDistanceGrid). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4573
https://github.com/sofa-framework/sofa/pull/4573:712,Availability,failure,failures,712,"Now available here :arrow_right: [SofaDistanceGrid](https://github.com/sofa-framework/SofaDistanceGrid). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4573
https://github.com/sofa-framework/sofa/pull/4573:761,Availability,failure,failures,761,"Now available here :arrow_right: [SofaDistanceGrid](https://github.com/sofa-framework/SofaDistanceGrid). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4573
https://github.com/sofa-framework/sofa/pull/4573:331,Security,Certificate,Certificate,331,"Now available here :arrow_right: [SofaDistanceGrid](https://github.com/sofa-framework/SofaDistanceGrid). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4573
https://github.com/sofa-framework/sofa/pull/4573:442,Security,certificate,certificate-of-origin-dco,442,"Now available here :arrow_right: [SofaDistanceGrid](https://github.com/sofa-framework/SofaDistanceGrid). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4573
https://github.com/sofa-framework/sofa/pull/4573:707,Testability,test,test,707,"Now available here :arrow_right: [SofaDistanceGrid](https://github.com/sofa-framework/SofaDistanceGrid). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4573
https://github.com/sofa-framework/sofa/pull/4573:756,Testability,test,test,756,"Now available here :arrow_right: [SofaDistanceGrid](https://github.com/sofa-framework/SofaDistanceGrid). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4573
https://github.com/sofa-framework/sofa/pull/4574:1166,Availability,failure,failures,1166,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574
https://github.com/sofa-framework/sofa/pull/4574:1215,Availability,failure,failures,1215,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574
https://github.com/sofa-framework/sofa/pull/4574:186,Deployability,install,install,186,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574
https://github.com/sofa-framework/sofa/pull/4574:382,Deployability,install,installed,382,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574
https://github.com/sofa-framework/sofa/pull/4574:588,Deployability,configurat,configuration,588,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574
https://github.com/sofa-framework/sofa/pull/4574:75,Integrability,depend,dependency,75,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574
https://github.com/sofa-framework/sofa/pull/4574:310,Modifiability,plugin,plugins,310,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574
https://github.com/sofa-framework/sofa/pull/4574:588,Modifiability,config,configuration,588,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574
https://github.com/sofa-framework/sofa/pull/4574:785,Security,Certificate,Certificate,785,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574
https://github.com/sofa-framework/sofa/pull/4574:896,Security,certificate,certificate-of-origin-dco,896,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574
https://github.com/sofa-framework/sofa/pull/4574:1161,Testability,test,test,1161,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574
https://github.com/sofa-framework/sofa/pull/4574:1210,Testability,test,test,1210,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574
https://github.com/sofa-framework/sofa/pull/4575:1068,Availability,failure,failures,1068,"Several plugins out-sourced:; - [SixenseHydra](https://github.com/sofa-framework/SixenseHydra); - [Xitact](https://github.com/sofa-framework/Xitact); - [Haption](https://github.com/sofa-framework/Haption) ; - [Sensable](https://github.com/sofa-framework/Sensable); - [SensableEmulation](https://github.com/sofa-framework/SensableEmulation); - [LeapMotion](https://github.com/sofa-framework/LeapMotion); - [Geomagic](https://github.com/sofa-framework/Geomagic). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575
https://github.com/sofa-framework/sofa/pull/4575:1117,Availability,failure,failures,1117,"Several plugins out-sourced:; - [SixenseHydra](https://github.com/sofa-framework/SixenseHydra); - [Xitact](https://github.com/sofa-framework/Xitact); - [Haption](https://github.com/sofa-framework/Haption) ; - [Sensable](https://github.com/sofa-framework/Sensable); - [SensableEmulation](https://github.com/sofa-framework/SensableEmulation); - [LeapMotion](https://github.com/sofa-framework/LeapMotion); - [Geomagic](https://github.com/sofa-framework/Geomagic). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575
https://github.com/sofa-framework/sofa/pull/4575:8,Modifiability,plugin,plugins,8,"Several plugins out-sourced:; - [SixenseHydra](https://github.com/sofa-framework/SixenseHydra); - [Xitact](https://github.com/sofa-framework/Xitact); - [Haption](https://github.com/sofa-framework/Haption) ; - [Sensable](https://github.com/sofa-framework/Sensable); - [SensableEmulation](https://github.com/sofa-framework/SensableEmulation); - [LeapMotion](https://github.com/sofa-framework/LeapMotion); - [Geomagic](https://github.com/sofa-framework/Geomagic). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575
https://github.com/sofa-framework/sofa/pull/4575:687,Security,Certificate,Certificate,687,"Several plugins out-sourced:; - [SixenseHydra](https://github.com/sofa-framework/SixenseHydra); - [Xitact](https://github.com/sofa-framework/Xitact); - [Haption](https://github.com/sofa-framework/Haption) ; - [Sensable](https://github.com/sofa-framework/Sensable); - [SensableEmulation](https://github.com/sofa-framework/SensableEmulation); - [LeapMotion](https://github.com/sofa-framework/LeapMotion); - [Geomagic](https://github.com/sofa-framework/Geomagic). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575
https://github.com/sofa-framework/sofa/pull/4575:798,Security,certificate,certificate-of-origin-dco,798,"Several plugins out-sourced:; - [SixenseHydra](https://github.com/sofa-framework/SixenseHydra); - [Xitact](https://github.com/sofa-framework/Xitact); - [Haption](https://github.com/sofa-framework/Haption) ; - [Sensable](https://github.com/sofa-framework/Sensable); - [SensableEmulation](https://github.com/sofa-framework/SensableEmulation); - [LeapMotion](https://github.com/sofa-framework/LeapMotion); - [Geomagic](https://github.com/sofa-framework/Geomagic). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575
https://github.com/sofa-framework/sofa/pull/4575:1063,Testability,test,test,1063,"Several plugins out-sourced:; - [SixenseHydra](https://github.com/sofa-framework/SixenseHydra); - [Xitact](https://github.com/sofa-framework/Xitact); - [Haption](https://github.com/sofa-framework/Haption) ; - [Sensable](https://github.com/sofa-framework/Sensable); - [SensableEmulation](https://github.com/sofa-framework/SensableEmulation); - [LeapMotion](https://github.com/sofa-framework/LeapMotion); - [Geomagic](https://github.com/sofa-framework/Geomagic). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575
https://github.com/sofa-framework/sofa/pull/4575:1112,Testability,test,test,1112,"Several plugins out-sourced:; - [SixenseHydra](https://github.com/sofa-framework/SixenseHydra); - [Xitact](https://github.com/sofa-framework/Xitact); - [Haption](https://github.com/sofa-framework/Haption) ; - [Sensable](https://github.com/sofa-framework/Sensable); - [SensableEmulation](https://github.com/sofa-framework/SensableEmulation); - [LeapMotion](https://github.com/sofa-framework/LeapMotion); - [Geomagic](https://github.com/sofa-framework/Geomagic). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575
https://github.com/sofa-framework/sofa/pull/4576:595,Availability,failure,failures,595,"quick PR from the pool regarding discussion #4561. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4576
https://github.com/sofa-framework/sofa/pull/4576:644,Availability,failure,failures,644,"quick PR from the pool regarding discussion #4561. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4576
https://github.com/sofa-framework/sofa/pull/4576:214,Security,Certificate,Certificate,214,"quick PR from the pool regarding discussion #4561. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4576
https://github.com/sofa-framework/sofa/pull/4576:325,Security,certificate,certificate-of-origin-dco,325,"quick PR from the pool regarding discussion #4561. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4576
https://github.com/sofa-framework/sofa/pull/4576:590,Testability,test,test,590,"quick PR from the pool regarding discussion #4561. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4576
https://github.com/sofa-framework/sofa/pull/4576:639,Testability,test,test,639,"quick PR from the pool regarding discussion #4561. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4576
https://github.com/sofa-framework/sofa/issues/4579:352,Availability,error,error,352,"Hello, ; I'am having troubles compiling the SofaCUDA plugin; -Ubuntu 22.04; -SOFA 22.12; -gcc 11; -nvcc version: ; ```; nvcc: NVIDIA (R) Cuda compiler driver; Copyright (c) 2005-2023 NVIDIA Corporation; Built on Fri_Jan__6_16:45:21_PST_2023; Cuda compilation tools, release 12.0, V12.0.140; Build cuda_12.0.r12.0/compiler.32267302_0; ```. ; I get this error:; ` error: identifier ""umul24"" is undefined`; from:; `.../applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaContactMapper.cu(88)`. I tried to solve replacing this line:; `map[curTestEntry.newIndex + threadIdx.x] = umul24(curTestEntry.elem1,nbPointsPerElem) + c.p1;`; with this line:; `map[curTestEntry.newIndex + threadIdx.x] = curTestEntry.elem1*nbPointsPerElem + c.p1;`. but I get even more errors now, so I thought the plugin was written for a specific cuda version. Is that correct? Should I change my cuda toolkit version together with the gcc version?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579
https://github.com/sofa-framework/sofa/issues/4579:362,Availability,error,error,362,"Hello, ; I'am having troubles compiling the SofaCUDA plugin; -Ubuntu 22.04; -SOFA 22.12; -gcc 11; -nvcc version: ; ```; nvcc: NVIDIA (R) Cuda compiler driver; Copyright (c) 2005-2023 NVIDIA Corporation; Built on Fri_Jan__6_16:45:21_PST_2023; Cuda compilation tools, release 12.0, V12.0.140; Build cuda_12.0.r12.0/compiler.32267302_0; ```. ; I get this error:; ` error: identifier ""umul24"" is undefined`; from:; `.../applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaContactMapper.cu(88)`. I tried to solve replacing this line:; `map[curTestEntry.newIndex + threadIdx.x] = umul24(curTestEntry.elem1,nbPointsPerElem) + c.p1;`; with this line:; `map[curTestEntry.newIndex + threadIdx.x] = curTestEntry.elem1*nbPointsPerElem + c.p1;`. but I get even more errors now, so I thought the plugin was written for a specific cuda version. Is that correct? Should I change my cuda toolkit version together with the gcc version?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579
https://github.com/sofa-framework/sofa/issues/4579:749,Availability,error,errors,749,"Hello, ; I'am having troubles compiling the SofaCUDA plugin; -Ubuntu 22.04; -SOFA 22.12; -gcc 11; -nvcc version: ; ```; nvcc: NVIDIA (R) Cuda compiler driver; Copyright (c) 2005-2023 NVIDIA Corporation; Built on Fri_Jan__6_16:45:21_PST_2023; Cuda compilation tools, release 12.0, V12.0.140; Build cuda_12.0.r12.0/compiler.32267302_0; ```. ; I get this error:; ` error: identifier ""umul24"" is undefined`; from:; `.../applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaContactMapper.cu(88)`. I tried to solve replacing this line:; `map[curTestEntry.newIndex + threadIdx.x] = umul24(curTestEntry.elem1,nbPointsPerElem) + c.p1;`; with this line:; `map[curTestEntry.newIndex + threadIdx.x] = curTestEntry.elem1*nbPointsPerElem + c.p1;`. but I get even more errors now, so I thought the plugin was written for a specific cuda version. Is that correct? Should I change my cuda toolkit version together with the gcc version?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579
https://github.com/sofa-framework/sofa/issues/4579:266,Deployability,release,release,266,"Hello, ; I'am having troubles compiling the SofaCUDA plugin; -Ubuntu 22.04; -SOFA 22.12; -gcc 11; -nvcc version: ; ```; nvcc: NVIDIA (R) Cuda compiler driver; Copyright (c) 2005-2023 NVIDIA Corporation; Built on Fri_Jan__6_16:45:21_PST_2023; Cuda compilation tools, release 12.0, V12.0.140; Build cuda_12.0.r12.0/compiler.32267302_0; ```. ; I get this error:; ` error: identifier ""umul24"" is undefined`; from:; `.../applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaContactMapper.cu(88)`. I tried to solve replacing this line:; `map[curTestEntry.newIndex + threadIdx.x] = umul24(curTestEntry.elem1,nbPointsPerElem) + c.p1;`; with this line:; `map[curTestEntry.newIndex + threadIdx.x] = curTestEntry.elem1*nbPointsPerElem + c.p1;`. but I get even more errors now, so I thought the plugin was written for a specific cuda version. Is that correct? Should I change my cuda toolkit version together with the gcc version?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579
https://github.com/sofa-framework/sofa/issues/4579:53,Modifiability,plugin,plugin,53,"Hello, ; I'am having troubles compiling the SofaCUDA plugin; -Ubuntu 22.04; -SOFA 22.12; -gcc 11; -nvcc version: ; ```; nvcc: NVIDIA (R) Cuda compiler driver; Copyright (c) 2005-2023 NVIDIA Corporation; Built on Fri_Jan__6_16:45:21_PST_2023; Cuda compilation tools, release 12.0, V12.0.140; Build cuda_12.0.r12.0/compiler.32267302_0; ```. ; I get this error:; ` error: identifier ""umul24"" is undefined`; from:; `.../applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaContactMapper.cu(88)`. I tried to solve replacing this line:; `map[curTestEntry.newIndex + threadIdx.x] = umul24(curTestEntry.elem1,nbPointsPerElem) + c.p1;`; with this line:; `map[curTestEntry.newIndex + threadIdx.x] = curTestEntry.elem1*nbPointsPerElem + c.p1;`. but I get even more errors now, so I thought the plugin was written for a specific cuda version. Is that correct? Should I change my cuda toolkit version together with the gcc version?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579
https://github.com/sofa-framework/sofa/issues/4579:429,Modifiability,plugin,plugins,429,"Hello, ; I'am having troubles compiling the SofaCUDA plugin; -Ubuntu 22.04; -SOFA 22.12; -gcc 11; -nvcc version: ; ```; nvcc: NVIDIA (R) Cuda compiler driver; Copyright (c) 2005-2023 NVIDIA Corporation; Built on Fri_Jan__6_16:45:21_PST_2023; Cuda compilation tools, release 12.0, V12.0.140; Build cuda_12.0.r12.0/compiler.32267302_0; ```. ; I get this error:; ` error: identifier ""umul24"" is undefined`; from:; `.../applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaContactMapper.cu(88)`. I tried to solve replacing this line:; `map[curTestEntry.newIndex + threadIdx.x] = umul24(curTestEntry.elem1,nbPointsPerElem) + c.p1;`; with this line:; `map[curTestEntry.newIndex + threadIdx.x] = curTestEntry.elem1*nbPointsPerElem + c.p1;`. but I get even more errors now, so I thought the plugin was written for a specific cuda version. Is that correct? Should I change my cuda toolkit version together with the gcc version?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579
https://github.com/sofa-framework/sofa/issues/4579:778,Modifiability,plugin,plugin,778,"Hello, ; I'am having troubles compiling the SofaCUDA plugin; -Ubuntu 22.04; -SOFA 22.12; -gcc 11; -nvcc version: ; ```; nvcc: NVIDIA (R) Cuda compiler driver; Copyright (c) 2005-2023 NVIDIA Corporation; Built on Fri_Jan__6_16:45:21_PST_2023; Cuda compilation tools, release 12.0, V12.0.140; Build cuda_12.0.r12.0/compiler.32267302_0; ```. ; I get this error:; ` error: identifier ""umul24"" is undefined`; from:; `.../applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaContactMapper.cu(88)`. I tried to solve replacing this line:; `map[curTestEntry.newIndex + threadIdx.x] = umul24(curTestEntry.elem1,nbPointsPerElem) + c.p1;`; with this line:; `map[curTestEntry.newIndex + threadIdx.x] = curTestEntry.elem1*nbPointsPerElem + c.p1;`. but I get even more errors now, so I thought the plugin was written for a specific cuda version. Is that correct? Should I change my cuda toolkit version together with the gcc version?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579
https://github.com/sofa-framework/sofa/pull/4580:1508,Availability,failure,failures,1508,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:1557,Availability,failure,failures,1557,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:301,Deployability,pipeline,pipeline,301,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:457,Modifiability,rewrite,rewrite,457,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:36,Performance,concurren,concurrent,36,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:478,Safety,safe,safe,478,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:623,Safety,safe,safe,623,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:1127,Security,Certificate,Certificate,1127,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:1238,Security,certificate,certificate-of-origin-dco,1238,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:28,Testability,test,test,28,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:181,Testability,test,test,181,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:186,Testability,test,tests,186,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:276,Testability,test,test,276,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:855,Testability,test,test,855,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:916,Testability,test,test,916,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:1503,Testability,test,test,1503,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4580:1552,Testability,test,test,1552,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580
https://github.com/sofa-framework/sofa/pull/4581:669,Availability,failure,failures,669,"Make problemId counter id atomic for thread-safety. An other (better) solution could be to use local thread storage maybe ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4581
https://github.com/sofa-framework/sofa/pull/4581:718,Availability,failure,failures,718,"Make problemId counter id atomic for thread-safety. An other (better) solution could be to use local thread storage maybe ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4581
https://github.com/sofa-framework/sofa/pull/4581:44,Safety,safe,safety,44,"Make problemId counter id atomic for thread-safety. An other (better) solution could be to use local thread storage maybe ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4581
https://github.com/sofa-framework/sofa/pull/4581:288,Security,Certificate,Certificate,288,"Make problemId counter id atomic for thread-safety. An other (better) solution could be to use local thread storage maybe ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4581
https://github.com/sofa-framework/sofa/pull/4581:399,Security,certificate,certificate-of-origin-dco,399,"Make problemId counter id atomic for thread-safety. An other (better) solution could be to use local thread storage maybe ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4581
https://github.com/sofa-framework/sofa/pull/4581:664,Testability,test,test,664,"Make problemId counter id atomic for thread-safety. An other (better) solution could be to use local thread storage maybe ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4581
https://github.com/sofa-framework/sofa/pull/4581:713,Testability,test,test,713,"Make problemId counter id atomic for thread-safety. An other (better) solution could be to use local thread storage maybe ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4581
https://github.com/sofa-framework/sofa/pull/4582:1091,Availability,failure,failures,1091,"~~for thread-safety, and each thread/simu would have its own pool of contact id~~. ~~An other solution would be to put a guard_lock/mutex each time the ids are accessed but it would share the same pool of contact id to the whole set of thread/simu~~. Make the counter of ContactId atomic.; A side effect is to remove the ability to restore previous contactid which was destroyed and set in a side container. I dont think we really need to save some ""ids"" because we will never overrun the 64 bit integer IMO (18446744073709551615 is quite big 🙃); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582
https://github.com/sofa-framework/sofa/pull/4582:1140,Availability,failure,failures,1140,"~~for thread-safety, and each thread/simu would have its own pool of contact id~~. ~~An other solution would be to put a guard_lock/mutex each time the ids are accessed but it would share the same pool of contact id to the whole set of thread/simu~~. Make the counter of ContactId atomic.; A side effect is to remove the ability to restore previous contactid which was destroyed and set in a side container. I dont think we really need to save some ""ids"" because we will never overrun the 64 bit integer IMO (18446744073709551615 is quite big 🙃); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582
https://github.com/sofa-framework/sofa/pull/4582:13,Safety,safe,safety,13,"~~for thread-safety, and each thread/simu would have its own pool of contact id~~. ~~An other solution would be to put a guard_lock/mutex each time the ids are accessed but it would share the same pool of contact id to the whole set of thread/simu~~. Make the counter of ContactId atomic.; A side effect is to remove the ability to restore previous contactid which was destroyed and set in a side container. I dont think we really need to save some ""ids"" because we will never overrun the 64 bit integer IMO (18446744073709551615 is quite big 🙃); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582
https://github.com/sofa-framework/sofa/pull/4582:160,Security,access,accessed,160,"~~for thread-safety, and each thread/simu would have its own pool of contact id~~. ~~An other solution would be to put a guard_lock/mutex each time the ids are accessed but it would share the same pool of contact id to the whole set of thread/simu~~. Make the counter of ContactId atomic.; A side effect is to remove the ability to restore previous contactid which was destroyed and set in a side container. I dont think we really need to save some ""ids"" because we will never overrun the 64 bit integer IMO (18446744073709551615 is quite big 🙃); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582
https://github.com/sofa-framework/sofa/pull/4582:710,Security,Certificate,Certificate,710,"~~for thread-safety, and each thread/simu would have its own pool of contact id~~. ~~An other solution would be to put a guard_lock/mutex each time the ids are accessed but it would share the same pool of contact id to the whole set of thread/simu~~. Make the counter of ContactId atomic.; A side effect is to remove the ability to restore previous contactid which was destroyed and set in a side container. I dont think we really need to save some ""ids"" because we will never overrun the 64 bit integer IMO (18446744073709551615 is quite big 🙃); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582
https://github.com/sofa-framework/sofa/pull/4582:821,Security,certificate,certificate-of-origin-dco,821,"~~for thread-safety, and each thread/simu would have its own pool of contact id~~. ~~An other solution would be to put a guard_lock/mutex each time the ids are accessed but it would share the same pool of contact id to the whole set of thread/simu~~. Make the counter of ContactId atomic.; A side effect is to remove the ability to restore previous contactid which was destroyed and set in a side container. I dont think we really need to save some ""ids"" because we will never overrun the 64 bit integer IMO (18446744073709551615 is quite big 🙃); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582
https://github.com/sofa-framework/sofa/pull/4582:1086,Testability,test,test,1086,"~~for thread-safety, and each thread/simu would have its own pool of contact id~~. ~~An other solution would be to put a guard_lock/mutex each time the ids are accessed but it would share the same pool of contact id to the whole set of thread/simu~~. Make the counter of ContactId atomic.; A side effect is to remove the ability to restore previous contactid which was destroyed and set in a side container. I dont think we really need to save some ""ids"" because we will never overrun the 64 bit integer IMO (18446744073709551615 is quite big 🙃); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582
https://github.com/sofa-framework/sofa/pull/4582:1135,Testability,test,test,1135,"~~for thread-safety, and each thread/simu would have its own pool of contact id~~. ~~An other solution would be to put a guard_lock/mutex each time the ids are accessed but it would share the same pool of contact id to the whole set of thread/simu~~. Make the counter of ContactId atomic.; A side effect is to remove the ability to restore previous contactid which was destroyed and set in a side container. I dont think we really need to save some ""ids"" because we will never overrun the 64 bit integer IMO (18446744073709551615 is quite big 🙃); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582
https://github.com/sofa-framework/sofa/pull/4583:2177,Availability,failure,failures,2177," an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583
https://github.com/sofa-framework/sofa/pull/4583:2226,Availability,failure,failures,2226," an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583
https://github.com/sofa-framework/sofa/pull/4583:1321,Deployability,pipeline,pipeline,1321," an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583
https://github.com/sofa-framework/sofa/pull/4583:650,Modifiability,plugin,plugin,650,"The design of Intersection/Intersector is really ""special"" in the sense that:; - Intersection class is the BaseObject in the graph doing stuff; - Intersector is container of functions for canIntersect/intersect method between different primitives. And it was made such as one could add more intersect() method for new primitives for an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Revie",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583
https://github.com/sofa-framework/sofa/pull/4583:752,Performance,load,load-time,752,"The design of Intersection/Intersector is really ""special"" in the sense that:; - Intersection class is the BaseObject in the graph doing stuff; - Intersector is container of functions for canIntersect/intersect method between different primitives. And it was made such as one could add more intersect() method for new primitives for an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Revie",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583
https://github.com/sofa-framework/sofa/pull/4583:779,Performance,load,loaded,779,"The design of Intersection/Intersector is really ""special"" in the sense that:; - Intersection class is the BaseObject in the graph doing stuff; - Intersector is container of functions for canIntersect/intersect method between different primitives. And it was made such as one could add more intersect() method for new primitives for an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Revie",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583
https://github.com/sofa-framework/sofa/pull/4583:1300,Performance,race condition,race conditions,1300,"ferent primitives. And it was made such as one could add more intersect() method for new primitives for an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test fai",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583
https://github.com/sofa-framework/sofa/pull/4583:1294,Safety,avoid,avoid,1294,"ferent primitives. And it was made such as one could add more intersect() method for new primitives for an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test fai",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583
https://github.com/sofa-framework/sofa/pull/4583:1796,Security,Certificate,Certificate,1796," an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583
https://github.com/sofa-framework/sofa/pull/4583:1907,Security,certificate,certificate-of-origin-dco,1907," an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583
https://github.com/sofa-framework/sofa/pull/4583:2172,Testability,test,test,2172," an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583
https://github.com/sofa-framework/sofa/pull/4583:2221,Testability,test,test,2221," an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583
https://github.com/sofa-framework/sofa/pull/4586:718,Availability,failure,failures,718,"In all CMakeLists, upgrade `cmake_minimum_required` from 3.12 to 3.22 in order to support the find or fetch mechanism. **TODO**; - update documentation; - update SP3 readme. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586
https://github.com/sofa-framework/sofa/pull/4586:767,Availability,failure,failures,767,"In all CMakeLists, upgrade `cmake_minimum_required` from 3.12 to 3.22 in order to support the find or fetch mechanism. **TODO**; - update documentation; - update SP3 readme. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586
https://github.com/sofa-framework/sofa/pull/4586:19,Deployability,upgrade,upgrade,19,"In all CMakeLists, upgrade `cmake_minimum_required` from 3.12 to 3.22 in order to support the find or fetch mechanism. **TODO**; - update documentation; - update SP3 readme. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586
https://github.com/sofa-framework/sofa/pull/4586:131,Deployability,update,update,131,"In all CMakeLists, upgrade `cmake_minimum_required` from 3.12 to 3.22 in order to support the find or fetch mechanism. **TODO**; - update documentation; - update SP3 readme. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586
https://github.com/sofa-framework/sofa/pull/4586:155,Deployability,update,update,155,"In all CMakeLists, upgrade `cmake_minimum_required` from 3.12 to 3.22 in order to support the find or fetch mechanism. **TODO**; - update documentation; - update SP3 readme. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586
https://github.com/sofa-framework/sofa/pull/4586:337,Security,Certificate,Certificate,337,"In all CMakeLists, upgrade `cmake_minimum_required` from 3.12 to 3.22 in order to support the find or fetch mechanism. **TODO**; - update documentation; - update SP3 readme. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586
https://github.com/sofa-framework/sofa/pull/4586:448,Security,certificate,certificate-of-origin-dco,448,"In all CMakeLists, upgrade `cmake_minimum_required` from 3.12 to 3.22 in order to support the find or fetch mechanism. **TODO**; - update documentation; - update SP3 readme. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586
https://github.com/sofa-framework/sofa/pull/4586:713,Testability,test,test,713,"In all CMakeLists, upgrade `cmake_minimum_required` from 3.12 to 3.22 in order to support the find or fetch mechanism. **TODO**; - update documentation; - update SP3 readme. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586
https://github.com/sofa-framework/sofa/pull/4586:762,Testability,test,test,762,"In all CMakeLists, upgrade `cmake_minimum_required` from 3.12 to 3.22 in order to support the find or fetch mechanism. **TODO**; - update documentation; - update SP3 readme. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586
https://github.com/sofa-framework/sofa/pull/4588:712,Availability,failure,failures,712,"Everything depending on Metis is now in moved in https://github.com/sofa-framework/Sofa.Metis. [ci-depends-on https://github.com/sofa-framework/CSparseSolvers/pull/3]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588
https://github.com/sofa-framework/sofa/pull/4588:761,Availability,failure,failures,761,"Everything depending on Metis is now in moved in https://github.com/sofa-framework/Sofa.Metis. [ci-depends-on https://github.com/sofa-framework/CSparseSolvers/pull/3]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588
https://github.com/sofa-framework/sofa/pull/4588:11,Integrability,depend,depending,11,"Everything depending on Metis is now in moved in https://github.com/sofa-framework/Sofa.Metis. [ci-depends-on https://github.com/sofa-framework/CSparseSolvers/pull/3]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588
https://github.com/sofa-framework/sofa/pull/4588:99,Integrability,depend,depends-on,99,"Everything depending on Metis is now in moved in https://github.com/sofa-framework/Sofa.Metis. [ci-depends-on https://github.com/sofa-framework/CSparseSolvers/pull/3]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588
https://github.com/sofa-framework/sofa/pull/4588:331,Security,Certificate,Certificate,331,"Everything depending on Metis is now in moved in https://github.com/sofa-framework/Sofa.Metis. [ci-depends-on https://github.com/sofa-framework/CSparseSolvers/pull/3]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588
https://github.com/sofa-framework/sofa/pull/4588:442,Security,certificate,certificate-of-origin-dco,442,"Everything depending on Metis is now in moved in https://github.com/sofa-framework/Sofa.Metis. [ci-depends-on https://github.com/sofa-framework/CSparseSolvers/pull/3]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588
https://github.com/sofa-framework/sofa/pull/4588:707,Testability,test,test,707,"Everything depending on Metis is now in moved in https://github.com/sofa-framework/Sofa.Metis. [ci-depends-on https://github.com/sofa-framework/CSparseSolvers/pull/3]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588
https://github.com/sofa-framework/sofa/pull/4588:756,Testability,test,test,756,"Everything depending on Metis is now in moved in https://github.com/sofa-framework/Sofa.Metis. [ci-depends-on https://github.com/sofa-framework/CSparseSolvers/pull/3]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588
https://github.com/sofa-framework/sofa/pull/4589:1818,Availability,failure,failures,1818,"[Plugin list](https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins) is now completed.; Plugins with their own repo:; - [SofaMatrix](https://github.com/sofa-framework/SofaMatrix); - [SofaCarving](https://github.com/sofa-framework/SofaCarving); - [image](https://github.com/sofa-framework/image); - [CImgPlugin](https://github.com/sofa-framework/CImgPlugin); - [DiffusionSolver](https://github.com/sofa-framework/DiffusionSolver); - [ArticulatedSystemPlugin](https://github.com/sofa-framework/ArticulatedSystemPlugin); - [BulletCollisionDetection](https://github.com/sofa-framework/BulletCollisionDetection); - [SofaAssimp](https://github.com/sofa-framework/SofaAssimp); - [SofaHAPI](https://github.com/sofa-framework/SofaHAPI); - [PersistentContact](https://github.com/sofa-framework/PersistentContact); - [SofaNewMat](https://github.com/sofa-framework/SofaNewMat); - [SofaPardisoSolver](https://github.com/sofa-framework/SofaPardisoSolver); - [SofaSimpleGui](https://github.com/sofa-framework/SofaSimpleGui); - [VolumetricRendering](https://github.com/sofa-framework/VolumetricRendering); - [SofaEulerianFluid](https://github.com/sofa-framework/SofaEulerianFluid); - [SofaImplicitField](https://github.com/sofa-framework/SofaImplicitField). Related to #1442 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4589
https://github.com/sofa-framework/sofa/pull/4589:1867,Availability,failure,failures,1867,"[Plugin list](https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins) is now completed.; Plugins with their own repo:; - [SofaMatrix](https://github.com/sofa-framework/SofaMatrix); - [SofaCarving](https://github.com/sofa-framework/SofaCarving); - [image](https://github.com/sofa-framework/image); - [CImgPlugin](https://github.com/sofa-framework/CImgPlugin); - [DiffusionSolver](https://github.com/sofa-framework/DiffusionSolver); - [ArticulatedSystemPlugin](https://github.com/sofa-framework/ArticulatedSystemPlugin); - [BulletCollisionDetection](https://github.com/sofa-framework/BulletCollisionDetection); - [SofaAssimp](https://github.com/sofa-framework/SofaAssimp); - [SofaHAPI](https://github.com/sofa-framework/SofaHAPI); - [PersistentContact](https://github.com/sofa-framework/PersistentContact); - [SofaNewMat](https://github.com/sofa-framework/SofaNewMat); - [SofaPardisoSolver](https://github.com/sofa-framework/SofaPardisoSolver); - [SofaSimpleGui](https://github.com/sofa-framework/SofaSimpleGui); - [VolumetricRendering](https://github.com/sofa-framework/VolumetricRendering); - [SofaEulerianFluid](https://github.com/sofa-framework/SofaEulerianFluid); - [SofaImplicitField](https://github.com/sofa-framework/SofaImplicitField). Related to #1442 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4589
https://github.com/sofa-framework/sofa/pull/4589:1,Modifiability,Plugin,Plugin,1,"[Plugin list](https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins) is now completed.; Plugins with their own repo:; - [SofaMatrix](https://github.com/sofa-framework/SofaMatrix); - [SofaCarving](https://github.com/sofa-framework/SofaCarving); - [image](https://github.com/sofa-framework/image); - [CImgPlugin](https://github.com/sofa-framework/CImgPlugin); - [DiffusionSolver](https://github.com/sofa-framework/DiffusionSolver); - [ArticulatedSystemPlugin](https://github.com/sofa-framework/ArticulatedSystemPlugin); - [BulletCollisionDetection](https://github.com/sofa-framework/BulletCollisionDetection); - [SofaAssimp](https://github.com/sofa-framework/SofaAssimp); - [SofaHAPI](https://github.com/sofa-framework/SofaHAPI); - [PersistentContact](https://github.com/sofa-framework/PersistentContact); - [SofaNewMat](https://github.com/sofa-framework/SofaNewMat); - [SofaPardisoSolver](https://github.com/sofa-framework/SofaPardisoSolver); - [SofaSimpleGui](https://github.com/sofa-framework/SofaSimpleGui); - [VolumetricRendering](https://github.com/sofa-framework/VolumetricRendering); - [SofaEulerianFluid](https://github.com/sofa-framework/SofaEulerianFluid); - [SofaImplicitField](https://github.com/sofa-framework/SofaImplicitField). Related to #1442 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4589
https://github.com/sofa-framework/sofa/pull/4589:73,Modifiability,plugin,plugins,73,"[Plugin list](https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins) is now completed.; Plugins with their own repo:; - [SofaMatrix](https://github.com/sofa-framework/SofaMatrix); - [SofaCarving](https://github.com/sofa-framework/SofaCarving); - [image](https://github.com/sofa-framework/image); - [CImgPlugin](https://github.com/sofa-framework/CImgPlugin); - [DiffusionSolver](https://github.com/sofa-framework/DiffusionSolver); - [ArticulatedSystemPlugin](https://github.com/sofa-framework/ArticulatedSystemPlugin); - [BulletCollisionDetection](https://github.com/sofa-framework/BulletCollisionDetection); - [SofaAssimp](https://github.com/sofa-framework/SofaAssimp); - [SofaHAPI](https://github.com/sofa-framework/SofaHAPI); - [PersistentContact](https://github.com/sofa-framework/PersistentContact); - [SofaNewMat](https://github.com/sofa-framework/SofaNewMat); - [SofaPardisoSolver](https://github.com/sofa-framework/SofaPardisoSolver); - [SofaSimpleGui](https://github.com/sofa-framework/SofaSimpleGui); - [VolumetricRendering](https://github.com/sofa-framework/VolumetricRendering); - [SofaEulerianFluid](https://github.com/sofa-framework/SofaEulerianFluid); - [SofaImplicitField](https://github.com/sofa-framework/SofaImplicitField). Related to #1442 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4589
https://github.com/sofa-framework/sofa/pull/4589:101,Modifiability,Plugin,Plugins,101,"[Plugin list](https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins) is now completed.; Plugins with their own repo:; - [SofaMatrix](https://github.com/sofa-framework/SofaMatrix); - [SofaCarving](https://github.com/sofa-framework/SofaCarving); - [image](https://github.com/sofa-framework/image); - [CImgPlugin](https://github.com/sofa-framework/CImgPlugin); - [DiffusionSolver](https://github.com/sofa-framework/DiffusionSolver); - [ArticulatedSystemPlugin](https://github.com/sofa-framework/ArticulatedSystemPlugin); - [BulletCollisionDetection](https://github.com/sofa-framework/BulletCollisionDetection); - [SofaAssimp](https://github.com/sofa-framework/SofaAssimp); - [SofaHAPI](https://github.com/sofa-framework/SofaHAPI); - [PersistentContact](https://github.com/sofa-framework/PersistentContact); - [SofaNewMat](https://github.com/sofa-framework/SofaNewMat); - [SofaPardisoSolver](https://github.com/sofa-framework/SofaPardisoSolver); - [SofaSimpleGui](https://github.com/sofa-framework/SofaSimpleGui); - [VolumetricRendering](https://github.com/sofa-framework/VolumetricRendering); - [SofaEulerianFluid](https://github.com/sofa-framework/SofaEulerianFluid); - [SofaImplicitField](https://github.com/sofa-framework/SofaImplicitField). Related to #1442 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4589
https://github.com/sofa-framework/sofa/pull/4589:1437,Security,Certificate,Certificate,1437,"[Plugin list](https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins) is now completed.; Plugins with their own repo:; - [SofaMatrix](https://github.com/sofa-framework/SofaMatrix); - [SofaCarving](https://github.com/sofa-framework/SofaCarving); - [image](https://github.com/sofa-framework/image); - [CImgPlugin](https://github.com/sofa-framework/CImgPlugin); - [DiffusionSolver](https://github.com/sofa-framework/DiffusionSolver); - [ArticulatedSystemPlugin](https://github.com/sofa-framework/ArticulatedSystemPlugin); - [BulletCollisionDetection](https://github.com/sofa-framework/BulletCollisionDetection); - [SofaAssimp](https://github.com/sofa-framework/SofaAssimp); - [SofaHAPI](https://github.com/sofa-framework/SofaHAPI); - [PersistentContact](https://github.com/sofa-framework/PersistentContact); - [SofaNewMat](https://github.com/sofa-framework/SofaNewMat); - [SofaPardisoSolver](https://github.com/sofa-framework/SofaPardisoSolver); - [SofaSimpleGui](https://github.com/sofa-framework/SofaSimpleGui); - [VolumetricRendering](https://github.com/sofa-framework/VolumetricRendering); - [SofaEulerianFluid](https://github.com/sofa-framework/SofaEulerianFluid); - [SofaImplicitField](https://github.com/sofa-framework/SofaImplicitField). Related to #1442 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4589
https://github.com/sofa-framework/sofa/pull/4589:1548,Security,certificate,certificate-of-origin-dco,1548,"[Plugin list](https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins) is now completed.; Plugins with their own repo:; - [SofaMatrix](https://github.com/sofa-framework/SofaMatrix); - [SofaCarving](https://github.com/sofa-framework/SofaCarving); - [image](https://github.com/sofa-framework/image); - [CImgPlugin](https://github.com/sofa-framework/CImgPlugin); - [DiffusionSolver](https://github.com/sofa-framework/DiffusionSolver); - [ArticulatedSystemPlugin](https://github.com/sofa-framework/ArticulatedSystemPlugin); - [BulletCollisionDetection](https://github.com/sofa-framework/BulletCollisionDetection); - [SofaAssimp](https://github.com/sofa-framework/SofaAssimp); - [SofaHAPI](https://github.com/sofa-framework/SofaHAPI); - [PersistentContact](https://github.com/sofa-framework/PersistentContact); - [SofaNewMat](https://github.com/sofa-framework/SofaNewMat); - [SofaPardisoSolver](https://github.com/sofa-framework/SofaPardisoSolver); - [SofaSimpleGui](https://github.com/sofa-framework/SofaSimpleGui); - [VolumetricRendering](https://github.com/sofa-framework/VolumetricRendering); - [SofaEulerianFluid](https://github.com/sofa-framework/SofaEulerianFluid); - [SofaImplicitField](https://github.com/sofa-framework/SofaImplicitField). Related to #1442 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4589
https://github.com/sofa-framework/sofa/pull/4589:1813,Testability,test,test,1813,"[Plugin list](https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins) is now completed.; Plugins with their own repo:; - [SofaMatrix](https://github.com/sofa-framework/SofaMatrix); - [SofaCarving](https://github.com/sofa-framework/SofaCarving); - [image](https://github.com/sofa-framework/image); - [CImgPlugin](https://github.com/sofa-framework/CImgPlugin); - [DiffusionSolver](https://github.com/sofa-framework/DiffusionSolver); - [ArticulatedSystemPlugin](https://github.com/sofa-framework/ArticulatedSystemPlugin); - [BulletCollisionDetection](https://github.com/sofa-framework/BulletCollisionDetection); - [SofaAssimp](https://github.com/sofa-framework/SofaAssimp); - [SofaHAPI](https://github.com/sofa-framework/SofaHAPI); - [PersistentContact](https://github.com/sofa-framework/PersistentContact); - [SofaNewMat](https://github.com/sofa-framework/SofaNewMat); - [SofaPardisoSolver](https://github.com/sofa-framework/SofaPardisoSolver); - [SofaSimpleGui](https://github.com/sofa-framework/SofaSimpleGui); - [VolumetricRendering](https://github.com/sofa-framework/VolumetricRendering); - [SofaEulerianFluid](https://github.com/sofa-framework/SofaEulerianFluid); - [SofaImplicitField](https://github.com/sofa-framework/SofaImplicitField). Related to #1442 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4589
https://github.com/sofa-framework/sofa/pull/4589:1862,Testability,test,test,1862,"[Plugin list](https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins) is now completed.; Plugins with their own repo:; - [SofaMatrix](https://github.com/sofa-framework/SofaMatrix); - [SofaCarving](https://github.com/sofa-framework/SofaCarving); - [image](https://github.com/sofa-framework/image); - [CImgPlugin](https://github.com/sofa-framework/CImgPlugin); - [DiffusionSolver](https://github.com/sofa-framework/DiffusionSolver); - [ArticulatedSystemPlugin](https://github.com/sofa-framework/ArticulatedSystemPlugin); - [BulletCollisionDetection](https://github.com/sofa-framework/BulletCollisionDetection); - [SofaAssimp](https://github.com/sofa-framework/SofaAssimp); - [SofaHAPI](https://github.com/sofa-framework/SofaHAPI); - [PersistentContact](https://github.com/sofa-framework/PersistentContact); - [SofaNewMat](https://github.com/sofa-framework/SofaNewMat); - [SofaPardisoSolver](https://github.com/sofa-framework/SofaPardisoSolver); - [SofaSimpleGui](https://github.com/sofa-framework/SofaSimpleGui); - [VolumetricRendering](https://github.com/sofa-framework/VolumetricRendering); - [SofaEulerianFluid](https://github.com/sofa-framework/SofaEulerianFluid); - [SofaImplicitField](https://github.com/sofa-framework/SofaImplicitField). Related to #1442 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4589
https://github.com/sofa-framework/sofa/pull/4590:692,Availability,failure,failures,692,"I did not find how the macro `SOFA_DDG_TRACE` was enabled. The code inside did not compile. The intended behavior can be obtained using a debugger. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4590
https://github.com/sofa-framework/sofa/pull/4590:741,Availability,failure,failures,741,"I did not find how the macro `SOFA_DDG_TRACE` was enabled. The code inside did not compile. The intended behavior can be obtained using a debugger. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4590
https://github.com/sofa-framework/sofa/pull/4590:311,Security,Certificate,Certificate,311,"I did not find how the macro `SOFA_DDG_TRACE` was enabled. The code inside did not compile. The intended behavior can be obtained using a debugger. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4590
https://github.com/sofa-framework/sofa/pull/4590:422,Security,certificate,certificate-of-origin-dco,422,"I did not find how the macro `SOFA_DDG_TRACE` was enabled. The code inside did not compile. The intended behavior can be obtained using a debugger. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4590
https://github.com/sofa-framework/sofa/pull/4590:687,Testability,test,test,687,"I did not find how the macro `SOFA_DDG_TRACE` was enabled. The code inside did not compile. The intended behavior can be obtained using a debugger. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4590
https://github.com/sofa-framework/sofa/pull/4590:736,Testability,test,test,736,"I did not find how the macro `SOFA_DDG_TRACE` was enabled. The code inside did not compile. The intended behavior can be obtained using a debugger. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4590
https://github.com/sofa-framework/sofa/pull/4591:791,Availability,failure,failures,791,"We can forward extra args to the python interpreter with the option `--argv`. ; This PR allows to do: ; ```comand; runSofa myscene.py --argv arg1,arg2,arg3; ```; instead of ; ```comand; runSofa myscene.py --argv arg1 --argv arg2 --argv arg3; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4591
https://github.com/sofa-framework/sofa/pull/4591:840,Availability,failure,failures,840,"We can forward extra args to the python interpreter with the option `--argv`. ; This PR allows to do: ; ```comand; runSofa myscene.py --argv arg1,arg2,arg3; ```; instead of ; ```comand; runSofa myscene.py --argv arg1 --argv arg2 --argv arg3; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4591
https://github.com/sofa-framework/sofa/pull/4591:410,Security,Certificate,Certificate,410,"We can forward extra args to the python interpreter with the option `--argv`. ; This PR allows to do: ; ```comand; runSofa myscene.py --argv arg1,arg2,arg3; ```; instead of ; ```comand; runSofa myscene.py --argv arg1 --argv arg2 --argv arg3; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4591
https://github.com/sofa-framework/sofa/pull/4591:521,Security,certificate,certificate-of-origin-dco,521,"We can forward extra args to the python interpreter with the option `--argv`. ; This PR allows to do: ; ```comand; runSofa myscene.py --argv arg1,arg2,arg3; ```; instead of ; ```comand; runSofa myscene.py --argv arg1 --argv arg2 --argv arg3; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4591
https://github.com/sofa-framework/sofa/pull/4591:786,Testability,test,test,786,"We can forward extra args to the python interpreter with the option `--argv`. ; This PR allows to do: ; ```comand; runSofa myscene.py --argv arg1,arg2,arg3; ```; instead of ; ```comand; runSofa myscene.py --argv arg1 --argv arg2 --argv arg3; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4591
https://github.com/sofa-framework/sofa/pull/4591:835,Testability,test,test,835,"We can forward extra args to the python interpreter with the option `--argv`. ; This PR allows to do: ; ```comand; runSofa myscene.py --argv arg1,arg2,arg3; ```; instead of ; ```comand; runSofa myscene.py --argv arg1 --argv arg2 --argv arg3; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4591
https://github.com/sofa-framework/sofa/issues/4594:406,Deployability,Release,Release,406,"### Problem; With the same exact parameters, `FastTetrahedralCorotationalForceField` shows unstable behavior, compared to `TetrahedralCorotationalFEMForceField`. **Expected behavior**; I would expect both components to show the same behavior, or at least to be stable. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 23.10; - Version of SOFA: v23.12; - State: Release. `TetrahedralCorotationalFEMForceField`; <video src=""https://github.com/sofa-framework/sofa/assets/29635054/11a2b178-fefc-4f42-8db7-34e24b6aa732"" width=""200"" height=""auto"">. `FastTetrahedralCorotationalForceField`; <video src=""https://github.com/sofa-framework/sofa/assets/29635054/48ea4a38-ac0a-47a8-b562-06c28c9645d3"" width=""200"" height=""auto"">. Object code: https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/ligating_loop/sofa_objects/cavity.py#L197. Cheers,; Paul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4594
https://github.com/sofa-framework/sofa/pull/4596:677,Availability,failure,failures,677,"- #4533. did not remove everything of Sofa.Component.Compat and was even throwing a (harmless) warning at the cmake configure stage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4596
https://github.com/sofa-framework/sofa/pull/4596:726,Availability,failure,failures,726,"- #4533. did not remove everything of Sofa.Component.Compat and was even throwing a (harmless) warning at the cmake configure stage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4596
https://github.com/sofa-framework/sofa/pull/4596:116,Modifiability,config,configure,116,"- #4533. did not remove everything of Sofa.Component.Compat and was even throwing a (harmless) warning at the cmake configure stage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4596
https://github.com/sofa-framework/sofa/pull/4596:296,Security,Certificate,Certificate,296,"- #4533. did not remove everything of Sofa.Component.Compat and was even throwing a (harmless) warning at the cmake configure stage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4596
https://github.com/sofa-framework/sofa/pull/4596:407,Security,certificate,certificate-of-origin-dco,407,"- #4533. did not remove everything of Sofa.Component.Compat and was even throwing a (harmless) warning at the cmake configure stage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4596
https://github.com/sofa-framework/sofa/pull/4596:672,Testability,test,test,672,"- #4533. did not remove everything of Sofa.Component.Compat and was even throwing a (harmless) warning at the cmake configure stage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4596
https://github.com/sofa-framework/sofa/pull/4596:721,Testability,test,test,721,"- #4533. did not remove everything of Sofa.Component.Compat and was even throwing a (harmless) warning at the cmake configure stage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4596
https://github.com/sofa-framework/sofa/pull/4598:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4598
https://github.com/sofa-framework/sofa/pull/4598:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4598
https://github.com/sofa-framework/sofa/pull/4598:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4598
https://github.com/sofa-framework/sofa/pull/4598:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4598
https://github.com/sofa-framework/sofa/pull/4598:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4598
https://github.com/sofa-framework/sofa/pull/4598:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4598
https://github.com/sofa-framework/sofa/pull/4599:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4599
https://github.com/sofa-framework/sofa/pull/4599:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4599
https://github.com/sofa-framework/sofa/pull/4599:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4599
https://github.com/sofa-framework/sofa/pull/4599:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4599
https://github.com/sofa-framework/sofa/pull/4599:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4599
https://github.com/sofa-framework/sofa/pull/4599:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4599
https://github.com/sofa-framework/sofa/pull/4600:769,Availability,failure,failures,769,"A bit of cleaning (formatting, removal of commented code, use of our friend `std::enable_if_t` etc) for `sofa::type::MatSym`. I added the `operator*` on matrices (symmetric and non-symmetric). I also added simple unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4600
https://github.com/sofa-framework/sofa/pull/4600:818,Availability,failure,failures,818,"A bit of cleaning (formatting, removal of commented code, use of our friend `std::enable_if_t` etc) for `sofa::type::MatSym`. I added the `operator*` on matrices (symmetric and non-symmetric). I also added simple unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4600
https://github.com/sofa-framework/sofa/pull/4600:388,Security,Certificate,Certificate,388,"A bit of cleaning (formatting, removal of commented code, use of our friend `std::enable_if_t` etc) for `sofa::type::MatSym`. I added the `operator*` on matrices (symmetric and non-symmetric). I also added simple unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4600
https://github.com/sofa-framework/sofa/pull/4600:499,Security,certificate,certificate-of-origin-dco,499,"A bit of cleaning (formatting, removal of commented code, use of our friend `std::enable_if_t` etc) for `sofa::type::MatSym`. I added the `operator*` on matrices (symmetric and non-symmetric). I also added simple unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4600
https://github.com/sofa-framework/sofa/pull/4600:218,Testability,test,tests,218,"A bit of cleaning (formatting, removal of commented code, use of our friend `std::enable_if_t` etc) for `sofa::type::MatSym`. I added the `operator*` on matrices (symmetric and non-symmetric). I also added simple unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4600
https://github.com/sofa-framework/sofa/pull/4600:764,Testability,test,test,764,"A bit of cleaning (formatting, removal of commented code, use of our friend `std::enable_if_t` etc) for `sofa::type::MatSym`. I added the `operator*` on matrices (symmetric and non-symmetric). I also added simple unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4600
https://github.com/sofa-framework/sofa/pull/4600:813,Testability,test,test,813,"A bit of cleaning (formatting, removal of commented code, use of our friend `std::enable_if_t` etc) for `sofa::type::MatSym`. I added the `operator*` on matrices (symmetric and non-symmetric). I also added simple unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4600
https://github.com/sofa-framework/sofa/pull/4600:206,Usability,simpl,simple,206,"A bit of cleaning (formatting, removal of commented code, use of our friend `std::enable_if_t` etc) for `sofa::type::MatSym`. I added the `operator*` on matrices (symmetric and non-symmetric). I also added simple unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4600
https://github.com/sofa-framework/sofa/pull/4601:662,Availability,failure,failures,662,"Add ConstraintAttachButtonSetting to allow configuration of Lagrangian based mouse interaction directly in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4601
https://github.com/sofa-framework/sofa/pull/4601:711,Availability,failure,failures,711,"Add ConstraintAttachButtonSetting to allow configuration of Lagrangian based mouse interaction directly in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4601
https://github.com/sofa-framework/sofa/pull/4601:43,Deployability,configurat,configuration,43,"Add ConstraintAttachButtonSetting to allow configuration of Lagrangian based mouse interaction directly in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4601
https://github.com/sofa-framework/sofa/pull/4601:43,Modifiability,config,configuration,43,"Add ConstraintAttachButtonSetting to allow configuration of Lagrangian based mouse interaction directly in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4601
https://github.com/sofa-framework/sofa/pull/4601:281,Security,Certificate,Certificate,281,"Add ConstraintAttachButtonSetting to allow configuration of Lagrangian based mouse interaction directly in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4601
https://github.com/sofa-framework/sofa/pull/4601:392,Security,certificate,certificate-of-origin-dco,392,"Add ConstraintAttachButtonSetting to allow configuration of Lagrangian based mouse interaction directly in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4601
https://github.com/sofa-framework/sofa/pull/4601:657,Testability,test,test,657,"Add ConstraintAttachButtonSetting to allow configuration of Lagrangian based mouse interaction directly in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4601
https://github.com/sofa-framework/sofa/pull/4601:706,Testability,test,test,706,"Add ConstraintAttachButtonSetting to allow configuration of Lagrangian based mouse interaction directly in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4601
https://github.com/sofa-framework/sofa/pull/4603:1618,Availability,failure,failures,1618,"On top of the introduction of the stable Neo Hookean hyperelastic material (from Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.), I rewrote the St Venant-Kirchhoff and Neo Hookean materials to make it clearer to read. I also added unit tests, validating some material constitutive equations. I added an example having inverted tetrahedra:. ![invertedTets](https://github.com/sofa-framework/sofa/assets/10572752/3eea7447-dec2-4912-a4a4-f9d104f45630). Based on https://github.com/sofa-framework/sofa/pull/4600. $$; \alpha = 1 + \frac{\mu}{\lambda + \mu}; $$. ### Strain Energy Density Function. $$; \psi = \frac{1}{2} \left(\mu (I_C - 3) + (\lambda + \mu) (J - \alpha)^2 \right); $$. ### Second Piola-Kirchoff stress tensor. $$; S = \mu I_3 + \left((\lambda + \mu) J (J - \alpha)\right) C^{-1}; $$. ### Elasticity tensor. $$; \mathbb{C} = (\lambda + \mu); \left(-2 J (J - \alpha) C^{-1} \underline{\overline{\otimes}} C^{-1} + J (2 J-\alpha) C^{-1} \otimes C^{-1} \right); $$; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603
https://github.com/sofa-framework/sofa/pull/4603:1667,Availability,failure,failures,1667,"On top of the introduction of the stable Neo Hookean hyperelastic material (from Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.), I rewrote the St Venant-Kirchhoff and Neo Hookean materials to make it clearer to read. I also added unit tests, validating some material constitutive equations. I added an example having inverted tetrahedra:. ![invertedTets](https://github.com/sofa-framework/sofa/assets/10572752/3eea7447-dec2-4912-a4a4-f9d104f45630). Based on https://github.com/sofa-framework/sofa/pull/4600. $$; \alpha = 1 + \frac{\mu}{\lambda + \mu}; $$. ### Strain Energy Density Function. $$; \psi = \frac{1}{2} \left(\mu (I_C - 3) + (\lambda + \mu) (J - \alpha)^2 \right); $$. ### Second Piola-Kirchoff stress tensor. $$; S = \mu I_3 + \left((\lambda + \mu) J (J - \alpha)\right) C^{-1}; $$. ### Elasticity tensor. $$; \mathbb{C} = (\lambda + \mu); \left(-2 J (J - \alpha) C^{-1} \underline{\overline{\otimes}} C^{-1} + J (2 J-\alpha) C^{-1} \otimes C^{-1} \right); $$; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603
https://github.com/sofa-framework/sofa/pull/4603:667,Energy Efficiency,Energy,Energy,667,"On top of the introduction of the stable Neo Hookean hyperelastic material (from Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.), I rewrote the St Venant-Kirchhoff and Neo Hookean materials to make it clearer to read. I also added unit tests, validating some material constitutive equations. I added an example having inverted tetrahedra:. ![invertedTets](https://github.com/sofa-framework/sofa/assets/10572752/3eea7447-dec2-4912-a4a4-f9d104f45630). Based on https://github.com/sofa-framework/sofa/pull/4600. $$; \alpha = 1 + \frac{\mu}{\lambda + \mu}; $$. ### Strain Energy Density Function. $$; \psi = \frac{1}{2} \left(\mu (I_C - 3) + (\lambda + \mu) (J - \alpha)^2 \right); $$. ### Second Piola-Kirchoff stress tensor. $$; S = \mu I_3 + \left((\lambda + \mu) J (J - \alpha)\right) C^{-1}; $$. ### Elasticity tensor. $$; \mathbb{C} = (\lambda + \mu); \left(-2 J (J - \alpha) C^{-1} \underline{\overline{\otimes}} C^{-1} + J (2 J-\alpha) C^{-1} \otimes C^{-1} \right); $$; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603
https://github.com/sofa-framework/sofa/pull/4603:342,Security,validat,validating,342,"On top of the introduction of the stable Neo Hookean hyperelastic material (from Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.), I rewrote the St Venant-Kirchhoff and Neo Hookean materials to make it clearer to read. I also added unit tests, validating some material constitutive equations. I added an example having inverted tetrahedra:. ![invertedTets](https://github.com/sofa-framework/sofa/assets/10572752/3eea7447-dec2-4912-a4a4-f9d104f45630). Based on https://github.com/sofa-framework/sofa/pull/4600. $$; \alpha = 1 + \frac{\mu}{\lambda + \mu}; $$. ### Strain Energy Density Function. $$; \psi = \frac{1}{2} \left(\mu (I_C - 3) + (\lambda + \mu) (J - \alpha)^2 \right); $$. ### Second Piola-Kirchoff stress tensor. $$; S = \mu I_3 + \left((\lambda + \mu) J (J - \alpha)\right) C^{-1}; $$. ### Elasticity tensor. $$; \mathbb{C} = (\lambda + \mu); \left(-2 J (J - \alpha) C^{-1} \underline{\overline{\otimes}} C^{-1} + J (2 J-\alpha) C^{-1} \otimes C^{-1} \right); $$; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603
https://github.com/sofa-framework/sofa/pull/4603:1237,Security,Certificate,Certificate,1237,"On top of the introduction of the stable Neo Hookean hyperelastic material (from Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.), I rewrote the St Venant-Kirchhoff and Neo Hookean materials to make it clearer to read. I also added unit tests, validating some material constitutive equations. I added an example having inverted tetrahedra:. ![invertedTets](https://github.com/sofa-framework/sofa/assets/10572752/3eea7447-dec2-4912-a4a4-f9d104f45630). Based on https://github.com/sofa-framework/sofa/pull/4600. $$; \alpha = 1 + \frac{\mu}{\lambda + \mu}; $$. ### Strain Energy Density Function. $$; \psi = \frac{1}{2} \left(\mu (I_C - 3) + (\lambda + \mu) (J - \alpha)^2 \right); $$. ### Second Piola-Kirchoff stress tensor. $$; S = \mu I_3 + \left((\lambda + \mu) J (J - \alpha)\right) C^{-1}; $$. ### Elasticity tensor. $$; \mathbb{C} = (\lambda + \mu); \left(-2 J (J - \alpha) C^{-1} \underline{\overline{\otimes}} C^{-1} + J (2 J-\alpha) C^{-1} \otimes C^{-1} \right); $$; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603
https://github.com/sofa-framework/sofa/pull/4603:1348,Security,certificate,certificate-of-origin-dco,1348,"On top of the introduction of the stable Neo Hookean hyperelastic material (from Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.), I rewrote the St Venant-Kirchhoff and Neo Hookean materials to make it clearer to read. I also added unit tests, validating some material constitutive equations. I added an example having inverted tetrahedra:. ![invertedTets](https://github.com/sofa-framework/sofa/assets/10572752/3eea7447-dec2-4912-a4a4-f9d104f45630). Based on https://github.com/sofa-framework/sofa/pull/4600. $$; \alpha = 1 + \frac{\mu}{\lambda + \mu}; $$. ### Strain Energy Density Function. $$; \psi = \frac{1}{2} \left(\mu (I_C - 3) + (\lambda + \mu) (J - \alpha)^2 \right); $$. ### Second Piola-Kirchoff stress tensor. $$; S = \mu I_3 + \left((\lambda + \mu) J (J - \alpha)\right) C^{-1}; $$. ### Elasticity tensor. $$; \mathbb{C} = (\lambda + \mu); \left(-2 J (J - \alpha) C^{-1} \underline{\overline{\otimes}} C^{-1} + J (2 J-\alpha) C^{-1} \otimes C^{-1} \right); $$; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603
https://github.com/sofa-framework/sofa/pull/4603:335,Testability,test,tests,335,"On top of the introduction of the stable Neo Hookean hyperelastic material (from Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.), I rewrote the St Venant-Kirchhoff and Neo Hookean materials to make it clearer to read. I also added unit tests, validating some material constitutive equations. I added an example having inverted tetrahedra:. ![invertedTets](https://github.com/sofa-framework/sofa/assets/10572752/3eea7447-dec2-4912-a4a4-f9d104f45630). Based on https://github.com/sofa-framework/sofa/pull/4600. $$; \alpha = 1 + \frac{\mu}{\lambda + \mu}; $$. ### Strain Energy Density Function. $$; \psi = \frac{1}{2} \left(\mu (I_C - 3) + (\lambda + \mu) (J - \alpha)^2 \right); $$. ### Second Piola-Kirchoff stress tensor. $$; S = \mu I_3 + \left((\lambda + \mu) J (J - \alpha)\right) C^{-1}; $$. ### Elasticity tensor. $$; \mathbb{C} = (\lambda + \mu); \left(-2 J (J - \alpha) C^{-1} \underline{\overline{\otimes}} C^{-1} + J (2 J-\alpha) C^{-1} \otimes C^{-1} \right); $$; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603
https://github.com/sofa-framework/sofa/pull/4603:1613,Testability,test,test,1613,"On top of the introduction of the stable Neo Hookean hyperelastic material (from Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.), I rewrote the St Venant-Kirchhoff and Neo Hookean materials to make it clearer to read. I also added unit tests, validating some material constitutive equations. I added an example having inverted tetrahedra:. ![invertedTets](https://github.com/sofa-framework/sofa/assets/10572752/3eea7447-dec2-4912-a4a4-f9d104f45630). Based on https://github.com/sofa-framework/sofa/pull/4600. $$; \alpha = 1 + \frac{\mu}{\lambda + \mu}; $$. ### Strain Energy Density Function. $$; \psi = \frac{1}{2} \left(\mu (I_C - 3) + (\lambda + \mu) (J - \alpha)^2 \right); $$. ### Second Piola-Kirchoff stress tensor. $$; S = \mu I_3 + \left((\lambda + \mu) J (J - \alpha)\right) C^{-1}; $$. ### Elasticity tensor. $$; \mathbb{C} = (\lambda + \mu); \left(-2 J (J - \alpha) C^{-1} \underline{\overline{\otimes}} C^{-1} + J (2 J-\alpha) C^{-1} \otimes C^{-1} \right); $$; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603
https://github.com/sofa-framework/sofa/pull/4603:1662,Testability,test,test,1662,"On top of the introduction of the stable Neo Hookean hyperelastic material (from Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.), I rewrote the St Venant-Kirchhoff and Neo Hookean materials to make it clearer to read. I also added unit tests, validating some material constitutive equations. I added an example having inverted tetrahedra:. ![invertedTets](https://github.com/sofa-framework/sofa/assets/10572752/3eea7447-dec2-4912-a4a4-f9d104f45630). Based on https://github.com/sofa-framework/sofa/pull/4600. $$; \alpha = 1 + \frac{\mu}{\lambda + \mu}; $$. ### Strain Energy Density Function. $$; \psi = \frac{1}{2} \left(\mu (I_C - 3) + (\lambda + \mu) (J - \alpha)^2 \right); $$. ### Second Piola-Kirchoff stress tensor. $$; S = \mu I_3 + \left((\lambda + \mu) J (J - \alpha)\right) C^{-1}; $$. ### Elasticity tensor. $$; \mathbb{C} = (\lambda + \mu); \left(-2 J (J - \alpha) C^{-1} \underline{\overline{\otimes}} C^{-1} + J (2 J-\alpha) C^{-1} \otimes C^{-1} \right); $$; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603
https://github.com/sofa-framework/sofa/pull/4603:300,Usability,clear,clearer,300,"On top of the introduction of the stable Neo Hookean hyperelastic material (from Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.), I rewrote the St Venant-Kirchhoff and Neo Hookean materials to make it clearer to read. I also added unit tests, validating some material constitutive equations. I added an example having inverted tetrahedra:. ![invertedTets](https://github.com/sofa-framework/sofa/assets/10572752/3eea7447-dec2-4912-a4a4-f9d104f45630). Based on https://github.com/sofa-framework/sofa/pull/4600. $$; \alpha = 1 + \frac{\mu}{\lambda + \mu}; $$. ### Strain Energy Density Function. $$; \psi = \frac{1}{2} \left(\mu (I_C - 3) + (\lambda + \mu) (J - \alpha)^2 \right); $$. ### Second Piola-Kirchoff stress tensor. $$; S = \mu I_3 + \left((\lambda + \mu) J (J - \alpha)\right) C^{-1}; $$. ### Elasticity tensor. $$; \mathbb{C} = (\lambda + \mu); \left(-2 J (J - \alpha) C^{-1} \underline{\overline{\otimes}} C^{-1} + J (2 J-\alpha) C^{-1} \otimes C^{-1} \right); $$; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603
https://github.com/sofa-framework/sofa/issues/4605:86,Testability,test,tests,86,"Further to #4603 ; It appears that several hyperelastic materials are not passing the tests:; - Ogden + Mooney-Rivlin for PK2; - Costa for the Hessian-ElasticityTensor. This has to be investigated.; Code initially written by Epione team, maybe contact Hervé.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4605
https://github.com/sofa-framework/sofa/pull/4607:642,Availability,failure,failures,642,"Because will give more details if the appropriate macro is used for comparison when a test fails. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4607
https://github.com/sofa-framework/sofa/pull/4607:691,Availability,failure,failures,691,"Because will give more details if the appropriate macro is used for comparison when a test fails. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4607
https://github.com/sofa-framework/sofa/pull/4607:261,Security,Certificate,Certificate,261,"Because will give more details if the appropriate macro is used for comparison when a test fails. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4607
https://github.com/sofa-framework/sofa/pull/4607:372,Security,certificate,certificate-of-origin-dco,372,"Because will give more details if the appropriate macro is used for comparison when a test fails. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4607
https://github.com/sofa-framework/sofa/pull/4607:86,Testability,test,test,86,"Because will give more details if the appropriate macro is used for comparison when a test fails. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4607
https://github.com/sofa-framework/sofa/pull/4607:637,Testability,test,test,637,"Because will give more details if the appropriate macro is used for comparison when a test fails. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4607
https://github.com/sofa-framework/sofa/pull/4607:686,Testability,test,test,686,"Because will give more details if the appropriate macro is used for comparison when a test fails. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4607
https://github.com/sofa-framework/sofa/pull/4608:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4608
https://github.com/sofa-framework/sofa/pull/4608:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4608
https://github.com/sofa-framework/sofa/pull/4608:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4608
https://github.com/sofa-framework/sofa/pull/4608:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4608
https://github.com/sofa-framework/sofa/pull/4608:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4608
https://github.com/sofa-framework/sofa/pull/4608:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4608
https://github.com/sofa-framework/sofa/pull/4611:1005,Availability,failure,failures,1005,"The conda package of qglviewer on windows produces libraries prefixed QGLViewer2 instead of QGLViewer. This seems limited to the conda package on windows (does not appear on other OS). Also, the only other libqglviewer package I know for windows, which is vcpkg, is not affected neither (library is properly named QGLViewer). ; I think this should be corrected on conda package side, but meanwhile it ever happens one day, this would solve the problem for now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4611
https://github.com/sofa-framework/sofa/pull/4611:1054,Availability,failure,failures,1054,"The conda package of qglviewer on windows produces libraries prefixed QGLViewer2 instead of QGLViewer. This seems limited to the conda package on windows (does not appear on other OS). Also, the only other libqglviewer package I know for windows, which is vcpkg, is not affected neither (library is properly named QGLViewer). ; I think this should be corrected on conda package side, but meanwhile it ever happens one day, this would solve the problem for now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4611
https://github.com/sofa-framework/sofa/pull/4611:624,Security,Certificate,Certificate,624,"The conda package of qglviewer on windows produces libraries prefixed QGLViewer2 instead of QGLViewer. This seems limited to the conda package on windows (does not appear on other OS). Also, the only other libqglviewer package I know for windows, which is vcpkg, is not affected neither (library is properly named QGLViewer). ; I think this should be corrected on conda package side, but meanwhile it ever happens one day, this would solve the problem for now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4611
https://github.com/sofa-framework/sofa/pull/4611:735,Security,certificate,certificate-of-origin-dco,735,"The conda package of qglviewer on windows produces libraries prefixed QGLViewer2 instead of QGLViewer. This seems limited to the conda package on windows (does not appear on other OS). Also, the only other libqglviewer package I know for windows, which is vcpkg, is not affected neither (library is properly named QGLViewer). ; I think this should be corrected on conda package side, but meanwhile it ever happens one day, this would solve the problem for now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4611
https://github.com/sofa-framework/sofa/pull/4611:1000,Testability,test,test,1000,"The conda package of qglviewer on windows produces libraries prefixed QGLViewer2 instead of QGLViewer. This seems limited to the conda package on windows (does not appear on other OS). Also, the only other libqglviewer package I know for windows, which is vcpkg, is not affected neither (library is properly named QGLViewer). ; I think this should be corrected on conda package side, but meanwhile it ever happens one day, this would solve the problem for now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4611
https://github.com/sofa-framework/sofa/pull/4611:1049,Testability,test,test,1049,"The conda package of qglviewer on windows produces libraries prefixed QGLViewer2 instead of QGLViewer. This seems limited to the conda package on windows (does not appear on other OS). Also, the only other libqglviewer package I know for windows, which is vcpkg, is not affected neither (library is properly named QGLViewer). ; I think this should be corrected on conda package side, but meanwhile it ever happens one day, this would solve the problem for now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4611
https://github.com/sofa-framework/sofa/pull/4619:597,Availability,failure,failures,597,"Fix for OOT compilation linking to Multithreading. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4619
https://github.com/sofa-framework/sofa/pull/4619:646,Availability,failure,failures,646,"Fix for OOT compilation linking to Multithreading. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4619
https://github.com/sofa-framework/sofa/pull/4619:216,Security,Certificate,Certificate,216,"Fix for OOT compilation linking to Multithreading. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4619
https://github.com/sofa-framework/sofa/pull/4619:327,Security,certificate,certificate-of-origin-dco,327,"Fix for OOT compilation linking to Multithreading. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4619
https://github.com/sofa-framework/sofa/pull/4619:592,Testability,test,test,592,"Fix for OOT compilation linking to Multithreading. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4619
https://github.com/sofa-framework/sofa/pull/4619:641,Testability,test,test,641,"Fix for OOT compilation linking to Multithreading. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4619
https://github.com/sofa-framework/sofa/pull/4620:631,Availability,failure,failures,631,"The function is no longer used. I think it was never used at all in the master branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4620
https://github.com/sofa-framework/sofa/pull/4620:680,Availability,failure,failures,680,"The function is no longer used. I think it was never used at all in the master branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4620
https://github.com/sofa-framework/sofa/pull/4620:250,Security,Certificate,Certificate,250,"The function is no longer used. I think it was never used at all in the master branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4620
https://github.com/sofa-framework/sofa/pull/4620:361,Security,certificate,certificate-of-origin-dco,361,"The function is no longer used. I think it was never used at all in the master branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4620
https://github.com/sofa-framework/sofa/pull/4620:626,Testability,test,test,626,"The function is no longer used. I think it was never used at all in the master branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4620
https://github.com/sofa-framework/sofa/pull/4620:675,Testability,test,test,675,"The function is no longer used. I think it was never used at all in the master branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4620
https://github.com/sofa-framework/sofa/issues/4621:111,Modifiability,extend,extended,111,"Hi Hugo,. I'm currently trying to control the movement of a 3D model in the Sofa Framework through Unity. I've extended the SofaPhysicsAPI and implemented movement using the applyTranslation method from SofaOutputMesh. So far, I've managed to successfully move the 3D model within Unity. However, when two objects collide, there's no physical response. Could you offer any advice or suggestions for this task?. Jack Yu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4621
https://github.com/sofa-framework/sofa/issues/4622:67,Availability,error,error,67,"### Problem. **Description**; When I ran Cmake to build sofa, this error occurred.; <img width=""823"" alt=""image"" src=""https://github.com/sofa-framework/sofa/assets/140193594/80e7f3d2-8061-4dd3-a4ae-4d968ceffad9"">. **Steps to reproduce**; I'm installing SOFA according the link below.; https://github.com/ScheiklP/sofa_env/blob/main/docs/source/setting_up_sofa.rst. **Expected behavior**; I expected my build to be successful. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 22.04.2 LTS; - Version of SOFA: v23.12; - State: Build directory. **Command called**. ```txt. cmake --build sofa/build -j --target install. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622
https://github.com/sofa-framework/sofa/issues/4622:2590,Availability,Error,Error,2590,"n, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; ...; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/SparseQRTraits.h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/TypedMatrixLinearSystem[BTDMatrix].h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/lib/libmetis.so; CMake Error at _deps/metis-build/cmake_install.cmake:93 (file):; file cannot create directory: /cmake/metis. Maybe need administrative; privileges.; Call Stack (most recent call first):; Sofa/Component/LinearSolver/Direct/cmake_install.cmake:246 (include); Sofa/Component/LinearSolver/cmake_install.cmake:127 (include); Sofa/Component/cmake_install.cmake:133 (include); Sofa/cmake_install.cmake:48 (include); cmake_install.cmake:150 (include). gmake: *** [Makefile:120: install] Error 1. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14815053/CMakeCache.txt). ---------------------------------------------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622
https://github.com/sofa-framework/sofa/issues/4622:3063,Availability,Error,Error,3063,"n, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; ...; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/SparseQRTraits.h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/TypedMatrixLinearSystem[BTDMatrix].h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/lib/libmetis.so; CMake Error at _deps/metis-build/cmake_install.cmake:93 (file):; file cannot create directory: /cmake/metis. Maybe need administrative; privileges.; Call Stack (most recent call first):; Sofa/Component/LinearSolver/Direct/cmake_install.cmake:246 (include); Sofa/Component/LinearSolver/cmake_install.cmake:127 (include); Sofa/Component/cmake_install.cmake:133 (include); Sofa/cmake_install.cmake:48 (include); cmake_install.cmake:150 (include). gmake: *** [Makefile:120: install] Error 1. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14815053/CMakeCache.txt). ---------------------------------------------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622
https://github.com/sofa-framework/sofa/issues/4622:242,Deployability,install,installing,242,"### Problem. **Description**; When I ran Cmake to build sofa, this error occurred.; <img width=""823"" alt=""image"" src=""https://github.com/sofa-framework/sofa/assets/140193594/80e7f3d2-8061-4dd3-a4ae-4d968ceffad9"">. **Steps to reproduce**; I'm installing SOFA according the link below.; https://github.com/ScheiklP/sofa_env/blob/main/docs/source/setting_up_sofa.rst. **Expected behavior**; I expected my build to be successful. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 22.04.2 LTS; - Version of SOFA: v23.12; - State: Build directory. **Command called**. ```txt. cmake --build sofa/build -j --target install. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622
https://github.com/sofa-framework/sofa/issues/4622:651,Deployability,install,install,651,"### Problem. **Description**; When I ran Cmake to build sofa, this error occurred.; <img width=""823"" alt=""image"" src=""https://github.com/sofa-framework/sofa/assets/140193594/80e7f3d2-8061-4dd3-a4ae-4d968ceffad9"">. **Steps to reproduce**; I'm installing SOFA according the link below.; https://github.com/ScheiklP/sofa_env/blob/main/docs/source/setting_up_sofa.rst. **Expected behavior**; I expected my build to be successful. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 22.04.2 LTS; - Version of SOFA: v23.12; - State: Build directory. **Command called**. ```txt. cmake --build sofa/build -j --target install. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622
https://github.com/sofa-framework/sofa/issues/4622:1606,Deployability,install,install,1606,"-----. ### Environment. **Context**. - System: Ubuntu 22.04.2 LTS; - Version of SOFA: v23.12; - State: Build directory. **Command called**. ```txt. cmake --build sofa/build -j --target install. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; ...; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/SparseQRTraits.h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/Type",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622
https://github.com/sofa-framework/sofa/issues/4622:2213,Deployability,install,install,2213,"``txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; ...; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/SparseQRTraits.h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/TypedMatrixLinearSystem[BTDMatrix].h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/lib/libmetis.so; CMake Error at _deps/metis-build/cmake_install.cmake:93 (file):; file cannot create directory: /cmake/metis. Maybe need administrative; privileges.; Call Stack (most recent call first):; Sofa/Component/LinearSolver/Direct/cmake_install.cmake:246 (include); Sofa/Component/LinearSolver/cmake_install.cmake:127 (include); Sofa/Component/cmake_install.cmake:133 (include); Sofa/cmake_install.cmake:48 (include); cmake_install.cmake:150 (include). gmake: *** [Makefile:120: install] Error 1. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14815053/CMak",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622
https://github.com/sofa-framework/sofa/issues/4622:2376,Deployability,install,install,2376,"n, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; ...; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/SparseQRTraits.h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/TypedMatrixLinearSystem[BTDMatrix].h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/lib/libmetis.so; CMake Error at _deps/metis-build/cmake_install.cmake:93 (file):; file cannot create directory: /cmake/metis. Maybe need administrative; privileges.; Call Stack (most recent call first):; Sofa/Component/LinearSolver/Direct/cmake_install.cmake:246 (include); Sofa/Component/LinearSolver/cmake_install.cmake:127 (include); Sofa/Component/cmake_install.cmake:133 (include); Sofa/cmake_install.cmake:48 (include); cmake_install.cmake:150 (include). gmake: *** [Makefile:120: install] Error 1. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14815053/CMakeCache.txt). ---------------------------------------------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622
https://github.com/sofa-framework/sofa/issues/4622:2559,Deployability,install,install,2559,"n, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; ...; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/SparseQRTraits.h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/TypedMatrixLinearSystem[BTDMatrix].h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/lib/libmetis.so; CMake Error at _deps/metis-build/cmake_install.cmake:93 (file):; file cannot create directory: /cmake/metis. Maybe need administrative; privileges.; Call Stack (most recent call first):; Sofa/Component/LinearSolver/Direct/cmake_install.cmake:246 (include); Sofa/Component/LinearSolver/cmake_install.cmake:127 (include); Sofa/Component/cmake_install.cmake:133 (include); Sofa/cmake_install.cmake:48 (include); cmake_install.cmake:150 (include). gmake: *** [Makefile:120: install] Error 1. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14815053/CMakeCache.txt). ---------------------------------------------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622
https://github.com/sofa-framework/sofa/issues/4622:3054,Deployability,install,install,3054,"n, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; ...; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/SparseQRTraits.h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/TypedMatrixLinearSystem[BTDMatrix].h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/lib/libmetis.so; CMake Error at _deps/metis-build/cmake_install.cmake:93 (file):; file cannot create directory: /cmake/metis. Maybe need administrative; privileges.; Call Stack (most recent call first):; Sofa/Component/LinearSolver/Direct/cmake_install.cmake:246 (include); Sofa/Component/LinearSolver/cmake_install.cmake:127 (include); Sofa/Component/cmake_install.cmake:133 (include); Sofa/cmake_install.cmake:48 (include); cmake_install.cmake:150 (include). gmake: *** [Makefile:120: install] Error 1. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14815053/CMakeCache.txt). ---------------------------------------------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622
https://github.com/sofa-framework/sofa/issues/4622:2118,Testability,Log,Logs,2118,"s.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; ...; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/SparseQRTraits.h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/TypedMatrixLinearSystem[BTDMatrix].h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/lib/libmetis.so; CMake Error at _deps/metis-build/cmake_install.cmake:93 (file):; file cannot create directory: /cmake/metis. Maybe need administrative; privileges.; Call Stack (most recent call first):; Sofa/Component/LinearSolver/Direct/cmake_install.cmake:246 (include); Sofa/Component/LinearSolver/cmake_install.cmake:127 (include); Sofa/Component/cmake_install.cmake:133 (include); Sofa/cmake_install.cmake:48 (include); cmake_install.cmake:150 (include). gmake: *** [Makefile:120: install] Error 1. ```. **Content of build_dir/CMakeCache.txt**. ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622
https://github.com/sofa-framework/sofa/pull/4625:1637,Availability,failure,failures,1637,"In a mapped state, force fields and masses contribute to the global system matrix via a projection provided by mappings. The term $m M+ k K$ is assembled locally (association with the mapped state), and then the product $J^T (m M+ k K) J$.; However, in most cases, $M$ is constant. In addition, in some cases $J$ is also constant. If we fulfill the conditions so that both $M$ and $J$ are constants, we can extract the product $J^T M J$ and pre-compute it once at the beginning of the simulation. This is what this PR does. In addition to the pre-computation, there is a cache invalidation mechanism on masses to track when $M$ is subject to changes. For example, changes in the mass parameter by the user. This pre-computation is the most efficient when there is a difference of sparsity between $M$ and $K$. And this is the case when hyper-reduction is involved. $K$ is super sparse (only a few elements are considered), while $M$ gets contributions from all the nodes of the detailed mesh. On a diamond robot with 70,334 tetrahedras and 15,553 vertices, I went from 79.8469 FPS to 177 FPS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625
https://github.com/sofa-framework/sofa/pull/4625:1686,Availability,failure,failures,1686,"In a mapped state, force fields and masses contribute to the global system matrix via a projection provided by mappings. The term $m M+ k K$ is assembled locally (association with the mapped state), and then the product $J^T (m M+ k K) J$.; However, in most cases, $M$ is constant. In addition, in some cases $J$ is also constant. If we fulfill the conditions so that both $M$ and $J$ are constants, we can extract the product $J^T M J$ and pre-compute it once at the beginning of the simulation. This is what this PR does. In addition to the pre-computation, there is a cache invalidation mechanism on masses to track when $M$ is subject to changes. For example, changes in the mass parameter by the user. This pre-computation is the most efficient when there is a difference of sparsity between $M$ and $K$. And this is the case when hyper-reduction is involved. $K$ is super sparse (only a few elements are considered), while $M$ gets contributions from all the nodes of the detailed mesh. On a diamond robot with 70,334 tetrahedras and 15,553 vertices, I went from 79.8469 FPS to 177 FPS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625
https://github.com/sofa-framework/sofa/pull/4625:740,Energy Efficiency,efficient,efficient,740,"In a mapped state, force fields and masses contribute to the global system matrix via a projection provided by mappings. The term $m M+ k K$ is assembled locally (association with the mapped state), and then the product $J^T (m M+ k K) J$.; However, in most cases, $M$ is constant. In addition, in some cases $J$ is also constant. If we fulfill the conditions so that both $M$ and $J$ are constants, we can extract the product $J^T M J$ and pre-compute it once at the beginning of the simulation. This is what this PR does. In addition to the pre-computation, there is a cache invalidation mechanism on masses to track when $M$ is subject to changes. For example, changes in the mass parameter by the user. This pre-computation is the most efficient when there is a difference of sparsity between $M$ and $K$. And this is the case when hyper-reduction is involved. $K$ is super sparse (only a few elements are considered), while $M$ gets contributions from all the nodes of the detailed mesh. On a diamond robot with 70,334 tetrahedras and 15,553 vertices, I went from 79.8469 FPS to 177 FPS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625
https://github.com/sofa-framework/sofa/pull/4625:571,Performance,cache,cache,571,"In a mapped state, force fields and masses contribute to the global system matrix via a projection provided by mappings. The term $m M+ k K$ is assembled locally (association with the mapped state), and then the product $J^T (m M+ k K) J$.; However, in most cases, $M$ is constant. In addition, in some cases $J$ is also constant. If we fulfill the conditions so that both $M$ and $J$ are constants, we can extract the product $J^T M J$ and pre-compute it once at the beginning of the simulation. This is what this PR does. In addition to the pre-computation, there is a cache invalidation mechanism on masses to track when $M$ is subject to changes. For example, changes in the mass parameter by the user. This pre-computation is the most efficient when there is a difference of sparsity between $M$ and $K$. And this is the case when hyper-reduction is involved. $K$ is super sparse (only a few elements are considered), while $M$ gets contributions from all the nodes of the detailed mesh. On a diamond robot with 70,334 tetrahedras and 15,553 vertices, I went from 79.8469 FPS to 177 FPS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625
https://github.com/sofa-framework/sofa/pull/4625:1256,Security,Certificate,Certificate,1256,"In a mapped state, force fields and masses contribute to the global system matrix via a projection provided by mappings. The term $m M+ k K$ is assembled locally (association with the mapped state), and then the product $J^T (m M+ k K) J$.; However, in most cases, $M$ is constant. In addition, in some cases $J$ is also constant. If we fulfill the conditions so that both $M$ and $J$ are constants, we can extract the product $J^T M J$ and pre-compute it once at the beginning of the simulation. This is what this PR does. In addition to the pre-computation, there is a cache invalidation mechanism on masses to track when $M$ is subject to changes. For example, changes in the mass parameter by the user. This pre-computation is the most efficient when there is a difference of sparsity between $M$ and $K$. And this is the case when hyper-reduction is involved. $K$ is super sparse (only a few elements are considered), while $M$ gets contributions from all the nodes of the detailed mesh. On a diamond robot with 70,334 tetrahedras and 15,553 vertices, I went from 79.8469 FPS to 177 FPS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625
https://github.com/sofa-framework/sofa/pull/4625:1367,Security,certificate,certificate-of-origin-dco,1367,"In a mapped state, force fields and masses contribute to the global system matrix via a projection provided by mappings. The term $m M+ k K$ is assembled locally (association with the mapped state), and then the product $J^T (m M+ k K) J$.; However, in most cases, $M$ is constant. In addition, in some cases $J$ is also constant. If we fulfill the conditions so that both $M$ and $J$ are constants, we can extract the product $J^T M J$ and pre-compute it once at the beginning of the simulation. This is what this PR does. In addition to the pre-computation, there is a cache invalidation mechanism on masses to track when $M$ is subject to changes. For example, changes in the mass parameter by the user. This pre-computation is the most efficient when there is a difference of sparsity between $M$ and $K$. And this is the case when hyper-reduction is involved. $K$ is super sparse (only a few elements are considered), while $M$ gets contributions from all the nodes of the detailed mesh. On a diamond robot with 70,334 tetrahedras and 15,553 vertices, I went from 79.8469 FPS to 177 FPS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625
https://github.com/sofa-framework/sofa/pull/4625:1632,Testability,test,test,1632,"In a mapped state, force fields and masses contribute to the global system matrix via a projection provided by mappings. The term $m M+ k K$ is assembled locally (association with the mapped state), and then the product $J^T (m M+ k K) J$.; However, in most cases, $M$ is constant. In addition, in some cases $J$ is also constant. If we fulfill the conditions so that both $M$ and $J$ are constants, we can extract the product $J^T M J$ and pre-compute it once at the beginning of the simulation. This is what this PR does. In addition to the pre-computation, there is a cache invalidation mechanism on masses to track when $M$ is subject to changes. For example, changes in the mass parameter by the user. This pre-computation is the most efficient when there is a difference of sparsity between $M$ and $K$. And this is the case when hyper-reduction is involved. $K$ is super sparse (only a few elements are considered), while $M$ gets contributions from all the nodes of the detailed mesh. On a diamond robot with 70,334 tetrahedras and 15,553 vertices, I went from 79.8469 FPS to 177 FPS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625
https://github.com/sofa-framework/sofa/pull/4625:1681,Testability,test,test,1681,"In a mapped state, force fields and masses contribute to the global system matrix via a projection provided by mappings. The term $m M+ k K$ is assembled locally (association with the mapped state), and then the product $J^T (m M+ k K) J$.; However, in most cases, $M$ is constant. In addition, in some cases $J$ is also constant. If we fulfill the conditions so that both $M$ and $J$ are constants, we can extract the product $J^T M J$ and pre-compute it once at the beginning of the simulation. This is what this PR does. In addition to the pre-computation, there is a cache invalidation mechanism on masses to track when $M$ is subject to changes. For example, changes in the mass parameter by the user. This pre-computation is the most efficient when there is a difference of sparsity between $M$ and $K$. And this is the case when hyper-reduction is involved. $K$ is super sparse (only a few elements are considered), while $M$ gets contributions from all the nodes of the detailed mesh. On a diamond robot with 70,334 tetrahedras and 15,553 vertices, I went from 79.8469 FPS to 177 FPS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625
https://github.com/sofa-framework/sofa/pull/4626:597,Availability,failure,failures,597,"This has not been tested but should not harm anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4626
https://github.com/sofa-framework/sofa/pull/4626:646,Availability,failure,failures,646,"This has not been tested but should not harm anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4626
https://github.com/sofa-framework/sofa/pull/4626:216,Security,Certificate,Certificate,216,"This has not been tested but should not harm anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4626
https://github.com/sofa-framework/sofa/pull/4626:327,Security,certificate,certificate-of-origin-dco,327,"This has not been tested but should not harm anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4626
https://github.com/sofa-framework/sofa/pull/4626:18,Testability,test,tested,18,"This has not been tested but should not harm anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4626
https://github.com/sofa-framework/sofa/pull/4626:592,Testability,test,test,592,"This has not been tested but should not harm anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4626
https://github.com/sofa-framework/sofa/pull/4626:641,Testability,test,test,641,"This has not been tested but should not harm anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4626
https://github.com/sofa-framework/sofa/pull/4627:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4627
https://github.com/sofa-framework/sofa/pull/4627:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4627
https://github.com/sofa-framework/sofa/pull/4627:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4627
https://github.com/sofa-framework/sofa/pull/4627:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4627
https://github.com/sofa-framework/sofa/pull/4627:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4627
https://github.com/sofa-framework/sofa/pull/4627:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4627
https://github.com/sofa-framework/sofa/pull/4628:760,Availability,failure,failures,760,"It basically removes the use of `MultiMatrix` which hides the use of a `LinearSolver`. Implicitly, the first linear solver found was used. Now, the `LinearSolver` can be defined directly in the ODE solver as a Link. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4628
https://github.com/sofa-framework/sofa/pull/4628:809,Availability,failure,failures,809,"It basically removes the use of `MultiMatrix` which hides the use of a `LinearSolver`. Implicitly, the first linear solver found was used. Now, the `LinearSolver` can be defined directly in the ODE solver as a Link. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4628
https://github.com/sofa-framework/sofa/pull/4628:379,Security,Certificate,Certificate,379,"It basically removes the use of `MultiMatrix` which hides the use of a `LinearSolver`. Implicitly, the first linear solver found was used. Now, the `LinearSolver` can be defined directly in the ODE solver as a Link. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4628
https://github.com/sofa-framework/sofa/pull/4628:490,Security,certificate,certificate-of-origin-dco,490,"It basically removes the use of `MultiMatrix` which hides the use of a `LinearSolver`. Implicitly, the first linear solver found was used. Now, the `LinearSolver` can be defined directly in the ODE solver as a Link. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4628
https://github.com/sofa-framework/sofa/pull/4628:755,Testability,test,test,755,"It basically removes the use of `MultiMatrix` which hides the use of a `LinearSolver`. Implicitly, the first linear solver found was used. Now, the `LinearSolver` can be defined directly in the ODE solver as a Link. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4628
https://github.com/sofa-framework/sofa/pull/4628:804,Testability,test,test,804,"It basically removes the use of `MultiMatrix` which hides the use of a `LinearSolver`. Implicitly, the first linear solver found was used. Now, the `LinearSolver` can be defined directly in the ODE solver as a Link. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4628
https://github.com/sofa-framework/sofa/pull/4630:145,Availability,avail,available,145,"The fix from Eigen https://gitlab.com/libeigen/eigen/-/commit/80142362ac35ca77bfc5ccf7ba49c9f034b57abc, making `SparseMatrixProduct` compile, is available starting 3.3.5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4630
https://github.com/sofa-framework/sofa/pull/4630:715,Availability,failure,failures,715,"The fix from Eigen https://gitlab.com/libeigen/eigen/-/commit/80142362ac35ca77bfc5ccf7ba49c9f034b57abc, making `SparseMatrixProduct` compile, is available starting 3.3.5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4630
https://github.com/sofa-framework/sofa/pull/4630:764,Availability,failure,failures,764,"The fix from Eigen https://gitlab.com/libeigen/eigen/-/commit/80142362ac35ca77bfc5ccf7ba49c9f034b57abc, making `SparseMatrixProduct` compile, is available starting 3.3.5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4630
https://github.com/sofa-framework/sofa/pull/4630:334,Security,Certificate,Certificate,334,"The fix from Eigen https://gitlab.com/libeigen/eigen/-/commit/80142362ac35ca77bfc5ccf7ba49c9f034b57abc, making `SparseMatrixProduct` compile, is available starting 3.3.5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4630
https://github.com/sofa-framework/sofa/pull/4630:445,Security,certificate,certificate-of-origin-dco,445,"The fix from Eigen https://gitlab.com/libeigen/eigen/-/commit/80142362ac35ca77bfc5ccf7ba49c9f034b57abc, making `SparseMatrixProduct` compile, is available starting 3.3.5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4630
https://github.com/sofa-framework/sofa/pull/4630:710,Testability,test,test,710,"The fix from Eigen https://gitlab.com/libeigen/eigen/-/commit/80142362ac35ca77bfc5ccf7ba49c9f034b57abc, making `SparseMatrixProduct` compile, is available starting 3.3.5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4630
https://github.com/sofa-framework/sofa/pull/4630:759,Testability,test,test,759,"The fix from Eigen https://gitlab.com/libeigen/eigen/-/commit/80142362ac35ca77bfc5ccf7ba49c9f034b57abc, making `SparseMatrixProduct` compile, is available starting 3.3.5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4630
https://github.com/sofa-framework/sofa/pull/4631:955,Availability,failure,failures,955,"Useless:. For example, the timer in `UpdateMappingVisitor::processMechanicalMapping` does not measure anything. Annoying:. I don't think it is a good practice to add timer on individual components. In particular, the ones I removed measure neglectable durations. The fact that there is one timer for every component adds a lot of pollution in the analysis of the timings, for nothing because it is neglectable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4631
https://github.com/sofa-framework/sofa/pull/4631:1004,Availability,failure,failures,1004,"Useless:. For example, the timer in `UpdateMappingVisitor::processMechanicalMapping` does not measure anything. Annoying:. I don't think it is a good practice to add timer on individual components. In particular, the ones I removed measure neglectable durations. The fact that there is one timer for every component adds a lot of pollution in the analysis of the timings, for nothing because it is neglectable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4631
https://github.com/sofa-framework/sofa/pull/4631:37,Deployability,Update,UpdateMappingVisitor,37,"Useless:. For example, the timer in `UpdateMappingVisitor::processMechanicalMapping` does not measure anything. Annoying:. I don't think it is a good practice to add timer on individual components. In particular, the ones I removed measure neglectable durations. The fact that there is one timer for every component adds a lot of pollution in the analysis of the timings, for nothing because it is neglectable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4631
https://github.com/sofa-framework/sofa/pull/4631:574,Security,Certificate,Certificate,574,"Useless:. For example, the timer in `UpdateMappingVisitor::processMechanicalMapping` does not measure anything. Annoying:. I don't think it is a good practice to add timer on individual components. In particular, the ones I removed measure neglectable durations. The fact that there is one timer for every component adds a lot of pollution in the analysis of the timings, for nothing because it is neglectable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4631
https://github.com/sofa-framework/sofa/pull/4631:685,Security,certificate,certificate-of-origin-dco,685,"Useless:. For example, the timer in `UpdateMappingVisitor::processMechanicalMapping` does not measure anything. Annoying:. I don't think it is a good practice to add timer on individual components. In particular, the ones I removed measure neglectable durations. The fact that there is one timer for every component adds a lot of pollution in the analysis of the timings, for nothing because it is neglectable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4631
https://github.com/sofa-framework/sofa/pull/4631:950,Testability,test,test,950,"Useless:. For example, the timer in `UpdateMappingVisitor::processMechanicalMapping` does not measure anything. Annoying:. I don't think it is a good practice to add timer on individual components. In particular, the ones I removed measure neglectable durations. The fact that there is one timer for every component adds a lot of pollution in the analysis of the timings, for nothing because it is neglectable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4631
https://github.com/sofa-framework/sofa/pull/4631:999,Testability,test,test,999,"Useless:. For example, the timer in `UpdateMappingVisitor::processMechanicalMapping` does not measure anything. Annoying:. I don't think it is a good practice to add timer on individual components. In particular, the ones I removed measure neglectable durations. The fact that there is one timer for every component adds a lot of pollution in the analysis of the timings, for nothing because it is neglectable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4631
https://github.com/sofa-framework/sofa/issues/4632:41,Deployability,install,installed,41,"Hi， i use the lastest SOFA v23.12.01.exe installed sofa framework in Windows,and it runs properly. but how can I add new feature(like tearing) to this build?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4632
https://github.com/sofa-framework/sofa/pull/4634:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4634
https://github.com/sofa-framework/sofa/pull/4634:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4634
https://github.com/sofa-framework/sofa/pull/4634:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4634
https://github.com/sofa-framework/sofa/pull/4634:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4634
https://github.com/sofa-framework/sofa/pull/4634:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4634
https://github.com/sofa-framework/sofa/pull/4634:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4634
https://github.com/sofa-framework/sofa/pull/4635:1235,Availability,failure,failures,1235,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635
https://github.com/sofa-framework/sofa/pull/4635:1284,Availability,failure,failures,1284,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635
https://github.com/sofa-framework/sofa/pull/4635:419,Deployability,update,update,419,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635
https://github.com/sofa-framework/sofa/pull/4635:445,Deployability,update,update,445,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635
https://github.com/sofa-framework/sofa/pull/4635:302,Performance,perform,performer,302,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635
https://github.com/sofa-framework/sofa/pull/4635:516,Performance,perform,performer,516,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635
https://github.com/sofa-framework/sofa/pull/4635:629,Performance,perform,performer,629,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635
https://github.com/sofa-framework/sofa/pull/4635:854,Security,Certificate,Certificate,854,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635
https://github.com/sofa-framework/sofa/pull/4635:965,Security,certificate,certificate-of-origin-dco,965,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635
https://github.com/sofa-framework/sofa/pull/4635:1230,Testability,test,test,1230,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635
https://github.com/sofa-framework/sofa/pull/4635:1279,Testability,test,test,1279,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635
https://github.com/sofa-framework/sofa/issues/4636:841,Availability,error,error,841,"Hello, thank you for good simulator. I'm using sofa framework with sofapython in python 3.8.19, Ubuntu 20.04.6 LTS and making an environment of catheter in vessel.; I want to make some objects in the simulator which interact with catheter. Therefore, I made a sphere, but it doesn't interact with the catheter.; When the catheter contact with the sphere, it doesn't react, but some notice appears on the prompt. How can I ensure interaction between the catheter and the sphere?. 1. The video when the catheter touches the sphere.; The catheter interacts well with the vessel. https://github.com/sofa-framework/sofa/assets/144453949/d2a36d11-ffee-4ff8-9898-c25817227aad. 2. The message when the catheter touches the sphere.; ```; 184; [WARNING] [LCPConstraintSolver(LCPConstraintSolver)] No convergence in unbuilt nlcp gaussseidel function : error =5.62447e-05 after 1000 iterations; 185; 186; 187; 188; 189; 190; 191; 192; 193; 194; 195; 196; 197; 198; 199; 200; 201; 202; 203; 204; 205; 206; 207; [WARNING] [IntersectorMap] Element Intersector SphereCollisionModel<StdRigidTypes<3u,double>>-LineCollisionModel<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> NOT FOUND within : RayCollisionModel-LineCollisionModel<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> nullptr ; RayCollisionModel-PointCollisionModel<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> nullptr ; RayCollisionModel-SphereCollisionModel<StdRigidTypes<3u,double>> Ray-TSphere<StdRigidTypes<3u,double>> ; RayCollisionModel-SphereCollisionModel<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> Ray-TSphere<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> ; RayCollisionModel-TriangleCollisionModel<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> Ray-TTriangle<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> ; RayCollisionModel-TetrahedronCollisionModel Ray-Tetrahedron ; CubeCollisionModel-CubeCollisionModel Cube-Cube ; LineCollisionModel<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/issues/4636:12483,Availability,toler,tolerance,12483,"); image_array = np.fromstring(buffer, np.uint8); if image_array.shape != (0,):; image = image_array.reshape(display_size[1], display_size[0], 3); else:; image = np.zeros((display_size[1], display_size[0], 3)); image = np.flipud(image); return image; ; def SaveImage(image:np.ndarray, filename:str):; im = PIL.Image.fromarray(image); im.save(filename); . def createScene(root):; root.addObject('RequiredPlugin', pluginName=['BeamAdapter',; 'SofaMiscCollision',; 'SofaConstraint',; 'SofaImplicitOdeSolver',; 'SofaGeneralLinearSolver',; 'SofaBoundaryCondition',; 'SofaDeformable',; 'SofaTopologyMapping',; 'SofaOpenglVisual,'; 'SofaMeshCollision',; 'Sofa.Component.Collision.Detection.Algorithm',; 'Sofa.Component.IO.Mesh',; 'Sofa.GL.Component.Rendering3D',; 'Sofa.GL.Component.Shader'; ]); root.addObject('FreeMotionAnimationLoop'); root.addObject('VisualStyle', displayFlags=['showVisualModels',; 'showCollisionModels',; ]); root.addObject('LCPConstraintSolver', mu='0.1', tolerance='1e-10', maxIt='1000', build_lcp='false'); root.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); root.addObject('BruteForceBroadPhase', name='N2'); root.addObject('BVHNarrowPhase'); root.addObject('LocalMinDistance', contactDistance='1', alarmDistance='3', name='localmindistance', angleCone='0.02'); root.addObject('DefaultContactManager', name='Response', response='FrictionContactConstraint'). name='guide'; straightLength=980.0; length=1000.0; numEdges=200; youngModulus=20000; spireDiameter=25; numEdgesCollis=[50,10]; spireHeight=0.0; densityOfBeams=[30,5]; youngModulusExtremity=10000; topoLines_guide = root.addChild('topoLines_'+name); topoLines_guide.addObject('WireRestShape', name=name+'RestShape', ; straightLength=straightLength, length=length, ; numEdges=numEdges, youngModulus=youngModulus, ; spireDiameter=spireDiameter, numEdgesCollis=numEdgesCollis, ; printLog=True, template='Rigid3d', spireHeight=spireHeight, ; densityOfBeams=densityOfBeams, youngModulusExtremity=youngModulusExtr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/issues/4636:18751,Availability,toler,tolerance,18751,"uOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'); ; ; scale=1.5; rotation=[-40.0, 0.0, 0.0]; stl = 'carotids.stl'; VISUAL = True; vessels = root.addChild('Vessels'); vessels.addObject('MeshSTLLoader', filename=stl, flipNormals=False, triangulate=True, name='meshLoader', scale=scale, rotation=rotation); vessels.addObject('MeshTopology', position='@meshLoader.position', triangles='@meshLoader.triangles'); vessels.addObject('MechanicalObject', name='DOFs1', scale=1, rotation=rotation); vessels.addObject('TriangleCollisionModel', moving=False, simulated=False); vessels.addObject('LineCollisionModel', moving=False, simulated=False); vessels.addObject('PointCollisionModel', moving=False, simulated=False); vessels.addObject('OglModel', color=[1, 0, 0, 0.3], src='@meshLoader', name='Visual', rotation=rotation). # Add a sphere.; newSphere = root.addChild('FixedSphere'); newSphere.addObject('EulerImplicitSolver'); newSphere.addObject('CGLinearSolver', threshold='1e-09', tolerance='1e-09', iterations='200'); MO = newSphere.addObject('MechanicalObject', showObject=True, position=[0, 200, 200, 0, 0, 0, 0], name='Particle', template='Rigid3d'); Mass = newSphere.addObject('UniformMass', totalMass=1); Force = newSphere.addObject('ConstantForceField', name=""CFF"", totalForce=[0, 0, 0, 0, 0, 0] ); Sphere = newSphere.addObject('SphereCollisionModel', name=""SCM"", radius=30.0 ); newSphere.addObject('FixedConstraint', name='FixedConstraint', indices=0); newSphere.addObject('OglModel', color=[1, 0, 0, 0.3], name='Visual'); ; ; ; # visualizing; source = [-600,0,300]; lookAt = source+np.array([1,0,0]); orientation = [ 0, -0.70710678, 0, 0.70710678]; root.addObject(""LightManager""); root.addObject(""DirectionalLight"", direction=[-1,0,0]); root.addObject('InteractiveCamera', name='camera', position=source,; lookAt=lookAt, orientation=orientation); ; if __name__ == ""__main__"":; # Read real information from real world.; pass. # One simulation for one root. Maybe.; # Create sc",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/issues/4636:20202,Deployability,update,updateVisual,20202,"('OglModel', color=[1, 0, 0, 0.3], src='@meshLoader', name='Visual', rotation=rotation). # Add a sphere.; newSphere = root.addChild('FixedSphere'); newSphere.addObject('EulerImplicitSolver'); newSphere.addObject('CGLinearSolver', threshold='1e-09', tolerance='1e-09', iterations='200'); MO = newSphere.addObject('MechanicalObject', showObject=True, position=[0, 200, 200, 0, 0, 0, 0], name='Particle', template='Rigid3d'); Mass = newSphere.addObject('UniformMass', totalMass=1); Force = newSphere.addObject('ConstantForceField', name=""CFF"", totalForce=[0, 0, 0, 0, 0, 0] ); Sphere = newSphere.addObject('SphereCollisionModel', name=""SCM"", radius=30.0 ); newSphere.addObject('FixedConstraint', name='FixedConstraint', indices=0); newSphere.addObject('OglModel', color=[1, 0, 0, 0.3], name='Visual'); ; ; ; # visualizing; source = [-600,0,300]; lookAt = source+np.array([1,0,0]); orientation = [ 0, -0.70710678, 0, 0.70710678]; root.addObject(""LightManager""); root.addObject(""DirectionalLight"", direction=[-1,0,0]); root.addObject('InteractiveCamera', name='camera', position=source,; lookAt=lookAt, orientation=orientation); ; if __name__ == ""__main__"":; # Read real information from real world.; pass. # One simulation for one root. Maybe.; # Create scene and initialize simulation.; root = Sofa.Core.Node(""root""); createScene(root); Sofa.Simulation.init(root). # Initialize pygame.; init_display(root); ; try:; for i in range(10000):; root.InstrumentCombined.m_ircontroller.findData('xtip').value =\; root.InstrumentCombined.m_ircontroller.findData('xtip').value \; + np.array([2,110,2], dtype=float); ; # Calculate simulator one step.; Sofa.Simulation.animate(root, root.dt.value); Sofa.Simulation.updateVisual(root); time.sleep(root.dt.value); ; # Visualize in pygame.; simple_render(root); ; ; # Save image of pygame.; image = GetFrame(); SaveImage(image, f""screen.jpeg""); ; ; print(i); ; ; except KeyboardInterrupt:; pass; ; ```. How can I ensure interaction between the catheter and the sphere?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/issues/4636:14808,Energy Efficiency,Adapt,AdaptiveBeamForceFieldAndMass,14808,"mplate='Rigid3d'). xtip=[1, 0, 0]; instruments=['guide']; step=0.5; listening=True; startingPos=[0, 0, 0, 1, 0, 0, 0]; rotationInstrument=[0, 0, 0]; speed=0; controlledInstrument=0; InstrumentCombined = root.addChild('InstrumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver', rayleighStiffness=0.2, ; printLog=False, rayleighMass=0.1); InstrumentCombined.addObject('BTDLinearSolver', verification=False, ; subpartSolve=False, verbose=False); InstrumentCombined.addObject('RegularGridTopology', name='meshLinesCombined', ; zmax=1, zmin=1, nx=60, ny=1, nz=1, ; xmax=1.0, xmin=0.0, ymin=0, ymax=0); InstrumentCombined.addObject('MechanicalObject', showIndices=False, name='DOFs', template='Rigid3d', ry=-90); for i in range(len(instruments)):; InstrumentCombined.addObject('WireBeamInterpolation', WireRestShape='@../topoLines_'+instruments[i]+'/'+instruments[i]+'RestShape', ; radius=0.15, printLog=False, name='Interpol'+instruments[i]); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', massDensity=0.00000155, ; name=instruments[i]+'ForceField', interpolation='@Interpol'+instruments[i]); InstrumentCombined.addObject('InterventionalRadiologyController', xtip=xtip, name='m_ircontroller', ; instruments=['Interpol'+instruments[i] for i in range(len(instruments))], ; step=step, printLog=True, ; listening=listening, template='Rigid3d', startingPos=startingPos, ; rotationInstrument=rotationInstrument, speed=speed, ; controlledInstrument=controlledInstrument); InstrumentCombined.addObject('LinearSolverConstraintCorrection', wire_optimization='true', printLog=False); InstrumentCombined.addObject('FixedConstraint', indices=0, name='FixedConstraint'); InstrumentCombined.addObject('RestShapeSpringsForceField', points='@m_ircontroller.indexFirstNode', ; angularStiffness=1e8, stiffness=1e8); # Collision model; Collis = InstrumentCombined.addChild('Collis'); #Collis.activated = 'true'; Collis.addObject('EdgeSetTopologyContainer', name='collisEdgeSet'); Collis.addObject",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/issues/4636:16813,Energy Efficiency,Adapt,AdaptiveBeamMapping,16813,"'EdgeSetTopologyModifier', name='colliseEdgeModifier'); Collis.addObject('MechanicalObject', name='CollisionDOFs'); Collis.addObject('MultiAdaptiveBeamMapping', controller='../m_ircontroller', ; useCurvAbs=True, printLog=False, name='collisMap'); Collis.addObject('LineCollisionModel', proximity=0.0, group=1); Collis.addObject('PointCollisionModel', proximity=0.0, group=1); # Visualization Guide; VisuGuide = InstrumentCombined.addChild('VisuGuide'); #VisuGuide.activated = 'true'; VisuGuide.addObject('MechanicalObject', name='Quads'); VisuGuide.addObject('QuadSetTopologyContainer', name='ContainerGuide'); VisuGuide.addObject('QuadSetTopologyModifier', name='Modifier'); VisuGuide.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo', template='Vec3d'); VisuGuide.addObject('Edge2QuadTopologicalMapping', radius='1', listening=True, ; input='@../../topoLines_guide/meshLinesGuide', ; nbPointsOnEachCircle='10', flipNormals='true', output='@ContainerGuide'); VisuGuide.addObject('AdaptiveBeamMapping', interpolation='@../InterpolGuide', ; name='visuMapGuide', output='@Quads', isMechanical=False, ; input='@../DOFs', useCurvAbs=True, printLog=True); TriangleTopology = VisuGuide.addChild('TriangleTopology'); TriangleTopology.addObject('TriangleSetTopologyContainer', name='TriangleContainer'); TriangleTopology.addObject('TriangleSetTopologyModifier', name='Modifier'); TriangleTopology.addObject('TriangleSetGeometryAlgorithms', name='GeomAlgo', template='Vec3d'); TriangleTopology.addObject('Quad2TriangleTopologicalMapping', input='@../ContainerGuide', output='@TriangleContainer'); # Ogl model; VisuOgl = VisuGuide.addChild('VisuOgl'); VisuOgl.addObject('OglModel', color=[0.2, 0.2, 0.8], triangles='@../TriangleTopology/TriangleContainer.triangles', ; material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20', name='Visual'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'); ;",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/issues/4636:677,Integrability,message,message,677,"Hello, thank you for good simulator. I'm using sofa framework with sofapython in python 3.8.19, Ubuntu 20.04.6 LTS and making an environment of catheter in vessel.; I want to make some objects in the simulator which interact with catheter. Therefore, I made a sphere, but it doesn't interact with the catheter.; When the catheter contact with the sphere, it doesn't react, but some notice appears on the prompt. How can I ensure interaction between the catheter and the sphere?. 1. The video when the catheter touches the sphere.; The catheter interacts well with the vessel. https://github.com/sofa-framework/sofa/assets/144453949/d2a36d11-ffee-4ff8-9898-c25817227aad. 2. The message when the catheter touches the sphere.; ```; 184; [WARNING] [LCPConstraintSolver(LCPConstraintSolver)] No convergence in unbuilt nlcp gaussseidel function : error =5.62447e-05 after 1000 iterations; 185; 186; 187; 188; 189; 190; 191; 192; 193; 194; 195; 196; 197; 198; 199; 200; 201; 202; 203; 204; 205; 206; 207; [WARNING] [IntersectorMap] Element Intersector SphereCollisionModel<StdRigidTypes<3u,double>>-LineCollisionModel<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> NOT FOUND within : RayCollisionModel-LineCollisionModel<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> nullptr ; RayCollisionModel-PointCollisionModel<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> nullptr ; RayCollisionModel-SphereCollisionModel<StdRigidTypes<3u,double>> Ray-TSphere<StdRigidTypes<3u,double>> ; RayCollisionModel-SphereCollisionModel<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> Ray-TSphere<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> ; RayCollisionModel-TriangleCollisionModel<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> Ray-TTriangle<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>> ; RayCollisionModel-TetrahedronCollisionModel Ray-Tetrahedron ; CubeCollisionModel-CubeCollisionModel Cube-Cube ; LineCollisionModel<StdVectorTypes<Vec<3u,double>,Vec<3u,double>,double>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/issues/4636:11922,Modifiability,plugin,pluginName,11922,"ar); OpenGL.GL.glMatrixMode(OpenGL.GL.GL_MODELVIEW); OpenGL.GL.glLoadIdentity(). cameraMVM = root.camera.getOpenGLModelViewMatrix(); OpenGL.GL.glMultMatrixd(cameraMVM); Sofa.SofaGL.draw(root). pygame.display.flip(). def GetFrame():; """"""; Get frame image as numpy. Parameters:; ----------; kwargs: Dictionary; Initialization of the arguments. Returns:; -------; image: np.ndarray. """"""; buffer = OpenGL.GL.glReadPixels(0, 0, *display_size, OpenGL.GL.GL_RGB, OpenGL.GL.GL_UNSIGNED_BYTE); image_array = np.fromstring(buffer, np.uint8); if image_array.shape != (0,):; image = image_array.reshape(display_size[1], display_size[0], 3); else:; image = np.zeros((display_size[1], display_size[0], 3)); image = np.flipud(image); return image; ; def SaveImage(image:np.ndarray, filename:str):; im = PIL.Image.fromarray(image); im.save(filename); . def createScene(root):; root.addObject('RequiredPlugin', pluginName=['BeamAdapter',; 'SofaMiscCollision',; 'SofaConstraint',; 'SofaImplicitOdeSolver',; 'SofaGeneralLinearSolver',; 'SofaBoundaryCondition',; 'SofaDeformable',; 'SofaTopologyMapping',; 'SofaOpenglVisual,'; 'SofaMeshCollision',; 'Sofa.Component.Collision.Detection.Algorithm',; 'Sofa.Component.IO.Mesh',; 'Sofa.GL.Component.Rendering3D',; 'Sofa.GL.Component.Shader'; ]); root.addObject('FreeMotionAnimationLoop'); root.addObject('VisualStyle', displayFlags=['showVisualModels',; 'showCollisionModels',; ]); root.addObject('LCPConstraintSolver', mu='0.1', tolerance='1e-10', maxIt='1000', build_lcp='false'); root.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); root.addObject('BruteForceBroadPhase', name='N2'); root.addObject('BVHNarrowPhase'); root.addObject('LocalMinDistance', contactDistance='1', alarmDistance='3', name='localmindistance', angleCone='0.02'); root.addObject('DefaultContactManager', name='Response', response='FrictionContactConstraint'). name='guide'; straightLength=980.0; length=1000.0; numEdges=200; youngModulus=20000; spireDiameter=25; numEdgesCollis=[50,10",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/issues/4636:14808,Modifiability,Adapt,AdaptiveBeamForceFieldAndMass,14808,"mplate='Rigid3d'). xtip=[1, 0, 0]; instruments=['guide']; step=0.5; listening=True; startingPos=[0, 0, 0, 1, 0, 0, 0]; rotationInstrument=[0, 0, 0]; speed=0; controlledInstrument=0; InstrumentCombined = root.addChild('InstrumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver', rayleighStiffness=0.2, ; printLog=False, rayleighMass=0.1); InstrumentCombined.addObject('BTDLinearSolver', verification=False, ; subpartSolve=False, verbose=False); InstrumentCombined.addObject('RegularGridTopology', name='meshLinesCombined', ; zmax=1, zmin=1, nx=60, ny=1, nz=1, ; xmax=1.0, xmin=0.0, ymin=0, ymax=0); InstrumentCombined.addObject('MechanicalObject', showIndices=False, name='DOFs', template='Rigid3d', ry=-90); for i in range(len(instruments)):; InstrumentCombined.addObject('WireBeamInterpolation', WireRestShape='@../topoLines_'+instruments[i]+'/'+instruments[i]+'RestShape', ; radius=0.15, printLog=False, name='Interpol'+instruments[i]); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', massDensity=0.00000155, ; name=instruments[i]+'ForceField', interpolation='@Interpol'+instruments[i]); InstrumentCombined.addObject('InterventionalRadiologyController', xtip=xtip, name='m_ircontroller', ; instruments=['Interpol'+instruments[i] for i in range(len(instruments))], ; step=step, printLog=True, ; listening=listening, template='Rigid3d', startingPos=startingPos, ; rotationInstrument=rotationInstrument, speed=speed, ; controlledInstrument=controlledInstrument); InstrumentCombined.addObject('LinearSolverConstraintCorrection', wire_optimization='true', printLog=False); InstrumentCombined.addObject('FixedConstraint', indices=0, name='FixedConstraint'); InstrumentCombined.addObject('RestShapeSpringsForceField', points='@m_ircontroller.indexFirstNode', ; angularStiffness=1e8, stiffness=1e8); # Collision model; Collis = InstrumentCombined.addChild('Collis'); #Collis.activated = 'true'; Collis.addObject('EdgeSetTopologyContainer', name='collisEdgeSet'); Collis.addObject",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/issues/4636:16813,Modifiability,Adapt,AdaptiveBeamMapping,16813,"'EdgeSetTopologyModifier', name='colliseEdgeModifier'); Collis.addObject('MechanicalObject', name='CollisionDOFs'); Collis.addObject('MultiAdaptiveBeamMapping', controller='../m_ircontroller', ; useCurvAbs=True, printLog=False, name='collisMap'); Collis.addObject('LineCollisionModel', proximity=0.0, group=1); Collis.addObject('PointCollisionModel', proximity=0.0, group=1); # Visualization Guide; VisuGuide = InstrumentCombined.addChild('VisuGuide'); #VisuGuide.activated = 'true'; VisuGuide.addObject('MechanicalObject', name='Quads'); VisuGuide.addObject('QuadSetTopologyContainer', name='ContainerGuide'); VisuGuide.addObject('QuadSetTopologyModifier', name='Modifier'); VisuGuide.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo', template='Vec3d'); VisuGuide.addObject('Edge2QuadTopologicalMapping', radius='1', listening=True, ; input='@../../topoLines_guide/meshLinesGuide', ; nbPointsOnEachCircle='10', flipNormals='true', output='@ContainerGuide'); VisuGuide.addObject('AdaptiveBeamMapping', interpolation='@../InterpolGuide', ; name='visuMapGuide', output='@Quads', isMechanical=False, ; input='@../DOFs', useCurvAbs=True, printLog=True); TriangleTopology = VisuGuide.addChild('TriangleTopology'); TriangleTopology.addObject('TriangleSetTopologyContainer', name='TriangleContainer'); TriangleTopology.addObject('TriangleSetTopologyModifier', name='Modifier'); TriangleTopology.addObject('TriangleSetGeometryAlgorithms', name='GeomAlgo', template='Vec3d'); TriangleTopology.addObject('Quad2TriangleTopologicalMapping', input='@../ContainerGuide', output='@TriangleContainer'); # Ogl model; VisuOgl = VisuGuide.addChild('VisuOgl'); VisuOgl.addObject('OglModel', color=[0.2, 0.2, 0.8], triangles='@../TriangleTopology/TriangleContainer.triangles', ; material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20', name='Visual'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'); ;",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/issues/4636:12183,Safety,Detect,Detection,12183,"eraMVM); Sofa.SofaGL.draw(root). pygame.display.flip(). def GetFrame():; """"""; Get frame image as numpy. Parameters:; ----------; kwargs: Dictionary; Initialization of the arguments. Returns:; -------; image: np.ndarray. """"""; buffer = OpenGL.GL.glReadPixels(0, 0, *display_size, OpenGL.GL.GL_RGB, OpenGL.GL.GL_UNSIGNED_BYTE); image_array = np.fromstring(buffer, np.uint8); if image_array.shape != (0,):; image = image_array.reshape(display_size[1], display_size[0], 3); else:; image = np.zeros((display_size[1], display_size[0], 3)); image = np.flipud(image); return image; ; def SaveImage(image:np.ndarray, filename:str):; im = PIL.Image.fromarray(image); im.save(filename); . def createScene(root):; root.addObject('RequiredPlugin', pluginName=['BeamAdapter',; 'SofaMiscCollision',; 'SofaConstraint',; 'SofaImplicitOdeSolver',; 'SofaGeneralLinearSolver',; 'SofaBoundaryCondition',; 'SofaDeformable',; 'SofaTopologyMapping',; 'SofaOpenglVisual,'; 'SofaMeshCollision',; 'Sofa.Component.Collision.Detection.Algorithm',; 'Sofa.Component.IO.Mesh',; 'Sofa.GL.Component.Rendering3D',; 'Sofa.GL.Component.Shader'; ]); root.addObject('FreeMotionAnimationLoop'); root.addObject('VisualStyle', displayFlags=['showVisualModels',; 'showCollisionModels',; ]); root.addObject('LCPConstraintSolver', mu='0.1', tolerance='1e-10', maxIt='1000', build_lcp='false'); root.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); root.addObject('BruteForceBroadPhase', name='N2'); root.addObject('BVHNarrowPhase'); root.addObject('LocalMinDistance', contactDistance='1', alarmDistance='3', name='localmindistance', angleCone='0.02'); root.addObject('DefaultContactManager', name='Response', response='FrictionContactConstraint'). name='guide'; straightLength=980.0; length=1000.0; numEdges=200; youngModulus=20000; spireDiameter=25; numEdgesCollis=[50,10]; spireHeight=0.0; densityOfBeams=[30,5]; youngModulusExtremity=10000; topoLines_guide = root.addChild('topoLines_'+name); topoLines_guide.addObject('WireRest",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/issues/4636:12911,Usability,guid,guide,12911," pluginName=['BeamAdapter',; 'SofaMiscCollision',; 'SofaConstraint',; 'SofaImplicitOdeSolver',; 'SofaGeneralLinearSolver',; 'SofaBoundaryCondition',; 'SofaDeformable',; 'SofaTopologyMapping',; 'SofaOpenglVisual,'; 'SofaMeshCollision',; 'Sofa.Component.Collision.Detection.Algorithm',; 'Sofa.Component.IO.Mesh',; 'Sofa.GL.Component.Rendering3D',; 'Sofa.GL.Component.Shader'; ]); root.addObject('FreeMotionAnimationLoop'); root.addObject('VisualStyle', displayFlags=['showVisualModels',; 'showCollisionModels',; ]); root.addObject('LCPConstraintSolver', mu='0.1', tolerance='1e-10', maxIt='1000', build_lcp='false'); root.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); root.addObject('BruteForceBroadPhase', name='N2'); root.addObject('BVHNarrowPhase'); root.addObject('LocalMinDistance', contactDistance='1', alarmDistance='3', name='localmindistance', angleCone='0.02'); root.addObject('DefaultContactManager', name='Response', response='FrictionContactConstraint'). name='guide'; straightLength=980.0; length=1000.0; numEdges=200; youngModulus=20000; spireDiameter=25; numEdgesCollis=[50,10]; spireHeight=0.0; densityOfBeams=[30,5]; youngModulusExtremity=10000; topoLines_guide = root.addChild('topoLines_'+name); topoLines_guide.addObject('WireRestShape', name=name+'RestShape', ; straightLength=straightLength, length=length, ; numEdges=numEdges, youngModulus=youngModulus, ; spireDiameter=spireDiameter, numEdgesCollis=numEdgesCollis, ; printLog=True, template='Rigid3d', spireHeight=spireHeight, ; densityOfBeams=densityOfBeams, youngModulusExtremity=youngModulusExtremity); topoLines_guide.addObject('MechanicalObject', name='dofTopo2', template='Rigid3d'); topoLines_guide.addObject('EdgeSetTopologyContainer', name='meshLinesGuide'); topoLines_guide.addObject('EdgeSetTopologyModifier', name='Modifier'); topoLines_guide.addObject('EdgeSetGeometryAlgorithms', name='GeomAlgo', template='Rigid3d'). xtip=[1, 0, 0]; instruments=['guide']; step=0.5; listening=True; startingPos=",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/issues/4636:13874,Usability,guid,guide,13874,"response='FrictionContactConstraint'). name='guide'; straightLength=980.0; length=1000.0; numEdges=200; youngModulus=20000; spireDiameter=25; numEdgesCollis=[50,10]; spireHeight=0.0; densityOfBeams=[30,5]; youngModulusExtremity=10000; topoLines_guide = root.addChild('topoLines_'+name); topoLines_guide.addObject('WireRestShape', name=name+'RestShape', ; straightLength=straightLength, length=length, ; numEdges=numEdges, youngModulus=youngModulus, ; spireDiameter=spireDiameter, numEdgesCollis=numEdgesCollis, ; printLog=True, template='Rigid3d', spireHeight=spireHeight, ; densityOfBeams=densityOfBeams, youngModulusExtremity=youngModulusExtremity); topoLines_guide.addObject('MechanicalObject', name='dofTopo2', template='Rigid3d'); topoLines_guide.addObject('EdgeSetTopologyContainer', name='meshLinesGuide'); topoLines_guide.addObject('EdgeSetTopologyModifier', name='Modifier'); topoLines_guide.addObject('EdgeSetGeometryAlgorithms', name='GeomAlgo', template='Rigid3d'). xtip=[1, 0, 0]; instruments=['guide']; step=0.5; listening=True; startingPos=[0, 0, 0, 1, 0, 0, 0]; rotationInstrument=[0, 0, 0]; speed=0; controlledInstrument=0; InstrumentCombined = root.addChild('InstrumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver', rayleighStiffness=0.2, ; printLog=False, rayleighMass=0.1); InstrumentCombined.addObject('BTDLinearSolver', verification=False, ; subpartSolve=False, verbose=False); InstrumentCombined.addObject('RegularGridTopology', name='meshLinesCombined', ; zmax=1, zmin=1, nx=60, ny=1, nz=1, ; xmax=1.0, xmin=0.0, ymin=0, ymax=0); InstrumentCombined.addObject('MechanicalObject', showIndices=False, name='DOFs', template='Rigid3d', ry=-90); for i in range(len(instruments)):; InstrumentCombined.addObject('WireBeamInterpolation', WireRestShape='@../topoLines_'+instruments[i]+'/'+instruments[i]+'RestShape', ; radius=0.15, printLog=False, name='Interpol'+instruments[i]); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', massDensity=0.00000155, ; n",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/issues/4636:16219,Usability,Guid,Guide,16219,"onInstrument=rotationInstrument, speed=speed, ; controlledInstrument=controlledInstrument); InstrumentCombined.addObject('LinearSolverConstraintCorrection', wire_optimization='true', printLog=False); InstrumentCombined.addObject('FixedConstraint', indices=0, name='FixedConstraint'); InstrumentCombined.addObject('RestShapeSpringsForceField', points='@m_ircontroller.indexFirstNode', ; angularStiffness=1e8, stiffness=1e8); # Collision model; Collis = InstrumentCombined.addChild('Collis'); #Collis.activated = 'true'; Collis.addObject('EdgeSetTopologyContainer', name='collisEdgeSet'); Collis.addObject('EdgeSetTopologyModifier', name='colliseEdgeModifier'); Collis.addObject('MechanicalObject', name='CollisionDOFs'); Collis.addObject('MultiAdaptiveBeamMapping', controller='../m_ircontroller', ; useCurvAbs=True, printLog=False, name='collisMap'); Collis.addObject('LineCollisionModel', proximity=0.0, group=1); Collis.addObject('PointCollisionModel', proximity=0.0, group=1); # Visualization Guide; VisuGuide = InstrumentCombined.addChild('VisuGuide'); #VisuGuide.activated = 'true'; VisuGuide.addObject('MechanicalObject', name='Quads'); VisuGuide.addObject('QuadSetTopologyContainer', name='ContainerGuide'); VisuGuide.addObject('QuadSetTopologyModifier', name='Modifier'); VisuGuide.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo', template='Vec3d'); VisuGuide.addObject('Edge2QuadTopologicalMapping', radius='1', listening=True, ; input='@../../topoLines_guide/meshLinesGuide', ; nbPointsOnEachCircle='10', flipNormals='true', output='@ContainerGuide'); VisuGuide.addObject('AdaptiveBeamMapping', interpolation='@../InterpolGuide', ; name='visuMapGuide', output='@Quads', isMechanical=False, ; input='@../DOFs', useCurvAbs=True, printLog=True); TriangleTopology = VisuGuide.addChild('TriangleTopology'); TriangleTopology.addObject('TriangleSetTopologyContainer', name='TriangleContainer'); TriangleTopology.addObject('TriangleSetTopologyModifier', name='Modifier'); TriangleTopology.add",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636
https://github.com/sofa-framework/sofa/pull/4637:837,Availability,failure,failures,837,"Start porting old (useful?) changes from old dev branches: https://github.com/epernod/sofa/pull/11/files. This changes allow to display the Contacts as a qt table instead of raw line data:; ![image](https://github.com/sofa-framework/sofa/assets/21199245/04a7ad35-8583-4406-82ec-526d241d02df). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4637
https://github.com/sofa-framework/sofa/pull/4637:886,Availability,failure,failures,886,"Start porting old (useful?) changes from old dev branches: https://github.com/epernod/sofa/pull/11/files. This changes allow to display the Contacts as a qt table instead of raw line data:; ![image](https://github.com/sofa-framework/sofa/assets/21199245/04a7ad35-8583-4406-82ec-526d241d02df). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4637
https://github.com/sofa-framework/sofa/pull/4637:456,Security,Certificate,Certificate,456,"Start porting old (useful?) changes from old dev branches: https://github.com/epernod/sofa/pull/11/files. This changes allow to display the Contacts as a qt table instead of raw line data:; ![image](https://github.com/sofa-framework/sofa/assets/21199245/04a7ad35-8583-4406-82ec-526d241d02df). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4637
https://github.com/sofa-framework/sofa/pull/4637:567,Security,certificate,certificate-of-origin-dco,567,"Start porting old (useful?) changes from old dev branches: https://github.com/epernod/sofa/pull/11/files. This changes allow to display the Contacts as a qt table instead of raw line data:; ![image](https://github.com/sofa-framework/sofa/assets/21199245/04a7ad35-8583-4406-82ec-526d241d02df). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4637
https://github.com/sofa-framework/sofa/pull/4637:832,Testability,test,test,832,"Start porting old (useful?) changes from old dev branches: https://github.com/epernod/sofa/pull/11/files. This changes allow to display the Contacts as a qt table instead of raw line data:; ![image](https://github.com/sofa-framework/sofa/assets/21199245/04a7ad35-8583-4406-82ec-526d241d02df). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4637
https://github.com/sofa-framework/sofa/pull/4637:881,Testability,test,test,881,"Start porting old (useful?) changes from old dev branches: https://github.com/epernod/sofa/pull/11/files. This changes allow to display the Contacts as a qt table instead of raw line data:; ![image](https://github.com/sofa-framework/sofa/assets/21199245/04a7ad35-8583-4406-82ec-526d241d02df). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4637
https://github.com/sofa-framework/sofa/pull/4638:1299,Availability,failure,failures,1299,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638
https://github.com/sofa-framework/sofa/pull/4638:1348,Availability,failure,failures,1348,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638
https://github.com/sofa-framework/sofa/pull/4638:349,Modifiability,inherit,inheritance,349,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638
https://github.com/sofa-framework/sofa/pull/4638:654,Modifiability,refactor,refactoring,654,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638
https://github.com/sofa-framework/sofa/pull/4638:39,Performance,perform,performers,39,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638
https://github.com/sofa-framework/sofa/pull/4638:384,Performance,perform,performers,384,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638
https://github.com/sofa-framework/sofa/pull/4638:918,Security,Certificate,Certificate,918,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638
https://github.com/sofa-framework/sofa/pull/4638:1029,Security,certificate,certificate-of-origin-dco,1029,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638
https://github.com/sofa-framework/sofa/pull/4638:1294,Testability,test,test,1294,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638
https://github.com/sofa-framework/sofa/pull/4638:1343,Testability,test,test,1343,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638
https://github.com/sofa-framework/sofa/pull/4639:817,Availability,failure,failures,817,"continue porting changes from old branches: https://github.com/epernod/sofa/pull/12/files. getTetrahedron(i) perform a test if i is not out of bounds.; When a function is called often and loop on the list of tetrahedra, it is best to get a ref to the array and loop on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4639
https://github.com/sofa-framework/sofa/pull/4639:866,Availability,failure,failures,866,"continue porting changes from old branches: https://github.com/epernod/sofa/pull/12/files. getTetrahedron(i) perform a test if i is not out of bounds.; When a function is called often and loop on the list of tetrahedra, it is best to get a ref to the array and loop on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4639
https://github.com/sofa-framework/sofa/pull/4639:109,Performance,perform,perform,109,"continue porting changes from old branches: https://github.com/epernod/sofa/pull/12/files. getTetrahedron(i) perform a test if i is not out of bounds.; When a function is called often and loop on the list of tetrahedra, it is best to get a ref to the array and loop on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4639
https://github.com/sofa-framework/sofa/pull/4639:436,Security,Certificate,Certificate,436,"continue porting changes from old branches: https://github.com/epernod/sofa/pull/12/files. getTetrahedron(i) perform a test if i is not out of bounds.; When a function is called often and loop on the list of tetrahedra, it is best to get a ref to the array and loop on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4639
https://github.com/sofa-framework/sofa/pull/4639:547,Security,certificate,certificate-of-origin-dco,547,"continue porting changes from old branches: https://github.com/epernod/sofa/pull/12/files. getTetrahedron(i) perform a test if i is not out of bounds.; When a function is called often and loop on the list of tetrahedra, it is best to get a ref to the array and loop on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4639
https://github.com/sofa-framework/sofa/pull/4639:119,Testability,test,test,119,"continue porting changes from old branches: https://github.com/epernod/sofa/pull/12/files. getTetrahedron(i) perform a test if i is not out of bounds.; When a function is called often and loop on the list of tetrahedra, it is best to get a ref to the array and loop on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4639
https://github.com/sofa-framework/sofa/pull/4639:812,Testability,test,test,812,"continue porting changes from old branches: https://github.com/epernod/sofa/pull/12/files. getTetrahedron(i) perform a test if i is not out of bounds.; When a function is called often and loop on the list of tetrahedra, it is best to get a ref to the array and loop on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4639
https://github.com/sofa-framework/sofa/pull/4639:861,Testability,test,test,861,"continue porting changes from old branches: https://github.com/epernod/sofa/pull/12/files. getTetrahedron(i) perform a test if i is not out of bounds.; When a function is called often and loop on the list of tetrahedra, it is best to get a ref to the array and loop on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4639
https://github.com/sofa-framework/sofa/pull/4641:796,Availability,failure,failures,796,"continue porting old changes from branch https://github.com/epernod/sofa/pull/13/files. Some cleaning in Qt Gui:; - Rome old options not used? like m_isEmbeddedViewer or m_createViewersOpt; - Store SofaViewer* directly to avoid multiple dynamic casts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4641
https://github.com/sofa-framework/sofa/pull/4641:845,Availability,failure,failures,845,"continue porting old changes from branch https://github.com/epernod/sofa/pull/13/files. Some cleaning in Qt Gui:; - Rome old options not used? like m_isEmbeddedViewer or m_createViewersOpt; - Store SofaViewer* directly to avoid multiple dynamic casts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4641
https://github.com/sofa-framework/sofa/pull/4641:222,Safety,avoid,avoid,222,"continue porting old changes from branch https://github.com/epernod/sofa/pull/13/files. Some cleaning in Qt Gui:; - Rome old options not used? like m_isEmbeddedViewer or m_createViewersOpt; - Store SofaViewer* directly to avoid multiple dynamic casts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4641
https://github.com/sofa-framework/sofa/pull/4641:415,Security,Certificate,Certificate,415,"continue porting old changes from branch https://github.com/epernod/sofa/pull/13/files. Some cleaning in Qt Gui:; - Rome old options not used? like m_isEmbeddedViewer or m_createViewersOpt; - Store SofaViewer* directly to avoid multiple dynamic casts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4641
https://github.com/sofa-framework/sofa/pull/4641:526,Security,certificate,certificate-of-origin-dco,526,"continue porting old changes from branch https://github.com/epernod/sofa/pull/13/files. Some cleaning in Qt Gui:; - Rome old options not used? like m_isEmbeddedViewer or m_createViewersOpt; - Store SofaViewer* directly to avoid multiple dynamic casts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4641
https://github.com/sofa-framework/sofa/pull/4641:791,Testability,test,test,791,"continue porting old changes from branch https://github.com/epernod/sofa/pull/13/files. Some cleaning in Qt Gui:; - Rome old options not used? like m_isEmbeddedViewer or m_createViewersOpt; - Store SofaViewer* directly to avoid multiple dynamic casts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4641
https://github.com/sofa-framework/sofa/pull/4641:840,Testability,test,test,840,"continue porting old changes from branch https://github.com/epernod/sofa/pull/13/files. Some cleaning in Qt Gui:; - Rome old options not used? like m_isEmbeddedViewer or m_createViewersOpt; - Store SofaViewer* directly to avoid multiple dynamic casts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4641
https://github.com/sofa-framework/sofa/pull/4643:584,Availability,failure,failures,584,"regression was Introduced in; - #4601 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4643
https://github.com/sofa-framework/sofa/pull/4643:633,Availability,failure,failures,633,"regression was Introduced in; - #4601 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4643
https://github.com/sofa-framework/sofa/pull/4643:203,Security,Certificate,Certificate,203,"regression was Introduced in; - #4601 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4643
https://github.com/sofa-framework/sofa/pull/4643:314,Security,certificate,certificate-of-origin-dco,314,"regression was Introduced in; - #4601 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4643
https://github.com/sofa-framework/sofa/pull/4643:579,Testability,test,test,579,"regression was Introduced in; - #4601 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4643
https://github.com/sofa-framework/sofa/pull/4643:628,Testability,test,test,628,"regression was Introduced in; - #4601 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4643
https://github.com/sofa-framework/sofa/pull/4646:665,Availability,failure,failures,665,"Add a lagrangian constraint working the same way as FixedProjectiveConstraint. ; Added Vec3 and Rigid3 specialization. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4646
https://github.com/sofa-framework/sofa/pull/4646:714,Availability,failure,failures,714,"Add a lagrangian constraint working the same way as FixedProjectiveConstraint. ; Added Vec3 and Rigid3 specialization. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4646
https://github.com/sofa-framework/sofa/pull/4646:284,Security,Certificate,Certificate,284,"Add a lagrangian constraint working the same way as FixedProjectiveConstraint. ; Added Vec3 and Rigid3 specialization. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4646
https://github.com/sofa-framework/sofa/pull/4646:395,Security,certificate,certificate-of-origin-dco,395,"Add a lagrangian constraint working the same way as FixedProjectiveConstraint. ; Added Vec3 and Rigid3 specialization. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4646
https://github.com/sofa-framework/sofa/pull/4646:660,Testability,test,test,660,"Add a lagrangian constraint working the same way as FixedProjectiveConstraint. ; Added Vec3 and Rigid3 specialization. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4646
https://github.com/sofa-framework/sofa/pull/4646:709,Testability,test,test,709,"Add a lagrangian constraint working the same way as FixedProjectiveConstraint. ; Added Vec3 and Rigid3 specialization. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4646
https://github.com/sofa-framework/sofa/issues/4647:27,Availability,avail,available,27,"Is there any documentation available for reference to find all information about components, attributes, and data in the simulation?. I'm refering [examples in SOFA](https://github.com/sofa-framework/sofa/tree/master/examples), [examples in SofaPyhon3](https://github.com/sofa-framework/SofaPython3/tree/master/examples), [Scenes in SofaGym](https://github.com/SofaDefrost/SofaGym/tree/main/sofagym/envs), [SOFA homepage documentation](https://www.sofa-framework.org/?post_type=doc-page&s=), and [examples of BeamAdapter](https://github.com/sofa-framework/BeamAdapter/tree/master/examples). However, it's really hard to find the elements of simulator.; For example, I wanted to make an object by using a component `MeshSTLLoader` with the desired position and orientation. However, there was no explanation what attributes can be used for position and orientation. There was even no explanation which order Euler rotation is using. Finally, I figured out them by trial and error, not by documentation. What I want to know is as follow:; 1. What components does SOFA have?; For example, in the code below, there are components: `DefaultAnimationLoop`, `MeshGmshLoader`, `EulerImplicitSolver`, `CGLinearSolver`, `PointSetTopologyContainer`, `MechanicalObject`, `UniformMass`, and `ConstantForceField`.; 2. Which attributes are usable in each component?; For example, in the code below, the component `MechanicalObject` has three attributes: `template`, `name`, and `showObject`.; 3. What data should each attribute have?; For example, in the code below, the attribute `totalForce` of the component `ConstantForceField` has six floats: `""1 0 0 0 0 0""`. ```; <?xml version=""1.0"" ?>. <!-- Loader and topology -->; <Node name=""root"" dt=""0.01"" gravity=""0 0 0"">. <RequiredPlugin name=""Sofa.Component.Mass""/>; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/>; <RequiredPlugin name=""Sofa.Component.StateContainer""/>; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/>; <RequiredPlugin name=""So",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4647
https://github.com/sofa-framework/sofa/issues/4647:973,Availability,error,error,973,"Is there any documentation available for reference to find all information about components, attributes, and data in the simulation?. I'm refering [examples in SOFA](https://github.com/sofa-framework/sofa/tree/master/examples), [examples in SofaPyhon3](https://github.com/sofa-framework/SofaPython3/tree/master/examples), [Scenes in SofaGym](https://github.com/SofaDefrost/SofaGym/tree/main/sofagym/envs), [SOFA homepage documentation](https://www.sofa-framework.org/?post_type=doc-page&s=), and [examples of BeamAdapter](https://github.com/sofa-framework/BeamAdapter/tree/master/examples). However, it's really hard to find the elements of simulator.; For example, I wanted to make an object by using a component `MeshSTLLoader` with the desired position and orientation. However, there was no explanation what attributes can be used for position and orientation. There was even no explanation which order Euler rotation is using. Finally, I figured out them by trial and error, not by documentation. What I want to know is as follow:; 1. What components does SOFA have?; For example, in the code below, there are components: `DefaultAnimationLoop`, `MeshGmshLoader`, `EulerImplicitSolver`, `CGLinearSolver`, `PointSetTopologyContainer`, `MechanicalObject`, `UniformMass`, and `ConstantForceField`.; 2. Which attributes are usable in each component?; For example, in the code below, the component `MechanicalObject` has three attributes: `template`, `name`, and `showObject`.; 3. What data should each attribute have?; For example, in the code below, the attribute `totalForce` of the component `ConstantForceField` has six floats: `""1 0 0 0 0 0""`. ```; <?xml version=""1.0"" ?>. <!-- Loader and topology -->; <Node name=""root"" dt=""0.01"" gravity=""0 0 0"">. <RequiredPlugin name=""Sofa.Component.Mass""/>; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/>; <RequiredPlugin name=""Sofa.Component.StateContainer""/>; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/>; <RequiredPlugin name=""So",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4647
https://github.com/sofa-framework/sofa/issues/4647:2357,Availability,toler,tolerance,2357,"r, there was no explanation what attributes can be used for position and orientation. There was even no explanation which order Euler rotation is using. Finally, I figured out them by trial and error, not by documentation. What I want to know is as follow:; 1. What components does SOFA have?; For example, in the code below, there are components: `DefaultAnimationLoop`, `MeshGmshLoader`, `EulerImplicitSolver`, `CGLinearSolver`, `PointSetTopologyContainer`, `MechanicalObject`, `UniformMass`, and `ConstantForceField`.; 2. Which attributes are usable in each component?; For example, in the code below, the component `MechanicalObject` has three attributes: `template`, `name`, and `showObject`.; 3. What data should each attribute have?; For example, in the code below, the attribute `totalForce` of the component `ConstantForceField` has six floats: `""1 0 0 0 0 0""`. ```; <?xml version=""1.0"" ?>. <!-- Loader and topology -->; <Node name=""root"" dt=""0.01"" gravity=""0 0 0"">. <RequiredPlugin name=""Sofa.Component.Mass""/>; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/>; <RequiredPlugin name=""Sofa.Component.StateContainer""/>; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/>; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/>; <RequiredPlugin name=""Sofa.Component.IO.Mesh""/>; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/>; ; <DefaultAnimationLoop computeBoundingBox=""false""/>. <MeshGmshLoader name=""meshLoaderCoarse"" filename=""mesh/liver.msh"" />. <Node name=""Liver"">. <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>. <PointSetTopologyContainer name=""topo"" src=""@../meshLoaderCoarse"" />. <MechanicalObject template=""Rigid3d"" name=""MechanicalModel"" showObject=""1""/>. <UniformMass totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />. </Node>; </Node>. ```. Is there any documentation available for reference to find all information about components, attributes, and data in the simulation?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4647
https://github.com/sofa-framework/sofa/issues/4647:2674,Availability,avail,available,2674,"r, there was no explanation what attributes can be used for position and orientation. There was even no explanation which order Euler rotation is using. Finally, I figured out them by trial and error, not by documentation. What I want to know is as follow:; 1. What components does SOFA have?; For example, in the code below, there are components: `DefaultAnimationLoop`, `MeshGmshLoader`, `EulerImplicitSolver`, `CGLinearSolver`, `PointSetTopologyContainer`, `MechanicalObject`, `UniformMass`, and `ConstantForceField`.; 2. Which attributes are usable in each component?; For example, in the code below, the component `MechanicalObject` has three attributes: `template`, `name`, and `showObject`.; 3. What data should each attribute have?; For example, in the code below, the attribute `totalForce` of the component `ConstantForceField` has six floats: `""1 0 0 0 0 0""`. ```; <?xml version=""1.0"" ?>. <!-- Loader and topology -->; <Node name=""root"" dt=""0.01"" gravity=""0 0 0"">. <RequiredPlugin name=""Sofa.Component.Mass""/>; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/>; <RequiredPlugin name=""Sofa.Component.StateContainer""/>; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/>; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/>; <RequiredPlugin name=""Sofa.Component.IO.Mesh""/>; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/>; ; <DefaultAnimationLoop computeBoundingBox=""false""/>. <MeshGmshLoader name=""meshLoaderCoarse"" filename=""mesh/liver.msh"" />. <Node name=""Liver"">. <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>. <PointSetTopologyContainer name=""topo"" src=""@../meshLoaderCoarse"" />. <MechanicalObject template=""Rigid3d"" name=""MechanicalModel"" showObject=""1""/>. <UniformMass totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />. </Node>; </Node>. ```. Is there any documentation available for reference to find all information about components, attributes, and data in the simulation?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4647
https://github.com/sofa-framework/sofa/issues/4647:1684,Performance,Load,Loader,1684,"omponent `MeshSTLLoader` with the desired position and orientation. However, there was no explanation what attributes can be used for position and orientation. There was even no explanation which order Euler rotation is using. Finally, I figured out them by trial and error, not by documentation. What I want to know is as follow:; 1. What components does SOFA have?; For example, in the code below, there are components: `DefaultAnimationLoop`, `MeshGmshLoader`, `EulerImplicitSolver`, `CGLinearSolver`, `PointSetTopologyContainer`, `MechanicalObject`, `UniformMass`, and `ConstantForceField`.; 2. Which attributes are usable in each component?; For example, in the code below, the component `MechanicalObject` has three attributes: `template`, `name`, and `showObject`.; 3. What data should each attribute have?; For example, in the code below, the attribute `totalForce` of the component `ConstantForceField` has six floats: `""1 0 0 0 0 0""`. ```; <?xml version=""1.0"" ?>. <!-- Loader and topology -->; <Node name=""root"" dt=""0.01"" gravity=""0 0 0"">. <RequiredPlugin name=""Sofa.Component.Mass""/>; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/>; <RequiredPlugin name=""Sofa.Component.StateContainer""/>; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/>; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/>; <RequiredPlugin name=""Sofa.Component.IO.Mesh""/>; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/>; ; <DefaultAnimationLoop computeBoundingBox=""false""/>. <MeshGmshLoader name=""meshLoaderCoarse"" filename=""mesh/liver.msh"" />. <Node name=""Liver"">. <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>. <PointSetTopologyContainer name=""topo"" src=""@../meshLoaderCoarse"" />. <MechanicalObject template=""Rigid3d"" name=""MechanicalModel"" showObject=""1""/>. <UniformMass totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />. </Node>; </Node>. ```. Is there any documentation available for reference to find ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4647
https://github.com/sofa-framework/sofa/issues/4647:1325,Usability,usab,usable,1325,"n/sofagym/envs), [SOFA homepage documentation](https://www.sofa-framework.org/?post_type=doc-page&s=), and [examples of BeamAdapter](https://github.com/sofa-framework/BeamAdapter/tree/master/examples). However, it's really hard to find the elements of simulator.; For example, I wanted to make an object by using a component `MeshSTLLoader` with the desired position and orientation. However, there was no explanation what attributes can be used for position and orientation. There was even no explanation which order Euler rotation is using. Finally, I figured out them by trial and error, not by documentation. What I want to know is as follow:; 1. What components does SOFA have?; For example, in the code below, there are components: `DefaultAnimationLoop`, `MeshGmshLoader`, `EulerImplicitSolver`, `CGLinearSolver`, `PointSetTopologyContainer`, `MechanicalObject`, `UniformMass`, and `ConstantForceField`.; 2. Which attributes are usable in each component?; For example, in the code below, the component `MechanicalObject` has three attributes: `template`, `name`, and `showObject`.; 3. What data should each attribute have?; For example, in the code below, the attribute `totalForce` of the component `ConstantForceField` has six floats: `""1 0 0 0 0 0""`. ```; <?xml version=""1.0"" ?>. <!-- Loader and topology -->; <Node name=""root"" dt=""0.01"" gravity=""0 0 0"">. <RequiredPlugin name=""Sofa.Component.Mass""/>; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/>; <RequiredPlugin name=""Sofa.Component.StateContainer""/>; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/>; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/>; <RequiredPlugin name=""Sofa.Component.IO.Mesh""/>; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/>; ; <DefaultAnimationLoop computeBoundingBox=""false""/>. <MeshGmshLoader name=""meshLoaderCoarse"" filename=""mesh/liver.msh"" />. <Node name=""Liver"">. <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-0",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4647
https://github.com/sofa-framework/sofa/pull/4648:66,Availability,avail,available,66,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648
https://github.com/sofa-framework/sofa/pull/4648:373,Availability,error,error,373,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648
https://github.com/sofa-framework/sofa/pull/4648:403,Availability,error,error,403,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648
https://github.com/sofa-framework/sofa/pull/4648:1495,Availability,failure,failures,1495,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648
https://github.com/sofa-framework/sofa/pull/4648:1544,Availability,failure,failures,1544,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648
https://github.com/sofa-framework/sofa/pull/4648:544,Deployability,install,installation,544,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648
https://github.com/sofa-framework/sofa/pull/4648:605,Deployability,install,installation,605,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648
https://github.com/sofa-framework/sofa/pull/4648:19,Integrability,message,message,19,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648
https://github.com/sofa-framework/sofa/pull/4648:1114,Security,Certificate,Certificate,1114,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648
https://github.com/sofa-framework/sofa/pull/4648:1225,Security,certificate,certificate-of-origin-dco,1225,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648
https://github.com/sofa-framework/sofa/pull/4648:1490,Testability,test,test,1490,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648
https://github.com/sofa-framework/sofa/pull/4648:1539,Testability,test,test,1539,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648
https://github.com/sofa-framework/sofa/pull/4648:818,Usability,simpl,simpler,818,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648
https://github.com/sofa-framework/sofa/pull/4649:269,Availability,avail,available,269,"StiffSpringForceField is basically an extension of SpringForcefield adding implicit solving. ; The only added value comes from the ability to define the springs using added data indices1, indices2 and lengths. This mechanism need to also be merged with the current one available in SpringForceField. . Related to https://github.com/sofa-framework/sofa/issues/248. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649
https://github.com/sofa-framework/sofa/pull/4649:908,Availability,failure,failures,908,"StiffSpringForceField is basically an extension of SpringForcefield adding implicit solving. ; The only added value comes from the ability to define the springs using added data indices1, indices2 and lengths. This mechanism need to also be merged with the current one available in SpringForceField. . Related to https://github.com/sofa-framework/sofa/issues/248. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649
https://github.com/sofa-framework/sofa/pull/4649:957,Availability,failure,failures,957,"StiffSpringForceField is basically an extension of SpringForcefield adding implicit solving. ; The only added value comes from the ability to define the springs using added data indices1, indices2 and lengths. This mechanism need to also be merged with the current one available in SpringForceField. . Related to https://github.com/sofa-framework/sofa/issues/248. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649
https://github.com/sofa-framework/sofa/pull/4649:527,Security,Certificate,Certificate,527,"StiffSpringForceField is basically an extension of SpringForcefield adding implicit solving. ; The only added value comes from the ability to define the springs using added data indices1, indices2 and lengths. This mechanism need to also be merged with the current one available in SpringForceField. . Related to https://github.com/sofa-framework/sofa/issues/248. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649
https://github.com/sofa-framework/sofa/pull/4649:638,Security,certificate,certificate-of-origin-dco,638,"StiffSpringForceField is basically an extension of SpringForcefield adding implicit solving. ; The only added value comes from the ability to define the springs using added data indices1, indices2 and lengths. This mechanism need to also be merged with the current one available in SpringForceField. . Related to https://github.com/sofa-framework/sofa/issues/248. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649
https://github.com/sofa-framework/sofa/pull/4649:903,Testability,test,test,903,"StiffSpringForceField is basically an extension of SpringForcefield adding implicit solving. ; The only added value comes from the ability to define the springs using added data indices1, indices2 and lengths. This mechanism need to also be merged with the current one available in SpringForceField. . Related to https://github.com/sofa-framework/sofa/issues/248. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649
https://github.com/sofa-framework/sofa/pull/4649:952,Testability,test,test,952,"StiffSpringForceField is basically an extension of SpringForcefield adding implicit solving. ; The only added value comes from the ability to define the springs using added data indices1, indices2 and lengths. This mechanism need to also be merged with the current one available in SpringForceField. . Related to https://github.com/sofa-framework/sofa/issues/248. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649
https://github.com/sofa-framework/sofa/pull/4650:691,Availability,failure,failures,691,"![image](https://github.com/sofa-framework/sofa/assets/10572752/9efe690d-6257-44a9-a7af-2c11d7510740). TODO:; - [ ] Add this feature in SofaImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4650
https://github.com/sofa-framework/sofa/pull/4650:740,Availability,failure,failures,740,"![image](https://github.com/sofa-framework/sofa/assets/10572752/9efe690d-6257-44a9-a7af-2c11d7510740). TODO:; - [ ] Add this feature in SofaImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4650
https://github.com/sofa-framework/sofa/pull/4650:310,Security,Certificate,Certificate,310,"![image](https://github.com/sofa-framework/sofa/assets/10572752/9efe690d-6257-44a9-a7af-2c11d7510740). TODO:; - [ ] Add this feature in SofaImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4650
https://github.com/sofa-framework/sofa/pull/4650:421,Security,certificate,certificate-of-origin-dco,421,"![image](https://github.com/sofa-framework/sofa/assets/10572752/9efe690d-6257-44a9-a7af-2c11d7510740). TODO:; - [ ] Add this feature in SofaImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4650
https://github.com/sofa-framework/sofa/pull/4650:686,Testability,test,test,686,"![image](https://github.com/sofa-framework/sofa/assets/10572752/9efe690d-6257-44a9-a7af-2c11d7510740). TODO:; - [ ] Add this feature in SofaImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4650
https://github.com/sofa-framework/sofa/pull/4650:735,Testability,test,test,735,"![image](https://github.com/sofa-framework/sofa/assets/10572752/9efe690d-6257-44a9-a7af-2c11d7510740). TODO:; - [ ] Add this feature in SofaImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4650
https://github.com/sofa-framework/sofa/pull/4651:621,Availability,failure,failures,621,"[ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/106]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651
https://github.com/sofa-framework/sofa/pull/4651:670,Availability,failure,failures,670,"[ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/106]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651
https://github.com/sofa-framework/sofa/pull/4651:4,Integrability,depend,depends-on,4,"[ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/106]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651
https://github.com/sofa-framework/sofa/pull/4651:240,Security,Certificate,Certificate,240,"[ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/106]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651
https://github.com/sofa-framework/sofa/pull/4651:351,Security,certificate,certificate-of-origin-dco,351,"[ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/106]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651
https://github.com/sofa-framework/sofa/pull/4651:616,Testability,test,test,616,"[ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/106]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651
https://github.com/sofa-framework/sofa/pull/4651:665,Testability,test,test,665,"[ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/106]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651
https://github.com/sofa-framework/sofa/issues/4656:388,Availability,error,error,388,"### Docker image compilation fail; Hello, I tried to compile the sofa sources by the docker image, everything was fine until failuer: ; ```; In file included from /home/sofa/build/Sofa/GUI/Qt/src/sofa/gui/qt/panels/moc_QDocBrowser.cpp:9:; /home/sofa/build/Sofa/GUI/Qt/src/sofa/gui/qt/panels/../../../../../../../../../sources/Sofa/GUI/Qt/src/sofa/gui/qt/panels/QDocBrowser.h:28:10: fatal error: QWebEngineView: No such file or directory; 28 | #include <QWebEngineView>; | ^~~~~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Sofa/GUI/Qt/CMakeFiles/Sofa.GUI.Qt.dir/build.make:771: Sofa/GUI/Qt/CMakeFiles/Sofa.GUI.Qt.dir/src/sofa/gui/qt/panels/moc_QDocBrowser.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:10544: Sofa/GUI/Qt/CMakeFiles/Sofa.GUI.Qt.dir/all] Error 2; make: *** [Makefile:156: all] Error 2. ```; Is there a fix to it ? thanks",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4656
https://github.com/sofa-framework/sofa/issues/4656:669,Availability,Error,Error,669,"### Docker image compilation fail; Hello, I tried to compile the sofa sources by the docker image, everything was fine until failuer: ; ```; In file included from /home/sofa/build/Sofa/GUI/Qt/src/sofa/gui/qt/panels/moc_QDocBrowser.cpp:9:; /home/sofa/build/Sofa/GUI/Qt/src/sofa/gui/qt/panels/../../../../../../../../../sources/Sofa/GUI/Qt/src/sofa/gui/qt/panels/QDocBrowser.h:28:10: fatal error: QWebEngineView: No such file or directory; 28 | #include <QWebEngineView>; | ^~~~~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Sofa/GUI/Qt/CMakeFiles/Sofa.GUI.Qt.dir/build.make:771: Sofa/GUI/Qt/CMakeFiles/Sofa.GUI.Qt.dir/src/sofa/gui/qt/panels/moc_QDocBrowser.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:10544: Sofa/GUI/Qt/CMakeFiles/Sofa.GUI.Qt.dir/all] Error 2; make: *** [Makefile:156: all] Error 2. ```; Is there a fix to it ? thanks",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4656
https://github.com/sofa-framework/sofa/issues/4656:764,Availability,Error,Error,764,"### Docker image compilation fail; Hello, I tried to compile the sofa sources by the docker image, everything was fine until failuer: ; ```; In file included from /home/sofa/build/Sofa/GUI/Qt/src/sofa/gui/qt/panels/moc_QDocBrowser.cpp:9:; /home/sofa/build/Sofa/GUI/Qt/src/sofa/gui/qt/panels/../../../../../../../../../sources/Sofa/GUI/Qt/src/sofa/gui/qt/panels/QDocBrowser.h:28:10: fatal error: QWebEngineView: No such file or directory; 28 | #include <QWebEngineView>; | ^~~~~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Sofa/GUI/Qt/CMakeFiles/Sofa.GUI.Qt.dir/build.make:771: Sofa/GUI/Qt/CMakeFiles/Sofa.GUI.Qt.dir/src/sofa/gui/qt/panels/moc_QDocBrowser.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:10544: Sofa/GUI/Qt/CMakeFiles/Sofa.GUI.Qt.dir/all] Error 2; make: *** [Makefile:156: all] Error 2. ```; Is there a fix to it ? thanks",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4656
https://github.com/sofa-framework/sofa/issues/4656:803,Availability,Error,Error,803,"### Docker image compilation fail; Hello, I tried to compile the sofa sources by the docker image, everything was fine until failuer: ; ```; In file included from /home/sofa/build/Sofa/GUI/Qt/src/sofa/gui/qt/panels/moc_QDocBrowser.cpp:9:; /home/sofa/build/Sofa/GUI/Qt/src/sofa/gui/qt/panels/../../../../../../../../../sources/Sofa/GUI/Qt/src/sofa/gui/qt/panels/QDocBrowser.h:28:10: fatal error: QWebEngineView: No such file or directory; 28 | #include <QWebEngineView>; | ^~~~~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Sofa/GUI/Qt/CMakeFiles/Sofa.GUI.Qt.dir/build.make:771: Sofa/GUI/Qt/CMakeFiles/Sofa.GUI.Qt.dir/src/sofa/gui/qt/panels/moc_QDocBrowser.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:10544: Sofa/GUI/Qt/CMakeFiles/Sofa.GUI.Qt.dir/all] Error 2; make: *** [Makefile:156: all] Error 2. ```; Is there a fix to it ? thanks",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4656
https://github.com/sofa-framework/sofa/pull/4661:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4661
https://github.com/sofa-framework/sofa/pull/4661:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4661
https://github.com/sofa-framework/sofa/pull/4661:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4661
https://github.com/sofa-framework/sofa/pull/4661:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4661
https://github.com/sofa-framework/sofa/pull/4661:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4661
https://github.com/sofa-framework/sofa/pull/4661:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4661
https://github.com/sofa-framework/sofa/pull/4664:573,Availability,failure,failures,573,"According to the guidelines. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4664
https://github.com/sofa-framework/sofa/pull/4664:622,Availability,failure,failures,622,"According to the guidelines. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4664
https://github.com/sofa-framework/sofa/pull/4664:192,Security,Certificate,Certificate,192,"According to the guidelines. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4664
https://github.com/sofa-framework/sofa/pull/4664:303,Security,certificate,certificate-of-origin-dco,303,"According to the guidelines. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4664
