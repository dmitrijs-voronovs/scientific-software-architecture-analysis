id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://scanpy.readthedocs.io/index-wcopy.html:4910,Deployability,release,release,4910,re.rst; scanpy.pl.paga_path.rst; scanpy.pl.pca.rst; scanpy.pl.pca_loadings.rst; scanpy.pl.pca_overview.rst; scanpy.pl.pca_variance_ratio.rst; scanpy.pl.rank_genes_groups.rst; scanpy.pl.rank_genes_groups_dotplot.rst; scanpy.pl.rank_genes_groups_heatmap.rst; scanpy.pl.rank_genes_groups_matrixplot.rst; scanpy.pl.rank_genes_groups_stacked_violin.rst; scanpy.pl.rank_genes_groups_tracksplot.rst; scanpy.pl.rank_genes_groups_violin.rst; scanpy.pl.scrublet_score_distribution.rst; scanpy.pl.sim.rst; scanpy.pl.spatial.rst; scanpy.pl.tsne.rst; scanpy.pl.umap.rst; scanpy.pp.combat.rst; scanpy.pp.neighbors.rst; scanpy.pp.recipe_seurat.rst; scanpy.pp.recipe_weinreb17.rst; scanpy.pp.recipe_zheng17.rst; scanpy.pp.scrublet.rst; scanpy.pp.scrublet_simulate_doublets.rst. classes.md; datasets.md; deprecated.md; experimental.md; get.md; index.md; metrics.md; plotting.md; preprocessing.md; queries.md; reading.md; settings.md; tools.md. /dev; ; ci.md; code.md; documentation.md; getting-set-up.md; index.md; release.md; testing.md; versioning.md. /external; . /generated; ; scanpy.external.tl.cyclone.rst; scanpy.external.tl.harmony_timeseries.rst; scanpy.external.tl.palantir.rst; scanpy.external.tl.palantir_results.rst; scanpy.external.tl.phate.rst; scanpy.external.tl.phenograph.rst; scanpy.external.tl.sam.rst; scanpy.external.tl.sandbag.rst; scanpy.external.tl.trimap.rst; scanpy.external.tl.wishbone.rst. exporting.md; index.md; plotting.md; preprocessing.md; tools.md. /generated; ; scanpy._settings.ScanpyConfig.autosave.rst; scanpy._settings.ScanpyConfig.autoshow.rst; scanpy._settings.ScanpyConfig.cache_compression.rst; scanpy._settings.ScanpyConfig.cachedir.rst; scanpy._settings.ScanpyConfig.categories_to_ignore.rst; scanpy._settings.ScanpyConfig.datasetdir.rst; scanpy._settings.ScanpyConfig.figdir.rst; scanpy._settings.ScanpyConfig.file_format_data.rst; scanpy._settings.ScanpyConfig.file_format_figs.rst; scanpy._settings.ScanpyConfig.logfile.rst; scanpy._settings.ScanpyConfig.logpath.rst; ,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:6545,Deployability,toggle,toggleswitch,6545,ScanpyConfig.cachedir.rst; scanpy._settings.ScanpyConfig.categories_to_ignore.rst; scanpy._settings.ScanpyConfig.datasetdir.rst; scanpy._settings.ScanpyConfig.figdir.rst; scanpy._settings.ScanpyConfig.file_format_data.rst; scanpy._settings.ScanpyConfig.file_format_figs.rst; scanpy._settings.ScanpyConfig.logfile.rst; scanpy._settings.ScanpyConfig.logpath.rst; scanpy._settings.ScanpyConfig.max_memory.rst; scanpy._settings.ScanpyConfig.n_jobs.rst; scanpy._settings.ScanpyConfig.N_PCS.rst; scanpy._settings.ScanpyConfig.plot_suffix.rst; scanpy._settings.ScanpyConfig.rst; scanpy._settings.ScanpyConfig.set_figure_params.rst; scanpy._settings.ScanpyConfig.verbosity.rst; scanpy._settings.ScanpyConfig.writedir.rst; scanpy.datasets.blobs.rst; scanpy.datasets.ebi_expression_atlas.rst; scanpy.datasets.krumsiek11.rst; scanpy.datasets.moignard15.rst; scanpy.datasets.paul15.rst; scanpy.datasets.pbmc3k.rst; scanpy.datasets.pbmc3k_processed.rst; scanpy.datasets.pbmc68k_reduced.rst; scanpy.datasets.toggleswitch.rst; scanpy.datasets.visium_sge.rst; scanpy.experimental.pp.highly_variable_genes.rst; scanpy.experimental.pp.normalize_pearson_residuals.rst; scanpy.experimental.pp.normalize_pearson_residuals_pca.rst; scanpy.experimental.pp.recipe_pearson_residuals.rst; scanpy.external.exporting.cellbrowser.rst; scanpy.external.exporting.spring_project.rst; scanpy.external.pl.phate.rst; scanpy.external.pl.sam.rst; scanpy.external.pl.trimap.rst; scanpy.external.pl.wishbone_marker_trajectory.rst; scanpy.external.pp.bbknn.rst; scanpy.external.pp.dca.rst; scanpy.external.pp.harmony_integrate.rst; scanpy.external.pp.hashsolo.rst; scanpy.external.pp.magic.rst; scanpy.external.pp.mnn_correct.rst; scanpy.external.pp.scanorama_integrate.rst; scanpy.get.aggregate.rst; scanpy.get.obs_df.rst; scanpy.get.rank_genes_groups_df.rst; scanpy.get.var_df.rst; scanpy.logging.print_header.rst; scanpy.logging.print_versions.rst; scanpy.metrics.confusion_matrix.rst; scanpy.metrics.gearys_c.rst; scanpy.metrics.morans_i,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:9629,Deployability,release,release-notes,9629,scanpy.pp.subsample.rst; scanpy.queries.biomart_annotations.rst; scanpy.queries.enrich.rst; scanpy.queries.gene_coordinates.rst; scanpy.queries.mitochondrial_genes.rst; scanpy.read.rst; scanpy.read_10x_h5.rst; scanpy.read_10x_mtx.rst; scanpy.read_csv.rst; scanpy.read_excel.rst; scanpy.read_h5ad.rst; scanpy.read_hdf.rst; scanpy.read_loom.rst; scanpy.read_mtx.rst; scanpy.read_text.rst; scanpy.read_umi_tools.rst; scanpy.read_visium.rst; scanpy.set_figure_params.rst; scanpy.tl.dendrogram.rst; scanpy.tl.diffmap.rst; scanpy.tl.dpt.rst; scanpy.tl.draw_graph.rst; scanpy.tl.embedding_density.rst; scanpy.tl.filter_rank_genes_groups.rst; scanpy.tl.ingest.rst; scanpy.tl.leiden.rst; scanpy.tl.louvain.rst; scanpy.tl.marker_gene_overlap.rst; scanpy.tl.paga.rst; scanpy.tl.rank_genes_groups.rst; scanpy.tl.score_genes.rst; scanpy.tl.score_genes_cell_cycle.rst; scanpy.tl.sim.rst; scanpy.tl.tsne.rst; scanpy.tl.umap.rst. /how-to; ; index.md; knn-transformers.ipynb; plotting-with-marsilea.ipynb. /release-notes; ; index.md. /tutorials; . /basics; ; clustering.ipynb; clustering-2017.ipynb; index.md; integrating-data-using-ingest.ipynb. /experimental; ; dask.ipynb; index.md; pearson_residuals.ipynb. /plotting; ; advanced.ipynb; core.ipynb; index.md. /spatial; ; index.md; integration-scanorama.ipynb. /trajectories; ; index.md; paga-paul15.ipynb. index.md. community.md; contributors.md; ecosystem.md; index.md; installation.md; news.md; references.rst; usage-principles.md. /_static; . /css; ; rtd_sphinx_search.min.css. /js; ; rtd_search_config.js; rtd_sphinx_search.min.js. /scripts; ; bootstrap.js; pydata-sphinx-theme.js; rtd-sphinx-search.js; sphinx-book-theme.js. /styles; ; bootstrap.css; pydata-sphinx-theme.css; scanpy.css; sphinx-book-theme.css; theme.css. /vendor; . /fontawesome; . /6.5.2; . /css; ; all.min.css. /js; ; all.min.js. /webfonts; ; fa-brands-400.ttf; fa-brands-400.woff2; fa-regular-400.ttf; fa-regular-400.woff2; fa-solid-900.ttf; fa-solid-900.woff2; fa-v4compatibility.ttf; fa-v,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:9732,Deployability,integrat,integrating-data-using-ingest,9732,.gene_coordinates.rst; scanpy.queries.mitochondrial_genes.rst; scanpy.read.rst; scanpy.read_10x_h5.rst; scanpy.read_10x_mtx.rst; scanpy.read_csv.rst; scanpy.read_excel.rst; scanpy.read_h5ad.rst; scanpy.read_hdf.rst; scanpy.read_loom.rst; scanpy.read_mtx.rst; scanpy.read_text.rst; scanpy.read_umi_tools.rst; scanpy.read_visium.rst; scanpy.set_figure_params.rst; scanpy.tl.dendrogram.rst; scanpy.tl.diffmap.rst; scanpy.tl.dpt.rst; scanpy.tl.draw_graph.rst; scanpy.tl.embedding_density.rst; scanpy.tl.filter_rank_genes_groups.rst; scanpy.tl.ingest.rst; scanpy.tl.leiden.rst; scanpy.tl.louvain.rst; scanpy.tl.marker_gene_overlap.rst; scanpy.tl.paga.rst; scanpy.tl.rank_genes_groups.rst; scanpy.tl.score_genes.rst; scanpy.tl.score_genes_cell_cycle.rst; scanpy.tl.sim.rst; scanpy.tl.tsne.rst; scanpy.tl.umap.rst. /how-to; ; index.md; knn-transformers.ipynb; plotting-with-marsilea.ipynb. /release-notes; ; index.md. /tutorials; . /basics; ; clustering.ipynb; clustering-2017.ipynb; index.md; integrating-data-using-ingest.ipynb. /experimental; ; dask.ipynb; index.md; pearson_residuals.ipynb. /plotting; ; advanced.ipynb; core.ipynb; index.md. /spatial; ; index.md; integration-scanorama.ipynb. /trajectories; ; index.md; paga-paul15.ipynb. index.md. community.md; contributors.md; ecosystem.md; index.md; installation.md; news.md; references.rst; usage-principles.md. /_static; . /css; ; rtd_sphinx_search.min.css. /js; ; rtd_search_config.js; rtd_sphinx_search.min.js. /scripts; ; bootstrap.js; pydata-sphinx-theme.js; rtd-sphinx-search.js; sphinx-book-theme.js. /styles; ; bootstrap.css; pydata-sphinx-theme.css; scanpy.css; sphinx-book-theme.css; theme.css. /vendor; . /fontawesome; . /6.5.2; . /css; ; all.min.css. /js; ; all.min.js. /webfonts; ; fa-brands-400.ttf; fa-brands-400.woff2; fa-regular-400.ttf; fa-regular-400.woff2; fa-solid-900.ttf; fa-solid-900.woff2; fa-v4compatibility.ttf; fa-v4compatibility.woff2. basic.css; clipboard.min.js; copybutton.css; copybutton.js; design-tabs.js; doctool,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:9906,Deployability,integrat,integration-scanorama,9906,t; scanpy.read_h5ad.rst; scanpy.read_hdf.rst; scanpy.read_loom.rst; scanpy.read_mtx.rst; scanpy.read_text.rst; scanpy.read_umi_tools.rst; scanpy.read_visium.rst; scanpy.set_figure_params.rst; scanpy.tl.dendrogram.rst; scanpy.tl.diffmap.rst; scanpy.tl.dpt.rst; scanpy.tl.draw_graph.rst; scanpy.tl.embedding_density.rst; scanpy.tl.filter_rank_genes_groups.rst; scanpy.tl.ingest.rst; scanpy.tl.leiden.rst; scanpy.tl.louvain.rst; scanpy.tl.marker_gene_overlap.rst; scanpy.tl.paga.rst; scanpy.tl.rank_genes_groups.rst; scanpy.tl.score_genes.rst; scanpy.tl.score_genes_cell_cycle.rst; scanpy.tl.sim.rst; scanpy.tl.tsne.rst; scanpy.tl.umap.rst. /how-to; ; index.md; knn-transformers.ipynb; plotting-with-marsilea.ipynb. /release-notes; ; index.md. /tutorials; . /basics; ; clustering.ipynb; clustering-2017.ipynb; index.md; integrating-data-using-ingest.ipynb. /experimental; ; dask.ipynb; index.md; pearson_residuals.ipynb. /plotting; ; advanced.ipynb; core.ipynb; index.md. /spatial; ; index.md; integration-scanorama.ipynb. /trajectories; ; index.md; paga-paul15.ipynb. index.md. community.md; contributors.md; ecosystem.md; index.md; installation.md; news.md; references.rst; usage-principles.md. /_static; . /css; ; rtd_sphinx_search.min.css. /js; ; rtd_search_config.js; rtd_sphinx_search.min.js. /scripts; ; bootstrap.js; pydata-sphinx-theme.js; rtd-sphinx-search.js; sphinx-book-theme.js. /styles; ; bootstrap.css; pydata-sphinx-theme.css; scanpy.css; sphinx-book-theme.css; theme.css. /vendor; . /fontawesome; . /6.5.2; . /css; ; all.min.css. /js; ; all.min.js. /webfonts; ; fa-brands-400.ttf; fa-brands-400.woff2; fa-regular-400.ttf; fa-regular-400.woff2; fa-solid-900.ttf; fa-solid-900.woff2; fa-v4compatibility.ttf; fa-v4compatibility.woff2. basic.css; clipboard.min.js; copybutton.css; copybutton.js; design-tabs.js; doctools.js; documentation_options.js; language_data.js; mystnb.4510f1fc1dee50b3e5859aac5469c37c29e427902b24a333a5f9fcb2f0b3ac41.css; plot_directive.css; pygments.css; Scanpy_Lo,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:10046,Deployability,install,installation,10046,t; scanpy.read_visium.rst; scanpy.set_figure_params.rst; scanpy.tl.dendrogram.rst; scanpy.tl.diffmap.rst; scanpy.tl.dpt.rst; scanpy.tl.draw_graph.rst; scanpy.tl.embedding_density.rst; scanpy.tl.filter_rank_genes_groups.rst; scanpy.tl.ingest.rst; scanpy.tl.leiden.rst; scanpy.tl.louvain.rst; scanpy.tl.marker_gene_overlap.rst; scanpy.tl.paga.rst; scanpy.tl.rank_genes_groups.rst; scanpy.tl.score_genes.rst; scanpy.tl.score_genes_cell_cycle.rst; scanpy.tl.sim.rst; scanpy.tl.tsne.rst; scanpy.tl.umap.rst. /how-to; ; index.md; knn-transformers.ipynb; plotting-with-marsilea.ipynb. /release-notes; ; index.md. /tutorials; . /basics; ; clustering.ipynb; clustering-2017.ipynb; index.md; integrating-data-using-ingest.ipynb. /experimental; ; dask.ipynb; index.md; pearson_residuals.ipynb. /plotting; ; advanced.ipynb; core.ipynb; index.md. /spatial; ; index.md; integration-scanorama.ipynb. /trajectories; ; index.md; paga-paul15.ipynb. index.md. community.md; contributors.md; ecosystem.md; index.md; installation.md; news.md; references.rst; usage-principles.md. /_static; . /css; ; rtd_sphinx_search.min.css. /js; ; rtd_search_config.js; rtd_sphinx_search.min.js. /scripts; ; bootstrap.js; pydata-sphinx-theme.js; rtd-sphinx-search.js; sphinx-book-theme.js. /styles; ; bootstrap.css; pydata-sphinx-theme.css; scanpy.css; sphinx-book-theme.css; theme.css. /vendor; . /fontawesome; . /6.5.2; . /css; ; all.min.css. /js; ; all.min.js. /webfonts; ; fa-brands-400.ttf; fa-brands-400.woff2; fa-regular-400.ttf; fa-regular-400.woff2; fa-solid-900.ttf; fa-solid-900.woff2; fa-v4compatibility.ttf; fa-v4compatibility.woff2. basic.css; clipboard.min.js; copybutton.css; copybutton.js; design-tabs.js; doctools.js; documentation_options.js; language_data.js; mystnb.4510f1fc1dee50b3e5859aac5469c37c29e427902b24a333a5f9fcb2f0b3ac41.css; plot_directive.css; pygments.css; Scanpy_Logo_BrightFG.svg; searchtools.js; sphinx_highlight.js; sphinx-design.min.css; tabs.css; tabs.js. /api; . /generated; . /classes; ; scanpy,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:16670,Deployability,release,release,16670,rank_genes_groups_heatmap — scanpy; scanpy.pl.rank_genes_groups_matrixplot — scanpy; scanpy.pl.rank_genes_groups_stacked_violin — scanpy; scanpy.pl.rank_genes_groups_tracksplot — scanpy; scanpy.pl.rank_genes_groups_violin — scanpy; scanpy.pl.scrublet_score_distribution — scanpy; scanpy.pl.sim — scanpy; scanpy.pl.spatial — scanpy; scanpy.pl.tsne — scanpy; scanpy.pl.umap — scanpy; scanpy.pp.combat — scanpy; scanpy.pp.neighbors — scanpy; scanpy.pp.recipe_seurat — scanpy; scanpy.pp.recipe_weinreb17 — scanpy; scanpy.pp.recipe_zheng17 — scanpy; scanpy.pp.scrublet — scanpy; scanpy.pp.scrublet_simulate_doublets — scanpy. Classes — scanpy; Datasets — scanpy; Deprecated functions — scanpy; Experimental — scanpy; Get object from AnnData: get — scanpy; API — scanpy; Metrics — scanpy; Plotting: pl — scanpy; Preprocessing: pp — scanpy; Queries — scanpy; Reading — scanpy; Settings — scanpy; Tools: tl — scanpy. /dev; ; CI — scanpy; Contributing code — scanpy; Documentation — scanpy; Getting set up — scanpy; Contributing — scanpy; Making a release — scanpy; Tests — scanpy; Versioning — scanpy. /external; . /generated; ; scanpy.external.tl.cyclone — scanpy; scanpy.external.tl.harmony_timeseries — scanpy; scanpy.external.tl.palantir — scanpy; scanpy.external.tl.palantir_results — scanpy; scanpy.external.tl.phate — scanpy; scanpy.external.tl.phenograph — scanpy; scanpy.external.tl.sam — scanpy; scanpy.external.tl.sandbag — scanpy; scanpy.external.tl.trimap — scanpy; scanpy.external.tl.wishbone — scanpy. Exporting — scanpy; External API — scanpy; Plotting: PL — scanpy; Preprocessing: PP — scanpy; Tools: TL — scanpy. /generated; ; scanpy._settings.ScanpyConfig.autosave — scanpy; scanpy._settings.ScanpyConfig.autoshow — scanpy; scanpy._settings.ScanpyConfig.cache_compression — scanpy; scanpy._settings.ScanpyConfig.cachedir — scanpy; scanpy._settings.ScanpyConfig.categories_to_ignore — scanpy; scanpy._settings.ScanpyConfig.datasetdir — scanpy; scanpy._settings.ScanpyConfig.figdir — scanpy; ,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:18555,Deployability,toggle,toggleswitch,18555,tdir — scanpy; scanpy._settings.ScanpyConfig.figdir — scanpy; scanpy._settings.ScanpyConfig.file_format_data — scanpy; scanpy._settings.ScanpyConfig.file_format_figs — scanpy; scanpy._settings.ScanpyConfig — scanpy; scanpy._settings.ScanpyConfig.logfile — scanpy; scanpy._settings.ScanpyConfig.logpath — scanpy; scanpy._settings.ScanpyConfig.max_memory — scanpy; scanpy._settings.ScanpyConfig.n_jobs — scanpy; scanpy._settings.ScanpyConfig.N_PCS — scanpy; scanpy._settings.ScanpyConfig.plot_suffix — scanpy; scanpy._settings.ScanpyConfig.set_figure_params — scanpy; scanpy._settings.ScanpyConfig.verbosity — scanpy; scanpy._settings.ScanpyConfig.writedir — scanpy; scanpy.datasets.blobs — scanpy; scanpy.datasets.ebi_expression_atlas — scanpy; scanpy.datasets.krumsiek11 — scanpy; scanpy.datasets.moignard15 — scanpy; scanpy.datasets.paul15 — scanpy; scanpy.datasets.pbmc3k — scanpy; scanpy.datasets.pbmc3k_processed — scanpy; scanpy.datasets.pbmc68k_reduced — scanpy; scanpy.datasets.toggleswitch — scanpy; scanpy.datasets.visium_sge — scanpy; scanpy.experimental.pp.highly_variable_genes — scanpy; scanpy.experimental.pp.normalize_pearson_residuals — scanpy; scanpy.experimental.pp.normalize_pearson_residuals_pca — scanpy; scanpy.experimental.pp.recipe_pearson_residuals — scanpy; scanpy.external.exporting.cellbrowser — scanpy; scanpy.external.exporting.spring_project — scanpy; scanpy.external.pl.phate — scanpy; scanpy.external.pl.sam — scanpy; scanpy.external.pl.trimap — scanpy; scanpy.external.pl.wishbone_marker_trajectory — scanpy; scanpy.external.pp.bbknn — scanpy; scanpy.external.pp.dca — scanpy; scanpy.external.pp.harmony_integrate — scanpy; scanpy.external.pp.hashsolo — scanpy; scanpy.external.pp.magic — scanpy; scanpy.external.pp.mnn_correct — scanpy; scanpy.external.pp.scanorama_integrate — scanpy; scanpy.get.aggregate — scanpy; scanpy.get.obs_df — scanpy; scanpy.get.rank_genes_groups_df — scanpy; scanpy.get.var_df — scanpy; scanpy.logging.print_header — scanpy; scanpy.loggi,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:22166,Deployability,release,release-notes,22166,scanpy.read_10x_h5 — scanpy; scanpy.read_10x_mtx — scanpy; scanpy.read_csv — scanpy; scanpy.read_excel — scanpy; scanpy.read_h5ad — scanpy; scanpy.read_hdf — scanpy; scanpy.read_loom — scanpy; scanpy.read_mtx — scanpy; scanpy.read_text — scanpy; scanpy.read_umi_tools — scanpy; scanpy.read_visium — scanpy; scanpy.set_figure_params — scanpy; scanpy.tl.dendrogram — scanpy; scanpy.tl.diffmap — scanpy; scanpy.tl.dpt — scanpy; scanpy.tl.draw_graph — scanpy; scanpy.tl.embedding_density — scanpy; scanpy.tl.filter_rank_genes_groups — scanpy; scanpy.tl.ingest — scanpy; scanpy.tl.leiden — scanpy; scanpy.tl.louvain — scanpy; scanpy.tl.marker_gene_overlap — scanpy; scanpy.tl.paga — scanpy; scanpy.tl.rank_genes_groups — scanpy; scanpy.tl.score_genes — scanpy; scanpy.tl.score_genes_cell_cycle — scanpy; scanpy.tl.sim — scanpy; scanpy.tl.tsne — scanpy; scanpy.tl.umap — scanpy. /how-to; ; How to — scanpy; Using other kNN libraries in Scanpy — scanpy; Plotting with Marsilea — scanpy. /release-notes; ; Release notes — scanpy. /tutorials; . /basics; ; Preprocessing and clustering — scanpy; Preprocessing and clustering 3k PBMCs (legacy workflow) — scanpy; Basics — scanpy; Integrating data using ingest and BBKNN — scanpy. /experimental; ; Using dask with Scanpy — scanpy; Experimental — scanpy; How to preprocess UMI count data with analytic Pearson residuals — scanpy. /plotting; ; Customizing Scanpy plots — scanpy; Core plotting functions — scanpy; Plotting — scanpy. /spatial; ; Analysis and visualization of spatial transcriptomics data — scanpy; Spatial — scanpy; Integrating spatial data with scRNA-seq using scanorama — scanpy. /trajectories; ; Trajectories — scanpy; Trajectory inference for hematopoiesis in mouse — scanpy. Tutorials — scanpy. Community — scanpy; Contributors — scanpy; Ecosystem — scanpy; Index — scanpy; Scanpy – Single-Cell Analysis in Python — scanpy; Installation — scanpy; News — scanpy; References — scanpy; Search - scanpy; searchindex.js; Scanpy – Single-Cell Analysi,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:9732,Integrability,integrat,integrating-data-using-ingest,9732,.gene_coordinates.rst; scanpy.queries.mitochondrial_genes.rst; scanpy.read.rst; scanpy.read_10x_h5.rst; scanpy.read_10x_mtx.rst; scanpy.read_csv.rst; scanpy.read_excel.rst; scanpy.read_h5ad.rst; scanpy.read_hdf.rst; scanpy.read_loom.rst; scanpy.read_mtx.rst; scanpy.read_text.rst; scanpy.read_umi_tools.rst; scanpy.read_visium.rst; scanpy.set_figure_params.rst; scanpy.tl.dendrogram.rst; scanpy.tl.diffmap.rst; scanpy.tl.dpt.rst; scanpy.tl.draw_graph.rst; scanpy.tl.embedding_density.rst; scanpy.tl.filter_rank_genes_groups.rst; scanpy.tl.ingest.rst; scanpy.tl.leiden.rst; scanpy.tl.louvain.rst; scanpy.tl.marker_gene_overlap.rst; scanpy.tl.paga.rst; scanpy.tl.rank_genes_groups.rst; scanpy.tl.score_genes.rst; scanpy.tl.score_genes_cell_cycle.rst; scanpy.tl.sim.rst; scanpy.tl.tsne.rst; scanpy.tl.umap.rst. /how-to; ; index.md; knn-transformers.ipynb; plotting-with-marsilea.ipynb. /release-notes; ; index.md. /tutorials; . /basics; ; clustering.ipynb; clustering-2017.ipynb; index.md; integrating-data-using-ingest.ipynb. /experimental; ; dask.ipynb; index.md; pearson_residuals.ipynb. /plotting; ; advanced.ipynb; core.ipynb; index.md. /spatial; ; index.md; integration-scanorama.ipynb. /trajectories; ; index.md; paga-paul15.ipynb. index.md. community.md; contributors.md; ecosystem.md; index.md; installation.md; news.md; references.rst; usage-principles.md. /_static; . /css; ; rtd_sphinx_search.min.css. /js; ; rtd_search_config.js; rtd_sphinx_search.min.js. /scripts; ; bootstrap.js; pydata-sphinx-theme.js; rtd-sphinx-search.js; sphinx-book-theme.js. /styles; ; bootstrap.css; pydata-sphinx-theme.css; scanpy.css; sphinx-book-theme.css; theme.css. /vendor; . /fontawesome; . /6.5.2; . /css; ; all.min.css. /js; ; all.min.js. /webfonts; ; fa-brands-400.ttf; fa-brands-400.woff2; fa-regular-400.ttf; fa-regular-400.woff2; fa-solid-900.ttf; fa-solid-900.woff2; fa-v4compatibility.ttf; fa-v4compatibility.woff2. basic.css; clipboard.min.js; copybutton.css; copybutton.js; design-tabs.js; doctool,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:9906,Integrability,integrat,integration-scanorama,9906,t; scanpy.read_h5ad.rst; scanpy.read_hdf.rst; scanpy.read_loom.rst; scanpy.read_mtx.rst; scanpy.read_text.rst; scanpy.read_umi_tools.rst; scanpy.read_visium.rst; scanpy.set_figure_params.rst; scanpy.tl.dendrogram.rst; scanpy.tl.diffmap.rst; scanpy.tl.dpt.rst; scanpy.tl.draw_graph.rst; scanpy.tl.embedding_density.rst; scanpy.tl.filter_rank_genes_groups.rst; scanpy.tl.ingest.rst; scanpy.tl.leiden.rst; scanpy.tl.louvain.rst; scanpy.tl.marker_gene_overlap.rst; scanpy.tl.paga.rst; scanpy.tl.rank_genes_groups.rst; scanpy.tl.score_genes.rst; scanpy.tl.score_genes_cell_cycle.rst; scanpy.tl.sim.rst; scanpy.tl.tsne.rst; scanpy.tl.umap.rst. /how-to; ; index.md; knn-transformers.ipynb; plotting-with-marsilea.ipynb. /release-notes; ; index.md. /tutorials; . /basics; ; clustering.ipynb; clustering-2017.ipynb; index.md; integrating-data-using-ingest.ipynb. /experimental; ; dask.ipynb; index.md; pearson_residuals.ipynb. /plotting; ; advanced.ipynb; core.ipynb; index.md. /spatial; ; index.md; integration-scanorama.ipynb. /trajectories; ; index.md; paga-paul15.ipynb. index.md. community.md; contributors.md; ecosystem.md; index.md; installation.md; news.md; references.rst; usage-principles.md. /_static; . /css; ; rtd_sphinx_search.min.css. /js; ; rtd_search_config.js; rtd_sphinx_search.min.js. /scripts; ; bootstrap.js; pydata-sphinx-theme.js; rtd-sphinx-search.js; sphinx-book-theme.js. /styles; ; bootstrap.css; pydata-sphinx-theme.css; scanpy.css; sphinx-book-theme.css; theme.css. /vendor; . /fontawesome; . /6.5.2; . /css; ; all.min.css. /js; ; all.min.js. /webfonts; ; fa-brands-400.ttf; fa-brands-400.woff2; fa-regular-400.ttf; fa-regular-400.woff2; fa-solid-900.ttf; fa-solid-900.woff2; fa-v4compatibility.ttf; fa-v4compatibility.woff2. basic.css; clipboard.min.js; copybutton.css; copybutton.js; design-tabs.js; doctools.js; documentation_options.js; language_data.js; mystnb.4510f1fc1dee50b3e5859aac5469c37c29e427902b24a333a5f9fcb2f0b3ac41.css; plot_directive.css; pygments.css; Scanpy_Lo,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:5564,Performance,cache,cachedir,5564,eb17.rst; scanpy.pp.recipe_zheng17.rst; scanpy.pp.scrublet.rst; scanpy.pp.scrublet_simulate_doublets.rst. classes.md; datasets.md; deprecated.md; experimental.md; get.md; index.md; metrics.md; plotting.md; preprocessing.md; queries.md; reading.md; settings.md; tools.md. /dev; ; ci.md; code.md; documentation.md; getting-set-up.md; index.md; release.md; testing.md; versioning.md. /external; . /generated; ; scanpy.external.tl.cyclone.rst; scanpy.external.tl.harmony_timeseries.rst; scanpy.external.tl.palantir.rst; scanpy.external.tl.palantir_results.rst; scanpy.external.tl.phate.rst; scanpy.external.tl.phenograph.rst; scanpy.external.tl.sam.rst; scanpy.external.tl.sandbag.rst; scanpy.external.tl.trimap.rst; scanpy.external.tl.wishbone.rst. exporting.md; index.md; plotting.md; preprocessing.md; tools.md. /generated; ; scanpy._settings.ScanpyConfig.autosave.rst; scanpy._settings.ScanpyConfig.autoshow.rst; scanpy._settings.ScanpyConfig.cache_compression.rst; scanpy._settings.ScanpyConfig.cachedir.rst; scanpy._settings.ScanpyConfig.categories_to_ignore.rst; scanpy._settings.ScanpyConfig.datasetdir.rst; scanpy._settings.ScanpyConfig.figdir.rst; scanpy._settings.ScanpyConfig.file_format_data.rst; scanpy._settings.ScanpyConfig.file_format_figs.rst; scanpy._settings.ScanpyConfig.logfile.rst; scanpy._settings.ScanpyConfig.logpath.rst; scanpy._settings.ScanpyConfig.max_memory.rst; scanpy._settings.ScanpyConfig.n_jobs.rst; scanpy._settings.ScanpyConfig.N_PCS.rst; scanpy._settings.ScanpyConfig.plot_suffix.rst; scanpy._settings.ScanpyConfig.rst; scanpy._settings.ScanpyConfig.set_figure_params.rst; scanpy._settings.ScanpyConfig.verbosity.rst; scanpy._settings.ScanpyConfig.writedir.rst; scanpy.datasets.blobs.rst; scanpy.datasets.ebi_expression_atlas.rst; scanpy.datasets.krumsiek11.rst; scanpy.datasets.moignard15.rst; scanpy.datasets.paul15.rst; scanpy.datasets.pbmc3k.rst; scanpy.datasets.pbmc3k_processed.rst; scanpy.datasets.pbmc68k_reduced.rst; scanpy.datasets.toggleswitch.rst; scanpy,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:17454,Performance,cache,cachedir,17454,eries — scanpy; Reading — scanpy; Settings — scanpy; Tools: tl — scanpy. /dev; ; CI — scanpy; Contributing code — scanpy; Documentation — scanpy; Getting set up — scanpy; Contributing — scanpy; Making a release — scanpy; Tests — scanpy; Versioning — scanpy. /external; . /generated; ; scanpy.external.tl.cyclone — scanpy; scanpy.external.tl.harmony_timeseries — scanpy; scanpy.external.tl.palantir — scanpy; scanpy.external.tl.palantir_results — scanpy; scanpy.external.tl.phate — scanpy; scanpy.external.tl.phenograph — scanpy; scanpy.external.tl.sam — scanpy; scanpy.external.tl.sandbag — scanpy; scanpy.external.tl.trimap — scanpy; scanpy.external.tl.wishbone — scanpy. Exporting — scanpy; External API — scanpy; Plotting: PL — scanpy; Preprocessing: PP — scanpy; Tools: TL — scanpy. /generated; ; scanpy._settings.ScanpyConfig.autosave — scanpy; scanpy._settings.ScanpyConfig.autoshow — scanpy; scanpy._settings.ScanpyConfig.cache_compression — scanpy; scanpy._settings.ScanpyConfig.cachedir — scanpy; scanpy._settings.ScanpyConfig.categories_to_ignore — scanpy; scanpy._settings.ScanpyConfig.datasetdir — scanpy; scanpy._settings.ScanpyConfig.figdir — scanpy; scanpy._settings.ScanpyConfig.file_format_data — scanpy; scanpy._settings.ScanpyConfig.file_format_figs — scanpy; scanpy._settings.ScanpyConfig — scanpy; scanpy._settings.ScanpyConfig.logfile — scanpy; scanpy._settings.ScanpyConfig.logpath — scanpy; scanpy._settings.ScanpyConfig.max_memory — scanpy; scanpy._settings.ScanpyConfig.n_jobs — scanpy; scanpy._settings.ScanpyConfig.N_PCS — scanpy; scanpy._settings.ScanpyConfig.plot_suffix — scanpy; scanpy._settings.ScanpyConfig.set_figure_params — scanpy; scanpy._settings.ScanpyConfig.verbosity — scanpy; scanpy._settings.ScanpyConfig.writedir — scanpy; scanpy.datasets.blobs — scanpy; scanpy.datasets.ebi_expression_atlas — scanpy; scanpy.datasets.krumsiek11 — scanpy; scanpy.datasets.moignard15 — scanpy; scanpy.datasets.paul15 — scanpy; scanpy.datasets.pbmc3k — scanpy; scanpy.datase,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:7162,Security,hash,hashsolo,7162,rams.rst; scanpy._settings.ScanpyConfig.verbosity.rst; scanpy._settings.ScanpyConfig.writedir.rst; scanpy.datasets.blobs.rst; scanpy.datasets.ebi_expression_atlas.rst; scanpy.datasets.krumsiek11.rst; scanpy.datasets.moignard15.rst; scanpy.datasets.paul15.rst; scanpy.datasets.pbmc3k.rst; scanpy.datasets.pbmc3k_processed.rst; scanpy.datasets.pbmc68k_reduced.rst; scanpy.datasets.toggleswitch.rst; scanpy.datasets.visium_sge.rst; scanpy.experimental.pp.highly_variable_genes.rst; scanpy.experimental.pp.normalize_pearson_residuals.rst; scanpy.experimental.pp.normalize_pearson_residuals_pca.rst; scanpy.experimental.pp.recipe_pearson_residuals.rst; scanpy.external.exporting.cellbrowser.rst; scanpy.external.exporting.spring_project.rst; scanpy.external.pl.phate.rst; scanpy.external.pl.sam.rst; scanpy.external.pl.trimap.rst; scanpy.external.pl.wishbone_marker_trajectory.rst; scanpy.external.pp.bbknn.rst; scanpy.external.pp.dca.rst; scanpy.external.pp.harmony_integrate.rst; scanpy.external.pp.hashsolo.rst; scanpy.external.pp.magic.rst; scanpy.external.pp.mnn_correct.rst; scanpy.external.pp.scanorama_integrate.rst; scanpy.get.aggregate.rst; scanpy.get.obs_df.rst; scanpy.get.rank_genes_groups_df.rst; scanpy.get.var_df.rst; scanpy.logging.print_header.rst; scanpy.logging.print_versions.rst; scanpy.metrics.confusion_matrix.rst; scanpy.metrics.gearys_c.rst; scanpy.metrics.morans_i.rst; scanpy.Neighbors.compute_eigen.rst; scanpy.Neighbors.compute_neighbors.rst; scanpy.Neighbors.compute_transitions.rst; scanpy.Neighbors.connectivities.rst; scanpy.Neighbors.distances.rst; scanpy.Neighbors.distances_dpt.rst; scanpy.Neighbors.eigen_basis.rst; scanpy.Neighbors.eigen_values.rst; scanpy.Neighbors.getdoc.rst; scanpy.Neighbors.rp_forest.rst; scanpy.Neighbors.rst; scanpy.Neighbors.to_igraph.rst; scanpy.Neighbors.transitions.rst; scanpy.Neighbors.transitions_sym.rst; scanpy.pl.clustermap.rst; scanpy.pl.dendrogram.rst; scanpy.pl.dotplot.rst; scanpy.pl.heatmap.rst; scanpy.pl.matrixplot.rst; scanpy,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:19247,Security,hash,hashsolo,19247,canpy; scanpy.datasets.ebi_expression_atlas — scanpy; scanpy.datasets.krumsiek11 — scanpy; scanpy.datasets.moignard15 — scanpy; scanpy.datasets.paul15 — scanpy; scanpy.datasets.pbmc3k — scanpy; scanpy.datasets.pbmc3k_processed — scanpy; scanpy.datasets.pbmc68k_reduced — scanpy; scanpy.datasets.toggleswitch — scanpy; scanpy.datasets.visium_sge — scanpy; scanpy.experimental.pp.highly_variable_genes — scanpy; scanpy.experimental.pp.normalize_pearson_residuals — scanpy; scanpy.experimental.pp.normalize_pearson_residuals_pca — scanpy; scanpy.experimental.pp.recipe_pearson_residuals — scanpy; scanpy.external.exporting.cellbrowser — scanpy; scanpy.external.exporting.spring_project — scanpy; scanpy.external.pl.phate — scanpy; scanpy.external.pl.sam — scanpy; scanpy.external.pl.trimap — scanpy; scanpy.external.pl.wishbone_marker_trajectory — scanpy; scanpy.external.pp.bbknn — scanpy; scanpy.external.pp.dca — scanpy; scanpy.external.pp.harmony_integrate — scanpy; scanpy.external.pp.hashsolo — scanpy; scanpy.external.pp.magic — scanpy; scanpy.external.pp.mnn_correct — scanpy; scanpy.external.pp.scanorama_integrate — scanpy; scanpy.get.aggregate — scanpy; scanpy.get.obs_df — scanpy; scanpy.get.rank_genes_groups_df — scanpy; scanpy.get.var_df — scanpy; scanpy.logging.print_header — scanpy; scanpy.logging.print_versions — scanpy; scanpy.metrics.confusion_matrix — scanpy; scanpy.metrics.gearys_c — scanpy; scanpy.metrics.morans_i — scanpy; scanpy.Neighbors.compute_eigen — scanpy; scanpy.Neighbors.compute_neighbors — scanpy; scanpy.Neighbors.compute_transitions — scanpy; scanpy.Neighbors.connectivities — scanpy; scanpy.Neighbors.distances — scanpy; scanpy.Neighbors.distances_dpt — scanpy; scanpy.Neighbors.eigen_basis — scanpy; scanpy.Neighbors.eigen_values — scanpy; scanpy.Neighbors.getdoc — scanpy; scanpy.Neighbors — scanpy; scanpy.Neighbors.rp_forest — scanpy; scanpy.Neighbors.to_igraph — scanpy; scanpy.Neighbors.transitions — scanpy; scanpy.Neighbors.transitions_sym — scanpy; sca,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:4922,Testability,test,testing,4922,py.pl.paga_path.rst; scanpy.pl.pca.rst; scanpy.pl.pca_loadings.rst; scanpy.pl.pca_overview.rst; scanpy.pl.pca_variance_ratio.rst; scanpy.pl.rank_genes_groups.rst; scanpy.pl.rank_genes_groups_dotplot.rst; scanpy.pl.rank_genes_groups_heatmap.rst; scanpy.pl.rank_genes_groups_matrixplot.rst; scanpy.pl.rank_genes_groups_stacked_violin.rst; scanpy.pl.rank_genes_groups_tracksplot.rst; scanpy.pl.rank_genes_groups_violin.rst; scanpy.pl.scrublet_score_distribution.rst; scanpy.pl.sim.rst; scanpy.pl.spatial.rst; scanpy.pl.tsne.rst; scanpy.pl.umap.rst; scanpy.pp.combat.rst; scanpy.pp.neighbors.rst; scanpy.pp.recipe_seurat.rst; scanpy.pp.recipe_weinreb17.rst; scanpy.pp.recipe_zheng17.rst; scanpy.pp.scrublet.rst; scanpy.pp.scrublet_simulate_doublets.rst. classes.md; datasets.md; deprecated.md; experimental.md; get.md; index.md; metrics.md; plotting.md; preprocessing.md; queries.md; reading.md; settings.md; tools.md. /dev; ; ci.md; code.md; documentation.md; getting-set-up.md; index.md; release.md; testing.md; versioning.md. /external; . /generated; ; scanpy.external.tl.cyclone.rst; scanpy.external.tl.harmony_timeseries.rst; scanpy.external.tl.palantir.rst; scanpy.external.tl.palantir_results.rst; scanpy.external.tl.phate.rst; scanpy.external.tl.phenograph.rst; scanpy.external.tl.sam.rst; scanpy.external.tl.sandbag.rst; scanpy.external.tl.trimap.rst; scanpy.external.tl.wishbone.rst. exporting.md; index.md; plotting.md; preprocessing.md; tools.md. /generated; ; scanpy._settings.ScanpyConfig.autosave.rst; scanpy._settings.ScanpyConfig.autoshow.rst; scanpy._settings.ScanpyConfig.cache_compression.rst; scanpy._settings.ScanpyConfig.cachedir.rst; scanpy._settings.ScanpyConfig.categories_to_ignore.rst; scanpy._settings.ScanpyConfig.datasetdir.rst; scanpy._settings.ScanpyConfig.figdir.rst; scanpy._settings.ScanpyConfig.file_format_data.rst; scanpy._settings.ScanpyConfig.file_format_figs.rst; scanpy._settings.ScanpyConfig.logfile.rst; scanpy._settings.ScanpyConfig.logpath.rst; scanpy._sett,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:5856,Testability,log,logfile,5856,d; documentation.md; getting-set-up.md; index.md; release.md; testing.md; versioning.md. /external; . /generated; ; scanpy.external.tl.cyclone.rst; scanpy.external.tl.harmony_timeseries.rst; scanpy.external.tl.palantir.rst; scanpy.external.tl.palantir_results.rst; scanpy.external.tl.phate.rst; scanpy.external.tl.phenograph.rst; scanpy.external.tl.sam.rst; scanpy.external.tl.sandbag.rst; scanpy.external.tl.trimap.rst; scanpy.external.tl.wishbone.rst. exporting.md; index.md; plotting.md; preprocessing.md; tools.md. /generated; ; scanpy._settings.ScanpyConfig.autosave.rst; scanpy._settings.ScanpyConfig.autoshow.rst; scanpy._settings.ScanpyConfig.cache_compression.rst; scanpy._settings.ScanpyConfig.cachedir.rst; scanpy._settings.ScanpyConfig.categories_to_ignore.rst; scanpy._settings.ScanpyConfig.datasetdir.rst; scanpy._settings.ScanpyConfig.figdir.rst; scanpy._settings.ScanpyConfig.file_format_data.rst; scanpy._settings.ScanpyConfig.file_format_figs.rst; scanpy._settings.ScanpyConfig.logfile.rst; scanpy._settings.ScanpyConfig.logpath.rst; scanpy._settings.ScanpyConfig.max_memory.rst; scanpy._settings.ScanpyConfig.n_jobs.rst; scanpy._settings.ScanpyConfig.N_PCS.rst; scanpy._settings.ScanpyConfig.plot_suffix.rst; scanpy._settings.ScanpyConfig.rst; scanpy._settings.ScanpyConfig.set_figure_params.rst; scanpy._settings.ScanpyConfig.verbosity.rst; scanpy._settings.ScanpyConfig.writedir.rst; scanpy.datasets.blobs.rst; scanpy.datasets.ebi_expression_atlas.rst; scanpy.datasets.krumsiek11.rst; scanpy.datasets.moignard15.rst; scanpy.datasets.paul15.rst; scanpy.datasets.pbmc3k.rst; scanpy.datasets.pbmc3k_processed.rst; scanpy.datasets.pbmc68k_reduced.rst; scanpy.datasets.toggleswitch.rst; scanpy.datasets.visium_sge.rst; scanpy.experimental.pp.highly_variable_genes.rst; scanpy.experimental.pp.normalize_pearson_residuals.rst; scanpy.experimental.pp.normalize_pearson_residuals_pca.rst; scanpy.experimental.pp.recipe_pearson_residuals.rst; scanpy.external.exporting.cellbrowser.rst; sca,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:5899,Testability,log,logpath,5899,ex.md; release.md; testing.md; versioning.md. /external; . /generated; ; scanpy.external.tl.cyclone.rst; scanpy.external.tl.harmony_timeseries.rst; scanpy.external.tl.palantir.rst; scanpy.external.tl.palantir_results.rst; scanpy.external.tl.phate.rst; scanpy.external.tl.phenograph.rst; scanpy.external.tl.sam.rst; scanpy.external.tl.sandbag.rst; scanpy.external.tl.trimap.rst; scanpy.external.tl.wishbone.rst. exporting.md; index.md; plotting.md; preprocessing.md; tools.md. /generated; ; scanpy._settings.ScanpyConfig.autosave.rst; scanpy._settings.ScanpyConfig.autoshow.rst; scanpy._settings.ScanpyConfig.cache_compression.rst; scanpy._settings.ScanpyConfig.cachedir.rst; scanpy._settings.ScanpyConfig.categories_to_ignore.rst; scanpy._settings.ScanpyConfig.datasetdir.rst; scanpy._settings.ScanpyConfig.figdir.rst; scanpy._settings.ScanpyConfig.file_format_data.rst; scanpy._settings.ScanpyConfig.file_format_figs.rst; scanpy._settings.ScanpyConfig.logfile.rst; scanpy._settings.ScanpyConfig.logpath.rst; scanpy._settings.ScanpyConfig.max_memory.rst; scanpy._settings.ScanpyConfig.n_jobs.rst; scanpy._settings.ScanpyConfig.N_PCS.rst; scanpy._settings.ScanpyConfig.plot_suffix.rst; scanpy._settings.ScanpyConfig.rst; scanpy._settings.ScanpyConfig.set_figure_params.rst; scanpy._settings.ScanpyConfig.verbosity.rst; scanpy._settings.ScanpyConfig.writedir.rst; scanpy.datasets.blobs.rst; scanpy.datasets.ebi_expression_atlas.rst; scanpy.datasets.krumsiek11.rst; scanpy.datasets.moignard15.rst; scanpy.datasets.paul15.rst; scanpy.datasets.pbmc3k.rst; scanpy.datasets.pbmc3k_processed.rst; scanpy.datasets.pbmc68k_reduced.rst; scanpy.datasets.toggleswitch.rst; scanpy.datasets.visium_sge.rst; scanpy.experimental.pp.highly_variable_genes.rst; scanpy.experimental.pp.normalize_pearson_residuals.rst; scanpy.experimental.pp.normalize_pearson_residuals_pca.rst; scanpy.experimental.pp.recipe_pearson_residuals.rst; scanpy.external.exporting.cellbrowser.rst; scanpy.external.exporting.spring_project.rst; ,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:7402,Testability,log,logging,7402,atasets.paul15.rst; scanpy.datasets.pbmc3k.rst; scanpy.datasets.pbmc3k_processed.rst; scanpy.datasets.pbmc68k_reduced.rst; scanpy.datasets.toggleswitch.rst; scanpy.datasets.visium_sge.rst; scanpy.experimental.pp.highly_variable_genes.rst; scanpy.experimental.pp.normalize_pearson_residuals.rst; scanpy.experimental.pp.normalize_pearson_residuals_pca.rst; scanpy.experimental.pp.recipe_pearson_residuals.rst; scanpy.external.exporting.cellbrowser.rst; scanpy.external.exporting.spring_project.rst; scanpy.external.pl.phate.rst; scanpy.external.pl.sam.rst; scanpy.external.pl.trimap.rst; scanpy.external.pl.wishbone_marker_trajectory.rst; scanpy.external.pp.bbknn.rst; scanpy.external.pp.dca.rst; scanpy.external.pp.harmony_integrate.rst; scanpy.external.pp.hashsolo.rst; scanpy.external.pp.magic.rst; scanpy.external.pp.mnn_correct.rst; scanpy.external.pp.scanorama_integrate.rst; scanpy.get.aggregate.rst; scanpy.get.obs_df.rst; scanpy.get.rank_genes_groups_df.rst; scanpy.get.var_df.rst; scanpy.logging.print_header.rst; scanpy.logging.print_versions.rst; scanpy.metrics.confusion_matrix.rst; scanpy.metrics.gearys_c.rst; scanpy.metrics.morans_i.rst; scanpy.Neighbors.compute_eigen.rst; scanpy.Neighbors.compute_neighbors.rst; scanpy.Neighbors.compute_transitions.rst; scanpy.Neighbors.connectivities.rst; scanpy.Neighbors.distances.rst; scanpy.Neighbors.distances_dpt.rst; scanpy.Neighbors.eigen_basis.rst; scanpy.Neighbors.eigen_values.rst; scanpy.Neighbors.getdoc.rst; scanpy.Neighbors.rp_forest.rst; scanpy.Neighbors.rst; scanpy.Neighbors.to_igraph.rst; scanpy.Neighbors.transitions.rst; scanpy.Neighbors.transitions_sym.rst; scanpy.pl.clustermap.rst; scanpy.pl.dendrogram.rst; scanpy.pl.dotplot.rst; scanpy.pl.heatmap.rst; scanpy.pl.matrixplot.rst; scanpy.pl.ranking.rst; scanpy.pl.scatter.rst; scanpy.pl.stacked_violin.rst; scanpy.pl.tracksplot.rst; scanpy.pl.violin.rst; scanpy.pp.calculate_qc_metrics.rst; scanpy.pp.downsample_counts.rst; scanpy.pp.filter_cells.rst; scanpy.pp.filter_genes.r,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:7435,Testability,log,logging,7435,ts.pbmc3k.rst; scanpy.datasets.pbmc3k_processed.rst; scanpy.datasets.pbmc68k_reduced.rst; scanpy.datasets.toggleswitch.rst; scanpy.datasets.visium_sge.rst; scanpy.experimental.pp.highly_variable_genes.rst; scanpy.experimental.pp.normalize_pearson_residuals.rst; scanpy.experimental.pp.normalize_pearson_residuals_pca.rst; scanpy.experimental.pp.recipe_pearson_residuals.rst; scanpy.external.exporting.cellbrowser.rst; scanpy.external.exporting.spring_project.rst; scanpy.external.pl.phate.rst; scanpy.external.pl.sam.rst; scanpy.external.pl.trimap.rst; scanpy.external.pl.wishbone_marker_trajectory.rst; scanpy.external.pp.bbknn.rst; scanpy.external.pp.dca.rst; scanpy.external.pp.harmony_integrate.rst; scanpy.external.pp.hashsolo.rst; scanpy.external.pp.magic.rst; scanpy.external.pp.mnn_correct.rst; scanpy.external.pp.scanorama_integrate.rst; scanpy.get.aggregate.rst; scanpy.get.obs_df.rst; scanpy.get.rank_genes_groups_df.rst; scanpy.get.var_df.rst; scanpy.logging.print_header.rst; scanpy.logging.print_versions.rst; scanpy.metrics.confusion_matrix.rst; scanpy.metrics.gearys_c.rst; scanpy.metrics.morans_i.rst; scanpy.Neighbors.compute_eigen.rst; scanpy.Neighbors.compute_neighbors.rst; scanpy.Neighbors.compute_transitions.rst; scanpy.Neighbors.connectivities.rst; scanpy.Neighbors.distances.rst; scanpy.Neighbors.distances_dpt.rst; scanpy.Neighbors.eigen_basis.rst; scanpy.Neighbors.eigen_values.rst; scanpy.Neighbors.getdoc.rst; scanpy.Neighbors.rp_forest.rst; scanpy.Neighbors.rst; scanpy.Neighbors.to_igraph.rst; scanpy.Neighbors.transitions.rst; scanpy.Neighbors.transitions_sym.rst; scanpy.pl.clustermap.rst; scanpy.pl.dendrogram.rst; scanpy.pl.dotplot.rst; scanpy.pl.heatmap.rst; scanpy.pl.matrixplot.rst; scanpy.pl.ranking.rst; scanpy.pl.scatter.rst; scanpy.pl.stacked_violin.rst; scanpy.pl.tracksplot.rst; scanpy.pl.violin.rst; scanpy.pp.calculate_qc_metrics.rst; scanpy.pp.downsample_counts.rst; scanpy.pp.filter_cells.rst; scanpy.pp.filter_genes.rst; scanpy.pp.filter_genes_disper,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:17816,Testability,log,logfile,17816, scanpy; scanpy.external.tl.palantir — scanpy; scanpy.external.tl.palantir_results — scanpy; scanpy.external.tl.phate — scanpy; scanpy.external.tl.phenograph — scanpy; scanpy.external.tl.sam — scanpy; scanpy.external.tl.sandbag — scanpy; scanpy.external.tl.trimap — scanpy; scanpy.external.tl.wishbone — scanpy. Exporting — scanpy; External API — scanpy; Plotting: PL — scanpy; Preprocessing: PP — scanpy; Tools: TL — scanpy. /generated; ; scanpy._settings.ScanpyConfig.autosave — scanpy; scanpy._settings.ScanpyConfig.autoshow — scanpy; scanpy._settings.ScanpyConfig.cache_compression — scanpy; scanpy._settings.ScanpyConfig.cachedir — scanpy; scanpy._settings.ScanpyConfig.categories_to_ignore — scanpy; scanpy._settings.ScanpyConfig.datasetdir — scanpy; scanpy._settings.ScanpyConfig.figdir — scanpy; scanpy._settings.ScanpyConfig.file_format_data — scanpy; scanpy._settings.ScanpyConfig.file_format_figs — scanpy; scanpy._settings.ScanpyConfig — scanpy; scanpy._settings.ScanpyConfig.logfile — scanpy; scanpy._settings.ScanpyConfig.logpath — scanpy; scanpy._settings.ScanpyConfig.max_memory — scanpy; scanpy._settings.ScanpyConfig.n_jobs — scanpy; scanpy._settings.ScanpyConfig.N_PCS — scanpy; scanpy._settings.ScanpyConfig.plot_suffix — scanpy; scanpy._settings.ScanpyConfig.set_figure_params — scanpy; scanpy._settings.ScanpyConfig.verbosity — scanpy; scanpy._settings.ScanpyConfig.writedir — scanpy; scanpy.datasets.blobs — scanpy; scanpy.datasets.ebi_expression_atlas — scanpy; scanpy.datasets.krumsiek11 — scanpy; scanpy.datasets.moignard15 — scanpy; scanpy.datasets.paul15 — scanpy; scanpy.datasets.pbmc3k — scanpy; scanpy.datasets.pbmc3k_processed — scanpy; scanpy.datasets.pbmc68k_reduced — scanpy; scanpy.datasets.toggleswitch — scanpy; scanpy.datasets.visium_sge — scanpy; scanpy.experimental.pp.highly_variable_genes — scanpy; scanpy.experimental.pp.normalize_pearson_residuals — scanpy; scanpy.experimental.pp.normalize_pearson_residuals_pca — scanpy; scanpy.experimental.pp.recipe_pea,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:17864,Testability,log,logpath,17864,canpy.external.tl.palantir_results — scanpy; scanpy.external.tl.phate — scanpy; scanpy.external.tl.phenograph — scanpy; scanpy.external.tl.sam — scanpy; scanpy.external.tl.sandbag — scanpy; scanpy.external.tl.trimap — scanpy; scanpy.external.tl.wishbone — scanpy. Exporting — scanpy; External API — scanpy; Plotting: PL — scanpy; Preprocessing: PP — scanpy; Tools: TL — scanpy. /generated; ; scanpy._settings.ScanpyConfig.autosave — scanpy; scanpy._settings.ScanpyConfig.autoshow — scanpy; scanpy._settings.ScanpyConfig.cache_compression — scanpy; scanpy._settings.ScanpyConfig.cachedir — scanpy; scanpy._settings.ScanpyConfig.categories_to_ignore — scanpy; scanpy._settings.ScanpyConfig.datasetdir — scanpy; scanpy._settings.ScanpyConfig.figdir — scanpy; scanpy._settings.ScanpyConfig.file_format_data — scanpy; scanpy._settings.ScanpyConfig.file_format_figs — scanpy; scanpy._settings.ScanpyConfig — scanpy; scanpy._settings.ScanpyConfig.logfile — scanpy; scanpy._settings.ScanpyConfig.logpath — scanpy; scanpy._settings.ScanpyConfig.max_memory — scanpy; scanpy._settings.ScanpyConfig.n_jobs — scanpy; scanpy._settings.ScanpyConfig.N_PCS — scanpy; scanpy._settings.ScanpyConfig.plot_suffix — scanpy; scanpy._settings.ScanpyConfig.set_figure_params — scanpy; scanpy._settings.ScanpyConfig.verbosity — scanpy; scanpy._settings.ScanpyConfig.writedir — scanpy; scanpy.datasets.blobs — scanpy; scanpy.datasets.ebi_expression_atlas — scanpy; scanpy.datasets.krumsiek11 — scanpy; scanpy.datasets.moignard15 — scanpy; scanpy.datasets.paul15 — scanpy; scanpy.datasets.pbmc3k — scanpy; scanpy.datasets.pbmc3k_processed — scanpy; scanpy.datasets.pbmc68k_reduced — scanpy; scanpy.datasets.toggleswitch — scanpy; scanpy.datasets.visium_sge — scanpy; scanpy.experimental.pp.highly_variable_genes — scanpy; scanpy.experimental.pp.normalize_pearson_residuals — scanpy; scanpy.experimental.pp.normalize_pearson_residuals_pca — scanpy; scanpy.experimental.pp.recipe_pearson_residuals — scanpy; scanpy.external.exporti,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:19527,Testability,log,logging,19527,scanpy; scanpy.datasets.toggleswitch — scanpy; scanpy.datasets.visium_sge — scanpy; scanpy.experimental.pp.highly_variable_genes — scanpy; scanpy.experimental.pp.normalize_pearson_residuals — scanpy; scanpy.experimental.pp.normalize_pearson_residuals_pca — scanpy; scanpy.experimental.pp.recipe_pearson_residuals — scanpy; scanpy.external.exporting.cellbrowser — scanpy; scanpy.external.exporting.spring_project — scanpy; scanpy.external.pl.phate — scanpy; scanpy.external.pl.sam — scanpy; scanpy.external.pl.trimap — scanpy; scanpy.external.pl.wishbone_marker_trajectory — scanpy; scanpy.external.pp.bbknn — scanpy; scanpy.external.pp.dca — scanpy; scanpy.external.pp.harmony_integrate — scanpy; scanpy.external.pp.hashsolo — scanpy; scanpy.external.pp.magic — scanpy; scanpy.external.pp.mnn_correct — scanpy; scanpy.external.pp.scanorama_integrate — scanpy; scanpy.get.aggregate — scanpy; scanpy.get.obs_df — scanpy; scanpy.get.rank_genes_groups_df — scanpy; scanpy.get.var_df — scanpy; scanpy.logging.print_header — scanpy; scanpy.logging.print_versions — scanpy; scanpy.metrics.confusion_matrix — scanpy; scanpy.metrics.gearys_c — scanpy; scanpy.metrics.morans_i — scanpy; scanpy.Neighbors.compute_eigen — scanpy; scanpy.Neighbors.compute_neighbors — scanpy; scanpy.Neighbors.compute_transitions — scanpy; scanpy.Neighbors.connectivities — scanpy; scanpy.Neighbors.distances — scanpy; scanpy.Neighbors.distances_dpt — scanpy; scanpy.Neighbors.eigen_basis — scanpy; scanpy.Neighbors.eigen_values — scanpy; scanpy.Neighbors.getdoc — scanpy; scanpy.Neighbors — scanpy; scanpy.Neighbors.rp_forest — scanpy; scanpy.Neighbors.to_igraph — scanpy; scanpy.Neighbors.transitions — scanpy; scanpy.Neighbors.transitions_sym — scanpy; scanpy.pl.clustermap — scanpy; scanpy.pl.dendrogram — scanpy; scanpy.pl.dotplot — scanpy; scanpy.pl.heatmap — scanpy; scanpy.pl.matrixplot — scanpy; scanpy.pl.ranking — scanpy; scanpy.pl.scatter — scanpy; scanpy.pl.stacked_violin — scanpy; scanpy.pl.tracksplot — scanpy; sca,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/index-wcopy.html:19565,Testability,log,logging,19565, scanpy; scanpy.datasets.visium_sge — scanpy; scanpy.experimental.pp.highly_variable_genes — scanpy; scanpy.experimental.pp.normalize_pearson_residuals — scanpy; scanpy.experimental.pp.normalize_pearson_residuals_pca — scanpy; scanpy.experimental.pp.recipe_pearson_residuals — scanpy; scanpy.external.exporting.cellbrowser — scanpy; scanpy.external.exporting.spring_project — scanpy; scanpy.external.pl.phate — scanpy; scanpy.external.pl.sam — scanpy; scanpy.external.pl.trimap — scanpy; scanpy.external.pl.wishbone_marker_trajectory — scanpy; scanpy.external.pp.bbknn — scanpy; scanpy.external.pp.dca — scanpy; scanpy.external.pp.harmony_integrate — scanpy; scanpy.external.pp.hashsolo — scanpy; scanpy.external.pp.magic — scanpy; scanpy.external.pp.mnn_correct — scanpy; scanpy.external.pp.scanorama_integrate — scanpy; scanpy.get.aggregate — scanpy; scanpy.get.obs_df — scanpy; scanpy.get.rank_genes_groups_df — scanpy; scanpy.get.var_df — scanpy; scanpy.logging.print_header — scanpy; scanpy.logging.print_versions — scanpy; scanpy.metrics.confusion_matrix — scanpy; scanpy.metrics.gearys_c — scanpy; scanpy.metrics.morans_i — scanpy; scanpy.Neighbors.compute_eigen — scanpy; scanpy.Neighbors.compute_neighbors — scanpy; scanpy.Neighbors.compute_transitions — scanpy; scanpy.Neighbors.connectivities — scanpy; scanpy.Neighbors.distances — scanpy; scanpy.Neighbors.distances_dpt — scanpy; scanpy.Neighbors.eigen_basis — scanpy; scanpy.Neighbors.eigen_values — scanpy; scanpy.Neighbors.getdoc — scanpy; scanpy.Neighbors — scanpy; scanpy.Neighbors.rp_forest — scanpy; scanpy.Neighbors.to_igraph — scanpy; scanpy.Neighbors.transitions — scanpy; scanpy.Neighbors.transitions_sym — scanpy; scanpy.pl.clustermap — scanpy; scanpy.pl.dendrogram — scanpy; scanpy.pl.dotplot — scanpy; scanpy.pl.heatmap — scanpy; scanpy.pl.matrixplot — scanpy; scanpy.pl.ranking — scanpy; scanpy.pl.scatter — scanpy; scanpy.pl.stacked_violin — scanpy; scanpy.pl.tracksplot — scanpy; scanpy.pl.violin — scanpy; scanpy.pp.calc,MatchSource.WIKI,index-wcopy.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/index-wcopy.html
https://scanpy.readthedocs.io/en/stable/community.html:8087,Deployability,toggle,toggleswitch,8087,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/community.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/community.html
https://scanpy.readthedocs.io/en/stable/community.html:9171,Deployability,release,release,9171,"tasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Community. Contents . Discourse; Github Issue Tracker; Developer Chat. Community#; Scanpy is a community driven project. There are multiple channels for users and developers to communicate and connect. Discourse#; The scverse Discourse forum is place to go to ask usage questions and for longer form discussions around the project. Github Issue Tracker#; The Scanpy and anndata issue trackers are for reports and discussion of:. Bug reports; Documentation issues; Feature requests. Developer Chat#; Zulip chat instance for synchronous discussion of scanpy, anndata, and other scverse packages. previous; Release notes. next; News. Contents; . Discourse; Github Issue Tracker; Developer Chat. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/community.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/community.html
https://scanpy.readthedocs.io/en/stable/community.html:7163,Performance,cache,cachedir,7163,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/community.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/community.html
https://scanpy.readthedocs.io/en/stable/community.html:8404,Security,hash,hashsolo,8404,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Community. Contents . Discourse; Github Issue Tracker; Developer Chat. Community#; Scanpy is a community driven project. There are multiple channels for users and developers to communicate and con,MatchSource.WIKI,en/stable/community.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/community.html
https://scanpy.readthedocs.io/en/stable/community.html:7431,Testability,log,logfile,7431,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/community.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/community.html
https://scanpy.readthedocs.io/en/stable/community.html:7470,Testability,log,logpath,7470,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/community.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/community.html
https://scanpy.readthedocs.io/en/stable/community.html:7776,Testability,log,logging,7776,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/community.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/community.html
https://scanpy.readthedocs.io/en/stable/community.html:7805,Testability,log,logging,7805, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/community.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/community.html
https://scanpy.readthedocs.io/en/stable/contributors.html:8090,Deployability,toggle,toggleswitch,8090,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/contributors.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/contributors.html
https://scanpy.readthedocs.io/en/stable/contributors.html:9174,Deployability,release,release,9174,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributors. Contents . Current developers; Other roles; Former developers. Contributors#; anndata graph | scanpy graph| ☀ = maintainer. Current developers#. Isaac Virshup, lead developer since 2019 ☀; Gökcen Eraslan, developer, diverse contributions ☀; Sergei Rybakov, developer, diverse contributions ☀; Fidel Ramirez developer, plotting ☀; Giovanni Palla, developer, spatial data; Malte Luecken, developer, community & forum; Lukas Heumos, developer, diverse contributions; Philipp Angerer, developer, software quality, initial anndata conception ☀. Other roles#. Alex Wolf: lead developer 2016-2019, initial anndata & scanpy conception; Fabian Theis & lab: enabling guidance, support and environment. Former developers#. Tom White: developer 2018-2019, distributed computing. previous; Making a release. next; References. Contents; . Current developers; Other roles; Former developer",MatchSource.WIKI,en/stable/contributors.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/contributors.html
https://scanpy.readthedocs.io/en/stable/contributors.html:10020,Deployability,release,release,10020,"anpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributors. Contents . Current developers; Other roles; Former developers. Contributors#; anndata graph | scanpy graph| ☀ = maintainer. Current developers#. Isaac Virshup, lead developer since 2019 ☀; Gökcen Eraslan, developer, diverse contributions ☀; Sergei Rybakov, developer, diverse contributions ☀; Fidel Ramirez developer, plotting ☀; Giovanni Palla, developer, spatial data; Malte Luecken, developer, community & forum; Lukas Heumos, developer, diverse contributions; Philipp Angerer, developer, software quality, initial anndata conception ☀. Other roles#. Alex Wolf: lead developer 2016-2019, initial anndata & scanpy conception; Fabian Theis & lab: enabling guidance, support and environment. Former developers#. Tom White: developer 2018-2019, distributed computing. previous; Making a release. next; References. Contents; . Current developers; Other roles; Former developers. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/contributors.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/contributors.html
https://scanpy.readthedocs.io/en/stable/contributors.html:7166,Performance,cache,cachedir,7166,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/contributors.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/contributors.html
https://scanpy.readthedocs.io/en/stable/contributors.html:8407,Security,hash,hashsolo,8407,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributors. Contents . Current developers; Other roles; Former developers. Contributors#; anndata graph | scanpy graph| ☀ = maintainer. Current developers#. Isaac Virshup, lead developer since 2",MatchSource.WIKI,en/stable/contributors.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/contributors.html
https://scanpy.readthedocs.io/en/stable/contributors.html:7434,Testability,log,logfile,7434,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/contributors.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/contributors.html
https://scanpy.readthedocs.io/en/stable/contributors.html:7473,Testability,log,logpath,7473,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/contributors.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/contributors.html
https://scanpy.readthedocs.io/en/stable/contributors.html:7779,Testability,log,logging,7779,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/contributors.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/contributors.html
https://scanpy.readthedocs.io/en/stable/contributors.html:7808,Testability,log,logging,7808, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/contributors.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/contributors.html
https://scanpy.readthedocs.io/en/stable/contributors.html:9891,Usability,guid,guidance,9891,"anpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributors. Contents . Current developers; Other roles; Former developers. Contributors#; anndata graph | scanpy graph| ☀ = maintainer. Current developers#. Isaac Virshup, lead developer since 2019 ☀; Gökcen Eraslan, developer, diverse contributions ☀; Sergei Rybakov, developer, diverse contributions ☀; Fidel Ramirez developer, plotting ☀; Giovanni Palla, developer, spatial data; Malte Luecken, developer, community & forum; Lukas Heumos, developer, diverse contributions; Philipp Angerer, developer, software quality, initial anndata conception ☀. Other roles#. Alex Wolf: lead developer 2016-2019, initial anndata & scanpy conception; Fabian Theis & lab: enabling guidance, support and environment. Former developers#. Tom White: developer 2018-2019, distributed computing. previous; Making a release. next; References. Contents; . Current developers; Other roles; Former developers. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/contributors.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/contributors.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:8087,Deployability,toggle,toggleswitch,8087,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:9171,Deployability,release,release,9171,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Ecosystem. Contents . Viewers; Portals; Modalities; RNA velocity; Spatial Transcriptomics Tools; Multimodal integration; Adaptive immune receptor repertoire (AIRR); Long reads. Analysis methods; scvi-tools; Fate mapping; Differential expression; Data integration; Modeling perturbations; Feature selection; Annotation/ Enrichment Analysis. Ecosystem#. Warning; We are no longer accepting new tools on this page.; Instead, please submit your tool to the scverse ecosystem package listing. Viewers#; Interactive manifold viewers. cellxgene via direct reading of .h5ad CZI; cirrocumulus via direct reading of .h5ad Broad Inst.; cell browser via exporing through cellbrowser() UCSC; SPRING via exporting through spring_project() Harvard Med; vitessce for purely browser based viewing of zarr formatted AnnData files Harvard Med. Portals#. the Gene Expression Analysis Resource U Maryland; the",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:9325,Deployability,integrat,integration,9325,"anpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Ecosystem. Contents . Viewers; Portals; Modalities; RNA velocity; Spatial Transcriptomics Tools; Multimodal integration; Adaptive immune receptor repertoire (AIRR); Long reads. Analysis methods; scvi-tools; Fate mapping; Differential expression; Data integration; Modeling perturbations; Feature selection; Annotation/ Enrichment Analysis. Ecosystem#. Warning; We are no longer accepting new tools on this page.; Instead, please submit your tool to the scverse ecosystem package listing. Viewers#; Interactive manifold viewers. cellxgene via direct reading of .h5ad CZI; cirrocumulus via direct reading of .h5ad Broad Inst.; cell browser via exporing through cellbrowser() UCSC; SPRING via exporting through spring_project() Harvard Med; vitessce for purely browser based viewing of zarr formatted AnnData files Harvard Med. Portals#. the Gene Expression Analysis Resource U Maryland; the Galaxy Project for the Human Cell Atlas [tweet] U Freiburg; the Expression Atlas EMBL-EBI. Modalities#. RNA velocity#. scVelo Helmholtz Munich. Spatial Transcriptomics Tools#. squidpy Helmholtz Munich. Squidpy ",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:9468,Deployability,integrat,integration,9468," scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Ecosystem. Contents . Viewers; Portals; Modalities; RNA velocity; Spatial Transcriptomics Tools; Multimodal integration; Adaptive immune receptor repertoire (AIRR); Long reads. Analysis methods; scvi-tools; Fate mapping; Differential expression; Data integration; Modeling perturbations; Feature selection; Annotation/ Enrichment Analysis. Ecosystem#. Warning; We are no longer accepting new tools on this page.; Instead, please submit your tool to the scverse ecosystem package listing. Viewers#; Interactive manifold viewers. cellxgene via direct reading of .h5ad CZI; cirrocumulus via direct reading of .h5ad Broad Inst.; cell browser via exporing through cellbrowser() UCSC; SPRING via exporting through spring_project() Harvard Med; vitessce for purely browser based viewing of zarr formatted AnnData files Harvard Med. Portals#. the Gene Expression Analysis Resource U Maryland; the Galaxy Project for the Human Cell Atlas [tweet] U Freiburg; the Expression Atlas EMBL-EBI. Modalities#. RNA velocity#. scVelo Helmholtz Munich. Spatial Transcriptomics Tools#. squidpy Helmholtz Munich. Squidpy is a comprehensive toolkit for working with spatial single cell omics data. PASTE Princeton. PASTE is a computational method to align and integrate spatial tra",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:10454,Deployability,integrat,integrate,10454,"eature selection; Annotation/ Enrichment Analysis. Ecosystem#. Warning; We are no longer accepting new tools on this page.; Instead, please submit your tool to the scverse ecosystem package listing. Viewers#; Interactive manifold viewers. cellxgene via direct reading of .h5ad CZI; cirrocumulus via direct reading of .h5ad Broad Inst.; cell browser via exporing through cellbrowser() UCSC; SPRING via exporting through spring_project() Harvard Med; vitessce for purely browser based viewing of zarr formatted AnnData files Harvard Med. Portals#. the Gene Expression Analysis Resource U Maryland; the Galaxy Project for the Human Cell Atlas [tweet] U Freiburg; the Expression Atlas EMBL-EBI. Modalities#. RNA velocity#. scVelo Helmholtz Munich. Spatial Transcriptomics Tools#. squidpy Helmholtz Munich. Squidpy is a comprehensive toolkit for working with spatial single cell omics data. PASTE Princeton. PASTE is a computational method to align and integrate spatial transcriptomics data across adjacent tissue slices by leveraging both gene expression similarity and spatial distances between spots. bento 🍱 UC San Diego. Bento is an accessible Python toolkit for performing subcellular analysis of spatial transcriptomics data. Multimodal integration#. MUON and MuData EMBL/ DKFZ. MUON, and it’s associated data structure MuData are designed to organise, analyse, visualise, and exchange multimodal data.; MUON enables a range of analyses for ATAC and CITE-seq, from data preprocessing to flexible multi-omics alignment. Adaptive immune receptor repertoire (AIRR)#. scirpy Medical University of Innsbruck. scirpy is a scanpy extension to expore single-cell T-cell receptor (TCR) and B-cell receptor (BCR) repertoires. dandelion University of Cambridge. dandelion is a single-cell BCR-seq network analysis package that integrates with transcriptomic data analyzed via scanpy. Long reads#. Swan UC Irvine. Swan is a Python library designed for the analysis and visualization of transcriptomes, especial",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:10746,Deployability,integrat,integration,10746,"ellxgene via direct reading of .h5ad CZI; cirrocumulus via direct reading of .h5ad Broad Inst.; cell browser via exporing through cellbrowser() UCSC; SPRING via exporting through spring_project() Harvard Med; vitessce for purely browser based viewing of zarr formatted AnnData files Harvard Med. Portals#. the Gene Expression Analysis Resource U Maryland; the Galaxy Project for the Human Cell Atlas [tweet] U Freiburg; the Expression Atlas EMBL-EBI. Modalities#. RNA velocity#. scVelo Helmholtz Munich. Spatial Transcriptomics Tools#. squidpy Helmholtz Munich. Squidpy is a comprehensive toolkit for working with spatial single cell omics data. PASTE Princeton. PASTE is a computational method to align and integrate spatial transcriptomics data across adjacent tissue slices by leveraging both gene expression similarity and spatial distances between spots. bento 🍱 UC San Diego. Bento is an accessible Python toolkit for performing subcellular analysis of spatial transcriptomics data. Multimodal integration#. MUON and MuData EMBL/ DKFZ. MUON, and it’s associated data structure MuData are designed to organise, analyse, visualise, and exchange multimodal data.; MUON enables a range of analyses for ATAC and CITE-seq, from data preprocessing to flexible multi-omics alignment. Adaptive immune receptor repertoire (AIRR)#. scirpy Medical University of Innsbruck. scirpy is a scanpy extension to expore single-cell T-cell receptor (TCR) and B-cell receptor (BCR) repertoires. dandelion University of Cambridge. dandelion is a single-cell BCR-seq network analysis package that integrates with transcriptomic data analyzed via scanpy. Long reads#. Swan UC Irvine. Swan is a Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysis methods#. scvi-tools#. scvi-tools Berkeley. scvi-tools hosts dee",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:11325,Deployability,integrat,integrates,11325," comprehensive toolkit for working with spatial single cell omics data. PASTE Princeton. PASTE is a computational method to align and integrate spatial transcriptomics data across adjacent tissue slices by leveraging both gene expression similarity and spatial distances between spots. bento 🍱 UC San Diego. Bento is an accessible Python toolkit for performing subcellular analysis of spatial transcriptomics data. Multimodal integration#. MUON and MuData EMBL/ DKFZ. MUON, and it’s associated data structure MuData are designed to organise, analyse, visualise, and exchange multimodal data.; MUON enables a range of analyses for ATAC and CITE-seq, from data preprocessing to flexible multi-omics alignment. Adaptive immune receptor repertoire (AIRR)#. scirpy Medical University of Innsbruck. scirpy is a scanpy extension to expore single-cell T-cell receptor (TCR) and B-cell receptor (BCR) repertoires. dandelion University of Cambridge. dandelion is a single-cell BCR-seq network analysis package that integrates with transcriptomic data analyzed via scanpy. Long reads#. Swan UC Irvine. Swan is a Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysis methods#. scvi-tools#. scvi-tools Berkeley. scvi-tools hosts deep generative models (DGM) for end-to-end analysis of single-cell; omics data (e.g., scVI, scANVI, totalVI). It also contains several primitives to build novel DGMs. Fate mapping#. CellRank Helmholtz Munich. CellRank is a framework to uncover cellular dynamics based on single-cell data.; It incorporates modalities such as RNA velocity, pseudotime, developmental potential, real-time information, etc. Differential expression#. diffxpy Helmholtz Munich. Data integration#. scanaroma MIT. Modeling perturbations#. scGen / trVAE Helmholtz Munich. Feature selection#. triku 🦔 ",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:12206,Deployability,integrat,integration,12206,"R) repertoires. dandelion University of Cambridge. dandelion is a single-cell BCR-seq network analysis package that integrates with transcriptomic data analyzed via scanpy. Long reads#. Swan UC Irvine. Swan is a Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysis methods#. scvi-tools#. scvi-tools Berkeley. scvi-tools hosts deep generative models (DGM) for end-to-end analysis of single-cell; omics data (e.g., scVI, scANVI, totalVI). It also contains several primitives to build novel DGMs. Fate mapping#. CellRank Helmholtz Munich. CellRank is a framework to uncover cellular dynamics based on single-cell data.; It incorporates modalities such as RNA velocity, pseudotime, developmental potential, real-time information, etc. Differential expression#. diffxpy Helmholtz Munich. Data integration#. scanaroma MIT. Modeling perturbations#. scGen / trVAE Helmholtz Munich. Feature selection#. triku 🦔 Biodonostia Health Research Institute; CIARA Helmholtz Munich. CIARA is an algorithm for feature selection, that aims for the identification of rare cell types via scRNA-Seq data in scanpy. Annotation/ Enrichment Analysis#; Analyses using curated prior knowledge. decoupler is a collection of footprint enrichment methods that allows to infer transcription factor or pathway activities. Institute for Computational Biomedicine, Heidelberg University; Cubé Harvard University. Intuitive Nonparametric Gene Network Search Algorithm that learns from existing biological pathways & multiplicative gene interference patterns. previous; scanpy.external.exporting.cellbrowser. next; Release notes. Contents; . Viewers; Portals; Modalities; RNA velocity; Spatial Transcriptomics Tools; Multimodal integration; Adaptive immune receptor repertoire (AIRR); Long reads. Analysis methods; scvi-tools; Fa",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:13109,Deployability,integrat,integration,13109,"Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysis methods#. scvi-tools#. scvi-tools Berkeley. scvi-tools hosts deep generative models (DGM) for end-to-end analysis of single-cell; omics data (e.g., scVI, scANVI, totalVI). It also contains several primitives to build novel DGMs. Fate mapping#. CellRank Helmholtz Munich. CellRank is a framework to uncover cellular dynamics based on single-cell data.; It incorporates modalities such as RNA velocity, pseudotime, developmental potential, real-time information, etc. Differential expression#. diffxpy Helmholtz Munich. Data integration#. scanaroma MIT. Modeling perturbations#. scGen / trVAE Helmholtz Munich. Feature selection#. triku 🦔 Biodonostia Health Research Institute; CIARA Helmholtz Munich. CIARA is an algorithm for feature selection, that aims for the identification of rare cell types via scRNA-Seq data in scanpy. Annotation/ Enrichment Analysis#; Analyses using curated prior knowledge. decoupler is a collection of footprint enrichment methods that allows to infer transcription factor or pathway activities. Institute for Computational Biomedicine, Heidelberg University; Cubé Harvard University. Intuitive Nonparametric Gene Network Search Algorithm that learns from existing biological pathways & multiplicative gene interference patterns. previous; scanpy.external.exporting.cellbrowser. next; Release notes. Contents; . Viewers; Portals; Modalities; RNA velocity; Spatial Transcriptomics Tools; Multimodal integration; Adaptive immune receptor repertoire (AIRR); Long reads. Analysis methods; scvi-tools; Fate mapping; Differential expression; Data integration; Modeling perturbations; Feature selection; Annotation/ Enrichment Analysis. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:13252,Deployability,integrat,integration,13252,"Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysis methods#. scvi-tools#. scvi-tools Berkeley. scvi-tools hosts deep generative models (DGM) for end-to-end analysis of single-cell; omics data (e.g., scVI, scANVI, totalVI). It also contains several primitives to build novel DGMs. Fate mapping#. CellRank Helmholtz Munich. CellRank is a framework to uncover cellular dynamics based on single-cell data.; It incorporates modalities such as RNA velocity, pseudotime, developmental potential, real-time information, etc. Differential expression#. diffxpy Helmholtz Munich. Data integration#. scanaroma MIT. Modeling perturbations#. scGen / trVAE Helmholtz Munich. Feature selection#. triku 🦔 Biodonostia Health Research Institute; CIARA Helmholtz Munich. CIARA is an algorithm for feature selection, that aims for the identification of rare cell types via scRNA-Seq data in scanpy. Annotation/ Enrichment Analysis#; Analyses using curated prior knowledge. decoupler is a collection of footprint enrichment methods that allows to infer transcription factor or pathway activities. Institute for Computational Biomedicine, Heidelberg University; Cubé Harvard University. Intuitive Nonparametric Gene Network Search Algorithm that learns from existing biological pathways & multiplicative gene interference patterns. previous; scanpy.external.exporting.cellbrowser. next; Release notes. Contents; . Viewers; Portals; Modalities; RNA velocity; Spatial Transcriptomics Tools; Multimodal integration; Adaptive immune receptor repertoire (AIRR); Long reads. Analysis methods; scvi-tools; Fate mapping; Differential expression; Data integration; Modeling perturbations; Feature selection; Annotation/ Enrichment Analysis. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:9325,Integrability,integrat,integration,9325,"anpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Ecosystem. Contents . Viewers; Portals; Modalities; RNA velocity; Spatial Transcriptomics Tools; Multimodal integration; Adaptive immune receptor repertoire (AIRR); Long reads. Analysis methods; scvi-tools; Fate mapping; Differential expression; Data integration; Modeling perturbations; Feature selection; Annotation/ Enrichment Analysis. Ecosystem#. Warning; We are no longer accepting new tools on this page.; Instead, please submit your tool to the scverse ecosystem package listing. Viewers#; Interactive manifold viewers. cellxgene via direct reading of .h5ad CZI; cirrocumulus via direct reading of .h5ad Broad Inst.; cell browser via exporing through cellbrowser() UCSC; SPRING via exporting through spring_project() Harvard Med; vitessce for purely browser based viewing of zarr formatted AnnData files Harvard Med. Portals#. the Gene Expression Analysis Resource U Maryland; the Galaxy Project for the Human Cell Atlas [tweet] U Freiburg; the Expression Atlas EMBL-EBI. Modalities#. RNA velocity#. scVelo Helmholtz Munich. Spatial Transcriptomics Tools#. squidpy Helmholtz Munich. Squidpy ",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:9468,Integrability,integrat,integration,9468," scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Ecosystem. Contents . Viewers; Portals; Modalities; RNA velocity; Spatial Transcriptomics Tools; Multimodal integration; Adaptive immune receptor repertoire (AIRR); Long reads. Analysis methods; scvi-tools; Fate mapping; Differential expression; Data integration; Modeling perturbations; Feature selection; Annotation/ Enrichment Analysis. Ecosystem#. Warning; We are no longer accepting new tools on this page.; Instead, please submit your tool to the scverse ecosystem package listing. Viewers#; Interactive manifold viewers. cellxgene via direct reading of .h5ad CZI; cirrocumulus via direct reading of .h5ad Broad Inst.; cell browser via exporing through cellbrowser() UCSC; SPRING via exporting through spring_project() Harvard Med; vitessce for purely browser based viewing of zarr formatted AnnData files Harvard Med. Portals#. the Gene Expression Analysis Resource U Maryland; the Galaxy Project for the Human Cell Atlas [tweet] U Freiburg; the Expression Atlas EMBL-EBI. Modalities#. RNA velocity#. scVelo Helmholtz Munich. Spatial Transcriptomics Tools#. squidpy Helmholtz Munich. Squidpy is a comprehensive toolkit for working with spatial single cell omics data. PASTE Princeton. PASTE is a computational method to align and integrate spatial tra",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:10454,Integrability,integrat,integrate,10454,"eature selection; Annotation/ Enrichment Analysis. Ecosystem#. Warning; We are no longer accepting new tools on this page.; Instead, please submit your tool to the scverse ecosystem package listing. Viewers#; Interactive manifold viewers. cellxgene via direct reading of .h5ad CZI; cirrocumulus via direct reading of .h5ad Broad Inst.; cell browser via exporing through cellbrowser() UCSC; SPRING via exporting through spring_project() Harvard Med; vitessce for purely browser based viewing of zarr formatted AnnData files Harvard Med. Portals#. the Gene Expression Analysis Resource U Maryland; the Galaxy Project for the Human Cell Atlas [tweet] U Freiburg; the Expression Atlas EMBL-EBI. Modalities#. RNA velocity#. scVelo Helmholtz Munich. Spatial Transcriptomics Tools#. squidpy Helmholtz Munich. Squidpy is a comprehensive toolkit for working with spatial single cell omics data. PASTE Princeton. PASTE is a computational method to align and integrate spatial transcriptomics data across adjacent tissue slices by leveraging both gene expression similarity and spatial distances between spots. bento 🍱 UC San Diego. Bento is an accessible Python toolkit for performing subcellular analysis of spatial transcriptomics data. Multimodal integration#. MUON and MuData EMBL/ DKFZ. MUON, and it’s associated data structure MuData are designed to organise, analyse, visualise, and exchange multimodal data.; MUON enables a range of analyses for ATAC and CITE-seq, from data preprocessing to flexible multi-omics alignment. Adaptive immune receptor repertoire (AIRR)#. scirpy Medical University of Innsbruck. scirpy is a scanpy extension to expore single-cell T-cell receptor (TCR) and B-cell receptor (BCR) repertoires. dandelion University of Cambridge. dandelion is a single-cell BCR-seq network analysis package that integrates with transcriptomic data analyzed via scanpy. Long reads#. Swan UC Irvine. Swan is a Python library designed for the analysis and visualization of transcriptomes, especial",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:10746,Integrability,integrat,integration,10746,"ellxgene via direct reading of .h5ad CZI; cirrocumulus via direct reading of .h5ad Broad Inst.; cell browser via exporing through cellbrowser() UCSC; SPRING via exporting through spring_project() Harvard Med; vitessce for purely browser based viewing of zarr formatted AnnData files Harvard Med. Portals#. the Gene Expression Analysis Resource U Maryland; the Galaxy Project for the Human Cell Atlas [tweet] U Freiburg; the Expression Atlas EMBL-EBI. Modalities#. RNA velocity#. scVelo Helmholtz Munich. Spatial Transcriptomics Tools#. squidpy Helmholtz Munich. Squidpy is a comprehensive toolkit for working with spatial single cell omics data. PASTE Princeton. PASTE is a computational method to align and integrate spatial transcriptomics data across adjacent tissue slices by leveraging both gene expression similarity and spatial distances between spots. bento 🍱 UC San Diego. Bento is an accessible Python toolkit for performing subcellular analysis of spatial transcriptomics data. Multimodal integration#. MUON and MuData EMBL/ DKFZ. MUON, and it’s associated data structure MuData are designed to organise, analyse, visualise, and exchange multimodal data.; MUON enables a range of analyses for ATAC and CITE-seq, from data preprocessing to flexible multi-omics alignment. Adaptive immune receptor repertoire (AIRR)#. scirpy Medical University of Innsbruck. scirpy is a scanpy extension to expore single-cell T-cell receptor (TCR) and B-cell receptor (BCR) repertoires. dandelion University of Cambridge. dandelion is a single-cell BCR-seq network analysis package that integrates with transcriptomic data analyzed via scanpy. Long reads#. Swan UC Irvine. Swan is a Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysis methods#. scvi-tools#. scvi-tools Berkeley. scvi-tools hosts dee",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:11325,Integrability,integrat,integrates,11325," comprehensive toolkit for working with spatial single cell omics data. PASTE Princeton. PASTE is a computational method to align and integrate spatial transcriptomics data across adjacent tissue slices by leveraging both gene expression similarity and spatial distances between spots. bento 🍱 UC San Diego. Bento is an accessible Python toolkit for performing subcellular analysis of spatial transcriptomics data. Multimodal integration#. MUON and MuData EMBL/ DKFZ. MUON, and it’s associated data structure MuData are designed to organise, analyse, visualise, and exchange multimodal data.; MUON enables a range of analyses for ATAC and CITE-seq, from data preprocessing to flexible multi-omics alignment. Adaptive immune receptor repertoire (AIRR)#. scirpy Medical University of Innsbruck. scirpy is a scanpy extension to expore single-cell T-cell receptor (TCR) and B-cell receptor (BCR) repertoires. dandelion University of Cambridge. dandelion is a single-cell BCR-seq network analysis package that integrates with transcriptomic data analyzed via scanpy. Long reads#. Swan UC Irvine. Swan is a Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysis methods#. scvi-tools#. scvi-tools Berkeley. scvi-tools hosts deep generative models (DGM) for end-to-end analysis of single-cell; omics data (e.g., scVI, scANVI, totalVI). It also contains several primitives to build novel DGMs. Fate mapping#. CellRank Helmholtz Munich. CellRank is a framework to uncover cellular dynamics based on single-cell data.; It incorporates modalities such as RNA velocity, pseudotime, developmental potential, real-time information, etc. Differential expression#. diffxpy Helmholtz Munich. Data integration#. scanaroma MIT. Modeling perturbations#. scGen / trVAE Helmholtz Munich. Feature selection#. triku 🦔 ",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:12206,Integrability,integrat,integration,12206,"R) repertoires. dandelion University of Cambridge. dandelion is a single-cell BCR-seq network analysis package that integrates with transcriptomic data analyzed via scanpy. Long reads#. Swan UC Irvine. Swan is a Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysis methods#. scvi-tools#. scvi-tools Berkeley. scvi-tools hosts deep generative models (DGM) for end-to-end analysis of single-cell; omics data (e.g., scVI, scANVI, totalVI). It also contains several primitives to build novel DGMs. Fate mapping#. CellRank Helmholtz Munich. CellRank is a framework to uncover cellular dynamics based on single-cell data.; It incorporates modalities such as RNA velocity, pseudotime, developmental potential, real-time information, etc. Differential expression#. diffxpy Helmholtz Munich. Data integration#. scanaroma MIT. Modeling perturbations#. scGen / trVAE Helmholtz Munich. Feature selection#. triku 🦔 Biodonostia Health Research Institute; CIARA Helmholtz Munich. CIARA is an algorithm for feature selection, that aims for the identification of rare cell types via scRNA-Seq data in scanpy. Annotation/ Enrichment Analysis#; Analyses using curated prior knowledge. decoupler is a collection of footprint enrichment methods that allows to infer transcription factor or pathway activities. Institute for Computational Biomedicine, Heidelberg University; Cubé Harvard University. Intuitive Nonparametric Gene Network Search Algorithm that learns from existing biological pathways & multiplicative gene interference patterns. previous; scanpy.external.exporting.cellbrowser. next; Release notes. Contents; . Viewers; Portals; Modalities; RNA velocity; Spatial Transcriptomics Tools; Multimodal integration; Adaptive immune receptor repertoire (AIRR); Long reads. Analysis methods; scvi-tools; Fa",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:13109,Integrability,integrat,integration,13109,"Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysis methods#. scvi-tools#. scvi-tools Berkeley. scvi-tools hosts deep generative models (DGM) for end-to-end analysis of single-cell; omics data (e.g., scVI, scANVI, totalVI). It also contains several primitives to build novel DGMs. Fate mapping#. CellRank Helmholtz Munich. CellRank is a framework to uncover cellular dynamics based on single-cell data.; It incorporates modalities such as RNA velocity, pseudotime, developmental potential, real-time information, etc. Differential expression#. diffxpy Helmholtz Munich. Data integration#. scanaroma MIT. Modeling perturbations#. scGen / trVAE Helmholtz Munich. Feature selection#. triku 🦔 Biodonostia Health Research Institute; CIARA Helmholtz Munich. CIARA is an algorithm for feature selection, that aims for the identification of rare cell types via scRNA-Seq data in scanpy. Annotation/ Enrichment Analysis#; Analyses using curated prior knowledge. decoupler is a collection of footprint enrichment methods that allows to infer transcription factor or pathway activities. Institute for Computational Biomedicine, Heidelberg University; Cubé Harvard University. Intuitive Nonparametric Gene Network Search Algorithm that learns from existing biological pathways & multiplicative gene interference patterns. previous; scanpy.external.exporting.cellbrowser. next; Release notes. Contents; . Viewers; Portals; Modalities; RNA velocity; Spatial Transcriptomics Tools; Multimodal integration; Adaptive immune receptor repertoire (AIRR); Long reads. Analysis methods; scvi-tools; Fate mapping; Differential expression; Data integration; Modeling perturbations; Feature selection; Annotation/ Enrichment Analysis. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:13252,Integrability,integrat,integration,13252,"Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysis methods#. scvi-tools#. scvi-tools Berkeley. scvi-tools hosts deep generative models (DGM) for end-to-end analysis of single-cell; omics data (e.g., scVI, scANVI, totalVI). It also contains several primitives to build novel DGMs. Fate mapping#. CellRank Helmholtz Munich. CellRank is a framework to uncover cellular dynamics based on single-cell data.; It incorporates modalities such as RNA velocity, pseudotime, developmental potential, real-time information, etc. Differential expression#. diffxpy Helmholtz Munich. Data integration#. scanaroma MIT. Modeling perturbations#. scGen / trVAE Helmholtz Munich. Feature selection#. triku 🦔 Biodonostia Health Research Institute; CIARA Helmholtz Munich. CIARA is an algorithm for feature selection, that aims for the identification of rare cell types via scRNA-Seq data in scanpy. Annotation/ Enrichment Analysis#; Analyses using curated prior knowledge. decoupler is a collection of footprint enrichment methods that allows to infer transcription factor or pathway activities. Institute for Computational Biomedicine, Heidelberg University; Cubé Harvard University. Intuitive Nonparametric Gene Network Search Algorithm that learns from existing biological pathways & multiplicative gene interference patterns. previous; scanpy.external.exporting.cellbrowser. next; Release notes. Contents; . Viewers; Portals; Modalities; RNA velocity; Spatial Transcriptomics Tools; Multimodal integration; Adaptive immune receptor repertoire (AIRR); Long reads. Analysis methods; scvi-tools; Fate mapping; Differential expression; Data integration; Modeling perturbations; Feature selection; Annotation/ Enrichment Analysis. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:10996,Modifiability,flexible,flexible,10996,"urely browser based viewing of zarr formatted AnnData files Harvard Med. Portals#. the Gene Expression Analysis Resource U Maryland; the Galaxy Project for the Human Cell Atlas [tweet] U Freiburg; the Expression Atlas EMBL-EBI. Modalities#. RNA velocity#. scVelo Helmholtz Munich. Spatial Transcriptomics Tools#. squidpy Helmholtz Munich. Squidpy is a comprehensive toolkit for working with spatial single cell omics data. PASTE Princeton. PASTE is a computational method to align and integrate spatial transcriptomics data across adjacent tissue slices by leveraging both gene expression similarity and spatial distances between spots. bento 🍱 UC San Diego. Bento is an accessible Python toolkit for performing subcellular analysis of spatial transcriptomics data. Multimodal integration#. MUON and MuData EMBL/ DKFZ. MUON, and it’s associated data structure MuData are designed to organise, analyse, visualise, and exchange multimodal data.; MUON enables a range of analyses for ATAC and CITE-seq, from data preprocessing to flexible multi-omics alignment. Adaptive immune receptor repertoire (AIRR)#. scirpy Medical University of Innsbruck. scirpy is a scanpy extension to expore single-cell T-cell receptor (TCR) and B-cell receptor (BCR) repertoires. dandelion University of Cambridge. dandelion is a single-cell BCR-seq network analysis package that integrates with transcriptomic data analyzed via scanpy. Long reads#. Swan UC Irvine. Swan is a Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysis methods#. scvi-tools#. scvi-tools Berkeley. scvi-tools hosts deep generative models (DGM) for end-to-end analysis of single-cell; omics data (e.g., scVI, scANVI, totalVI). It also contains several primitives to build novel DGMs. Fate mapping#. CellRank Helmholtz Munich. CellRank is a f",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:7163,Performance,cache,cachedir,7163,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:10670,Performance,perform,performing,10670,"osystem package listing. Viewers#; Interactive manifold viewers. cellxgene via direct reading of .h5ad CZI; cirrocumulus via direct reading of .h5ad Broad Inst.; cell browser via exporing through cellbrowser() UCSC; SPRING via exporting through spring_project() Harvard Med; vitessce for purely browser based viewing of zarr formatted AnnData files Harvard Med. Portals#. the Gene Expression Analysis Resource U Maryland; the Galaxy Project for the Human Cell Atlas [tweet] U Freiburg; the Expression Atlas EMBL-EBI. Modalities#. RNA velocity#. scVelo Helmholtz Munich. Spatial Transcriptomics Tools#. squidpy Helmholtz Munich. Squidpy is a comprehensive toolkit for working with spatial single cell omics data. PASTE Princeton. PASTE is a computational method to align and integrate spatial transcriptomics data across adjacent tissue slices by leveraging both gene expression similarity and spatial distances between spots. bento 🍱 UC San Diego. Bento is an accessible Python toolkit for performing subcellular analysis of spatial transcriptomics data. Multimodal integration#. MUON and MuData EMBL/ DKFZ. MUON, and it’s associated data structure MuData are designed to organise, analyse, visualise, and exchange multimodal data.; MUON enables a range of analyses for ATAC and CITE-seq, from data preprocessing to flexible multi-omics alignment. Adaptive immune receptor repertoire (AIRR)#. scirpy Medical University of Innsbruck. scirpy is a scanpy extension to expore single-cell T-cell receptor (TCR) and B-cell receptor (BCR) repertoires. dandelion University of Cambridge. dandelion is a single-cell BCR-seq network analysis package that integrates with transcriptomic data analyzed via scanpy. Long reads#. Swan UC Irvine. Swan is a Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysi",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:8404,Security,hash,hashsolo,8404,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Ecosystem. Contents . Viewers; Portals; Modalities; RNA velocity; Spatial Transcriptomics Tools; Multimodal integration; Adaptive immune receptor repertoire (AIRR); Long reads. Analysis methods; s,MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:10640,Security,access,accessible,10640,"osystem package listing. Viewers#; Interactive manifold viewers. cellxgene via direct reading of .h5ad CZI; cirrocumulus via direct reading of .h5ad Broad Inst.; cell browser via exporing through cellbrowser() UCSC; SPRING via exporting through spring_project() Harvard Med; vitessce for purely browser based viewing of zarr formatted AnnData files Harvard Med. Portals#. the Gene Expression Analysis Resource U Maryland; the Galaxy Project for the Human Cell Atlas [tweet] U Freiburg; the Expression Atlas EMBL-EBI. Modalities#. RNA velocity#. scVelo Helmholtz Munich. Spatial Transcriptomics Tools#. squidpy Helmholtz Munich. Squidpy is a comprehensive toolkit for working with spatial single cell omics data. PASTE Princeton. PASTE is a computational method to align and integrate spatial transcriptomics data across adjacent tissue slices by leveraging both gene expression similarity and spatial distances between spots. bento 🍱 UC San Diego. Bento is an accessible Python toolkit for performing subcellular analysis of spatial transcriptomics data. Multimodal integration#. MUON and MuData EMBL/ DKFZ. MUON, and it’s associated data structure MuData are designed to organise, analyse, visualise, and exchange multimodal data.; MUON enables a range of analyses for ATAC and CITE-seq, from data preprocessing to flexible multi-omics alignment. Adaptive immune receptor repertoire (AIRR)#. scirpy Medical University of Innsbruck. scirpy is a scanpy extension to expore single-cell T-cell receptor (TCR) and B-cell receptor (BCR) repertoires. dandelion University of Cambridge. dandelion is a single-cell BCR-seq network analysis package that integrates with transcriptomic data analyzed via scanpy. Long reads#. Swan UC Irvine. Swan is a Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysi",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:7431,Testability,log,logfile,7431,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:7470,Testability,log,logpath,7470,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:7776,Testability,log,logging,7776,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:7805,Testability,log,logging,7805, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/ecosystem.html:12855,Usability,learn,learns,12855,"Python library designed for the analysis and visualization of transcriptomes, especially with long-read transcriptomes in mind.; Users can add transcriptomes from different datasets and explore distinct splicing and expression patterns across datasets. Analysis methods#. scvi-tools#. scvi-tools Berkeley. scvi-tools hosts deep generative models (DGM) for end-to-end analysis of single-cell; omics data (e.g., scVI, scANVI, totalVI). It also contains several primitives to build novel DGMs. Fate mapping#. CellRank Helmholtz Munich. CellRank is a framework to uncover cellular dynamics based on single-cell data.; It incorporates modalities such as RNA velocity, pseudotime, developmental potential, real-time information, etc. Differential expression#. diffxpy Helmholtz Munich. Data integration#. scanaroma MIT. Modeling perturbations#. scGen / trVAE Helmholtz Munich. Feature selection#. triku 🦔 Biodonostia Health Research Institute; CIARA Helmholtz Munich. CIARA is an algorithm for feature selection, that aims for the identification of rare cell types via scRNA-Seq data in scanpy. Annotation/ Enrichment Analysis#; Analyses using curated prior knowledge. decoupler is a collection of footprint enrichment methods that allows to infer transcription factor or pathway activities. Institute for Computational Biomedicine, Heidelberg University; Cubé Harvard University. Intuitive Nonparametric Gene Network Search Algorithm that learns from existing biological pathways & multiplicative gene interference patterns. previous; scanpy.external.exporting.cellbrowser. next; Release notes. Contents; . Viewers; Portals; Modalities; RNA velocity; Spatial Transcriptomics Tools; Multimodal integration; Adaptive immune receptor repertoire (AIRR); Long reads. Analysis methods; scvi-tools; Fate mapping; Differential expression; Data integration; Modeling perturbations; Feature selection; Annotation/ Enrichment Analysis. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/ecosystem.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/ecosystem.html
https://scanpy.readthedocs.io/en/stable/genindex.html:8083,Deployability,toggle,toggleswitch,8083,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:9167,Deployability,release,release,9167,py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. Index. A; | B; | C; | D; | E; | F; | G; | H; | I; | K; | L; | M; | N; | O; | P; | R; | S; | T; | U; | V; | W. A. add_dendrogram() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). add_totals() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). aggregate() (in module scanpy.get). autosave (scanpy._settings.ScanpyConfig property). autoshow (scanpy._settings.ScanpyConfig property). B. bbknn() (in module scanpy.external.pp). biomart_annotations() (in module scanpy.queries). blobs() (in module scanpy.datasets). C. cache_compression (scanpy._settings.ScanpyConfig property). cachedir (scanpy._settings.ScanpyConfig property). calculate_qc_metrics() (in module scanpy.pp). categories_to_ignore (scanpy._settings.ScanpyConfig property). cellbrowser() (in module scanpy.external.exporting). clustermap() (in module sc,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:19836,Deployability,toggle,toggleswitch,19836," module. scanpy.external.exporting. ; module. scanpy.external.pl. ; module. scanpy.external.pp. ; module. scanpy.external.tl. ; module. scanpy.get. ; module. scanpy.metrics. ; module. scanpy.pl. ; module. scanpy.pp. ; module. scanpy.queries. ; module. scanpy.tl. ; module. ScanpyConfig (class in scanpy._settings). scatter() (in module scanpy.pl). score_genes() (in module scanpy.tl). score_genes_cell_cycle() (in module scanpy.tl). scrublet() (in module scanpy.pp). scrublet_score_distribution() (in module scanpy.pl). scrublet_simulate_doublets() (in module scanpy.pp). set_figure_params() (in module scanpy). (scanpy._settings.ScanpyConfig method). show() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). sim() (in module scanpy.pl). (in module scanpy.tl). spatial() (in module scanpy.pl). spring_project() (in module scanpy.external.exporting). stacked_violin() (in module scanpy.pl). StackedViolin (class in scanpy.pl). style() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). subsample() (in module scanpy.pp). swap_axes() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). T. to_igraph() (scanpy.Neighbors method). toggleswitch() (in module scanpy.datasets). tracksplot() (in module scanpy.pl). transitions (scanpy.Neighbors property). transitions_sym (scanpy.Neighbors property). trimap() (in module scanpy.external.pl). (in module scanpy.external.tl). tsne() (in module scanpy.pl). (in module scanpy.tl). U. umap() (in module scanpy.pl). (in module scanpy.tl). V. var_df() (in module scanpy.get). verbosity (scanpy._settings.ScanpyConfig property). violin() (in module scanpy.pl). visium_sge() (in module scanpy.datasets). W. wishbone() (in module scanpy.external.tl). wishbone_marker_trajectory() (in module scanpy.external.pl). writedir (scanpy._settings.ScanpyConfig property). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:7159,Performance,cache,cachedir,7159,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:9862,Performance,cache,cachedir,9862,y.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. Index. A; | B; | C; | D; | E; | F; | G; | H; | I; | K; | L; | M; | N; | O; | P; | R; | S; | T; | U; | V; | W. A. add_dendrogram() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). add_totals() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). aggregate() (in module scanpy.get). autosave (scanpy._settings.ScanpyConfig property). autoshow (scanpy._settings.ScanpyConfig property). B. bbknn() (in module scanpy.external.pp). biomart_annotations() (in module scanpy.queries). blobs() (in module scanpy.datasets). C. cache_compression (scanpy._settings.ScanpyConfig property). cachedir (scanpy._settings.ScanpyConfig property). calculate_qc_metrics() (in module scanpy.pp). categories_to_ignore (scanpy._settings.ScanpyConfig property). cellbrowser() (in module scanpy.external.exporting). clustermap() (in module scanpy.pl). combat() (in module scanpy.pp). compute_eigen() (scanpy.Neighbors method). compute_neighbors() (scanpy.Neighbors method). compute_transitions() (scanpy.Neighbors method). confusion_matrix() (in module scanpy.metrics). connectivities (scanpy.Neighbors property). cyclone() (in module scanpy.external.tl). D. datasetdir (scanpy._settings.ScanpyConfig property). dca() (in module scanpy.external.pp). DEFAULT_CATEGORY_HEIGHT (scanpy.pl.DotPlot attribute). (scanpy.pl.MatrixPlot attribute). (scanpy.pl.StackedViolin attribute). DEFAULT_CATEGORY_WIDTH (scanpy.pl.DotPlot attribute). (scanpy.pl.MatrixPlot attribute). (scanpy.pl.StackedViolin attribute). DEFAULT_COLOR_LEGEND_TITLE (scanpy.pl.DotPlot attribute). (scanpy.pl.MatrixPlot attribute). (scanpy.pl.Stacked,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:8400,Security,hash,hashsolo,8400,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. Index. A; | B; | C; | D; | E; | F; | G; | H; | I; | K; | L; | M; | N; | O; | P; | R; | S; | T; | U; | V; | W. A. add_dendrogram() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.Stacked,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:14213,Security,hash,hashsolo,14213,perty). eigen_values (scanpy.Neighbors property). embedding() (in module scanpy.pl). embedding_density() (in module scanpy.pl). (in module scanpy.tl). enrich() (in module scanpy.queries). F. figdir (scanpy._settings.ScanpyConfig property). file_format_data (scanpy._settings.ScanpyConfig property). file_format_figs (scanpy._settings.ScanpyConfig property). filter_cells() (in module scanpy.pp). filter_genes() (in module scanpy.pp). filter_genes_dispersion() (in module scanpy.pl). (in module scanpy.pp). filter_rank_genes_groups() (in module scanpy.tl). G. gearys_c() (in module scanpy.metrics). gene_coordinates() (in module scanpy.queries). get_axes() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). getdoc() (scanpy.Neighbors method). (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). H. harmony_integrate() (in module scanpy.external.pp). harmony_timeseries() (in module scanpy.external.tl). hashsolo() (in module scanpy.external.pp). heatmap() (in module scanpy.pl). highest_expr_genes() (in module scanpy.pl). highly_variable_genes() (in module scanpy.experimental.pp). (in module scanpy.pl). (in module scanpy.pp). I. ingest() (in module scanpy.tl). K. krumsiek11() (in module scanpy.datasets). L. legend() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). leiden() (in module scanpy.tl). log1p() (in module scanpy.pp). logfile (scanpy._settings.ScanpyConfig property). logpath (scanpy._settings.ScanpyConfig property). louvain() (in module scanpy.tl). M. magic() (in module scanpy.external.pp). make_figure() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). marker_gene_overlap() (in module scanpy.tl). MatrixPlot (class in scanpy.pl). matrixplot() (in module scanpy.pl). max_memory (scanpy._settings.ScanpyConfig property). MAX_NUM_CATEGORIES (scanpy.pl.DotPlot attribute). (scanpy.pl.MatrixPlot attribute). (scanp,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:7427,Testability,log,logfile,7427,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:7466,Testability,log,logpath,7466,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:7772,Testability,log,logging,7772,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:7801,Testability,log,logging,7801, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:14687,Testability,log,logfile,14687,ule scanpy.pl). (in module scanpy.pp). filter_rank_genes_groups() (in module scanpy.tl). G. gearys_c() (in module scanpy.metrics). gene_coordinates() (in module scanpy.queries). get_axes() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). getdoc() (scanpy.Neighbors method). (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). H. harmony_integrate() (in module scanpy.external.pp). harmony_timeseries() (in module scanpy.external.tl). hashsolo() (in module scanpy.external.pp). heatmap() (in module scanpy.pl). highest_expr_genes() (in module scanpy.pl). highly_variable_genes() (in module scanpy.experimental.pp). (in module scanpy.pl). (in module scanpy.pp). I. ingest() (in module scanpy.tl). K. krumsiek11() (in module scanpy.datasets). L. legend() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). leiden() (in module scanpy.tl). log1p() (in module scanpy.pp). logfile (scanpy._settings.ScanpyConfig property). logpath (scanpy._settings.ScanpyConfig property). louvain() (in module scanpy.tl). M. magic() (in module scanpy.external.pp). make_figure() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). marker_gene_overlap() (in module scanpy.tl). MatrixPlot (class in scanpy.pl). matrixplot() (in module scanpy.pl). max_memory (scanpy._settings.ScanpyConfig property). MAX_NUM_CATEGORIES (scanpy.pl.DotPlot attribute). (scanpy.pl.MatrixPlot attribute). (scanpy.pl.StackedViolin attribute). MIN_FIGURE_HEIGHT (scanpy.pl.DotPlot attribute). (scanpy.pl.MatrixPlot attribute). (scanpy.pl.StackedViolin attribute). mitochondrial_genes() (in module scanpy.queries). mnn_correct() (in module scanpy.external.pp). module. ; scanpy.datasets. scanpy.experimental. scanpy.experimental.pp. scanpy.external. scanpy.external.exporting. scanpy.external.pl. scanpy.external.pp. scanpy.external.tl. scanpy.get. scanpy.metrics. scanpy.pl. scanpy,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:14737,Testability,log,logpath,14737,_genes_groups() (in module scanpy.tl). G. gearys_c() (in module scanpy.metrics). gene_coordinates() (in module scanpy.queries). get_axes() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). getdoc() (scanpy.Neighbors method). (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). H. harmony_integrate() (in module scanpy.external.pp). harmony_timeseries() (in module scanpy.external.tl). hashsolo() (in module scanpy.external.pp). heatmap() (in module scanpy.pl). highest_expr_genes() (in module scanpy.pl). highly_variable_genes() (in module scanpy.experimental.pp). (in module scanpy.pl). (in module scanpy.pp). I. ingest() (in module scanpy.tl). K. krumsiek11() (in module scanpy.datasets). L. legend() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). leiden() (in module scanpy.tl). log1p() (in module scanpy.pp). logfile (scanpy._settings.ScanpyConfig property). logpath (scanpy._settings.ScanpyConfig property). louvain() (in module scanpy.tl). M. magic() (in module scanpy.external.pp). make_figure() (scanpy.pl.DotPlot method). (scanpy.pl.MatrixPlot method). (scanpy.pl.StackedViolin method). marker_gene_overlap() (in module scanpy.tl). MatrixPlot (class in scanpy.pl). matrixplot() (in module scanpy.pl). max_memory (scanpy._settings.ScanpyConfig property). MAX_NUM_CATEGORIES (scanpy.pl.DotPlot attribute). (scanpy.pl.MatrixPlot attribute). (scanpy.pl.StackedViolin attribute). MIN_FIGURE_HEIGHT (scanpy.pl.DotPlot attribute). (scanpy.pl.MatrixPlot attribute). (scanpy.pl.StackedViolin attribute). mitochondrial_genes() (in module scanpy.queries). mnn_correct() (in module scanpy.external.pp). module. ; scanpy.datasets. scanpy.experimental. scanpy.experimental.pp. scanpy.external. scanpy.external.exporting. scanpy.external.pl. scanpy.external.pp. scanpy.external.tl. scanpy.get. scanpy.metrics. scanpy.pl. scanpy.pp. scanpy.queries. scanpy.tl. moignard15() (in m,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:17000,Testability,log,logging,17000,in module scanpy.experimental.pp). normalize_pearson_residuals_pca() (in module scanpy.experimental.pp). normalize_per_cell() (in module scanpy.pp). normalize_total() (in module scanpy.pp). O. obs_df() (in module scanpy.get). P. paga() (in module scanpy.pl). (in module scanpy.tl). paga_compare() (in module scanpy.pl). paga_path() (in module scanpy.pl). palantir() (in module scanpy.external.tl). palantir_results() (in module scanpy.external.tl). paul15() (in module scanpy.datasets). pbmc3k() (in module scanpy.datasets). pbmc3k_processed() (in module scanpy.datasets). pbmc68k_reduced() (in module scanpy.datasets). pca() (in module scanpy.pl). (in module scanpy.pp). pca_loadings() (in module scanpy.pl). pca_overview() (in module scanpy.pl). pca_variance_ratio() (in module scanpy.pl). phate() (in module scanpy.external.pl). (in module scanpy.external.tl). phenograph() (in module scanpy.external.tl). plot_suffix (scanpy._settings.ScanpyConfig property). print_header() (in module scanpy.logging). print_versions() (in module scanpy.logging). R. rank_genes_groups() (in module scanpy.pl). (in module scanpy.tl). rank_genes_groups_df() (in module scanpy.get). rank_genes_groups_dotplot() (in module scanpy.pl). rank_genes_groups_heatmap() (in module scanpy.pl). rank_genes_groups_matrixplot() (in module scanpy.pl). rank_genes_groups_stacked_violin() (in module scanpy.pl). rank_genes_groups_tracksplot() (in module scanpy.pl). rank_genes_groups_violin() (in module scanpy.pl). ranking() (in module scanpy.pl). read() (in module scanpy). read_10x_h5() (in module scanpy). read_10x_mtx() (in module scanpy). read_csv() (in module scanpy). read_excel() (in module scanpy). read_h5ad() (in module scanpy). read_hdf() (in module scanpy). read_loom() (in module scanpy). read_mtx() (in module scanpy). read_text() (in module scanpy). read_umi_tools() (in module scanpy). read_visium() (in module scanpy). recipe_pearson_residuals() (in module scanpy.experimental.pp). recipe_seurat() (in module scan,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/genindex.html:17045,Testability,log,logging,17045,pearson_residuals_pca() (in module scanpy.experimental.pp). normalize_per_cell() (in module scanpy.pp). normalize_total() (in module scanpy.pp). O. obs_df() (in module scanpy.get). P. paga() (in module scanpy.pl). (in module scanpy.tl). paga_compare() (in module scanpy.pl). paga_path() (in module scanpy.pl). palantir() (in module scanpy.external.tl). palantir_results() (in module scanpy.external.tl). paul15() (in module scanpy.datasets). pbmc3k() (in module scanpy.datasets). pbmc3k_processed() (in module scanpy.datasets). pbmc68k_reduced() (in module scanpy.datasets). pca() (in module scanpy.pl). (in module scanpy.pp). pca_loadings() (in module scanpy.pl). pca_overview() (in module scanpy.pl). pca_variance_ratio() (in module scanpy.pl). phate() (in module scanpy.external.pl). (in module scanpy.external.tl). phenograph() (in module scanpy.external.tl). plot_suffix (scanpy._settings.ScanpyConfig property). print_header() (in module scanpy.logging). print_versions() (in module scanpy.logging). R. rank_genes_groups() (in module scanpy.pl). (in module scanpy.tl). rank_genes_groups_df() (in module scanpy.get). rank_genes_groups_dotplot() (in module scanpy.pl). rank_genes_groups_heatmap() (in module scanpy.pl). rank_genes_groups_matrixplot() (in module scanpy.pl). rank_genes_groups_stacked_violin() (in module scanpy.pl). rank_genes_groups_tracksplot() (in module scanpy.pl). rank_genes_groups_violin() (in module scanpy.pl). ranking() (in module scanpy.pl). read() (in module scanpy). read_10x_h5() (in module scanpy). read_10x_mtx() (in module scanpy). read_csv() (in module scanpy). read_excel() (in module scanpy). read_h5ad() (in module scanpy). read_hdf() (in module scanpy). read_loom() (in module scanpy). read_mtx() (in module scanpy). read_text() (in module scanpy). read_umi_tools() (in module scanpy). read_visium() (in module scanpy). recipe_pearson_residuals() (in module scanpy.experimental.pp). recipe_seurat() (in module scanpy.pp). recipe_weinreb17() (in module scanpy.,MatchSource.WIKI,en/stable/genindex.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/genindex.html
https://scanpy.readthedocs.io/en/stable/index.html:11748,Availability,avail,available,11748,".scverse.org. GitHub ; Find a bug? Interested in improving scanpy? Checkout our GitHub for the latest developments. https://github.com/scverse/scanpy. Other resources. Follow changes in the release notes.; Find tools that harmonize well with anndata & Scanpy at scverse.org/packages/; Check out our contribution guide for development practices.; Consider citing Genome Biology (2018) along with original references. News#. rapids-singlecell brings scanpy to the GPU! 2024-03-18#; rapids-singlecell by Severin Dicks provides a scanpy-like API with accelerated operations implemented on GPU. Scanpy hits 100 contributors! 2022-03-31#; 100 people have contributed to Scanpy’s source code!; Of course, contributions to the project are not limited to direct modification of the source code.; Many others have improved the project by building on top of it, participating in development discussions, helping others with usage, or by showing off what it’s helped them accomplish.; Thanks to all our contributors for making this project possible!. New community channels 2022-03-31#; We’ve moved our forums and have a new publicly available chat!. Our discourse forum has migrated to a joint scverse forum (discourse.scverse.org).; Our private developer Slack has been replaced by a public Zulip chat (scverse.zulipchat.com). Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01#; Two large toolkits extending our ecosystem to new modalities have had their manuscripts published!. Muon, a framework for multimodal has been published in Genome Biology.; Squidpy a toolkit for working with spatial single cell data has been published in Nature Methods. (past news). next; Installation. Contents; . News; rapids-singlecell brings scanpy to the GPU! 2024-03-18; Scanpy hits 100 contributors! 2022-03-31; New community channels 2022-03-31; Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:8118,Deployability,toggle,toggleswitch,8118,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:9202,Deployability,release,release,9202,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Scanpy – Single-Cell Analysis in Python. Contents . News; rapids-singlecell brings scanpy to the GPU! 2024-03-18; Scanpy hits 100 contributors! 2022-03-31; New community channels 2022-03-31; Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01. Scanpy – Single-Cell Analysis in Python#; Scanpy is a scalable toolkit for analyzing single-cell gene expression data; built jointly with anndata. It includes; preprocessing, visualization, clustering, trajectory inference and differential; expression testing. The Python-based implementation efficiently deals with; datasets of more than one million cells.; Discuss usage on the scverse Discourse. Read the documentation.; If you’d like to contribute by opening an issue or creating a pull request, please take a look at our contribution guide.; scanpy is part of the scverse project (website, governance) and is fiscally ",MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:10315,Deployability,install,installation,10315,"ws; rapids-singlecell brings scanpy to the GPU! 2024-03-18; Scanpy hits 100 contributors! 2022-03-31; New community channels 2022-03-31; Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01. Scanpy – Single-Cell Analysis in Python#; Scanpy is a scalable toolkit for analyzing single-cell gene expression data; built jointly with anndata. It includes; preprocessing, visualization, clustering, trajectory inference and differential; expression testing. The Python-based implementation efficiently deals with; datasets of more than one million cells.; Discuss usage on the scverse Discourse. Read the documentation.; If you’d like to contribute by opening an issue or creating a pull request, please take a look at our contribution guide.; scanpy is part of the scverse project (website, governance) and is fiscally sponsored by NumFOCUS.; If you like scverse and want to support our mission, please consider making a donation to support our efforts. Installation ; New to scanpy? Check out the installation guide. Installation. Tutorials ; The tutorials walk you through real-world applications of scanpy. Tutorials. API reference ; The API reference contains a detailed description of; the scanpy API. API. Discussion ; Need help? Reach out on our forum to get your questions answered!. https://discourse.scverse.org. GitHub ; Find a bug? Interested in improving scanpy? Checkout our GitHub for the latest developments. https://github.com/scverse/scanpy. Other resources. Follow changes in the release notes.; Find tools that harmonize well with anndata & Scanpy at scverse.org/packages/; Check out our contribution guide for development practices.; Consider citing Genome Biology (2018) along with original references. News#. rapids-singlecell brings scanpy to the GPU! 2024-03-18#; rapids-singlecell by Severin Dicks provides a scanpy-like API with accelerated operations implemented on GPU. Scanpy hits 100 contributors! 2022-03-31#; 100 people have contributed to Scanpy’s sou",MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:10816,Deployability,release,release,10816,"iently deals with; datasets of more than one million cells.; Discuss usage on the scverse Discourse. Read the documentation.; If you’d like to contribute by opening an issue or creating a pull request, please take a look at our contribution guide.; scanpy is part of the scverse project (website, governance) and is fiscally sponsored by NumFOCUS.; If you like scverse and want to support our mission, please consider making a donation to support our efforts. Installation ; New to scanpy? Check out the installation guide. Installation. Tutorials ; The tutorials walk you through real-world applications of scanpy. Tutorials. API reference ; The API reference contains a detailed description of; the scanpy API. API. Discussion ; Need help? Reach out on our forum to get your questions answered!. https://discourse.scverse.org. GitHub ; Find a bug? Interested in improving scanpy? Checkout our GitHub for the latest developments. https://github.com/scverse/scanpy. Other resources. Follow changes in the release notes.; Find tools that harmonize well with anndata & Scanpy at scverse.org/packages/; Check out our contribution guide for development practices.; Consider citing Genome Biology (2018) along with original references. News#. rapids-singlecell brings scanpy to the GPU! 2024-03-18#; rapids-singlecell by Severin Dicks provides a scanpy-like API with accelerated operations implemented on GPU. Scanpy hits 100 contributors! 2022-03-31#; 100 people have contributed to Scanpy’s source code!; Of course, contributions to the project are not limited to direct modification of the source code.; Many others have improved the project by building on top of it, participating in development discussions, helping others with usage, or by showing off what it’s helped them accomplish.; Thanks to all our contributors for making this project possible!. New community channels 2022-03-31#; We’ve moved our forums and have a new publicly available chat!. Our discourse forum has migrated to a joint scv",MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:9806,Energy Efficiency,efficient,efficiently,9806,"tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Scanpy – Single-Cell Analysis in Python. Contents . News; rapids-singlecell brings scanpy to the GPU! 2024-03-18; Scanpy hits 100 contributors! 2022-03-31; New community channels 2022-03-31; Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01. Scanpy – Single-Cell Analysis in Python#; Scanpy is a scalable toolkit for analyzing single-cell gene expression data; built jointly with anndata. It includes; preprocessing, visualization, clustering, trajectory inference and differential; expression testing. The Python-based implementation efficiently deals with; datasets of more than one million cells.; Discuss usage on the scverse Discourse. Read the documentation.; If you’d like to contribute by opening an issue or creating a pull request, please take a look at our contribution guide.; scanpy is part of the scverse project (website, governance) and is fiscally sponsored by NumFOCUS.; If you like scverse and want to support our mission, please consider making a donation to support our efforts. Installation ; New to scanpy? Check out the installation guide. Installation. Tutorials ; The tutorials walk you through real-world applications of scanpy. Tutorials. API reference ; The API reference contains a detailed description of; the scanpy API. API. Discussion ; Need help? Reach out on our forum to get your questions answered!. https://discourse.scverse.org. GitHub ; Find a bug? Interested in improving scanpy? Checkout our GitHub for the latest developments. https://github.com/scverse/scanpy. Other resources. Follow changes in the releas",MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:12037,Modifiability,extend,extending,12037,".scverse.org. GitHub ; Find a bug? Interested in improving scanpy? Checkout our GitHub for the latest developments. https://github.com/scverse/scanpy. Other resources. Follow changes in the release notes.; Find tools that harmonize well with anndata & Scanpy at scverse.org/packages/; Check out our contribution guide for development practices.; Consider citing Genome Biology (2018) along with original references. News#. rapids-singlecell brings scanpy to the GPU! 2024-03-18#; rapids-singlecell by Severin Dicks provides a scanpy-like API with accelerated operations implemented on GPU. Scanpy hits 100 contributors! 2022-03-31#; 100 people have contributed to Scanpy’s source code!; Of course, contributions to the project are not limited to direct modification of the source code.; Many others have improved the project by building on top of it, participating in development discussions, helping others with usage, or by showing off what it’s helped them accomplish.; Thanks to all our contributors for making this project possible!. New community channels 2022-03-31#; We’ve moved our forums and have a new publicly available chat!. Our discourse forum has migrated to a joint scverse forum (discourse.scverse.org).; Our private developer Slack has been replaced by a public Zulip chat (scverse.zulipchat.com). Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01#; Two large toolkits extending our ecosystem to new modalities have had their manuscripts published!. Muon, a framework for multimodal has been published in Genome Biology.; Squidpy a toolkit for working with spatial single cell data has been published in Nature Methods. (past news). next; Installation. Contents; . News; rapids-singlecell brings scanpy to the GPU! 2024-03-18; Scanpy hits 100 contributors! 2022-03-31; New community channels 2022-03-31; Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:7194,Performance,cache,cachedir,7194,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:9567,Performance,scalab,scalable,9567,"p; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Scanpy – Single-Cell Analysis in Python. Contents . News; rapids-singlecell brings scanpy to the GPU! 2024-03-18; Scanpy hits 100 contributors! 2022-03-31; New community channels 2022-03-31; Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01. Scanpy – Single-Cell Analysis in Python#; Scanpy is a scalable toolkit for analyzing single-cell gene expression data; built jointly with anndata. It includes; preprocessing, visualization, clustering, trajectory inference and differential; expression testing. The Python-based implementation efficiently deals with; datasets of more than one million cells.; Discuss usage on the scverse Discourse. Read the documentation.; If you’d like to contribute by opening an issue or creating a pull request, please take a look at our contribution guide.; scanpy is part of the scverse project (website, governance) and is fiscally sponsored by NumFOCUS.; If you like scverse and want to support our mission, please consider making a donation to support our efforts. Installation ; New to scanpy? Check out the installation guide. Installation. Tutorials ; The tutorials walk you through real-world applications of scanpy. Tutorials. API reference ; The API reference contains a detailed description of; the scanpy API. API. Discussion ; Need help? Reach out on our forum to get you",MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:8435,Security,hash,hashsolo,8435,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Scanpy – Single-Cell Analysis in Python. Contents . News; rapids-singlecell brings scanpy to the GPU! 2024-03-18; Scanpy hits 100 contributors! 2022-03-31; New community channels 2022-03-31; Toolk,MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:7462,Testability,log,logfile,7462,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:7501,Testability,log,logpath,7501,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:7807,Testability,log,logging,7807,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:7836,Testability,log,logging,7836, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:9765,Testability,test,testing,9765,"y.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Scanpy – Single-Cell Analysis in Python. Contents . News; rapids-singlecell brings scanpy to the GPU! 2024-03-18; Scanpy hits 100 contributors! 2022-03-31; New community channels 2022-03-31; Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01. Scanpy – Single-Cell Analysis in Python#; Scanpy is a scalable toolkit for analyzing single-cell gene expression data; built jointly with anndata. It includes; preprocessing, visualization, clustering, trajectory inference and differential; expression testing. The Python-based implementation efficiently deals with; datasets of more than one million cells.; Discuss usage on the scverse Discourse. Read the documentation.; If you’d like to contribute by opening an issue or creating a pull request, please take a look at our contribution guide.; scanpy is part of the scverse project (website, governance) and is fiscally sponsored by NumFOCUS.; If you like scverse and want to support our mission, please consider making a donation to support our efforts. Installation ; New to scanpy? Check out the installation guide. Installation. Tutorials ; The tutorials walk you through real-world applications of scanpy. Tutorials. API reference ; The API reference contains a detailed description of; the scanpy API. API. Discussion ; Need help? Reach out on our forum to get your questions answered!. https://discourse.scverse.org. GitHub ; Find a bug? Interested in improving scanpy? Checkout our GitHub for",MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:10052,Usability,guid,guide,10052,"l.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Scanpy – Single-Cell Analysis in Python. Contents . News; rapids-singlecell brings scanpy to the GPU! 2024-03-18; Scanpy hits 100 contributors! 2022-03-31; New community channels 2022-03-31; Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01. Scanpy – Single-Cell Analysis in Python#; Scanpy is a scalable toolkit for analyzing single-cell gene expression data; built jointly with anndata. It includes; preprocessing, visualization, clustering, trajectory inference and differential; expression testing. The Python-based implementation efficiently deals with; datasets of more than one million cells.; Discuss usage on the scverse Discourse. Read the documentation.; If you’d like to contribute by opening an issue or creating a pull request, please take a look at our contribution guide.; scanpy is part of the scverse project (website, governance) and is fiscally sponsored by NumFOCUS.; If you like scverse and want to support our mission, please consider making a donation to support our efforts. Installation ; New to scanpy? Check out the installation guide. Installation. Tutorials ; The tutorials walk you through real-world applications of scanpy. Tutorials. API reference ; The API reference contains a detailed description of; the scanpy API. API. Discussion ; Need help? Reach out on our forum to get your questions answered!. https://discourse.scverse.org. GitHub ; Find a bug? Interested in improving scanpy? Checkout our GitHub for the latest developments. https://github.com/scverse/scanpy. Other resources. Follow changes in the release notes.; Find tools that harmonize well with anndata & Scanpy at scverse.org/packages/; Check out our contribution guide for development practices.; Consider citing Genome Bi",MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:10328,Usability,guid,guide,10328,"ws; rapids-singlecell brings scanpy to the GPU! 2024-03-18; Scanpy hits 100 contributors! 2022-03-31; New community channels 2022-03-31; Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01. Scanpy – Single-Cell Analysis in Python#; Scanpy is a scalable toolkit for analyzing single-cell gene expression data; built jointly with anndata. It includes; preprocessing, visualization, clustering, trajectory inference and differential; expression testing. The Python-based implementation efficiently deals with; datasets of more than one million cells.; Discuss usage on the scverse Discourse. Read the documentation.; If you’d like to contribute by opening an issue or creating a pull request, please take a look at our contribution guide.; scanpy is part of the scverse project (website, governance) and is fiscally sponsored by NumFOCUS.; If you like scverse and want to support our mission, please consider making a donation to support our efforts. Installation ; New to scanpy? Check out the installation guide. Installation. Tutorials ; The tutorials walk you through real-world applications of scanpy. Tutorials. API reference ; The API reference contains a detailed description of; the scanpy API. API. Discussion ; Need help? Reach out on our forum to get your questions answered!. https://discourse.scverse.org. GitHub ; Find a bug? Interested in improving scanpy? Checkout our GitHub for the latest developments. https://github.com/scverse/scanpy. Other resources. Follow changes in the release notes.; Find tools that harmonize well with anndata & Scanpy at scverse.org/packages/; Check out our contribution guide for development practices.; Consider citing Genome Biology (2018) along with original references. News#. rapids-singlecell brings scanpy to the GPU! 2024-03-18#; rapids-singlecell by Severin Dicks provides a scanpy-like API with accelerated operations implemented on GPU. Scanpy hits 100 contributors! 2022-03-31#; 100 people have contributed to Scanpy’s sou",MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/index.html:10938,Usability,guid,guide,10938,"n.; If you’d like to contribute by opening an issue or creating a pull request, please take a look at our contribution guide.; scanpy is part of the scverse project (website, governance) and is fiscally sponsored by NumFOCUS.; If you like scverse and want to support our mission, please consider making a donation to support our efforts. Installation ; New to scanpy? Check out the installation guide. Installation. Tutorials ; The tutorials walk you through real-world applications of scanpy. Tutorials. API reference ; The API reference contains a detailed description of; the scanpy API. API. Discussion ; Need help? Reach out on our forum to get your questions answered!. https://discourse.scverse.org. GitHub ; Find a bug? Interested in improving scanpy? Checkout our GitHub for the latest developments. https://github.com/scverse/scanpy. Other resources. Follow changes in the release notes.; Find tools that harmonize well with anndata & Scanpy at scverse.org/packages/; Check out our contribution guide for development practices.; Consider citing Genome Biology (2018) along with original references. News#. rapids-singlecell brings scanpy to the GPU! 2024-03-18#; rapids-singlecell by Severin Dicks provides a scanpy-like API with accelerated operations implemented on GPU. Scanpy hits 100 contributors! 2022-03-31#; 100 people have contributed to Scanpy’s source code!; Of course, contributions to the project are not limited to direct modification of the source code.; Many others have improved the project by building on top of it, participating in development discussions, helping others with usage, or by showing off what it’s helped them accomplish.; Thanks to all our contributors for making this project possible!. New community channels 2022-03-31#; We’ve moved our forums and have a new publicly available chat!. Our discourse forum has migrated to a joint scverse forum (discourse.scverse.org).; Our private developer Slack has been replaced by a public Zulip chat (scverse.zulipc",MatchSource.WIKI,en/stable/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/index.html
https://scanpy.readthedocs.io/en/stable/installation.html:11171,Availability,error,error,11171,"s enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:8090,Deployability,toggle,toggleswitch,8090,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:9174,Deployability,release,release,9174,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Installation. Contents . Development Version; Docker; Troubleshooting. Installation#; To use scanpy from another project, install it using your favourite environment manager:. Hatch (recommended)Pip/PyPICondaAdding scanpy[leiden] to your dependencies is enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. D",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:9342,Deployability,install,install,9342,"rect; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Installation. Contents . Development Version; Docker; Troubleshooting. Installation#; To use scanpy from another project, install it using your favourite environment manager:. Hatch (recommended)Pip/PyPICondaAdding scanpy[leiden] to your dependencies is enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch envir",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:9589,Deployability,install,install,9589,".tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Installation. Contents . Development Version; Docker; Troubleshooting. Installation#; To use scanpy from another project, install it using your favourite environment manager:. Hatch (recommended)Pip/PyPICondaAdding scanpy[leiden] to your dependencies is enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:9621,Deployability,install,installing,9621,"l.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Installation. Contents . Development Version; Docker; Troubleshooting. Installation#; To use scanpy from another project, install it using your favourite environment manager:. Hatch (recommended)Pip/PyPICondaAdding scanpy[leiden] to your dependencies is enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be m",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:9632,Deployability,install,installing,9632,"l.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Installation. Contents . Development Version; Docker; Troubleshooting. Installation#; To use scanpy from another project, install it using your favourite environment manager:. Hatch (recommended)Pip/PyPICondaAdding scanpy[leiden] to your dependencies is enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be m",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:9673,Deployability,install,install,9673,"py.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Installation. Contents . Development Version; Docker; Troubleshooting. Installation#; To use scanpy from another project, install it using your favourite environment manager:. Hatch (recommended)Pip/PyPICondaAdding scanpy[leiden] to your dependencies is enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:9799,Deployability,install,install,9799,"ndbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Installation. Contents . Development Version; Docker; Troubleshooting. Installation#; To use scanpy from another project, install it using your favourite environment manager:. Hatch (recommended)Pip/PyPICondaAdding scanpy[leiden] to your dependencies is enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:9859,Deployability,install,installs,9859,".pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Installation. Contents . Development Version; Docker; Troubleshooting. Installation#; To use scanpy from another project, install it using your favourite environment manager:. Hatch (recommended)Pip/PyPICondaAdding scanpy[leiden] to your dependencies is enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:10614,Deployability,install,install,10614,"s enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:10695,Deployability,install,install,10695,"s enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:10757,Deployability,install,installations,10757,"s enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:10800,Deployability,install,install,10800,"s enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:10925,Deployability,install,install,10925,"s enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:11243,Deployability,install,install,11243,"s enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:9458,Integrability,depend,dependencies,9458,"a; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Installation. Contents . Development Version; Docker; Troubleshooting. Installation#; To use scanpy from another project, install it using your favourite environment manager:. Hatch (recommended)Pip/PyPICondaAdding scanpy[leiden] to your dependencies is enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:10060,Integrability,depend,dependencies,10060,"Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Installation. Contents . Development Version; Docker; Troubleshooting. Installation#; To use scanpy from another project, install it using your favourite environment manager:. Hatch (recommended)Pip/PyPICondaAdding scanpy[leiden] to your dependencies is enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:10774,Integrability,depend,dependencies,10774,"s enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:7166,Performance,cache,cachedir,7166,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:8407,Security,hash,hashsolo,8407,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Installation. Contents . Development Version; Docker; Troubleshooting. Installation#; To use scanpy from another project, install it using your favourite environment manager:. Hatch (recommended)P",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:9774,Security,access,access,9774,"ndbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Installation. Contents . Development Version; Docker; Troubleshooting. Installation#; To use scanpy from another project, install it using your favourite environment manager:. Hatch (recommended)Pip/PyPICondaAdding scanpy[leiden] to your dependencies is enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:7434,Testability,log,logfile,7434,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:7473,Testability,log,logpath,7473,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:7779,Testability,log,logging,7779,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:7808,Testability,log,logging,7808, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:10384,Testability,test,test,10384,"r:. Hatch (recommended)Pip/PyPICondaAdding scanpy[leiden] to your dependencies is enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. B",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:10449,Testability,test,test,10449,"s enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:10463,Testability,test,tests,10463,"s enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:10713,Testability,test,test,10713,"s enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:10947,Testability,test,test,10947,"s enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/installation.html:11023,Usability,guid,guide,11023,"s enough.; See below for how to use Scanpy’s Development Version.; If you prefer to exclusively use PyPI run:; $ pip install 'scanpy[leiden]'. After installing installing e.g. Miniconda, run:; $ conda install -c conda-forge scanpy python-igraph leidenalg. Pull Scanpy from PyPI (consider using pip3 to access Python 3):; $ pip install scanpy. If you use Hatch or pip, the extra [leiden] installs two packages that are needed for popular; parts of scanpy but aren’t requirements: igraph [Csárdi and Nepusz, 2006] and leiden [Traag et al., 2019].; If you use conda, you should to add these dependencies to your environment individually. Development Version#; To work with the latest version on GitHub: clone the repository and cd into its root directory.; $ gh repo clone scverse/scanpy; $ cd scanpy. Hatch (recommended)Pip/PyPICondaTo use one of the predefined Hatch environments in hatch.toml,; run either hatch test [args] or hatch run [env:]command [...args], e.g.:; $ hatch test -p # run tests in parallel; $ hatch run docs:build # build docs; $ hatch run towncrier:create # create changelog entry. If you are using pip>=21.3, an editable install can be made:; $ python -m venv .venv; $ source .venv/bin/activate; $ pip install -e '.[dev,test]'. If you want to let conda handle the installations of dependencies, do:; $ pipx install beni; $ beni pyproject.toml > environment.yml; $ conda env create -f environment.yml; $ conda activate scanpy; $ pip install -e '.[dev,doc,test]'. For instructions on how to work with the code, see the contribution guide. Docker#; If you’re using Docker, you can use e.g. the image gcfntnu/scanpy from Docker Hub. Troubleshooting#; If you get a Permission denied error, never use sudo pip. Instead, use virtual environments or:; $ pip install --user scanpy. previous; Scanpy – Single-Cell Analysis in Python. next; Tutorials. Contents; . Development Version; Docker; Troubleshooting. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/installation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/installation.html
https://scanpy.readthedocs.io/en/stable/news.html:10611,Availability,avail,available,10611,"atasets distributed as h5ad 2020-04-01; Scanpy featured in Nature Biotechnoloogy 2020-02-01; Scanpy has been selected an “Essential open source software for science” by CZI 2019-11-14; Nature Biotechnology: A comparison of single-cell trajectory inference methods 2019-04-01; Science “Breakthrough of the Year 2018” 2018-12-01. News#. rapids-singlecell brings scanpy to the GPU! 2024-03-18#; rapids-singlecell by Severin Dicks provides a scanpy-like API with accelerated operations implemented on GPU. Scanpy hits 100 contributors! 2022-03-31#; 100 people have contributed to Scanpy’s source code!; Of course, contributions to the project are not limited to direct modification of the source code.; Many others have improved the project by building on top of it, participating in development discussions, helping others with usage, or by showing off what it’s helped them accomplish.; Thanks to all our contributors for making this project possible!. New community channels 2022-03-31#; We’ve moved our forums and have a new publicly available chat!. Our discourse forum has migrated to a joint scverse forum (discourse.scverse.org).; Our private developer Slack has been replaced by a public Zulip chat (scverse.zulipchat.com). Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01#; Two large toolkits extending our ecosystem to new modalities have had their manuscripts published!. Muon, a framework for multimodal has been published in Genome Biology.; Squidpy a toolkit for working with spatial single cell data has been published in Nature Methods. scVelo on the cover of Nature Biotechnology 2020-12-01#; Scanpy’s counterpart for RNA velocity, scVelo, made it on the cover of Nature Biotechnology [tweet]. Scanpy selected among 20 papers for 20 years of Genome Biology 2020-08-01#; Genome Biology: Celebrating 20 Years of Genome Biology selected the initial Scanpy paper for the year 2018 among 20 papers for 20 years [tweet]. COVID-19 datasets distributed as h5ad 2020-04-0",MatchSource.WIKI,en/stable/news.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/news.html
https://scanpy.readthedocs.io/en/stable/news.html:8082,Deployability,toggle,toggleswitch,8082,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/news.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/news.html
https://scanpy.readthedocs.io/en/stable/news.html:9166,Deployability,release,release,9166,py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. News. Contents . rapids-singlecell brings scanpy to the GPU! 2024-03-18; Scanpy hits 100 contributors! 2022-03-31; New community channels 2022-03-31; Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01; scVelo on the cover of Nature Biotechnology 2020-12-01; Scanpy selected among 20 papers for 20 years of Genome Biology 2020-08-01; COVID-19 datasets distributed as h5ad 2020-04-01; Scanpy featured in Nature Biotechnoloogy 2020-02-01; Scanpy has been selected an “Essential open source software for science” by CZI 2019-11-14; Nature Biotechnology: A comparison of single-cell trajectory inference methods 2019-04-01; Science “Breakthrough of the Year 2018” 2018-12-01. News#. rapids-singlecell brings scanpy to the GPU! 2024-03-18#; rapids-singlecell by Severin Dicks provides a scanpy-like API with accelerated operations implemented on GPU. Scanpy hits 100 contr,MatchSource.WIKI,en/stable/news.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/news.html
https://scanpy.readthedocs.io/en/stable/news.html:10900,Modifiability,extend,extending,10900," 2018-12-01. News#. rapids-singlecell brings scanpy to the GPU! 2024-03-18#; rapids-singlecell by Severin Dicks provides a scanpy-like API with accelerated operations implemented on GPU. Scanpy hits 100 contributors! 2022-03-31#; 100 people have contributed to Scanpy’s source code!; Of course, contributions to the project are not limited to direct modification of the source code.; Many others have improved the project by building on top of it, participating in development discussions, helping others with usage, or by showing off what it’s helped them accomplish.; Thanks to all our contributors for making this project possible!. New community channels 2022-03-31#; We’ve moved our forums and have a new publicly available chat!. Our discourse forum has migrated to a joint scverse forum (discourse.scverse.org).; Our private developer Slack has been replaced by a public Zulip chat (scverse.zulipchat.com). Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01#; Two large toolkits extending our ecosystem to new modalities have had their manuscripts published!. Muon, a framework for multimodal has been published in Genome Biology.; Squidpy a toolkit for working with spatial single cell data has been published in Nature Methods. scVelo on the cover of Nature Biotechnology 2020-12-01#; Scanpy’s counterpart for RNA velocity, scVelo, made it on the cover of Nature Biotechnology [tweet]. Scanpy selected among 20 papers for 20 years of Genome Biology 2020-08-01#; Genome Biology: Celebrating 20 Years of Genome Biology selected the initial Scanpy paper for the year 2018 among 20 papers for 20 years [tweet]. COVID-19 datasets distributed as h5ad 2020-04-01#; In a joint initiative, the Wellcome Sanger Institute, the Human Cell Atlas, and the CZI distribute datasets related to COVID-19 via anndata’s h5ad files: covid19cellatlas.org. It wasn’t anticipated that the initial idea of sharing and backing an on-disk representation of AnnData would become so widely adopted. ",MatchSource.WIKI,en/stable/news.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/news.html
https://scanpy.readthedocs.io/en/stable/news.html:7158,Performance,cache,cachedir,7158,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/news.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/news.html
https://scanpy.readthedocs.io/en/stable/news.html:8399,Security,hash,hashsolo,8399,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. News. Contents . rapids-singlecell brings scanpy to the GPU! 2024-03-18; Scanpy hits 100 contributors! 2022-03-31; New community channels 2022-03-31; Toolkit for spatial (squidpy) and multimodal (,MatchSource.WIKI,en/stable/news.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/news.html
https://scanpy.readthedocs.io/en/stable/news.html:7426,Testability,log,logfile,7426,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/news.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/news.html
https://scanpy.readthedocs.io/en/stable/news.html:7465,Testability,log,logpath,7465,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/news.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/news.html
https://scanpy.readthedocs.io/en/stable/news.html:7771,Testability,log,logging,7771,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/news.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/news.html
https://scanpy.readthedocs.io/en/stable/news.html:7800,Testability,log,logging,7800, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/news.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/news.html
https://scanpy.readthedocs.io/en/stable/news.html:12432,Usability,learn,learn,12432,"ars of Genome Biology 2020-08-01#; Genome Biology: Celebrating 20 Years of Genome Biology selected the initial Scanpy paper for the year 2018 among 20 papers for 20 years [tweet]. COVID-19 datasets distributed as h5ad 2020-04-01#; In a joint initiative, the Wellcome Sanger Institute, the Human Cell Atlas, and the CZI distribute datasets related to COVID-19 via anndata’s h5ad files: covid19cellatlas.org. It wasn’t anticipated that the initial idea of sharing and backing an on-disk representation of AnnData would become so widely adopted. Curious? Read up more on the format. Scanpy featured in Nature Biotechnoloogy 2020-02-01#; Single-cell RNA-seq analysis software providers scramble to offer solutions mentions Scanpy along with Seurat as the two major open source software packages for single-cell analysis [pdf]. Scanpy has been selected an “Essential open source software for science” by CZI 2019-11-14#; Scanpy has been selected an essential open source software for science by; CZI among 32 projects, along with giants such as Scipy, Numpy, Pandas,; Matplotlib, scikit-learn, scikit-image/plotly, pip, jupyterhub/binder,; Bioconda, Seurat, Bioconductor, and others. Nature Biotechnology: A comparison of single-cell trajectory inference methods 2019-04-01#; Nature Biotechnology reviews more than 70 TI tools and ranks PAGA as the best graph-based trajectory inference method, and overall, among the top 3. Science “Breakthrough of the Year 2018” 2018-12-01#; The Science “Breakthrough of the Year 2018”, Development cell by cell, mentions the first application of PAGA [Plass et al., 2018] among 5 papers. previous; Community. next; Contributing. Contents; . rapids-singlecell brings scanpy to the GPU! 2024-03-18; Scanpy hits 100 contributors! 2022-03-31; New community channels 2022-03-31; Toolkit for spatial (squidpy) and multimodal (muon) published 2022-02-01; scVelo on the cover of Nature Biotechnology 2020-12-01; Scanpy selected among 20 papers for 20 years of Genome Biology 2",MatchSource.WIKI,en/stable/news.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/news.html
https://scanpy.readthedocs.io/en/stable/references.html:13790,Availability,robust,robustly,13790,"67-018-07931-2. [Fec18]; Ron Fechtner. Pypairs - a python scrna-seq classifier. rfechtner/pypairs, 2018. URL: rfechtner/pypairs. [FR91]; Thomas M. J. Fruchterman and Edward M. Reingold. Graph drawing by force‐directed placement. Software: Practice and Experience, 21(11):1129–1164, nov 1991. URL: https://doi.org/10.1002/spe.4380211102, doi:10.1002/spe.4380211102. [GCC00]; Timothy S. Gardner, Charles R. Cantor, and James J. Collins. Construction of a genetic toggle switch in escherichia coli. Nature, 403(6767):339–342, jan 2000. URL: https://doi.org/10.1038/35002131, doi:10.1038/35002131. [HBT15]; Laleh Haghverdi, Florian Buettner, and Fabian J. Theis. Diffusion maps for high-dimensional single-cell analysis of differentiation data. Bioinformatics, 31(18):2989–2998, may 2015. URL: https://doi.org/10.1093/bioinformatics/btv325, doi:10.1093/bioinformatics/btv325. [HBW+16]; Laleh Haghverdi, Maren Büttner, F Alexander Wolf, Florian Buettner, and Fabian J Theis. Diffusion pseudotime robustly reconstructs lineage branching. Nature Methods, 13(10):845–848, aug 2016. URL: https://doi.org/10.1038/nmeth.3971, doi:10.1038/nmeth.3971. [HLMM18]; Laleh Haghverdi, Aaron T L Lun, Michael D Morgan, and John C Marioni. Batch effects in single-cell rna-sequencing data are corrected by matching mutual nearest neighbors. Nature Biotechnology, 36(5):421–427, apr 2018. URL: https://doi.org/10.1038/nbt.4091, doi:10.1038/nbt.4091. [HBB19]; Brian Hie, Bryan Bryson, and Bonnie Berger. Efficient integration of heterogeneous single-cell transcriptomes using scanorama. Nature Biotechnology, 37(6):685–691, may 2019. URL: https://doi.org/10.1038/s41587-019-0113-3, doi:10.1038/s41587-019-0113-3. [IKM+11]; Saiful Islam, Una Kjällquist, Annalena Moliner, Pawel Zajac, Jian-Bing Fan, Peter Lönnerberg, and Sten Linnarsson. Characterization of the single-cell transcriptional landscape by highly multiplex rna-seq. Genome Research, 21(7):1160–1167, may 2011. URL: https://doi.org/10.1101/gr.110882.110, doi:10",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:8088,Deployability,toggle,toggleswitch,8088,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:9172,Deployability,release,release,9172,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. References. References#. [AW19]; Ehsan Amid and Manfred K. Warmuth. Trimap: large-scale dimensionality reduction using triplets. 2019. URL: https://arxiv.org/abs/1910.00204, doi:10.48550/ARXIV.1910.00204. [ADT+13]; El-ad David Amir, Kara L Davis, Michelle D Tadmor, Erin F Simonds, Jacob H Levine, Sean C Bendall, Daniel K Shenfeld, Smita Krishnaswamy, Garry P Nolan, and Dana Pe’er. Visne enables visualization of high dimensional single-cell data and reveals phenotypic heterogeneity of leukemia. Nature Biotechnology, 31(6):545–552, may 2013. URL: https://doi.org/10.1038/nbt.2594, doi:10.1038/nbt.2594. [AHB+15]; Philipp Angerer, Laleh Haghverdi, Maren Büttner, Fabian J. Theis, Carsten Marr, and Florian Buettner. Destiny: diffusion maps for large-scale single-cell data in r. Bioinformatics, 32(8):1241–1243, dec 2015. URL: https://doi.org/10.1093/bioinformatics/btv715, doi:10.109",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:13260,Deployability,toggle,toggle,13260,"oi.org/10.1073/pnas.0500334102, doi:10.1073/pnas.0500334102. [CN06]; G. Csárdi and T. Nepusz. The igraph software package for complex network research. InterJournal Complex Systems, pages 1695, 2006. URL: https://www.bibsonomy.org/bibtex/252e3e774bac8424cc9a3845a9c597344/lantiq. [ESM+19]; Gökcen Eraslan, Lukas M. Simon, Maria Mircea, Nikola S. Mueller, and Fabian J. Theis. Single-cell rna-seq denoising using a deep count autoencoder. Nature Communications, jan 2019. URL: https://doi.org/10.1038/s41467-018-07931-2, doi:10.1038/s41467-018-07931-2. [Fec18]; Ron Fechtner. Pypairs - a python scrna-seq classifier. rfechtner/pypairs, 2018. URL: rfechtner/pypairs. [FR91]; Thomas M. J. Fruchterman and Edward M. Reingold. Graph drawing by force‐directed placement. Software: Practice and Experience, 21(11):1129–1164, nov 1991. URL: https://doi.org/10.1002/spe.4380211102, doi:10.1002/spe.4380211102. [GCC00]; Timothy S. Gardner, Charles R. Cantor, and James J. Collins. Construction of a genetic toggle switch in escherichia coli. Nature, 403(6767):339–342, jan 2000. URL: https://doi.org/10.1038/35002131, doi:10.1038/35002131. [HBT15]; Laleh Haghverdi, Florian Buettner, and Fabian J. Theis. Diffusion maps for high-dimensional single-cell analysis of differentiation data. Bioinformatics, 31(18):2989–2998, may 2015. URL: https://doi.org/10.1093/bioinformatics/btv325, doi:10.1093/bioinformatics/btv325. [HBW+16]; Laleh Haghverdi, Maren Büttner, F Alexander Wolf, Florian Buettner, and Fabian J Theis. Diffusion pseudotime robustly reconstructs lineage branching. Nature Methods, 13(10):845–848, aug 2016. URL: https://doi.org/10.1038/nmeth.3971, doi:10.1038/nmeth.3971. [HLMM18]; Laleh Haghverdi, Aaron T L Lun, Michael D Morgan, and John C Marioni. Batch effects in single-cell rna-sequencing data are corrected by matching mutual nearest neighbors. Nature Biotechnology, 36(5):421–427, apr 2018. URL: https://doi.org/10.1038/nbt.4091, doi:10.1038/nbt.4091. [HBB19]; Brian Hie, Bryan Bryson, and",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:14290,Deployability,integrat,integration,14290,", jan 2000. URL: https://doi.org/10.1038/35002131, doi:10.1038/35002131. [HBT15]; Laleh Haghverdi, Florian Buettner, and Fabian J. Theis. Diffusion maps for high-dimensional single-cell analysis of differentiation data. Bioinformatics, 31(18):2989–2998, may 2015. URL: https://doi.org/10.1093/bioinformatics/btv325, doi:10.1093/bioinformatics/btv325. [HBW+16]; Laleh Haghverdi, Maren Büttner, F Alexander Wolf, Florian Buettner, and Fabian J Theis. Diffusion pseudotime robustly reconstructs lineage branching. Nature Methods, 13(10):845–848, aug 2016. URL: https://doi.org/10.1038/nmeth.3971, doi:10.1038/nmeth.3971. [HLMM18]; Laleh Haghverdi, Aaron T L Lun, Michael D Morgan, and John C Marioni. Batch effects in single-cell rna-sequencing data are corrected by matching mutual nearest neighbors. Nature Biotechnology, 36(5):421–427, apr 2018. URL: https://doi.org/10.1038/nbt.4091, doi:10.1038/nbt.4091. [HBB19]; Brian Hie, Bryan Bryson, and Bonnie Berger. Efficient integration of heterogeneous single-cell transcriptomes using scanorama. Nature Biotechnology, 37(6):685–691, may 2019. URL: https://doi.org/10.1038/s41587-019-0113-3, doi:10.1038/s41587-019-0113-3. [IKM+11]; Saiful Islam, Una Kjällquist, Annalena Moliner, Pawel Zajac, Jian-Bing Fan, Peter Lönnerberg, and Sten Linnarsson. Characterization of the single-cell transcriptional landscape by highly multiplex rna-seq. Genome Research, 21(7):1160–1167, may 2011. URL: https://doi.org/10.1101/gr.110882.110, doi:10.1101/gr.110882.110. [JVHB14]; Mathieu Jacomy, Tommaso Venturini, Sebastien Heymann, and Mathieu Bastian. Forceatlas2, a continuous graph layout algorithm for handy network visualization designed for the gephi software. PLoS ONE, 9(6):e98679, jun 2014. URL: https://doi.org/10.1371/journal.pone.0098679, doi:10.1371/journal.pone.0098679. [JLR06]; W. Evan Johnson, Cheng Li, and Ariel Rabinovic. Adjusting batch effects in microarray expression data using empirical bayes methods. Biostatistics, 8(1):118–127, apr 2006. URL",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:14920,Deployability,continuous,continuous,14920,"di, Aaron T L Lun, Michael D Morgan, and John C Marioni. Batch effects in single-cell rna-sequencing data are corrected by matching mutual nearest neighbors. Nature Biotechnology, 36(5):421–427, apr 2018. URL: https://doi.org/10.1038/nbt.4091, doi:10.1038/nbt.4091. [HBB19]; Brian Hie, Bryan Bryson, and Bonnie Berger. Efficient integration of heterogeneous single-cell transcriptomes using scanorama. Nature Biotechnology, 37(6):685–691, may 2019. URL: https://doi.org/10.1038/s41587-019-0113-3, doi:10.1038/s41587-019-0113-3. [IKM+11]; Saiful Islam, Una Kjällquist, Annalena Moliner, Pawel Zajac, Jian-Bing Fan, Peter Lönnerberg, and Sten Linnarsson. Characterization of the single-cell transcriptional landscape by highly multiplex rna-seq. Genome Research, 21(7):1160–1167, may 2011. URL: https://doi.org/10.1101/gr.110882.110, doi:10.1101/gr.110882.110. [JVHB14]; Mathieu Jacomy, Tommaso Venturini, Sebastien Heymann, and Mathieu Bastian. Forceatlas2, a continuous graph layout algorithm for handy network visualization designed for the gephi software. PLoS ONE, 9(6):e98679, jun 2014. URL: https://doi.org/10.1371/journal.pone.0098679, doi:10.1371/journal.pone.0098679. [JLR06]; W. Evan Johnson, Cheng Li, and Ariel Rabinovic. Adjusting batch effects in microarray expression data using empirical bayes methods. Biostatistics, 8(1):118–127, apr 2006. URL: https://doi.org/10.1093/biostatistics/kxj037, doi:10.1093/biostatistics/kxj037. [Kan18]; Chris Kang. Mnnpy - mnn-correct in python. chriscainx/mnnpy, 2018. URL: chriscainx/mnnpy. [KMF+19]; Ilya Korsunsky, Nghia Millard, Jean Fan, Kamil Slowikowski, Fan Zhang, Kevin Wei, Yuriy Baglaenko, Michael Brenner, Po-ru Loh, and Soumya Raychaudhuri. Fast, sensitive and accurate integration of single-cell data with harmony. Nature Methods, 16(12):1289–1296, nov 2019. URL: https://doi.org/10.1038/s41592-019-0619-0, doi:10.1038/s41592-019-0619-0. [KMST11]; Jan Krumsiek, Carsten Marr, Timm Schroeder, and Fabian J. Theis. Hierarchical differentia",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:15693,Deployability,integrat,integration,15693,"seq. Genome Research, 21(7):1160–1167, may 2011. URL: https://doi.org/10.1101/gr.110882.110, doi:10.1101/gr.110882.110. [JVHB14]; Mathieu Jacomy, Tommaso Venturini, Sebastien Heymann, and Mathieu Bastian. Forceatlas2, a continuous graph layout algorithm for handy network visualization designed for the gephi software. PLoS ONE, 9(6):e98679, jun 2014. URL: https://doi.org/10.1371/journal.pone.0098679, doi:10.1371/journal.pone.0098679. [JLR06]; W. Evan Johnson, Cheng Li, and Ariel Rabinovic. Adjusting batch effects in microarray expression data using empirical bayes methods. Biostatistics, 8(1):118–127, apr 2006. URL: https://doi.org/10.1093/biostatistics/kxj037, doi:10.1093/biostatistics/kxj037. [Kan18]; Chris Kang. Mnnpy - mnn-correct in python. chriscainx/mnnpy, 2018. URL: chriscainx/mnnpy. [KMF+19]; Ilya Korsunsky, Nghia Millard, Jean Fan, Kamil Slowikowski, Fan Zhang, Kevin Wei, Yuriy Baglaenko, Michael Brenner, Po-ru Loh, and Soumya Raychaudhuri. Fast, sensitive and accurate integration of single-cell data with harmony. Nature Methods, 16(12):1289–1296, nov 2019. URL: https://doi.org/10.1038/s41592-019-0619-0, doi:10.1038/s41592-019-0619-0. [KMST11]; Jan Krumsiek, Carsten Marr, Timm Schroeder, and Fabian J. Theis. Hierarchical differentiation of myeloid progenitors is encoded in the transcription factor network. PLoS ONE, 6(8):e22649, aug 2011. URL: https://doi.org/10.1371/journal.pone.0022649, doi:10.1371/journal.pone.0022649. [LMSZ+18]; Gioele La Manno, Ruslan Soldatov, Amit Zeisel, Emelie Braun, Hannah Hochgerner, Viktor Petukhov, Katja Lidschreiber, Maria E. Kastriti, Peter Lönnerberg, Alessandro Furlan, Jean Fan, Lars E. Borm, Zehua Liu, David van Bruggen, Jimin Guo, Xiaoling He, Roger Barker, Erik Sundström, Gonçalo Castelo-Branco, Patrick Cramer, Igor Adameyko, Sten Linnarsson, and Peter V. Kharchenko. Rna velocity of single cells. Nature, 560(7719):494–498, aug 2018. URL: https://doi.org/10.1038/s41586-018-0414-6, doi:10.1038/s41586-018-0414-6. [LDB14]; Re",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:18844,Deployability,integrat,integration,18844,"ll, 162(1):184–197, jul 2015. URL: https://doi.org/10.1016/j.cell.2015.05.047, doi:10.1016/j.cell.2015.05.047. [LWT19]; Mohammad Lotfollahi, F. Alexander Wolf, and Fabian J. Theis. Scgen predicts single-cell perturbation responses. Nature Methods, 16(8):715–721, jul 2019. URL: https://doi.org/10.1038/s41592-019-0494-8, doi:10.1038/s41592-019-0494-8. [LBC+21]; Malte Luecken, Daniel Burkhardt, Robrecht Cannoodt, Christopher Lance, Aditi Agrawal, Hananeh Aliee, Ann Chen, Louise Deconinck, Angela Detweiler, Alejandro Granados, Shelly Huynh, Laura Isacco, Yang Kim, Dominik Klein, Bony De Kumar, Sunil Kuppasani, Heiko Lickert, Aaron McGeever, Joaquin Melgarejo, Honey Mekonen, Maurizio Morri, Michaela Müller, Norma Neff, Sheryl Paul, Bastian Rieck, Kaylie Schneider, Scott Steelman, Michael Sterr, Daniel Treacy, Alexander Tong, Alexandra-Chloe Villani, Guilin Wang, Jia Yan, Ce Zhang, Angela Pisco, Smita Krishnaswamy, Fabian Theis, and Jonathan M Bloom. A sandbox for prediction and integration of dna, rna, and proteins in single cells. In J. Vanschoren and S. Yeung, editors, Proceedings of the Neural Information Processing Systems Track on Datasets and Benchmarks, volume 1. Curran, 2021. URL: https://datasets-benchmarks-proceedings.neurips.cc/paper_files/paper/2021/file/158f3069a435b314a80bdcb024f8e422-Paper-round2.pdf. [MCLW17]; Davis J McCarthy, Kieran R Campbell, Aaron T L Lun, and Quin F Wills. Scater: pre-processing, quality control, normalization and visualization of single-cell RNA-seq data in r. Bioinformatics, 33(8):1179–1186, jan 2017. URL: https://doi.org/10.1093/bioinformatics/btw777, doi:10.1093/bioinformatics/btw777. [MHM18]; Leland McInnes, John Healy, and James Melville. Umap: uniform manifold approximation and projection for dimension reduction. 2018. URL: https://arxiv.org/abs/1802.03426, doi:10.48550/ARXIV.1802.03426. [MWH+15]; Victoria Moignard, Steven Woodhouse, Laleh Haghverdi, Andrew J Lilly, Yosuke Tanaka, Adam C Wilkinson, Florian Buettner, Iain C Ma",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:25435,Deployability,integrat,integration,25435," type 2 diabetes. Cell Metabolism, 24(4):593–607, oct 2016. URL: https://doi.org/10.1016/j.cmet.2016.08.020, doi:10.1016/j.cmet.2016.08.020. [SKL+19]; Manu Setty, Vaidotas Kiseliovas, Jacob Levine, Adam Gayoso, Linas Mazutis, and Dana Pe’er. Characterization of cell fate probabilities in single-cell data with palantir. Nature Biotechnology, 37(4):451–460, mar 2019. URL: https://doi.org/10.1038/s41587-019-0068-4, doi:10.1038/s41587-019-0068-4. [STRZ+16]; Manu Setty, Michelle D Tadmor, Shlomit Reich-Zeliger, Omer Angel, Tomer Meir Salame, Pooja Kathail, Kristy Choi, Sean Bendall, Nir Friedman, and Dana Pe’er. Wishbone identifies bifurcating developmental trajectories from single-cell data. Nature Biotechnology, 34(6):637–645, may 2016. URL: https://doi.org/10.1038/nbt.3569, doi:10.1038/nbt.3569. [SBH+19]; Tim Stuart, Andrew Butler, Paul Hoffman, Christoph Hafemeister, Efthymia Papalexi, William M. Mauck, Yuhan Hao, Marlon Stoeckius, Peter Smibert, and Rahul Satija. Comprehensive integration of single-cell data. Cell, 177(7):1888–1902.e21, jun 2019. URL: https://doi.org/10.1016/j.cell.2019.05.031, doi:10.1016/j.cell.2019.05.031. [TXL+19]; Alexander J Tarashansky, Yuan Xue, Pengyang Li, Stephen R Quake, and Bo Wang. Self-assembling manifolds in single-cell rna sequencing data. eLife, sep 2019. URL: https://doi.org/10.7554/eLife.48994, doi:10.7554/elife.48994. [TWvE19]; V. A. Traag, L. Waltman, and N. J. van Eck. From louvain to leiden: guaranteeing well-connected communities. Scientific Reports, mar 2019. URL: https://doi.org/10.1038/s41598-019-41695-z, doi:10.1038/s41598-019-41695-z. [Tra15]; Vincent Traag. Louvain-igraph: v0.5.3. 2015. URL: https://zenodo.org/record/35117, doi:10.5281/ZENODO.35117. [Uly16]; Dmitry Ulyanov. Multicore-tsne. DmitryUlyanov/Multicore-TSNE, 2016. URL: DmitryUlyanov/Multicore-TSNE. [vdMH08]; Laurens van der Maaten and Geoffrey Hinton. Visualizing data using t-sne. Journal of Machine Learning Research, 9(86):2579–2605, 2008. URL: http://jmlr.o",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:28315,Deployability,continuous,continuous,28315," Waskom, Olga Botvinnik, Drewokane, Paul Hobson, , David, Yaroslav Halchenko, Saulius Lukauskas, John B. Cole, Jordi Warmenhoven, Julian De Ruiter, Stephan Hoyer, Jake Vanderplas, Santi Villalba, Gero Kunter, Eric Quintero, Marcel Martin, Alistair Miles, Kyle Meyer, Tom Augspurger, Tal Yarkoni, Pete Bachant, Mike Williams, Constantine Evans, Clark Fitzgerald, , Brian, Daniel Wehner, Gregory Hitz, Erik Ziegler, Adel Qalieh, and Antony Lee. Seaborn: v0.7.1 (june 2016). 2016. URL: https://zenodo.org/record/54844, doi:10.5281/ZENODO.54844. [WWK17]; Caleb Weinreb, Samuel Wolock, and Allon M Klein. Spring: a kinetic interface for visualizing high dimensional single-cell expression data. Bioinformatics, 34(7):1246–1248, dec 2017. URL: https://doi.org/10.1093/bioinformatics/btx792, doi:10.1093/bioinformatics/btx792. [WKSR+09]; Dominik M Wittmann, Jan Krumsiek, Julio Saez-Rodriguez, Douglas A Lauffenburger, Steffen Klamt, and Fabian J Theis. Transforming boolean models to continuous models: methodology and application to t-cell receptor signaling. BMC Systems Biology, sep 2009. URL: https://doi.org/10.1186/1752-0509-3-98, doi:10.1186/1752-0509-3-98. [WAT18]; F. Alexander Wolf, Philipp Angerer, and Fabian J. Theis. Scanpy: large-scale single-cell gene expression data analysis. Genome Biology, 19(1):15, feb 2018. URL: https://doi.org/10.1186/s13059-017-1382-0, doi:10.1186/s13059-017-1382-0. [WHP+19]; F. Alexander Wolf, Fiona K. Hamey, Mireya Plass, Jordi Solana, Joakim S. Dahlin, Berthold Göttgens, Nikolaus Rajewsky, Lukas Simon, and Fabian J. Theis. Paga: graph abstraction reconciles clustering with trajectory inference through a topology preserving map of single cells. Genome Biology, mar 2019. URL: https://doi.org/10.1186/s13059-019-1663-x, doi:10.1186/s13059-019-1663-x. [WLK19]; Samuel L. Wolock, Romain Lopez, and Allon M. Klein. Scrublet: computational identification of cell doublets in single-cell transcriptomic data. Cell Systems, 8(4):281–291.e9, apr 2019. URL: https:/",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:30274,Deployability,continuous,continuous,30274,"ata analysis. Genome Biology, 19(1):15, feb 2018. URL: https://doi.org/10.1186/s13059-017-1382-0, doi:10.1186/s13059-017-1382-0. [WHP+19]; F. Alexander Wolf, Fiona K. Hamey, Mireya Plass, Jordi Solana, Joakim S. Dahlin, Berthold Göttgens, Nikolaus Rajewsky, Lukas Simon, and Fabian J. Theis. Paga: graph abstraction reconciles clustering with trajectory inference through a topology preserving map of single cells. Genome Biology, mar 2019. URL: https://doi.org/10.1186/s13059-019-1663-x, doi:10.1186/s13059-019-1663-x. [WLK19]; Samuel L. Wolock, Romain Lopez, and Allon M. Klein. Scrublet: computational identification of cell doublets in single-cell transcriptomic data. Cell Systems, 8(4):281–291.e9, apr 2019. URL: https://doi.org/10.1016/j.cels.2018.11.005, doi:10.1016/j.cels.2018.11.005. [ZTB+17]; Grace X. Y. Zheng, Jessica M. Terry, Phillip Belgrader, Paul Ryvkin, Zachary W. Bent, Ryan Wilson, Solongo B. Ziraldo, Tobias D. Wheeler, Geoff P. McDermott, Junjie Zhu, Mark T. Gregory, Joe Shuga, Luz Montesclaros, Jason G. Underwood, Donald A. Masquelier, Stefanie Y. Nishimura, Michael Schnall-Levin, Paul W. Wyatt, Christopher M. Hindson, Rajiv Bharadwaj, Alexander Wong, Kevin D. Ness, Lan W. Beppu, H. Joachim Deeg, Christopher McFarland, Keith R. Loeb, William J. Valente, Nolan G. Ericson, Emily A. Stevens, Jerald P. Radich, Tarjei S. Mikkelsen, Benjamin J. Hindson, and Jason H. Bielas. Massively parallel digital transcriptional profiling of single cells. Nature Communications, jan 2017. URL: https://doi.org/10.1038/ncomms14049, doi:10.1038/ncomms14049. [ZLG+15]; Eli R. Zunder, Ernesto Lujan, Yury Goltsev, Marius Wernig, and Garry P. Nolan. A continuous molecular roadmap to ipsc reprogramming through progression analysis of single-cell mass cytometry. Cell Stem Cell, 16(3):323–337, mar 2015. URL: https://doi.org/10.1016/j.stem.2015.01.015, doi:10.1016/j.stem.2015.01.015. previous; Contributors. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:14290,Integrability,integrat,integration,14290,", jan 2000. URL: https://doi.org/10.1038/35002131, doi:10.1038/35002131. [HBT15]; Laleh Haghverdi, Florian Buettner, and Fabian J. Theis. Diffusion maps for high-dimensional single-cell analysis of differentiation data. Bioinformatics, 31(18):2989–2998, may 2015. URL: https://doi.org/10.1093/bioinformatics/btv325, doi:10.1093/bioinformatics/btv325. [HBW+16]; Laleh Haghverdi, Maren Büttner, F Alexander Wolf, Florian Buettner, and Fabian J Theis. Diffusion pseudotime robustly reconstructs lineage branching. Nature Methods, 13(10):845–848, aug 2016. URL: https://doi.org/10.1038/nmeth.3971, doi:10.1038/nmeth.3971. [HLMM18]; Laleh Haghverdi, Aaron T L Lun, Michael D Morgan, and John C Marioni. Batch effects in single-cell rna-sequencing data are corrected by matching mutual nearest neighbors. Nature Biotechnology, 36(5):421–427, apr 2018. URL: https://doi.org/10.1038/nbt.4091, doi:10.1038/nbt.4091. [HBB19]; Brian Hie, Bryan Bryson, and Bonnie Berger. Efficient integration of heterogeneous single-cell transcriptomes using scanorama. Nature Biotechnology, 37(6):685–691, may 2019. URL: https://doi.org/10.1038/s41587-019-0113-3, doi:10.1038/s41587-019-0113-3. [IKM+11]; Saiful Islam, Una Kjällquist, Annalena Moliner, Pawel Zajac, Jian-Bing Fan, Peter Lönnerberg, and Sten Linnarsson. Characterization of the single-cell transcriptional landscape by highly multiplex rna-seq. Genome Research, 21(7):1160–1167, may 2011. URL: https://doi.org/10.1101/gr.110882.110, doi:10.1101/gr.110882.110. [JVHB14]; Mathieu Jacomy, Tommaso Venturini, Sebastien Heymann, and Mathieu Bastian. Forceatlas2, a continuous graph layout algorithm for handy network visualization designed for the gephi software. PLoS ONE, 9(6):e98679, jun 2014. URL: https://doi.org/10.1371/journal.pone.0098679, doi:10.1371/journal.pone.0098679. [JLR06]; W. Evan Johnson, Cheng Li, and Ariel Rabinovic. Adjusting batch effects in microarray expression data using empirical bayes methods. Biostatistics, 8(1):118–127, apr 2006. URL",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:15693,Integrability,integrat,integration,15693,"seq. Genome Research, 21(7):1160–1167, may 2011. URL: https://doi.org/10.1101/gr.110882.110, doi:10.1101/gr.110882.110. [JVHB14]; Mathieu Jacomy, Tommaso Venturini, Sebastien Heymann, and Mathieu Bastian. Forceatlas2, a continuous graph layout algorithm for handy network visualization designed for the gephi software. PLoS ONE, 9(6):e98679, jun 2014. URL: https://doi.org/10.1371/journal.pone.0098679, doi:10.1371/journal.pone.0098679. [JLR06]; W. Evan Johnson, Cheng Li, and Ariel Rabinovic. Adjusting batch effects in microarray expression data using empirical bayes methods. Biostatistics, 8(1):118–127, apr 2006. URL: https://doi.org/10.1093/biostatistics/kxj037, doi:10.1093/biostatistics/kxj037. [Kan18]; Chris Kang. Mnnpy - mnn-correct in python. chriscainx/mnnpy, 2018. URL: chriscainx/mnnpy. [KMF+19]; Ilya Korsunsky, Nghia Millard, Jean Fan, Kamil Slowikowski, Fan Zhang, Kevin Wei, Yuriy Baglaenko, Michael Brenner, Po-ru Loh, and Soumya Raychaudhuri. Fast, sensitive and accurate integration of single-cell data with harmony. Nature Methods, 16(12):1289–1296, nov 2019. URL: https://doi.org/10.1038/s41592-019-0619-0, doi:10.1038/s41592-019-0619-0. [KMST11]; Jan Krumsiek, Carsten Marr, Timm Schroeder, and Fabian J. Theis. Hierarchical differentiation of myeloid progenitors is encoded in the transcription factor network. PLoS ONE, 6(8):e22649, aug 2011. URL: https://doi.org/10.1371/journal.pone.0022649, doi:10.1371/journal.pone.0022649. [LMSZ+18]; Gioele La Manno, Ruslan Soldatov, Amit Zeisel, Emelie Braun, Hannah Hochgerner, Viktor Petukhov, Katja Lidschreiber, Maria E. Kastriti, Peter Lönnerberg, Alessandro Furlan, Jean Fan, Lars E. Borm, Zehua Liu, David van Bruggen, Jimin Guo, Xiaoling He, Roger Barker, Erik Sundström, Gonçalo Castelo-Branco, Patrick Cramer, Igor Adameyko, Sten Linnarsson, and Peter V. Kharchenko. Rna velocity of single cells. Nature, 560(7719):494–498, aug 2018. URL: https://doi.org/10.1038/s41586-018-0414-6, doi:10.1038/s41586-018-0414-6. [LDB14]; Re",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:18844,Integrability,integrat,integration,18844,"ll, 162(1):184–197, jul 2015. URL: https://doi.org/10.1016/j.cell.2015.05.047, doi:10.1016/j.cell.2015.05.047. [LWT19]; Mohammad Lotfollahi, F. Alexander Wolf, and Fabian J. Theis. Scgen predicts single-cell perturbation responses. Nature Methods, 16(8):715–721, jul 2019. URL: https://doi.org/10.1038/s41592-019-0494-8, doi:10.1038/s41592-019-0494-8. [LBC+21]; Malte Luecken, Daniel Burkhardt, Robrecht Cannoodt, Christopher Lance, Aditi Agrawal, Hananeh Aliee, Ann Chen, Louise Deconinck, Angela Detweiler, Alejandro Granados, Shelly Huynh, Laura Isacco, Yang Kim, Dominik Klein, Bony De Kumar, Sunil Kuppasani, Heiko Lickert, Aaron McGeever, Joaquin Melgarejo, Honey Mekonen, Maurizio Morri, Michaela Müller, Norma Neff, Sheryl Paul, Bastian Rieck, Kaylie Schneider, Scott Steelman, Michael Sterr, Daniel Treacy, Alexander Tong, Alexandra-Chloe Villani, Guilin Wang, Jia Yan, Ce Zhang, Angela Pisco, Smita Krishnaswamy, Fabian Theis, and Jonathan M Bloom. A sandbox for prediction and integration of dna, rna, and proteins in single cells. In J. Vanschoren and S. Yeung, editors, Proceedings of the Neural Information Processing Systems Track on Datasets and Benchmarks, volume 1. Curran, 2021. URL: https://datasets-benchmarks-proceedings.neurips.cc/paper_files/paper/2021/file/158f3069a435b314a80bdcb024f8e422-Paper-round2.pdf. [MCLW17]; Davis J McCarthy, Kieran R Campbell, Aaron T L Lun, and Quin F Wills. Scater: pre-processing, quality control, normalization and visualization of single-cell RNA-seq data in r. Bioinformatics, 33(8):1179–1186, jan 2017. URL: https://doi.org/10.1093/bioinformatics/btw777, doi:10.1093/bioinformatics/btw777. [MHM18]; Leland McInnes, John Healy, and James Melville. Umap: uniform manifold approximation and projection for dimension reduction. 2018. URL: https://arxiv.org/abs/1802.03426, doi:10.48550/ARXIV.1802.03426. [MWH+15]; Victoria Moignard, Steven Woodhouse, Laleh Haghverdi, Andrew J Lilly, Yosuke Tanaka, Adam C Wilkinson, Florian Buettner, Iain C Ma",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:25435,Integrability,integrat,integration,25435," type 2 diabetes. Cell Metabolism, 24(4):593–607, oct 2016. URL: https://doi.org/10.1016/j.cmet.2016.08.020, doi:10.1016/j.cmet.2016.08.020. [SKL+19]; Manu Setty, Vaidotas Kiseliovas, Jacob Levine, Adam Gayoso, Linas Mazutis, and Dana Pe’er. Characterization of cell fate probabilities in single-cell data with palantir. Nature Biotechnology, 37(4):451–460, mar 2019. URL: https://doi.org/10.1038/s41587-019-0068-4, doi:10.1038/s41587-019-0068-4. [STRZ+16]; Manu Setty, Michelle D Tadmor, Shlomit Reich-Zeliger, Omer Angel, Tomer Meir Salame, Pooja Kathail, Kristy Choi, Sean Bendall, Nir Friedman, and Dana Pe’er. Wishbone identifies bifurcating developmental trajectories from single-cell data. Nature Biotechnology, 34(6):637–645, may 2016. URL: https://doi.org/10.1038/nbt.3569, doi:10.1038/nbt.3569. [SBH+19]; Tim Stuart, Andrew Butler, Paul Hoffman, Christoph Hafemeister, Efthymia Papalexi, William M. Mauck, Yuhan Hao, Marlon Stoeckius, Peter Smibert, and Rahul Satija. Comprehensive integration of single-cell data. Cell, 177(7):1888–1902.e21, jun 2019. URL: https://doi.org/10.1016/j.cell.2019.05.031, doi:10.1016/j.cell.2019.05.031. [TXL+19]; Alexander J Tarashansky, Yuan Xue, Pengyang Li, Stephen R Quake, and Bo Wang. Self-assembling manifolds in single-cell rna sequencing data. eLife, sep 2019. URL: https://doi.org/10.7554/eLife.48994, doi:10.7554/elife.48994. [TWvE19]; V. A. Traag, L. Waltman, and N. J. van Eck. From louvain to leiden: guaranteeing well-connected communities. Scientific Reports, mar 2019. URL: https://doi.org/10.1038/s41598-019-41695-z, doi:10.1038/s41598-019-41695-z. [Tra15]; Vincent Traag. Louvain-igraph: v0.5.3. 2015. URL: https://zenodo.org/record/35117, doi:10.5281/ZENODO.35117. [Uly16]; Dmitry Ulyanov. Multicore-tsne. DmitryUlyanov/Multicore-TSNE, 2016. URL: DmitryUlyanov/Multicore-TSNE. [vdMH08]; Laurens van der Maaten and Geoffrey Hinton. Visualizing data using t-sne. Journal of Machine Learning Research, 9(86):2579–2605, 2008. URL: http://jmlr.o",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:27955,Integrability,interface,interface,27955," Daniel Traum, Chengyang Liu, Kumar Vivek, Craig Dorrell, Ali Naji, Alvin C. Powers, Kyong-Mi Chang, Markus Grompe, and Klaus H. Kaestner. Single-cell mass cytometry analysis of the human endocrine pancreas. Cell Metabolism, 24(4):616–626, oct 2016. URL: https://doi.org/10.1016/j.cmet.2016.09.007, doi:10.1016/j.cmet.2016.09.007. [WBDrewokane+16]; Michael Waskom, Olga Botvinnik, Drewokane, Paul Hobson, , David, Yaroslav Halchenko, Saulius Lukauskas, John B. Cole, Jordi Warmenhoven, Julian De Ruiter, Stephan Hoyer, Jake Vanderplas, Santi Villalba, Gero Kunter, Eric Quintero, Marcel Martin, Alistair Miles, Kyle Meyer, Tom Augspurger, Tal Yarkoni, Pete Bachant, Mike Williams, Constantine Evans, Clark Fitzgerald, , Brian, Daniel Wehner, Gregory Hitz, Erik Ziegler, Adel Qalieh, and Antony Lee. Seaborn: v0.7.1 (june 2016). 2016. URL: https://zenodo.org/record/54844, doi:10.5281/ZENODO.54844. [WWK17]; Caleb Weinreb, Samuel Wolock, and Allon M Klein. Spring: a kinetic interface for visualizing high dimensional single-cell expression data. Bioinformatics, 34(7):1246–1248, dec 2017. URL: https://doi.org/10.1093/bioinformatics/btx792, doi:10.1093/bioinformatics/btx792. [WKSR+09]; Dominik M Wittmann, Jan Krumsiek, Julio Saez-Rodriguez, Douglas A Lauffenburger, Steffen Klamt, and Fabian J Theis. Transforming boolean models to continuous models: methodology and application to t-cell receptor signaling. BMC Systems Biology, sep 2009. URL: https://doi.org/10.1186/1752-0509-3-98, doi:10.1186/1752-0509-3-98. [WAT18]; F. Alexander Wolf, Philipp Angerer, and Fabian J. Theis. Scanpy: large-scale single-cell gene expression data analysis. Genome Biology, 19(1):15, feb 2018. URL: https://doi.org/10.1186/s13059-017-1382-0, doi:10.1186/s13059-017-1382-0. [WHP+19]; F. Alexander Wolf, Fiona K. Hamey, Mireya Plass, Jordi Solana, Joakim S. Dahlin, Berthold Göttgens, Nikolaus Rajewsky, Lukas Simon, and Fabian J. Theis. Paga: graph abstraction reconciles clustering with trajectory inference throug",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:18817,Modifiability,sandbox,sandbox,18817,"ll, 162(1):184–197, jul 2015. URL: https://doi.org/10.1016/j.cell.2015.05.047, doi:10.1016/j.cell.2015.05.047. [LWT19]; Mohammad Lotfollahi, F. Alexander Wolf, and Fabian J. Theis. Scgen predicts single-cell perturbation responses. Nature Methods, 16(8):715–721, jul 2019. URL: https://doi.org/10.1038/s41592-019-0494-8, doi:10.1038/s41592-019-0494-8. [LBC+21]; Malte Luecken, Daniel Burkhardt, Robrecht Cannoodt, Christopher Lance, Aditi Agrawal, Hananeh Aliee, Ann Chen, Louise Deconinck, Angela Detweiler, Alejandro Granados, Shelly Huynh, Laura Isacco, Yang Kim, Dominik Klein, Bony De Kumar, Sunil Kuppasani, Heiko Lickert, Aaron McGeever, Joaquin Melgarejo, Honey Mekonen, Maurizio Morri, Michaela Müller, Norma Neff, Sheryl Paul, Bastian Rieck, Kaylie Schneider, Scott Steelman, Michael Sterr, Daniel Treacy, Alexander Tong, Alexandra-Chloe Villani, Guilin Wang, Jia Yan, Ce Zhang, Angela Pisco, Smita Krishnaswamy, Fabian Theis, and Jonathan M Bloom. A sandbox for prediction and integration of dna, rna, and proteins in single cells. In J. Vanschoren and S. Yeung, editors, Proceedings of the Neural Information Processing Systems Track on Datasets and Benchmarks, volume 1. Curran, 2021. URL: https://datasets-benchmarks-proceedings.neurips.cc/paper_files/paper/2021/file/158f3069a435b314a80bdcb024f8e422-Paper-round2.pdf. [MCLW17]; Davis J McCarthy, Kieran R Campbell, Aaron T L Lun, and Quin F Wills. Scater: pre-processing, quality control, normalization and visualization of single-cell RNA-seq data in r. Bioinformatics, 33(8):1179–1186, jan 2017. URL: https://doi.org/10.1093/bioinformatics/btw777, doi:10.1093/bioinformatics/btw777. [MHM18]; Leland McInnes, John Healy, and James Melville. Umap: uniform manifold approximation and projection for dimension reduction. 2018. URL: https://arxiv.org/abs/1802.03426, doi:10.48550/ARXIV.1802.03426. [MWH+15]; Victoria Moignard, Steven Woodhouse, Laleh Haghverdi, Andrew J Lilly, Yosuke Tanaka, Adam C Wilkinson, Florian Buettner, Iain C Ma",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:7164,Performance,cache,cachedir,7164,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:18043,Safety,predict,predicts,18043,"k. Analytic pearson residuals for normalization of single-cell rna-seq umi data. Genome Biology, sep 2021. URL: https://doi.org/10.1186/s13059-021-02451-7, doi:10.1186/s13059-021-02451-7. [LJP+17]; Jeffrey T. Leek, W. Evan Johnson, Hilary S. Parker, Elana J.Fertig, Andrew E. Jaffe, John D. Storey, Yuqing Zhang, and Leonardo Collado Torres. Sva. 2017. URL: https://bioconductor.org/packages/sva, doi:10.18129/B9.BIOC.SVA. [LSB+15]; Jacob H. Levine, Erin F. Simonds, Sean C. Bendall, Kara L. Davis, El-ad D. Amir, Michelle D. Tadmor, Oren Litvin, Harris G. Fienberg, Astraea Jager, Eli R. Zunder, Rachel Finck, Amanda L. Gedman, Ina Radtke, James R. Downing, Dana Pe’er, and Garry P. Nolan. Data-driven phenotypic dissection of aml reveals progenitor-like cells that correlate with prognosis. Cell, 162(1):184–197, jul 2015. URL: https://doi.org/10.1016/j.cell.2015.05.047, doi:10.1016/j.cell.2015.05.047. [LWT19]; Mohammad Lotfollahi, F. Alexander Wolf, and Fabian J. Theis. Scgen predicts single-cell perturbation responses. Nature Methods, 16(8):715–721, jul 2019. URL: https://doi.org/10.1038/s41592-019-0494-8, doi:10.1038/s41592-019-0494-8. [LBC+21]; Malte Luecken, Daniel Burkhardt, Robrecht Cannoodt, Christopher Lance, Aditi Agrawal, Hananeh Aliee, Ann Chen, Louise Deconinck, Angela Detweiler, Alejandro Granados, Shelly Huynh, Laura Isacco, Yang Kim, Dominik Klein, Bony De Kumar, Sunil Kuppasani, Heiko Lickert, Aaron McGeever, Joaquin Melgarejo, Honey Mekonen, Maurizio Morri, Michaela Müller, Norma Neff, Sheryl Paul, Bastian Rieck, Kaylie Schneider, Scott Steelman, Michael Sterr, Daniel Treacy, Alexander Tong, Alexandra-Chloe Villani, Guilin Wang, Jia Yan, Ce Zhang, Angela Pisco, Smita Krishnaswamy, Fabian Theis, and Jonathan M Bloom. A sandbox for prediction and integration of dna, rna, and proteins in single cells. In J. Vanschoren and S. Yeung, editors, Proceedings of the Neural Information Processing Systems Track on Datasets and Benchmarks, volume 1. Curran, 2021. URL: htt",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:18829,Safety,predict,prediction,18829,"ll, 162(1):184–197, jul 2015. URL: https://doi.org/10.1016/j.cell.2015.05.047, doi:10.1016/j.cell.2015.05.047. [LWT19]; Mohammad Lotfollahi, F. Alexander Wolf, and Fabian J. Theis. Scgen predicts single-cell perturbation responses. Nature Methods, 16(8):715–721, jul 2019. URL: https://doi.org/10.1038/s41592-019-0494-8, doi:10.1038/s41592-019-0494-8. [LBC+21]; Malte Luecken, Daniel Burkhardt, Robrecht Cannoodt, Christopher Lance, Aditi Agrawal, Hananeh Aliee, Ann Chen, Louise Deconinck, Angela Detweiler, Alejandro Granados, Shelly Huynh, Laura Isacco, Yang Kim, Dominik Klein, Bony De Kumar, Sunil Kuppasani, Heiko Lickert, Aaron McGeever, Joaquin Melgarejo, Honey Mekonen, Maurizio Morri, Michaela Müller, Norma Neff, Sheryl Paul, Bastian Rieck, Kaylie Schneider, Scott Steelman, Michael Sterr, Daniel Treacy, Alexander Tong, Alexandra-Chloe Villani, Guilin Wang, Jia Yan, Ce Zhang, Angela Pisco, Smita Krishnaswamy, Fabian Theis, and Jonathan M Bloom. A sandbox for prediction and integration of dna, rna, and proteins in single cells. In J. Vanschoren and S. Yeung, editors, Proceedings of the Neural Information Processing Systems Track on Datasets and Benchmarks, volume 1. Curran, 2021. URL: https://datasets-benchmarks-proceedings.neurips.cc/paper_files/paper/2021/file/158f3069a435b314a80bdcb024f8e422-Paper-round2.pdf. [MCLW17]; Davis J McCarthy, Kieran R Campbell, Aaron T L Lun, and Quin F Wills. Scater: pre-processing, quality control, normalization and visualization of single-cell RNA-seq data in r. Bioinformatics, 33(8):1179–1186, jan 2017. URL: https://doi.org/10.1093/bioinformatics/btw777, doi:10.1093/bioinformatics/btw777. [MHM18]; Leland McInnes, John Healy, and James Melville. Umap: uniform manifold approximation and projection for dimension reduction. 2018. URL: https://arxiv.org/abs/1802.03426, doi:10.48550/ARXIV.1802.03426. [MWH+15]; Victoria Moignard, Steven Woodhouse, Laleh Haghverdi, Andrew J Lilly, Yosuke Tanaka, Adam C Wilkinson, Florian Buettner, Iain C Ma",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:8405,Security,hash,hashsolo,8405,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. References. References#. [AW19]; Ehsan Amid and Manfred K. Warmuth. Trimap: large-scale dimensionality reduction using triplets. 2019. URL: https://arxiv.org/abs/1910.00204, doi:10.48550/ARXIV.19",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:7432,Testability,log,logfile,7432,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:7471,Testability,log,logpath,7471,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:7777,Testability,log,logging,7777,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:7806,Testability,log,logging,7806, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:18817,Testability,sandbox,sandbox,18817,"ll, 162(1):184–197, jul 2015. URL: https://doi.org/10.1016/j.cell.2015.05.047, doi:10.1016/j.cell.2015.05.047. [LWT19]; Mohammad Lotfollahi, F. Alexander Wolf, and Fabian J. Theis. Scgen predicts single-cell perturbation responses. Nature Methods, 16(8):715–721, jul 2019. URL: https://doi.org/10.1038/s41592-019-0494-8, doi:10.1038/s41592-019-0494-8. [LBC+21]; Malte Luecken, Daniel Burkhardt, Robrecht Cannoodt, Christopher Lance, Aditi Agrawal, Hananeh Aliee, Ann Chen, Louise Deconinck, Angela Detweiler, Alejandro Granados, Shelly Huynh, Laura Isacco, Yang Kim, Dominik Klein, Bony De Kumar, Sunil Kuppasani, Heiko Lickert, Aaron McGeever, Joaquin Melgarejo, Honey Mekonen, Maurizio Morri, Michaela Müller, Norma Neff, Sheryl Paul, Bastian Rieck, Kaylie Schneider, Scott Steelman, Michael Sterr, Daniel Treacy, Alexander Tong, Alexandra-Chloe Villani, Guilin Wang, Jia Yan, Ce Zhang, Angela Pisco, Smita Krishnaswamy, Fabian Theis, and Jonathan M Bloom. A sandbox for prediction and integration of dna, rna, and proteins in single cells. In J. Vanschoren and S. Yeung, editors, Proceedings of the Neural Information Processing Systems Track on Datasets and Benchmarks, volume 1. Curran, 2021. URL: https://datasets-benchmarks-proceedings.neurips.cc/paper_files/paper/2021/file/158f3069a435b314a80bdcb024f8e422-Paper-round2.pdf. [MCLW17]; Davis J McCarthy, Kieran R Campbell, Aaron T L Lun, and Quin F Wills. Scater: pre-processing, quality control, normalization and visualization of single-cell RNA-seq data in r. Bioinformatics, 33(8):1179–1186, jan 2017. URL: https://doi.org/10.1093/bioinformatics/btw777, doi:10.1093/bioinformatics/btw777. [MHM18]; Leland McInnes, John Healy, and James Melville. Umap: uniform manifold approximation and projection for dimension reduction. 2018. URL: https://arxiv.org/abs/1802.03426, doi:10.48550/ARXIV.1802.03426. [MWH+15]; Victoria Moignard, Steven Woodhouse, Laleh Haghverdi, Andrew J Lilly, Yosuke Tanaka, Adam C Wilkinson, Florian Buettner, Iain C Ma",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:19076,Testability,benchmark,benchmarks-proceedings,19076," responses. Nature Methods, 16(8):715–721, jul 2019. URL: https://doi.org/10.1038/s41592-019-0494-8, doi:10.1038/s41592-019-0494-8. [LBC+21]; Malte Luecken, Daniel Burkhardt, Robrecht Cannoodt, Christopher Lance, Aditi Agrawal, Hananeh Aliee, Ann Chen, Louise Deconinck, Angela Detweiler, Alejandro Granados, Shelly Huynh, Laura Isacco, Yang Kim, Dominik Klein, Bony De Kumar, Sunil Kuppasani, Heiko Lickert, Aaron McGeever, Joaquin Melgarejo, Honey Mekonen, Maurizio Morri, Michaela Müller, Norma Neff, Sheryl Paul, Bastian Rieck, Kaylie Schneider, Scott Steelman, Michael Sterr, Daniel Treacy, Alexander Tong, Alexandra-Chloe Villani, Guilin Wang, Jia Yan, Ce Zhang, Angela Pisco, Smita Krishnaswamy, Fabian Theis, and Jonathan M Bloom. A sandbox for prediction and integration of dna, rna, and proteins in single cells. In J. Vanschoren and S. Yeung, editors, Proceedings of the Neural Information Processing Systems Track on Datasets and Benchmarks, volume 1. Curran, 2021. URL: https://datasets-benchmarks-proceedings.neurips.cc/paper_files/paper/2021/file/158f3069a435b314a80bdcb024f8e422-Paper-round2.pdf. [MCLW17]; Davis J McCarthy, Kieran R Campbell, Aaron T L Lun, and Quin F Wills. Scater: pre-processing, quality control, normalization and visualization of single-cell RNA-seq data in r. Bioinformatics, 33(8):1179–1186, jan 2017. URL: https://doi.org/10.1093/bioinformatics/btw777, doi:10.1093/bioinformatics/btw777. [MHM18]; Leland McInnes, John Healy, and James Melville. Umap: uniform manifold approximation and projection for dimension reduction. 2018. URL: https://arxiv.org/abs/1802.03426, doi:10.48550/ARXIV.1802.03426. [MWH+15]; Victoria Moignard, Steven Woodhouse, Laleh Haghverdi, Andrew J Lilly, Yosuke Tanaka, Adam C Wilkinson, Florian Buettner, Iain C Macaulay, Wajid Jawaid, Evangelia Diamanti, Shin-Ichi Nishikawa, Nir Piterman, Valerie Kouskoff, Fabian J Theis, Jasmin Fisher, and Berthold Göttgens. Decoding the regulatory network of early blood development from single-",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:11102,Usability,learn,learning,11102,".1093/bioinformatics/btv715, doi:10.1093/bioinformatics/btv715. [BVW+16]; Maayan Baron, Adrian Veres, Samuel L. Wolock, Aubrey L. Faust, Renaud Gaujoux, Amedeo Vetere, Jennifer Hyoje Ryu, Bridget K. Wagner, Shai S. Shen-Orr, Allon M. Klein, Douglas A. Melton, and Itai Yanai. A single-cell transcriptomic map of the human and mouse pancreas reveals inter- and intra-cell population structure. Cell Systems, 3(4):346–360.e4, oct 2016. URL: https://doi.org/10.1016/j.cels.2016.08.011, doi:10.1016/j.cels.2016.08.011. [BMH+18]; Etienne Becht, Leland McInnes, John Healy, Charles-Antoine Dutertre, Immanuel W H Kwok, Lai Guan Ng, Florent Ginhoux, and Evan W Newell. Dimensionality reduction for visualizing single-cell data using umap. Nature Biotechnology, 37(1):38–44, dec 2018. URL: https://doi.org/10.1038/nbt.4314, doi:10.1038/nbt.4314. [BFL+20]; Nicholas J. Bernstein, Nicole L. Fong, Irene Lam, Margaret A. Roy, David G. Hendrickson, and David R. Kelley. Solo: doublet identification in single-cell rna-seq via semi-supervised deep learning. Cell Systems, 11(1):95–101.e5, jul 2020. URL: https://doi.org/10.1016/j.cels.2020.05.010, doi:10.1016/j.cels.2020.05.010. [BGLL08]; Vincent D Blondel, Jean-Loup Guillaume, Renaud Lambiotte, and Etienne Lefebvre. Fast unfolding of communities in large networks. Journal of Statistical Mechanics: Theory and Experiment, 2008(10):P10008, oct 2008. URL: https://doi.org/10.1088/1742-5468/2008/10/P10008, doi:10.1088/1742-5468/2008/10/p10008. [BHS+18]; Andrew Butler, Paul Hoffman, Peter Smibert, Efthymia Papalexi, and Rahul Satija. Integrating single-cell transcriptomic data across different conditions, technologies, and species. Nature Biotechnology, 36(5):411–420, apr 2018. URL: https://doi.org/10.1038/nbt.4096, doi:10.1038/nbt.4096. [Chi18]; Bhargav Chippada. Forceatlas2 for python. bhargavchippada/forceatlas2, 2018. URL: bhargavchippada/forceatlas2. [CLL+05]; R. R. Coifman, S. Lafon, A. B. Lee, M. Maggioni, B. Nadler, F. Warner, and S. W. Zucker. ",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:21569,Usability,learn,learning,21569,"10.1038/s41587-019-0336-3, doi:10.1038/s41587-019-0336-3. [MDGrun+16]; Mauro J. Muraro, Gitanjali Dharmadhikari, Dominic Grün, Nathalie Groen, Tim Dielen, Erik Jansen, Leon van Gurp, Marten A. Engelse, Francoise Carlotti, Eelco J.P. de Koning, and Alexander van Oudenaarden. A single-cell transcriptome atlas of the human pancreas. Cell Systems, 3(4):385–394.e3, oct 2016. URL: https://doi.org/10.1016/j.cels.2016.09.002, doi:10.1016/j.cels.2016.09.002. [NSK+19]; Sonja Nowotschin, Manu Setty, Ying-Yi Kuo, Vincent Liu, Vidur Garg, Roshan Sharma, Claire S. Simon, Nestor Saiz, Rui Gardner, Stéphane C. Boutet, Deanna M. Church, Pamela A. Hoodless, Anna-Katerina Hadjantonakis, and Dana Pe’er. The emergent landscape of the mouse gut endoderm at single-cell resolution. Nature, 569(7756):361–367, apr 2019. URL: https://doi.org/10.1038/s41586-019-1127-1, doi:10.1038/s41586-019-1127-1. [NYMP19]; Vasilis Ntranos, Lynn Yi, Páll Melsted, and Lior Pachter. A discriminative learning approach to differential expression analysis for single-cell rna-seq. Nature Methods, 16(2):163–166, jan 2019. URL: https://doi.org/10.1038/s41592-018-0303-9, doi:10.1038/s41592-018-0303-9. [PAG+15]; Franziska Paul, Ya’ara Arkin, Amir Giladi, Diego Adhemar Jaitin, Ephraim Kenigsberg, Hadas Keren-Shaul, Deborah Winter, David Lara-Astiaso, Meital Gury, Assaf Weiner, Eyal David, Nadav Cohen, Felicia Kathrine Bratt Lauridsen, Simon Haas, Andreas Schlitzer, Alexander Mildner, Florent Ginhoux, Steffen Jung, Andreas Trumpp, Bo Torben Porse, Amos Tanay, and Ido Amit. Transcriptional heterogeneity and lineage commitment in myeloid progenitors. Cell, 163(7):1663–1677, dec 2015. URL: https://doi.org/10.1016/j.cell.2015.11.013, doi:10.1016/j.cell.2015.11.013. [Ped12]; Brent Pedersen. Combat.py. brentp/combat.py, 2012. URL: brentp/combat.py. [PVG+11]; Fabian Pedregosa, Gaël Varoquaux, Alexandre Gramfort, Vincent Michel, Bertrand Thirion, Olivier Grisel, Mathieu Blondel, Peter Prettenhofer, Ron Weiss, Vincent Dubourg, J",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:22716,Usability,learn,learn,22716,"0303-9, doi:10.1038/s41592-018-0303-9. [PAG+15]; Franziska Paul, Ya’ara Arkin, Amir Giladi, Diego Adhemar Jaitin, Ephraim Kenigsberg, Hadas Keren-Shaul, Deborah Winter, David Lara-Astiaso, Meital Gury, Assaf Weiner, Eyal David, Nadav Cohen, Felicia Kathrine Bratt Lauridsen, Simon Haas, Andreas Schlitzer, Alexander Mildner, Florent Ginhoux, Steffen Jung, Andreas Trumpp, Bo Torben Porse, Amos Tanay, and Ido Amit. Transcriptional heterogeneity and lineage commitment in myeloid progenitors. Cell, 163(7):1663–1677, dec 2015. URL: https://doi.org/10.1016/j.cell.2015.11.013, doi:10.1016/j.cell.2015.11.013. [Ped12]; Brent Pedersen. Combat.py. brentp/combat.py, 2012. URL: brentp/combat.py. [PVG+11]; Fabian Pedregosa, Gaël Varoquaux, Alexandre Gramfort, Vincent Michel, Bertrand Thirion, Olivier Grisel, Mathieu Blondel, Peter Prettenhofer, Ron Weiss, Vincent Dubourg, Jake Vanderplas, Alexandre Passos, David Cournapeau, Matthieu Brucher, Matthieu Perrot, and Édouard Duchesnay. Scikit-learn: machine learning in python. Journal of Machine Learning Research, 12(null):2825–2830, nov 2011. [PSW+18]; Mireya Plass, Jordi Solana, F. Alexander Wolf, Salah Ayoub, Aristotelis Misios, Petar Glažar, Benedikt Obermayer, Fabian J. Theis, Christine Kocks, and Nikolaus Rajewsky. Cell type atlas and lineage tree of a whole complex animal by single-cell transcriptomics. Science, may 2018. URL: https://doi.org/10.1126/science.aaq1723, doi:10.1126/science.aaq1723. [PYM+19]; Krzysztof Polański, Matthew D Young, Zhichao Miao, Kerstin B Meyer, Sarah A Teichmann, and Jong-Eun Park. Bbknn: fast batch alignment of single cell transcriptomes. Bioinformatics, 36(3):964–965, aug 2019. URL: https://doi.org/10.1093/bioinformatics/btz625, doi:10.1093/bioinformatics/btz625. [SFG+15]; Rahul Satija, Jeffrey A Farrell, David Gennert, Alexander F Schier, and Aviv Regev. Spatial reconstruction of single-cell gene expression data. Nature Biotechnology, 33(5):495–502, apr 2015. URL: https://doi.org/10.1038/nbt.3192, d",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/references.html:22731,Usability,learn,learning,22731,"0303-9, doi:10.1038/s41592-018-0303-9. [PAG+15]; Franziska Paul, Ya’ara Arkin, Amir Giladi, Diego Adhemar Jaitin, Ephraim Kenigsberg, Hadas Keren-Shaul, Deborah Winter, David Lara-Astiaso, Meital Gury, Assaf Weiner, Eyal David, Nadav Cohen, Felicia Kathrine Bratt Lauridsen, Simon Haas, Andreas Schlitzer, Alexander Mildner, Florent Ginhoux, Steffen Jung, Andreas Trumpp, Bo Torben Porse, Amos Tanay, and Ido Amit. Transcriptional heterogeneity and lineage commitment in myeloid progenitors. Cell, 163(7):1663–1677, dec 2015. URL: https://doi.org/10.1016/j.cell.2015.11.013, doi:10.1016/j.cell.2015.11.013. [Ped12]; Brent Pedersen. Combat.py. brentp/combat.py, 2012. URL: brentp/combat.py. [PVG+11]; Fabian Pedregosa, Gaël Varoquaux, Alexandre Gramfort, Vincent Michel, Bertrand Thirion, Olivier Grisel, Mathieu Blondel, Peter Prettenhofer, Ron Weiss, Vincent Dubourg, Jake Vanderplas, Alexandre Passos, David Cournapeau, Matthieu Brucher, Matthieu Perrot, and Édouard Duchesnay. Scikit-learn: machine learning in python. Journal of Machine Learning Research, 12(null):2825–2830, nov 2011. [PSW+18]; Mireya Plass, Jordi Solana, F. Alexander Wolf, Salah Ayoub, Aristotelis Misios, Petar Glažar, Benedikt Obermayer, Fabian J. Theis, Christine Kocks, and Nikolaus Rajewsky. Cell type atlas and lineage tree of a whole complex animal by single-cell transcriptomics. Science, may 2018. URL: https://doi.org/10.1126/science.aaq1723, doi:10.1126/science.aaq1723. [PYM+19]; Krzysztof Polański, Matthew D Young, Zhichao Miao, Kerstin B Meyer, Sarah A Teichmann, and Jong-Eun Park. Bbknn: fast batch alignment of single cell transcriptomes. Bioinformatics, 36(3):964–965, aug 2019. URL: https://doi.org/10.1093/bioinformatics/btz625, doi:10.1093/bioinformatics/btz625. [SFG+15]; Rahul Satija, Jeffrey A Farrell, David Gennert, Alexander F Schier, and Aviv Regev. Spatial reconstruction of single-cell gene expression data. Nature Biotechnology, 33(5):495–502, apr 2015. URL: https://doi.org/10.1038/nbt.3192, d",MatchSource.WIKI,en/stable/references.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/references.html
https://scanpy.readthedocs.io/en/stable/search.html:8084,Deployability,toggle,toggleswitch,8084,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/search.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/search.html
https://scanpy.readthedocs.io/en/stable/search.html:9168,Deployability,release,release,9168,"anpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. Search. Error; Please activate JavaScript to enable the search functionality. Ctrl+K. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/search.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/search.html
https://scanpy.readthedocs.io/en/stable/search.html:7160,Performance,cache,cachedir,7160,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/search.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/search.html
https://scanpy.readthedocs.io/en/stable/search.html:8401,Security,hash,hashsolo,8401,"anpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. Search. Error; Please activate JavaScript to enable the search functionality. Ctrl+K. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/search.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/search.html
https://scanpy.readthedocs.io/en/stable/search.html:7428,Testability,log,logfile,7428,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/search.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/search.html
https://scanpy.readthedocs.io/en/stable/search.html:7467,Testability,log,logpath,7467,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/search.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/search.html
https://scanpy.readthedocs.io/en/stable/search.html:7773,Testability,log,logging,7773,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/search.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/search.html
https://scanpy.readthedocs.io/en/stable/search.html:7802,Testability,log,logging,7802, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/search.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/search.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:8094,Deployability,toggle,toggleswitch,8094,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:9178,Deployability,release,release,9178,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Usage Principles. Contents . Workflow; AnnData. Usage Principles#; Import Scanpy as:; import scanpy as sc. Workflow#; The typical workflow consists of subsequent calls of data analysis tools; in sc.tl, e.g.:; sc.tl.umap(adata, **tool_params) # embed a neighborhood graph of the data using UMAP. where adata is an AnnData object.; Each of these calls adds annotation to an expression matrix X,; which stores n_obs observations (cells) of n_vars variables (genes).; For each tool, there typically is an associated plotting function in sc.pl:; sc.pl.umap(adata, **plotting_params). If you pass show=False, a Axes instance is returned; and you have all of matplotlib’s detailed configuration possibilities.; To facilitate writing memory-efficient pipelines, by default,; Scanpy tools operate inplace on adata and return None –; this also allows to easily transition to out-of-memory pipelines",MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:9898,Deployability,configurat,configuration,9898,".pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Usage Principles. Contents . Workflow; AnnData. Usage Principles#; Import Scanpy as:; import scanpy as sc. Workflow#; The typical workflow consists of subsequent calls of data analysis tools; in sc.tl, e.g.:; sc.tl.umap(adata, **tool_params) # embed a neighborhood graph of the data using UMAP. where adata is an AnnData object.; Each of these calls adds annotation to an expression matrix X,; which stores n_obs observations (cells) of n_vars variables (genes).; For each tool, there typically is an associated plotting function in sc.pl:; sc.pl.umap(adata, **plotting_params). If you pass show=False, a Axes instance is returned; and you have all of matplotlib’s detailed configuration possibilities.; To facilitate writing memory-efficient pipelines, by default,; Scanpy tools operate inplace on adata and return None –; this also allows to easily transition to out-of-memory pipelines.; If you want to return a copy of the AnnData object; and leave the passed adata unchanged, pass copy=True or inplace=False. AnnData#; Scanpy is based on anndata, which provides the AnnData class. At the most basic level, an AnnData object adata stores; a data matrix adata.X, annotation of observations; adata.obs and variables adata.var as pd.DataFrame and unstructured; annotation adata.uns as dict. Names of observations and; variables can be accessed via adata.obs_names and adata.var_names,; respectively. AnnData objects can be sliced like; dataframes, for example, adata_subset = adata[:, list_of_gene_names].; For more, see this blog post.; To read a data file to an AnnData object, call:; adata = sc.read(filename). to initialize an AnnData ",MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:9967,Deployability,pipeline,pipelines,9967,"orting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Usage Principles. Contents . Workflow; AnnData. Usage Principles#; Import Scanpy as:; import scanpy as sc. Workflow#; The typical workflow consists of subsequent calls of data analysis tools; in sc.tl, e.g.:; sc.tl.umap(adata, **tool_params) # embed a neighborhood graph of the data using UMAP. where adata is an AnnData object.; Each of these calls adds annotation to an expression matrix X,; which stores n_obs observations (cells) of n_vars variables (genes).; For each tool, there typically is an associated plotting function in sc.pl:; sc.pl.umap(adata, **plotting_params). If you pass show=False, a Axes instance is returned; and you have all of matplotlib’s detailed configuration possibilities.; To facilitate writing memory-efficient pipelines, by default,; Scanpy tools operate inplace on adata and return None –; this also allows to easily transition to out-of-memory pipelines.; If you want to return a copy of the AnnData object; and leave the passed adata unchanged, pass copy=True or inplace=False. AnnData#; Scanpy is based on anndata, which provides the AnnData class. At the most basic level, an AnnData object adata stores; a data matrix adata.X, annotation of observations; adata.obs and variables adata.var as pd.DataFrame and unstructured; annotation adata.uns as dict. Names of observations and; variables can be accessed via adata.obs_names and adata.var_names,; respectively. AnnData objects can be sliced like; dataframes, for example, adata_subset = adata[:, list_of_gene_names].; For more, see this blog post.; To read a data file to an AnnData object, call:; adata = sc.read(filename). to initialize an AnnData object. Possibly add further annotation using, e.g., pd.read_csv:; import pandas as pd; anno = pd.read_csv(filename_sample_annotation); adata.obs['cell_grou",MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:10103,Deployability,pipeline,pipelines,10103,"orting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Usage Principles. Contents . Workflow; AnnData. Usage Principles#; Import Scanpy as:; import scanpy as sc. Workflow#; The typical workflow consists of subsequent calls of data analysis tools; in sc.tl, e.g.:; sc.tl.umap(adata, **tool_params) # embed a neighborhood graph of the data using UMAP. where adata is an AnnData object.; Each of these calls adds annotation to an expression matrix X,; which stores n_obs observations (cells) of n_vars variables (genes).; For each tool, there typically is an associated plotting function in sc.pl:; sc.pl.umap(adata, **plotting_params). If you pass show=False, a Axes instance is returned; and you have all of matplotlib’s detailed configuration possibilities.; To facilitate writing memory-efficient pipelines, by default,; Scanpy tools operate inplace on adata and return None –; this also allows to easily transition to out-of-memory pipelines.; If you want to return a copy of the AnnData object; and leave the passed adata unchanged, pass copy=True or inplace=False. AnnData#; Scanpy is based on anndata, which provides the AnnData class. At the most basic level, an AnnData object adata stores; a data matrix adata.X, annotation of observations; adata.obs and variables adata.var as pd.DataFrame and unstructured; annotation adata.uns as dict. Names of observations and; variables can be accessed via adata.obs_names and adata.var_names,; respectively. AnnData objects can be sliced like; dataframes, for example, adata_subset = adata[:, list_of_gene_names].; For more, see this blog post.; To read a data file to an AnnData object, call:; adata = sc.read(filename). to initialize an AnnData object. Possibly add further annotation using, e.g., pd.read_csv:; import pandas as pd; anno = pd.read_csv(filename_sample_annotation); adata.obs['cell_grou",MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:9957,Energy Efficiency,efficient,efficient,9957,"orting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Usage Principles. Contents . Workflow; AnnData. Usage Principles#; Import Scanpy as:; import scanpy as sc. Workflow#; The typical workflow consists of subsequent calls of data analysis tools; in sc.tl, e.g.:; sc.tl.umap(adata, **tool_params) # embed a neighborhood graph of the data using UMAP. where adata is an AnnData object.; Each of these calls adds annotation to an expression matrix X,; which stores n_obs observations (cells) of n_vars variables (genes).; For each tool, there typically is an associated plotting function in sc.pl:; sc.pl.umap(adata, **plotting_params). If you pass show=False, a Axes instance is returned; and you have all of matplotlib’s detailed configuration possibilities.; To facilitate writing memory-efficient pipelines, by default,; Scanpy tools operate inplace on adata and return None –; this also allows to easily transition to out-of-memory pipelines.; If you want to return a copy of the AnnData object; and leave the passed adata unchanged, pass copy=True or inplace=False. AnnData#; Scanpy is based on anndata, which provides the AnnData class. At the most basic level, an AnnData object adata stores; a data matrix adata.X, annotation of observations; adata.obs and variables adata.var as pd.DataFrame and unstructured; annotation adata.uns as dict. Names of observations and; variables can be accessed via adata.obs_names and adata.var_names,; respectively. AnnData objects can be sliced like; dataframes, for example, adata_subset = adata[:, list_of_gene_names].; For more, see this blog post.; To read a data file to an AnnData object, call:; adata = sc.read(filename). to initialize an AnnData object. Possibly add further annotation using, e.g., pd.read_csv:; import pandas as pd; anno = pd.read_csv(filename_sample_annotation); adata.obs['cell_grou",MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:9668,Modifiability,variab,variables,9668,"scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Usage Principles. Contents . Workflow; AnnData. Usage Principles#; Import Scanpy as:; import scanpy as sc. Workflow#; The typical workflow consists of subsequent calls of data analysis tools; in sc.tl, e.g.:; sc.tl.umap(adata, **tool_params) # embed a neighborhood graph of the data using UMAP. where adata is an AnnData object.; Each of these calls adds annotation to an expression matrix X,; which stores n_obs observations (cells) of n_vars variables (genes).; For each tool, there typically is an associated plotting function in sc.pl:; sc.pl.umap(adata, **plotting_params). If you pass show=False, a Axes instance is returned; and you have all of matplotlib’s detailed configuration possibilities.; To facilitate writing memory-efficient pipelines, by default,; Scanpy tools operate inplace on adata and return None –; this also allows to easily transition to out-of-memory pipelines.; If you want to return a copy of the AnnData object; and leave the passed adata unchanged, pass copy=True or inplace=False. AnnData#; Scanpy is based on anndata, which provides the AnnData class. At the most basic level, an AnnData object adata stores; a data matrix adata.X, annotation of observations; adata.obs and variables adata.var as pd.DataFrame and unstructured; annotation adata.uns as dict. Names of observations and; variables can be accessed via adata.obs_names and adata.var_names,; respecti",MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:9898,Modifiability,config,configuration,9898,".pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Usage Principles. Contents . Workflow; AnnData. Usage Principles#; Import Scanpy as:; import scanpy as sc. Workflow#; The typical workflow consists of subsequent calls of data analysis tools; in sc.tl, e.g.:; sc.tl.umap(adata, **tool_params) # embed a neighborhood graph of the data using UMAP. where adata is an AnnData object.; Each of these calls adds annotation to an expression matrix X,; which stores n_obs observations (cells) of n_vars variables (genes).; For each tool, there typically is an associated plotting function in sc.pl:; sc.pl.umap(adata, **plotting_params). If you pass show=False, a Axes instance is returned; and you have all of matplotlib’s detailed configuration possibilities.; To facilitate writing memory-efficient pipelines, by default,; Scanpy tools operate inplace on adata and return None –; this also allows to easily transition to out-of-memory pipelines.; If you want to return a copy of the AnnData object; and leave the passed adata unchanged, pass copy=True or inplace=False. AnnData#; Scanpy is based on anndata, which provides the AnnData class. At the most basic level, an AnnData object adata stores; a data matrix adata.X, annotation of observations; adata.obs and variables adata.var as pd.DataFrame and unstructured; annotation adata.uns as dict. Names of observations and; variables can be accessed via adata.obs_names and adata.var_names,; respectively. AnnData objects can be sliced like; dataframes, for example, adata_subset = adata[:, list_of_gene_names].; For more, see this blog post.; To read a data file to an AnnData object, call:; adata = sc.read(filename). to initialize an AnnData ",MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:10432,Modifiability,variab,variables,10432,"tl.umap(adata, **tool_params) # embed a neighborhood graph of the data using UMAP. where adata is an AnnData object.; Each of these calls adds annotation to an expression matrix X,; which stores n_obs observations (cells) of n_vars variables (genes).; For each tool, there typically is an associated plotting function in sc.pl:; sc.pl.umap(adata, **plotting_params). If you pass show=False, a Axes instance is returned; and you have all of matplotlib’s detailed configuration possibilities.; To facilitate writing memory-efficient pipelines, by default,; Scanpy tools operate inplace on adata and return None –; this also allows to easily transition to out-of-memory pipelines.; If you want to return a copy of the AnnData object; and leave the passed adata unchanged, pass copy=True or inplace=False. AnnData#; Scanpy is based on anndata, which provides the AnnData class. At the most basic level, an AnnData object adata stores; a data matrix adata.X, annotation of observations; adata.obs and variables adata.var as pd.DataFrame and unstructured; annotation adata.uns as dict. Names of observations and; variables can be accessed via adata.obs_names and adata.var_names,; respectively. AnnData objects can be sliced like; dataframes, for example, adata_subset = adata[:, list_of_gene_names].; For more, see this blog post.; To read a data file to an AnnData object, call:; adata = sc.read(filename). to initialize an AnnData object. Possibly add further annotation using, e.g., pd.read_csv:; import pandas as pd; anno = pd.read_csv(filename_sample_annotation); adata.obs['cell_groups'] = anno['cell_groups'] # categorical annotation of type pandas.Categorical; adata.obs['time'] = anno['time'] # numerical annotation of type float; # alternatively, you could also set the whole dataframe; # adata.obs = anno. To write, use:; adata.write(filename); adata.write_csvs(filename); adata.write_loom(filename). previous; Using dask with Scanpy. next; How to. Contents; . Workflow; AnnData. By Scanpy deve",MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:10543,Modifiability,variab,variables,10543,"data using UMAP. where adata is an AnnData object.; Each of these calls adds annotation to an expression matrix X,; which stores n_obs observations (cells) of n_vars variables (genes).; For each tool, there typically is an associated plotting function in sc.pl:; sc.pl.umap(adata, **plotting_params). If you pass show=False, a Axes instance is returned; and you have all of matplotlib’s detailed configuration possibilities.; To facilitate writing memory-efficient pipelines, by default,; Scanpy tools operate inplace on adata and return None –; this also allows to easily transition to out-of-memory pipelines.; If you want to return a copy of the AnnData object; and leave the passed adata unchanged, pass copy=True or inplace=False. AnnData#; Scanpy is based on anndata, which provides the AnnData class. At the most basic level, an AnnData object adata stores; a data matrix adata.X, annotation of observations; adata.obs and variables adata.var as pd.DataFrame and unstructured; annotation adata.uns as dict. Names of observations and; variables can be accessed via adata.obs_names and adata.var_names,; respectively. AnnData objects can be sliced like; dataframes, for example, adata_subset = adata[:, list_of_gene_names].; For more, see this blog post.; To read a data file to an AnnData object, call:; adata = sc.read(filename). to initialize an AnnData object. Possibly add further annotation using, e.g., pd.read_csv:; import pandas as pd; anno = pd.read_csv(filename_sample_annotation); adata.obs['cell_groups'] = anno['cell_groups'] # categorical annotation of type pandas.Categorical; adata.obs['time'] = anno['time'] # numerical annotation of type float; # alternatively, you could also set the whole dataframe; # adata.obs = anno. To write, use:; adata.write(filename); adata.write_csvs(filename); adata.write_loom(filename). previous; Using dask with Scanpy. next; How to. Contents; . Workflow; AnnData. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:7170,Performance,cache,cachedir,7170,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:8411,Security,hash,hashsolo,8411,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Usage Principles. Contents . Workflow; AnnData. Usage Principles#; Import Scanpy as:; import scanpy as sc. Workflow#; The typical workflow consists of subsequent calls of data analysis tools; in s,MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:10560,Security,access,accessed,10560,"data using UMAP. where adata is an AnnData object.; Each of these calls adds annotation to an expression matrix X,; which stores n_obs observations (cells) of n_vars variables (genes).; For each tool, there typically is an associated plotting function in sc.pl:; sc.pl.umap(adata, **plotting_params). If you pass show=False, a Axes instance is returned; and you have all of matplotlib’s detailed configuration possibilities.; To facilitate writing memory-efficient pipelines, by default,; Scanpy tools operate inplace on adata and return None –; this also allows to easily transition to out-of-memory pipelines.; If you want to return a copy of the AnnData object; and leave the passed adata unchanged, pass copy=True or inplace=False. AnnData#; Scanpy is based on anndata, which provides the AnnData class. At the most basic level, an AnnData object adata stores; a data matrix adata.X, annotation of observations; adata.obs and variables adata.var as pd.DataFrame and unstructured; annotation adata.uns as dict. Names of observations and; variables can be accessed via adata.obs_names and adata.var_names,; respectively. AnnData objects can be sliced like; dataframes, for example, adata_subset = adata[:, list_of_gene_names].; For more, see this blog post.; To read a data file to an AnnData object, call:; adata = sc.read(filename). to initialize an AnnData object. Possibly add further annotation using, e.g., pd.read_csv:; import pandas as pd; anno = pd.read_csv(filename_sample_annotation); adata.obs['cell_groups'] = anno['cell_groups'] # categorical annotation of type pandas.Categorical; adata.obs['time'] = anno['time'] # numerical annotation of type float; # alternatively, you could also set the whole dataframe; # adata.obs = anno. To write, use:; adata.write(filename); adata.write_csvs(filename); adata.write_loom(filename). previous; Using dask with Scanpy. next; How to. Contents; . Workflow; AnnData. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:7438,Testability,log,logfile,7438,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:7477,Testability,log,logpath,7477,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:7783,Testability,log,logging,7783,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/usage-principles.html:7812,Testability,log,logging,7812, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/usage-principles.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/usage-principles.html
https://scanpy.readthedocs.io/en/stable/api/classes.html:8085,Deployability,toggle,toggleswitch,8085,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/api/classes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/classes.html
https://scanpy.readthedocs.io/en/stable/api/classes.html:9169,Deployability,release,release,9169,"canpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Classes. Classes#; AnnData is reexported from anndata.; Represent data as a neighborhood structure, usually a knn graph. Neighbors; Data represented as graph of nearest neighbors. previous; scanpy.experimental.pp.recipe_pearson_residuals. next; scanpy.Neighbors. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/classes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/classes.html
https://scanpy.readthedocs.io/en/stable/api/classes.html:7161,Performance,cache,cachedir,7161,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/api/classes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/classes.html
https://scanpy.readthedocs.io/en/stable/api/classes.html:8402,Security,hash,hashsolo,8402,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Classes. Classes#; AnnData is reexported from anndata.; Represent data as a neighborhood structure, usually a knn graph. Neighbors; Data represented as graph of nearest neighbors. previous; scanpy",MatchSource.WIKI,en/stable/api/classes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/classes.html
https://scanpy.readthedocs.io/en/stable/api/classes.html:7429,Testability,log,logfile,7429,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/api/classes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/classes.html
https://scanpy.readthedocs.io/en/stable/api/classes.html:7468,Testability,log,logpath,7468,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/api/classes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/classes.html
https://scanpy.readthedocs.io/en/stable/api/classes.html:7774,Testability,log,logging,7774,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/api/classes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/classes.html
https://scanpy.readthedocs.io/en/stable/api/classes.html:7803,Testability,log,logging,7803, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/api/classes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/classes.html
https://scanpy.readthedocs.io/en/stable/api/datasets.html:8086,Deployability,toggle,toggleswitch,8086,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/api/datasets.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/datasets.html
https://scanpy.readthedocs.io/en/stable/api/datasets.html:9170,Deployability,release,release,9170,"tasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Datasets. Datasets#. datasets.blobs; Gaussian Blobs. datasets.ebi_expression_atlas; Load a dataset from the EBI Single Cell Expression Atlas. datasets.krumsiek11; Simulated myeloid progenitors [Krumsiek et al., 2011]. datasets.moignard15; Hematopoiesis in early mouse embryos [Moignard et al., 2015]. datasets.pbmc3k; 3k PBMCs from 10x Genomics. datasets.pbmc3k_processed; Processed 3k PBMCs from 10x Genomics. datasets.pbmc68k_reduced; Subsampled and processed 68k PBMCs. datasets.paul15; Development of Myeloid Progenitors [Paul et al., 2015]. datasets.toggleswitch; Simulated toggleswitch. datasets.visium_sge; Processed Visium Spatial Gene Expression data from 10x Genomics’ database. previous; scanpy.logging.print_versions. next; scanpy.datasets.blobs. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/datasets.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/datasets.html
https://scanpy.readthedocs.io/en/stable/api/datasets.html:9771,Deployability,toggle,toggleswitch,9771,"tasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Datasets. Datasets#. datasets.blobs; Gaussian Blobs. datasets.ebi_expression_atlas; Load a dataset from the EBI Single Cell Expression Atlas. datasets.krumsiek11; Simulated myeloid progenitors [Krumsiek et al., 2011]. datasets.moignard15; Hematopoiesis in early mouse embryos [Moignard et al., 2015]. datasets.pbmc3k; 3k PBMCs from 10x Genomics. datasets.pbmc3k_processed; Processed 3k PBMCs from 10x Genomics. datasets.pbmc68k_reduced; Subsampled and processed 68k PBMCs. datasets.paul15; Development of Myeloid Progenitors [Paul et al., 2015]. datasets.toggleswitch; Simulated toggleswitch. datasets.visium_sge; Processed Visium Spatial Gene Expression data from 10x Genomics’ database. previous; scanpy.logging.print_versions. next; scanpy.datasets.blobs. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/datasets.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/datasets.html
https://scanpy.readthedocs.io/en/stable/api/datasets.html:9795,Deployability,toggle,toggleswitch,9795,"tasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Datasets. Datasets#. datasets.blobs; Gaussian Blobs. datasets.ebi_expression_atlas; Load a dataset from the EBI Single Cell Expression Atlas. datasets.krumsiek11; Simulated myeloid progenitors [Krumsiek et al., 2011]. datasets.moignard15; Hematopoiesis in early mouse embryos [Moignard et al., 2015]. datasets.pbmc3k; 3k PBMCs from 10x Genomics. datasets.pbmc3k_processed; Processed 3k PBMCs from 10x Genomics. datasets.pbmc68k_reduced; Subsampled and processed 68k PBMCs. datasets.paul15; Development of Myeloid Progenitors [Paul et al., 2015]. datasets.toggleswitch; Simulated toggleswitch. datasets.visium_sge; Processed Visium Spatial Gene Expression data from 10x Genomics’ database. previous; scanpy.logging.print_versions. next; scanpy.datasets.blobs. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/datasets.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/datasets.html
https://scanpy.readthedocs.io/en/stable/api/datasets.html:7162,Performance,cache,cachedir,7162,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/api/datasets.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/datasets.html
https://scanpy.readthedocs.io/en/stable/api/datasets.html:8403,Security,hash,hashsolo,8403,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Datasets. Datasets#. datasets.blobs; Gaussian Blobs. datasets.ebi_expression_atlas; Load a dataset from the EBI Single Cell Expression Atlas. datasets.krumsiek11; Simulated myeloid progenitors [Kr,MatchSource.WIKI,en/stable/api/datasets.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/datasets.html
https://scanpy.readthedocs.io/en/stable/api/datasets.html:7430,Testability,log,logfile,7430,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/api/datasets.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/datasets.html
https://scanpy.readthedocs.io/en/stable/api/datasets.html:7469,Testability,log,logpath,7469,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/api/datasets.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/datasets.html
https://scanpy.readthedocs.io/en/stable/api/datasets.html:7775,Testability,log,logging,7775,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/api/datasets.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/datasets.html
https://scanpy.readthedocs.io/en/stable/api/datasets.html:7804,Testability,log,logging,7804, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/api/datasets.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/datasets.html
https://scanpy.readthedocs.io/en/stable/api/datasets.html:9922,Testability,log,logging,9922,"tasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Datasets. Datasets#. datasets.blobs; Gaussian Blobs. datasets.ebi_expression_atlas; Load a dataset from the EBI Single Cell Expression Atlas. datasets.krumsiek11; Simulated myeloid progenitors [Krumsiek et al., 2011]. datasets.moignard15; Hematopoiesis in early mouse embryos [Moignard et al., 2015]. datasets.pbmc3k; 3k PBMCs from 10x Genomics. datasets.pbmc3k_processed; Processed 3k PBMCs from 10x Genomics. datasets.pbmc68k_reduced; Subsampled and processed 68k PBMCs. datasets.paul15; Development of Myeloid Progenitors [Paul et al., 2015]. datasets.toggleswitch; Simulated toggleswitch. datasets.visium_sge; Processed Visium Spatial Gene Expression data from 10x Genomics’ database. previous; scanpy.logging.print_versions. next; scanpy.datasets.blobs. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/datasets.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/datasets.html
https://scanpy.readthedocs.io/en/stable/api/deprecated.html:8098,Deployability,toggle,toggleswitch,8098,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/api/deprecated.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/deprecated.html
https://scanpy.readthedocs.io/en/stable/api/deprecated.html:9182,Deployability,release,release,9182,"anpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Deprecated functions. Deprecated functions#. pp.filter_genes_dispersion; Extract highly variable genes [Satija et al., 2015, Zheng et al., 2017]. pp.normalize_per_cell; Normalize total counts per cell. previous; scanpy.datasets.visium_sge. next; scanpy.pp.filter_genes_dispersion. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/deprecated.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/deprecated.html
https://scanpy.readthedocs.io/en/stable/api/deprecated.html:9316,Modifiability,variab,variable,9316,"anpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Deprecated functions. Deprecated functions#. pp.filter_genes_dispersion; Extract highly variable genes [Satija et al., 2015, Zheng et al., 2017]. pp.normalize_per_cell; Normalize total counts per cell. previous; scanpy.datasets.visium_sge. next; scanpy.pp.filter_genes_dispersion. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/deprecated.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/deprecated.html
https://scanpy.readthedocs.io/en/stable/api/deprecated.html:7174,Performance,cache,cachedir,7174,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/api/deprecated.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/deprecated.html
https://scanpy.readthedocs.io/en/stable/api/deprecated.html:8415,Security,hash,hashsolo,8415,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Deprecated functions. Deprecated functions#. pp.filter_genes_dispersion; Extract highly variable genes [Satija et al., 2015, Zheng et al., 2017]. pp.normalize_per_cell; Normalize total counts per ",MatchSource.WIKI,en/stable/api/deprecated.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/deprecated.html
https://scanpy.readthedocs.io/en/stable/api/deprecated.html:7442,Testability,log,logfile,7442,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/api/deprecated.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/deprecated.html
https://scanpy.readthedocs.io/en/stable/api/deprecated.html:7481,Testability,log,logpath,7481,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/api/deprecated.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/deprecated.html
https://scanpy.readthedocs.io/en/stable/api/deprecated.html:7787,Testability,log,logging,7787,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/api/deprecated.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/deprecated.html
https://scanpy.readthedocs.io/en/stable/api/deprecated.html:7816,Testability,log,logging,7816, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/api/deprecated.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/deprecated.html
https://scanpy.readthedocs.io/en/stable/api/experimental.html:8090,Deployability,toggle,toggleswitch,8090,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/api/experimental.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/experimental.html
https://scanpy.readthedocs.io/en/stable/api/experimental.html:9174,Deployability,release,release,9174,"k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Experimental. Experimental#; New methods that are in early development which are not (yet); integrated in Scanpy core. experimental.pp.normalize_pearson_residuals; Applies analytic Pearson residual normalization, based on Lause et al. [2021]. experimental.pp.normalize_pearson_residuals_pca; Applies analytic Pearson residual normalization and PCA, based on Lause et al. [2021]. experimental.pp.highly_variable_genes; Select highly variable genes using analytic Pearson residuals [Lause et al., 2021]. experimental.pp.recipe_pearson_residuals; Full pipeline for HVG selection and normalization by analytic Pearson residuals [Lause et al., 2021]. previous; scanpy.metrics.morans_i. next; scanpy.experimental.pp.normalize_pearson_residuals. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/experimental.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/experimental.html
https://scanpy.readthedocs.io/en/stable/api/experimental.html:9312,Deployability,integrat,integrated,9312,"k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Experimental. Experimental#; New methods that are in early development which are not (yet); integrated in Scanpy core. experimental.pp.normalize_pearson_residuals; Applies analytic Pearson residual normalization, based on Lause et al. [2021]. experimental.pp.normalize_pearson_residuals_pca; Applies analytic Pearson residual normalization and PCA, based on Lause et al. [2021]. experimental.pp.highly_variable_genes; Select highly variable genes using analytic Pearson residuals [Lause et al., 2021]. experimental.pp.recipe_pearson_residuals; Full pipeline for HVG selection and normalization by analytic Pearson residuals [Lause et al., 2021]. previous; scanpy.metrics.morans_i. next; scanpy.experimental.pp.normalize_pearson_residuals. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/experimental.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/experimental.html
https://scanpy.readthedocs.io/en/stable/api/experimental.html:9769,Deployability,pipeline,pipeline,9769,"k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Experimental. Experimental#; New methods that are in early development which are not (yet); integrated in Scanpy core. experimental.pp.normalize_pearson_residuals; Applies analytic Pearson residual normalization, based on Lause et al. [2021]. experimental.pp.normalize_pearson_residuals_pca; Applies analytic Pearson residual normalization and PCA, based on Lause et al. [2021]. experimental.pp.highly_variable_genes; Select highly variable genes using analytic Pearson residuals [Lause et al., 2021]. experimental.pp.recipe_pearson_residuals; Full pipeline for HVG selection and normalization by analytic Pearson residuals [Lause et al., 2021]. previous; scanpy.metrics.morans_i. next; scanpy.experimental.pp.normalize_pearson_residuals. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/experimental.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/experimental.html
https://scanpy.readthedocs.io/en/stable/api/experimental.html:9312,Integrability,integrat,integrated,9312,"k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Experimental. Experimental#; New methods that are in early development which are not (yet); integrated in Scanpy core. experimental.pp.normalize_pearson_residuals; Applies analytic Pearson residual normalization, based on Lause et al. [2021]. experimental.pp.normalize_pearson_residuals_pca; Applies analytic Pearson residual normalization and PCA, based on Lause et al. [2021]. experimental.pp.highly_variable_genes; Select highly variable genes using analytic Pearson residuals [Lause et al., 2021]. experimental.pp.recipe_pearson_residuals; Full pipeline for HVG selection and normalization by analytic Pearson residuals [Lause et al., 2021]. previous; scanpy.metrics.morans_i. next; scanpy.experimental.pp.normalize_pearson_residuals. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/experimental.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/experimental.html
https://scanpy.readthedocs.io/en/stable/api/experimental.html:9652,Modifiability,variab,variable,9652,"k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Experimental. Experimental#; New methods that are in early development which are not (yet); integrated in Scanpy core. experimental.pp.normalize_pearson_residuals; Applies analytic Pearson residual normalization, based on Lause et al. [2021]. experimental.pp.normalize_pearson_residuals_pca; Applies analytic Pearson residual normalization and PCA, based on Lause et al. [2021]. experimental.pp.highly_variable_genes; Select highly variable genes using analytic Pearson residuals [Lause et al., 2021]. experimental.pp.recipe_pearson_residuals; Full pipeline for HVG selection and normalization by analytic Pearson residuals [Lause et al., 2021]. previous; scanpy.metrics.morans_i. next; scanpy.experimental.pp.normalize_pearson_residuals. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/experimental.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/experimental.html
https://scanpy.readthedocs.io/en/stable/api/experimental.html:7166,Performance,cache,cachedir,7166,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/api/experimental.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/experimental.html
https://scanpy.readthedocs.io/en/stable/api/experimental.html:8407,Security,hash,hashsolo,8407,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Experimental. Experimental#; New methods that are in early development which are not (yet); integrated in Scanpy core. experimental.pp.normalize_pearson_residuals; Applies analytic Pearson residua,MatchSource.WIKI,en/stable/api/experimental.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/experimental.html
https://scanpy.readthedocs.io/en/stable/api/experimental.html:7434,Testability,log,logfile,7434,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/api/experimental.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/experimental.html
https://scanpy.readthedocs.io/en/stable/api/experimental.html:7473,Testability,log,logpath,7473,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/api/experimental.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/experimental.html
https://scanpy.readthedocs.io/en/stable/api/experimental.html:7779,Testability,log,logging,7779,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/api/experimental.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/experimental.html
https://scanpy.readthedocs.io/en/stable/api/experimental.html:7808,Testability,log,logging,7808, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/api/experimental.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/experimental.html
https://scanpy.readthedocs.io/en/stable/api/get.html:8106,Deployability,toggle,toggleswitch,8106,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/api/get.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/get.html
https://scanpy.readthedocs.io/en/stable/api/get.html:9190,Deployability,release,release,9190,"ing.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Get object from AnnData: get. Get object from AnnData: get#; The module sc.get provides convenience functions for getting values back in; useful formats. get.obs_df; Return values for observations in adata. get.var_df; Return values for observations in adata. get.rank_genes_groups_df; scanpy.tl.rank_genes_groups() results in the form of a DataFrame. get.aggregate; Aggregate data matrix based on some categorical grouping. previous; scanpy.read_umi_tools. next; scanpy.get.obs_df. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/get.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/get.html
https://scanpy.readthedocs.io/en/stable/api/get.html:7182,Performance,cache,cachedir,7182,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/api/get.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/get.html
https://scanpy.readthedocs.io/en/stable/api/get.html:8423,Security,hash,hashsolo,8423,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Get object from AnnData: get. Get object from AnnData: get#; The module sc.get provides convenience functions for getting values back in; useful formats. get.obs_df; Return values for observations,MatchSource.WIKI,en/stable/api/get.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/get.html
https://scanpy.readthedocs.io/en/stable/api/get.html:7450,Testability,log,logfile,7450,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/api/get.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/get.html
https://scanpy.readthedocs.io/en/stable/api/get.html:7489,Testability,log,logpath,7489,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/api/get.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/get.html
https://scanpy.readthedocs.io/en/stable/api/get.html:7795,Testability,log,logging,7795,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/api/get.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/get.html
https://scanpy.readthedocs.io/en/stable/api/get.html:7824,Testability,log,logging,7824, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/api/get.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/get.html
https://scanpy.readthedocs.io/en/stable/api/index.html:9296,Availability,avail,available,9296,"rnal.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. API. API#; Import Scanpy as:; import scanpy as sc. Note; Additional functionality is available in the broader ecosystem, with some tools being wrapped in the scanpy.external module. Preprocessing: pp; Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Tools: tl; Embeddings; Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. Plotting: pl; Generic; Classes; Preprocessing; Tools. Reading; scanpy.read; scanpy.read_10x_h5; scanpy.read_10x_mtx; scanpy.read_visium; scanpy.read_h5ad; scanpy.read_csv; scanpy.read_excel; scanpy.read_hdf; scanpy.read_loom; scanpy.read_mtx; scanpy.read_text; scanpy.read_umi_tools. Get object from AnnData: get; scanpy.get.obs_df; scanpy.get.var_df; scanpy.get.rank_genes_groups_df; scanpy.get.aggregate. Queries; scanpy.queries.biomart_annotations; scanpy.queries.gene_coordinates; scanpy.queries.mitochondrial_genes; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_r",MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:8081,Deployability,toggle,toggleswitch,8081,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:9165,Deployability,release,release,9165,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. API. API#; Import Scanpy as:; import scanpy as sc. Note; Additional functionality is available in the broader ecosystem, with some tools being wrapped in the scanpy.external module. Preprocessing: pp; Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Tools: tl; Embeddings; Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. Plotting: pl; Generic; Classes; Preprocessing; Tools. Reading; scanpy.read; scanpy.read_10x_h5; scanpy.read_10x_mtx; scanpy.read_visium; scanpy.read_h5ad; scanpy.read_csv; scanpy.read_excel; scanpy.read_hdf; scanpy.read_loom; scanpy.read_mtx; scanpy.read_text; scanpy.read_umi_tools. Get object from AnnData: get; scanpy.get.obs_df; scanpy.get.var_df; scanpy.get.rank_genes_groups_df; scanpy.get.aggregate. Queries; scanpy.queries.biomart_annotations; scanpy.queries.gene_",MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:9562,Deployability,integrat,integration,9562,"ernal.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. API. API#; Import Scanpy as:; import scanpy as sc. Note; Additional functionality is available in the broader ecosystem, with some tools being wrapped in the scanpy.external module. Preprocessing: pp; Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Tools: tl; Embeddings; Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. Plotting: pl; Generic; Classes; Preprocessing; Tools. Reading; scanpy.read; scanpy.read_10x_h5; scanpy.read_10x_mtx; scanpy.read_visium; scanpy.read_h5ad; scanpy.read_csv; scanpy.read_excel; scanpy.read_hdf; scanpy.read_loom; scanpy.read_mtx; scanpy.read_text; scanpy.read_umi_tools. Get object from AnnData: get; scanpy.get.obs_df; scanpy.get.var_df; scanpy.get.rank_genes_groups_df; scanpy.get.aggregate. Queries; scanpy.queries.biomart_annotations; scanpy.queries.gene_coordinates; scanpy.queries.mitochondrial_genes; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors. Settings; scanpy.set_figure_params; scanpy._settings.S",MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:10892,Deployability,toggle,toggleswitch,10892,"ng a release. Contributors; References. .md. .pdf. API. API#; Import Scanpy as:; import scanpy as sc. Note; Additional functionality is available in the broader ecosystem, with some tools being wrapped in the scanpy.external module. Preprocessing: pp; Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Tools: tl; Embeddings; Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. Plotting: pl; Generic; Classes; Preprocessing; Tools. Reading; scanpy.read; scanpy.read_10x_h5; scanpy.read_10x_mtx; scanpy.read_visium; scanpy.read_h5ad; scanpy.read_csv; scanpy.read_excel; scanpy.read_hdf; scanpy.read_loom; scanpy.read_mtx; scanpy.read_text; scanpy.read_umi_tools. Get object from AnnData: get; scanpy.get.obs_df; scanpy.get.var_df; scanpy.get.rank_genes_groups_df; scanpy.get.aggregate. Queries; scanpy.queries.biomart_annotations; scanpy.queries.gene_coordinates; scanpy.queries.mitochondrial_genes; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. previous; Plotting with Marsilea. next; Preprocessing: pp. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:9354,Integrability,wrap,wrapped,9354,"rnal.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. API. API#; Import Scanpy as:; import scanpy as sc. Note; Additional functionality is available in the broader ecosystem, with some tools being wrapped in the scanpy.external module. Preprocessing: pp; Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Tools: tl; Embeddings; Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. Plotting: pl; Generic; Classes; Preprocessing; Tools. Reading; scanpy.read; scanpy.read_10x_h5; scanpy.read_10x_mtx; scanpy.read_visium; scanpy.read_h5ad; scanpy.read_csv; scanpy.read_excel; scanpy.read_hdf; scanpy.read_loom; scanpy.read_mtx; scanpy.read_text; scanpy.read_umi_tools. Get object from AnnData: get; scanpy.get.obs_df; scanpy.get.var_df; scanpy.get.rank_genes_groups_df; scanpy.get.aggregate. Queries; scanpy.queries.biomart_annotations; scanpy.queries.gene_coordinates; scanpy.queries.mitochondrial_genes; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_r",MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:9562,Integrability,integrat,integration,9562,"ernal.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. API. API#; Import Scanpy as:; import scanpy as sc. Note; Additional functionality is available in the broader ecosystem, with some tools being wrapped in the scanpy.external module. Preprocessing: pp; Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Tools: tl; Embeddings; Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. Plotting: pl; Generic; Classes; Preprocessing; Tools. Reading; scanpy.read; scanpy.read_10x_h5; scanpy.read_10x_mtx; scanpy.read_visium; scanpy.read_h5ad; scanpy.read_csv; scanpy.read_excel; scanpy.read_hdf; scanpy.read_loom; scanpy.read_mtx; scanpy.read_text; scanpy.read_umi_tools. Get object from AnnData: get; scanpy.get.obs_df; scanpy.get.var_df; scanpy.get.rank_genes_groups_df; scanpy.get.aggregate. Queries; scanpy.queries.biomart_annotations; scanpy.queries.gene_coordinates; scanpy.queries.mitochondrial_genes; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors. Settings; scanpy.set_figure_params; scanpy._settings.S",MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:7157,Performance,cache,cachedir,7157,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:9475,Safety,detect,detection,9475,"nal.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. API. API#; Import Scanpy as:; import scanpy as sc. Note; Additional functionality is available in the broader ecosystem, with some tools being wrapped in the scanpy.external module. Preprocessing: pp; Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Tools: tl; Embeddings; Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. Plotting: pl; Generic; Classes; Preprocessing; Tools. Reading; scanpy.read; scanpy.read_10x_h5; scanpy.read_10x_mtx; scanpy.read_visium; scanpy.read_h5ad; scanpy.read_csv; scanpy.read_excel; scanpy.read_hdf; scanpy.read_loom; scanpy.read_mtx; scanpy.read_text; scanpy.read_umi_tools. Get object from AnnData: get; scanpy.get.obs_df; scanpy.get.var_df; scanpy.get.rank_genes_groups_df; scanpy.get.aggregate. Queries; scanpy.queries.biomart_annotations; scanpy.queries.gene_coordinates; scanpy.queries.mitochondrial_genes; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experi",MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:8398,Security,hash,hashsolo,8398,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. API. API#; Import Scanpy as:; import scanpy as sc. Note; Additional functionality is available in the broader ecosystem, with some tools being wrapped in the scanpy.external module. Preprocessing:",MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:7425,Testability,log,logfile,7425,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:7464,Testability,log,logpath,7464,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:7770,Testability,log,logging,7770,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:7799,Testability,log,logging,7799, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:10581,Testability,log,logging,10581,"ng a release. Contributors; References. .md. .pdf. API. API#; Import Scanpy as:; import scanpy as sc. Note; Additional functionality is available in the broader ecosystem, with some tools being wrapped in the scanpy.external module. Preprocessing: pp; Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Tools: tl; Embeddings; Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. Plotting: pl; Generic; Classes; Preprocessing; Tools. Reading; scanpy.read; scanpy.read_10x_h5; scanpy.read_10x_mtx; scanpy.read_visium; scanpy.read_h5ad; scanpy.read_csv; scanpy.read_excel; scanpy.read_hdf; scanpy.read_loom; scanpy.read_mtx; scanpy.read_text; scanpy.read_umi_tools. Get object from AnnData: get; scanpy.get.obs_df; scanpy.get.var_df; scanpy.get.rank_genes_groups_df; scanpy.get.aggregate. Queries; scanpy.queries.biomart_annotations; scanpy.queries.gene_coordinates; scanpy.queries.mitochondrial_genes; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. previous; Plotting with Marsilea. next; Preprocessing: pp. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/index.html:10610,Testability,log,logging,10610,"ng a release. Contributors; References. .md. .pdf. API. API#; Import Scanpy as:; import scanpy as sc. Note; Additional functionality is available in the broader ecosystem, with some tools being wrapped in the scanpy.external module. Preprocessing: pp; Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Tools: tl; Embeddings; Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. Plotting: pl; Generic; Classes; Preprocessing; Tools. Reading; scanpy.read; scanpy.read_10x_h5; scanpy.read_10x_mtx; scanpy.read_visium; scanpy.read_h5ad; scanpy.read_csv; scanpy.read_excel; scanpy.read_hdf; scanpy.read_loom; scanpy.read_mtx; scanpy.read_text; scanpy.read_umi_tools. Get object from AnnData: get; scanpy.get.obs_df; scanpy.get.var_df; scanpy.get.rank_genes_groups_df; scanpy.get.aggregate. Queries; scanpy.queries.biomart_annotations; scanpy.queries.gene_coordinates; scanpy.queries.mitochondrial_genes; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. previous; Plotting with Marsilea. next; Preprocessing: pp. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/index.html
https://scanpy.readthedocs.io/en/stable/api/metrics.html:8085,Deployability,toggle,toggleswitch,8085,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/api/metrics.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/metrics.html
https://scanpy.readthedocs.io/en/stable/api/metrics.html:9169,Deployability,release,release,9169,"r; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Metrics. Metrics#; Collections of useful measurements for evaluating results. metrics.confusion_matrix; Given an original and new set of labels, create a labelled confusion matrix. metrics.gearys_c; Calculate Geary's C, as used by VISION. metrics.morans_i; Calculate Moran’s I Global Autocorrelation Statistic. previous; scanpy.queries.enrich. next; scanpy.metrics.confusion_matrix. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/metrics.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/metrics.html
https://scanpy.readthedocs.io/en/stable/api/metrics.html:7161,Performance,cache,cachedir,7161,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/api/metrics.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/metrics.html
https://scanpy.readthedocs.io/en/stable/api/metrics.html:8402,Security,hash,hashsolo,8402,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Metrics. Metrics#; Collections of useful measurements for evaluating results. metrics.confusion_matrix; Given an original and new set of labels, create a labelled confusion matrix. metrics.gearys_",MatchSource.WIKI,en/stable/api/metrics.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/metrics.html
https://scanpy.readthedocs.io/en/stable/api/metrics.html:7429,Testability,log,logfile,7429,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/api/metrics.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/metrics.html
https://scanpy.readthedocs.io/en/stable/api/metrics.html:7468,Testability,log,logpath,7468,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/api/metrics.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/metrics.html
https://scanpy.readthedocs.io/en/stable/api/metrics.html:7774,Testability,log,logging,7774,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/api/metrics.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/metrics.html
https://scanpy.readthedocs.io/en/stable/api/metrics.html:7803,Testability,log,logging,7803, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/api/metrics.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/metrics.html
https://scanpy.readthedocs.io/en/stable/api/plotting.html:8090,Deployability,toggle,toggleswitch,8090,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/api/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/plotting.html
https://scanpy.readthedocs.io/en/stable/api/plotting.html:9174,Deployability,release,release,9174,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Plotting: pl. Contents . Generic; Classes; Preprocessing; Tools; PCA; Embeddings. Branching trajectories and pseudotime, clustering; Marker genes; Simulations. Plotting: pl#; The plotting module scanpy.pl largely parallels the tl.* and a few of the pp.* functions.; For most tools and for some preprocessing functions, you’ll find a plotting function with the same name.; See Core plotting functions for an overview of how to use these functions. Note; See the Settings section for all important plotting configurations. Generic#. pl.scatter; Scatter plot along observations or variables axes. pl.heatmap; Heatmap of the expression values of genes. pl.dotplot; Makes a dot plot of the expression values of var_names. pl.tracksplot; In this type of plot each var_name is plotted as a filled line plot where the y values correspond to the var_name values and x is each of the cells. pl.viol",MatchSource.WIKI,en/stable/api/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/plotting.html
https://scanpy.readthedocs.io/en/stable/api/plotting.html:9725,Deployability,configurat,configurations,9725,"alantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Plotting: pl. Contents . Generic; Classes; Preprocessing; Tools; PCA; Embeddings. Branching trajectories and pseudotime, clustering; Marker genes; Simulations. Plotting: pl#; The plotting module scanpy.pl largely parallels the tl.* and a few of the pp.* functions.; For most tools and for some preprocessing functions, you’ll find a plotting function with the same name.; See Core plotting functions for an overview of how to use these functions. Note; See the Settings section for all important plotting configurations. Generic#. pl.scatter; Scatter plot along observations or variables axes. pl.heatmap; Heatmap of the expression values of genes. pl.dotplot; Makes a dot plot of the expression values of var_names. pl.tracksplot; In this type of plot each var_name is plotted as a filled line plot where the y values correspond to the var_name values and x is each of the cells. pl.violin; Violin plot. pl.stacked_violin; Stacked violin plots. pl.matrixplot; Creates a heatmap of the mean expression values per group of each var_names. pl.clustermap; Hierarchically-clustered heatmap. pl.ranking; Plot rankings. pl.dendrogram; Plots a dendrogram of the categories defined in groupby. Classes#; These classes allow fine tuning of visual parameters. pl.DotPlot; Allows the visualization of two values that are encoded as dot size and color. pl.MatrixPlot; Allows the visualization of values using a color map. pl.StackedViolin; Stacked violin plots. Preprocessing#; Methods for visua",MatchSource.WIKI,en/stable/api/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/plotting.html
https://scanpy.readthedocs.io/en/stable/api/plotting.html:9725,Modifiability,config,configurations,9725,"alantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Plotting: pl. Contents . Generic; Classes; Preprocessing; Tools; PCA; Embeddings. Branching trajectories and pseudotime, clustering; Marker genes; Simulations. Plotting: pl#; The plotting module scanpy.pl largely parallels the tl.* and a few of the pp.* functions.; For most tools and for some preprocessing functions, you’ll find a plotting function with the same name.; See Core plotting functions for an overview of how to use these functions. Note; See the Settings section for all important plotting configurations. Generic#. pl.scatter; Scatter plot along observations or variables axes. pl.heatmap; Heatmap of the expression values of genes. pl.dotplot; Makes a dot plot of the expression values of var_names. pl.tracksplot; In this type of plot each var_name is plotted as a filled line plot where the y values correspond to the var_name values and x is each of the cells. pl.violin; Violin plot. pl.stacked_violin; Stacked violin plots. pl.matrixplot; Creates a heatmap of the mean expression values per group of each var_names. pl.clustermap; Hierarchically-clustered heatmap. pl.ranking; Plot rankings. pl.dendrogram; Plots a dendrogram of the categories defined in groupby. Classes#; These classes allow fine tuning of visual parameters. pl.DotPlot; Allows the visualization of two values that are encoded as dot size and color. pl.MatrixPlot; Allows the visualization of values using a color map. pl.StackedViolin; Stacked violin plots. Preprocessing#; Methods for visua",MatchSource.WIKI,en/stable/api/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/plotting.html
https://scanpy.readthedocs.io/en/stable/api/plotting.html:9798,Modifiability,variab,variables,9798,".external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Plotting: pl. Contents . Generic; Classes; Preprocessing; Tools; PCA; Embeddings. Branching trajectories and pseudotime, clustering; Marker genes; Simulations. Plotting: pl#; The plotting module scanpy.pl largely parallels the tl.* and a few of the pp.* functions.; For most tools and for some preprocessing functions, you’ll find a plotting function with the same name.; See Core plotting functions for an overview of how to use these functions. Note; See the Settings section for all important plotting configurations. Generic#. pl.scatter; Scatter plot along observations or variables axes. pl.heatmap; Heatmap of the expression values of genes. pl.dotplot; Makes a dot plot of the expression values of var_names. pl.tracksplot; In this type of plot each var_name is plotted as a filled line plot where the y values correspond to the var_name values and x is each of the cells. pl.violin; Violin plot. pl.stacked_violin; Stacked violin plots. pl.matrixplot; Creates a heatmap of the mean expression values per group of each var_names. pl.clustermap; Hierarchically-clustered heatmap. pl.ranking; Plot rankings. pl.dendrogram; Plots a dendrogram of the categories defined in groupby. Classes#; These classes allow fine tuning of visual parameters. pl.DotPlot; Allows the visualization of two values that are encoded as dot size and color. pl.MatrixPlot; Allows the visualization of values using a color map. pl.StackedViolin; Stacked violin plots. Preprocessing#; Methods for visualizing quality control and results of preprocessing functions. pl.highest_expr_ge",MatchSource.WIKI,en/stable/api/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/plotting.html
https://scanpy.readthedocs.io/en/stable/api/plotting.html:7166,Performance,cache,cachedir,7166,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/api/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/plotting.html
https://scanpy.readthedocs.io/en/stable/api/plotting.html:8407,Security,hash,hashsolo,8407,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Plotting: pl. Contents . Generic; Classes; Preprocessing; Tools; PCA; Embeddings. Branching trajectories and pseudotime, clustering; Marker genes; Simulations. Plotting: pl#; The plotting module s",MatchSource.WIKI,en/stable/api/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/plotting.html
https://scanpy.readthedocs.io/en/stable/api/plotting.html:7434,Testability,log,logfile,7434,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/api/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/plotting.html
https://scanpy.readthedocs.io/en/stable/api/plotting.html:7473,Testability,log,logpath,7473,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/api/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/plotting.html
https://scanpy.readthedocs.io/en/stable/api/plotting.html:7779,Testability,log,logging,7779,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/api/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/plotting.html
https://scanpy.readthedocs.io/en/stable/api/plotting.html:7808,Testability,log,logging,7808, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/api/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/plotting.html
https://scanpy.readthedocs.io/en/stable/api/plotting.html:12487,Testability,test,tested,12487,"r plot in PCA coordinates. pl.pca_loadings; Rank genes according to contributions to PCs. pl.pca_variance_ratio; Plot the variance ratio. pl.pca_overview; Plot PCA results. Embeddings#. pl.tsne; Scatter plot in tSNE basis. pl.umap; Scatter plot in UMAP basis. pl.diffmap; Scatter plot in Diffusion Map basis. pl.draw_graph; Scatter plot in graph-drawing basis. pl.spatial; Scatter plot in spatial coordinates. pl.embedding; Scatter plot for user specified embedding basis (e.g. umap, pca, etc). Compute densities on embeddings. pl.embedding_density; Plot the density of cells in an embedding (per condition). Branching trajectories and pseudotime, clustering#; Visualize clusters using one of the embedding methods passing color='louvain'. pl.dpt_groups_pseudotime; Plot groups and pseudotime. pl.dpt_timeseries; Heatmap of pseudotime series. pl.paga; Plot the PAGA graph through thresholding low-connectivity edges. pl.paga_path; Gene expression and annotation changes along paths in the abstracted graph. pl.paga_compare; Scatter and PAGA graph side-by-side. Marker genes#. pl.rank_genes_groups; Plot ranking of genes. pl.rank_genes_groups_violin; Plot ranking of genes for all tested comparisons. pl.rank_genes_groups_stacked_violin; Plot ranking of genes using stacked_violin plot (see stacked_violin()). pl.rank_genes_groups_heatmap; Plot ranking of genes using heatmap plot (see heatmap()). pl.rank_genes_groups_dotplot; Plot ranking of genes using dotplot plot (see dotplot()). pl.rank_genes_groups_matrixplot; Plot ranking of genes using matrixplot plot (see matrixplot()). pl.rank_genes_groups_tracksplot; Plot ranking of genes using heatmap plot (see heatmap()). Simulations#. pl.sim; Plot results of simulation. previous; scanpy.tl.sim. next; scanpy.pl.scatter. Contents; . Generic; Classes; Preprocessing; Tools; PCA; Embeddings. Branching trajectories and pseudotime, clustering; Marker genes; Simulations. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/plotting.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:10875,Availability,avail,available,10875,"but perform a basic transformation on the data matrix. Basic Preprocessing#; For visual quality control, see highest_expr_genes() and; filter_genes_dispersion() in scanpy.pl. pp.calculate_qc_metrics; Calculate quality control metrics. pp.filter_cells; Filter cell outliers based on counts and numbers of genes expressed. pp.filter_genes; Filter genes based on number of cells or counts. pp.highly_variable_genes; Annotate highly variable genes [Satija et al., 2015, Stuart et al., 2019, Zheng et al., 2017]. pp.log1p; Logarithmize the data matrix. pp.pca; Principal component analysis [Pedregosa et al., 2011]. pp.normalize_total; Normalize counts per cell. pp.regress_out; Regress out (mostly) unwanted sources of variation. pp.scale; Scale data to unit variance and zero mean. pp.subsample; Subsample to a fraction of the number of observations. pp.downsample_counts; Downsample counts from count matrix. Recipes#. pp.recipe_zheng17; Normalization and filtering as of Zheng et al. [2017]. pp.recipe_weinreb17; Normalization and filtering as of [Weinreb et al., 2017]. pp.recipe_seurat; Normalization and filtering as of Seurat [Satija et al., 2015]. Batch effect correction#; Also see [Data integration]. Note that a simple batch correction method is available via pp.regress_out(). Checkout scanpy.external for more. pp.combat; ComBat function for batch effect correction [Johnson et al., 2006, Leek et al., 2017, Pedersen, 2012]. Doublet detection#. pp.scrublet; Predict doublets using Scrublet [Wolock et al., 2019]. pp.scrublet_simulate_doublets; Simulate doublets by adding the counts of random observed transcriptome pairs. Neighbors#. pp.neighbors; Computes the nearest neighbors distance matrix and a neighborhood graph of observations [McInnes et al., 2018]. previous; API. next; scanpy.pp.calculate_qc_metrics. Contents; . Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:8095,Deployability,toggle,toggleswitch,8095,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:9179,Deployability,release,release,9179,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: pp. Contents . Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Preprocessing: pp#; Filtering of highly-variable genes, batch-effect correction, per-cell normalization, preprocessing recipes.; Any transformation of the data matrix that is not a tool. Other than tools, preprocessing steps usually don’t return an easily interpretable annotation, but perform a basic transformation on the data matrix. Basic Preprocessing#; For visual quality control, see highest_expr_genes() and; filter_genes_dispersion() in scanpy.pl. pp.calculate_qc_metrics; Calculate quality control metrics. pp.filter_cells; Filter cell outliers based on counts and numbers of genes expressed. pp.filter_genes; Filter genes based on number of cells or counts. pp.highly_variable_genes; Annotate highly variable genes [Satija et al., 2015, Stuart et al., 2019, Zhen",MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:10815,Deployability,integrat,integration,10815,"but perform a basic transformation on the data matrix. Basic Preprocessing#; For visual quality control, see highest_expr_genes() and; filter_genes_dispersion() in scanpy.pl. pp.calculate_qc_metrics; Calculate quality control metrics. pp.filter_cells; Filter cell outliers based on counts and numbers of genes expressed. pp.filter_genes; Filter genes based on number of cells or counts. pp.highly_variable_genes; Annotate highly variable genes [Satija et al., 2015, Stuart et al., 2019, Zheng et al., 2017]. pp.log1p; Logarithmize the data matrix. pp.pca; Principal component analysis [Pedregosa et al., 2011]. pp.normalize_total; Normalize counts per cell. pp.regress_out; Regress out (mostly) unwanted sources of variation. pp.scale; Scale data to unit variance and zero mean. pp.subsample; Subsample to a fraction of the number of observations. pp.downsample_counts; Downsample counts from count matrix. Recipes#. pp.recipe_zheng17; Normalization and filtering as of Zheng et al. [2017]. pp.recipe_weinreb17; Normalization and filtering as of [Weinreb et al., 2017]. pp.recipe_seurat; Normalization and filtering as of Seurat [Satija et al., 2015]. Batch effect correction#; Also see [Data integration]. Note that a simple batch correction method is available via pp.regress_out(). Checkout scanpy.external for more. pp.combat; ComBat function for batch effect correction [Johnson et al., 2006, Leek et al., 2017, Pedersen, 2012]. Doublet detection#. pp.scrublet; Predict doublets using Scrublet [Wolock et al., 2019]. pp.scrublet_simulate_doublets; Simulate doublets by adding the counts of random observed transcriptome pairs. Neighbors#. pp.neighbors; Computes the nearest neighbors distance matrix and a neighborhood graph of observations [McInnes et al., 2018]. previous; API. next; scanpy.pp.calculate_qc_metrics. Contents; . Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:10815,Integrability,integrat,integration,10815,"but perform a basic transformation on the data matrix. Basic Preprocessing#; For visual quality control, see highest_expr_genes() and; filter_genes_dispersion() in scanpy.pl. pp.calculate_qc_metrics; Calculate quality control metrics. pp.filter_cells; Filter cell outliers based on counts and numbers of genes expressed. pp.filter_genes; Filter genes based on number of cells or counts. pp.highly_variable_genes; Annotate highly variable genes [Satija et al., 2015, Stuart et al., 2019, Zheng et al., 2017]. pp.log1p; Logarithmize the data matrix. pp.pca; Principal component analysis [Pedregosa et al., 2011]. pp.normalize_total; Normalize counts per cell. pp.regress_out; Regress out (mostly) unwanted sources of variation. pp.scale; Scale data to unit variance and zero mean. pp.subsample; Subsample to a fraction of the number of observations. pp.downsample_counts; Downsample counts from count matrix. Recipes#. pp.recipe_zheng17; Normalization and filtering as of Zheng et al. [2017]. pp.recipe_weinreb17; Normalization and filtering as of [Weinreb et al., 2017]. pp.recipe_seurat; Normalization and filtering as of Seurat [Satija et al., 2015]. Batch effect correction#; Also see [Data integration]. Note that a simple batch correction method is available via pp.regress_out(). Checkout scanpy.external for more. pp.combat; ComBat function for batch effect correction [Johnson et al., 2006, Leek et al., 2017, Pedersen, 2012]. Doublet detection#. pp.scrublet; Predict doublets using Scrublet [Wolock et al., 2019]. pp.scrublet_simulate_doublets; Simulate doublets by adding the counts of random observed transcriptome pairs. Neighbors#. pp.neighbors; Computes the nearest neighbors distance matrix and a neighborhood graph of observations [McInnes et al., 2018]. previous; API. next; scanpy.pp.calculate_qc_metrics. Contents; . Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:9380,Modifiability,variab,variable,9380,"ernal.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: pp. Contents . Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Preprocessing: pp#; Filtering of highly-variable genes, batch-effect correction, per-cell normalization, preprocessing recipes.; Any transformation of the data matrix that is not a tool. Other than tools, preprocessing steps usually don’t return an easily interpretable annotation, but perform a basic transformation on the data matrix. Basic Preprocessing#; For visual quality control, see highest_expr_genes() and; filter_genes_dispersion() in scanpy.pl. pp.calculate_qc_metrics; Calculate quality control metrics. pp.filter_cells; Filter cell outliers based on counts and numbers of genes expressed. pp.filter_genes; Filter genes based on number of cells or counts. pp.highly_variable_genes; Annotate highly variable genes [Satija et al., 2015, Stuart et al., 2019, Zheng et al., 2017]. pp.log1p; Logarithmize the data matrix. pp.pca; Principal component analysis [Pedregosa et al., 2011]. pp.normalize_total; Normalize counts per cell. pp.regress_out; Regress out (mostly) unwanted sources of variation. pp.scale; Scale data to unit variance and zero mean. pp",MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:10051,Modifiability,variab,variable,10051,"tem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: pp. Contents . Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Preprocessing: pp#; Filtering of highly-variable genes, batch-effect correction, per-cell normalization, preprocessing recipes.; Any transformation of the data matrix that is not a tool. Other than tools, preprocessing steps usually don’t return an easily interpretable annotation, but perform a basic transformation on the data matrix. Basic Preprocessing#; For visual quality control, see highest_expr_genes() and; filter_genes_dispersion() in scanpy.pl. pp.calculate_qc_metrics; Calculate quality control metrics. pp.filter_cells; Filter cell outliers based on counts and numbers of genes expressed. pp.filter_genes; Filter genes based on number of cells or counts. pp.highly_variable_genes; Annotate highly variable genes [Satija et al., 2015, Stuart et al., 2019, Zheng et al., 2017]. pp.log1p; Logarithmize the data matrix. pp.pca; Principal component analysis [Pedregosa et al., 2011]. pp.normalize_total; Normalize counts per cell. pp.regress_out; Regress out (mostly) unwanted sources of variation. pp.scale; Scale data to unit variance and zero mean. pp.subsample; Subsample to a fraction of the number of observations. pp.downsample_counts; Downsample counts from count matrix. Recipes#. pp.recipe_zheng17; Normalization and filtering as of Zheng et al. [2017]. pp.recipe_weinreb17; Normalization and filtering as of [Weinreb et al., 2017]. pp.recipe_seurat; Normalization and filtering as of Seurat [Satija et al., 2015]. Batch effect correction#; Also see [Data integration]. Note that a simple batch correction method is available via pp.regress_out(). Checkout scanpy.external for more. pp.combat; ComBat function for batch effect correction [Johnson et al., 2006, Leek et al., 2017, Pederse",MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:7171,Performance,cache,cachedir,7171,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:9626,Performance,perform,perform,9626,"nal.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: pp. Contents . Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Preprocessing: pp#; Filtering of highly-variable genes, batch-effect correction, per-cell normalization, preprocessing recipes.; Any transformation of the data matrix that is not a tool. Other than tools, preprocessing steps usually don’t return an easily interpretable annotation, but perform a basic transformation on the data matrix. Basic Preprocessing#; For visual quality control, see highest_expr_genes() and; filter_genes_dispersion() in scanpy.pl. pp.calculate_qc_metrics; Calculate quality control metrics. pp.filter_cells; Filter cell outliers based on counts and numbers of genes expressed. pp.filter_genes; Filter genes based on number of cells or counts. pp.highly_variable_genes; Annotate highly variable genes [Satija et al., 2015, Stuart et al., 2019, Zheng et al., 2017]. pp.log1p; Logarithmize the data matrix. pp.pca; Principal component analysis [Pedregosa et al., 2011]. pp.normalize_total; Normalize counts per cell. pp.regress_out; Regress out (mostly) unwanted sources of variation. pp.scale; Scale data to unit variance and zero mean. pp.subsample; Subsample to a fraction of the number of observations. pp.downsample_counts; Downsample counts from count matrix. Recipes#. pp.recipe_zheng17; Normalization and filtering as of Zheng et ",MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:9318,Safety,detect,detection,9318,"al.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: pp. Contents . Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Preprocessing: pp#; Filtering of highly-variable genes, batch-effect correction, per-cell normalization, preprocessing recipes.; Any transformation of the data matrix that is not a tool. Other than tools, preprocessing steps usually don’t return an easily interpretable annotation, but perform a basic transformation on the data matrix. Basic Preprocessing#; For visual quality control, see highest_expr_genes() and; filter_genes_dispersion() in scanpy.pl. pp.calculate_qc_metrics; Calculate quality control metrics. pp.filter_cells; Filter cell outliers based on counts and numbers of genes expressed. pp.filter_genes; Filter genes based on number of cells or counts. pp.highly_variable_genes; Annotate highly variable genes [Satija et al., 2015, Stuart et al., 2019, Zheng et al., 2017]. pp.log1p; Logarithmize the data matrix. pp.pca; Principal component analysis [Pedregosa et al., 2011]. pp.normalize_total; Normalize counts per cell. pp.regress_out; R",MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:11064,Safety,detect,detection,11064,"but perform a basic transformation on the data matrix. Basic Preprocessing#; For visual quality control, see highest_expr_genes() and; filter_genes_dispersion() in scanpy.pl. pp.calculate_qc_metrics; Calculate quality control metrics. pp.filter_cells; Filter cell outliers based on counts and numbers of genes expressed. pp.filter_genes; Filter genes based on number of cells or counts. pp.highly_variable_genes; Annotate highly variable genes [Satija et al., 2015, Stuart et al., 2019, Zheng et al., 2017]. pp.log1p; Logarithmize the data matrix. pp.pca; Principal component analysis [Pedregosa et al., 2011]. pp.normalize_total; Normalize counts per cell. pp.regress_out; Regress out (mostly) unwanted sources of variation. pp.scale; Scale data to unit variance and zero mean. pp.subsample; Subsample to a fraction of the number of observations. pp.downsample_counts; Downsample counts from count matrix. Recipes#. pp.recipe_zheng17; Normalization and filtering as of Zheng et al. [2017]. pp.recipe_weinreb17; Normalization and filtering as of [Weinreb et al., 2017]. pp.recipe_seurat; Normalization and filtering as of Seurat [Satija et al., 2015]. Batch effect correction#; Also see [Data integration]. Note that a simple batch correction method is available via pp.regress_out(). Checkout scanpy.external for more. pp.combat; ComBat function for batch effect correction [Johnson et al., 2006, Leek et al., 2017, Pedersen, 2012]. Doublet detection#. pp.scrublet; Predict doublets using Scrublet [Wolock et al., 2019]. pp.scrublet_simulate_doublets; Simulate doublets by adding the counts of random observed transcriptome pairs. Neighbors#. pp.neighbors; Computes the nearest neighbors distance matrix and a neighborhood graph of observations [McInnes et al., 2018]. previous; API. next; scanpy.pp.calculate_qc_metrics. Contents; . Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:11520,Safety,detect,detection,11520,"but perform a basic transformation on the data matrix. Basic Preprocessing#; For visual quality control, see highest_expr_genes() and; filter_genes_dispersion() in scanpy.pl. pp.calculate_qc_metrics; Calculate quality control metrics. pp.filter_cells; Filter cell outliers based on counts and numbers of genes expressed. pp.filter_genes; Filter genes based on number of cells or counts. pp.highly_variable_genes; Annotate highly variable genes [Satija et al., 2015, Stuart et al., 2019, Zheng et al., 2017]. pp.log1p; Logarithmize the data matrix. pp.pca; Principal component analysis [Pedregosa et al., 2011]. pp.normalize_total; Normalize counts per cell. pp.regress_out; Regress out (mostly) unwanted sources of variation. pp.scale; Scale data to unit variance and zero mean. pp.subsample; Subsample to a fraction of the number of observations. pp.downsample_counts; Downsample counts from count matrix. Recipes#. pp.recipe_zheng17; Normalization and filtering as of Zheng et al. [2017]. pp.recipe_weinreb17; Normalization and filtering as of [Weinreb et al., 2017]. pp.recipe_seurat; Normalization and filtering as of Seurat [Satija et al., 2015]. Batch effect correction#; Also see [Data integration]. Note that a simple batch correction method is available via pp.regress_out(). Checkout scanpy.external for more. pp.combat; ComBat function for batch effect correction [Johnson et al., 2006, Leek et al., 2017, Pedersen, 2012]. Doublet detection#. pp.scrublet; Predict doublets using Scrublet [Wolock et al., 2019]. pp.scrublet_simulate_doublets; Simulate doublets by adding the counts of random observed transcriptome pairs. Neighbors#. pp.neighbors; Computes the nearest neighbors distance matrix and a neighborhood graph of observations [McInnes et al., 2018]. previous; API. next; scanpy.pp.calculate_qc_metrics. Contents; . Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:8412,Security,hash,hashsolo,8412,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: pp. Contents . Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. Preprocessing: pp#; Filtering of highly-variable genes, batch-effect correction, ",MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:7439,Testability,log,logfile,7439,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:7478,Testability,log,logpath,7478,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:7784,Testability,log,logging,7784,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:7813,Testability,log,logging,7813, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/preprocessing.html:10841,Usability,simpl,simple,10841,"but perform a basic transformation on the data matrix. Basic Preprocessing#; For visual quality control, see highest_expr_genes() and; filter_genes_dispersion() in scanpy.pl. pp.calculate_qc_metrics; Calculate quality control metrics. pp.filter_cells; Filter cell outliers based on counts and numbers of genes expressed. pp.filter_genes; Filter genes based on number of cells or counts. pp.highly_variable_genes; Annotate highly variable genes [Satija et al., 2015, Stuart et al., 2019, Zheng et al., 2017]. pp.log1p; Logarithmize the data matrix. pp.pca; Principal component analysis [Pedregosa et al., 2011]. pp.normalize_total; Normalize counts per cell. pp.regress_out; Regress out (mostly) unwanted sources of variation. pp.scale; Scale data to unit variance and zero mean. pp.subsample; Subsample to a fraction of the number of observations. pp.downsample_counts; Downsample counts from count matrix. Recipes#. pp.recipe_zheng17; Normalization and filtering as of Zheng et al. [2017]. pp.recipe_weinreb17; Normalization and filtering as of [Weinreb et al., 2017]. pp.recipe_seurat; Normalization and filtering as of Seurat [Satija et al., 2015]. Batch effect correction#; Also see [Data integration]. Note that a simple batch correction method is available via pp.regress_out(). Checkout scanpy.external for more. pp.combat; ComBat function for batch effect correction [Johnson et al., 2006, Leek et al., 2017, Pedersen, 2012]. Doublet detection#. pp.scrublet; Predict doublets using Scrublet [Wolock et al., 2019]. pp.scrublet_simulate_doublets; Simulate doublets by adding the counts of random observed transcriptome pairs. Neighbors#. pp.neighbors; Computes the nearest neighbors distance matrix and a neighborhood graph of observations [McInnes et al., 2018]. previous; API. next; scanpy.pp.calculate_qc_metrics. Contents; . Basic Preprocessing; Recipes; Batch effect correction; Doublet detection; Neighbors. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/preprocessing.html
https://scanpy.readthedocs.io/en/stable/api/queries.html:8085,Deployability,toggle,toggleswitch,8085,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/api/queries.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/queries.html
https://scanpy.readthedocs.io/en/stable/api/queries.html:9169,Deployability,release,release,9169,". scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Queries. Queries#; This module provides useful queries for annotation and enrichment. queries.biomart_annotations; Retrieve gene annotations from ensembl biomart. queries.gene_coordinates; Retrieve gene coordinates for specific organism through BioMart. queries.mitochondrial_genes; Mitochondrial gene symbols for specific organism through BioMart. queries.enrich; Get enrichment for DE results. previous; scanpy.get.aggregate. next; scanpy.queries.biomart_annotations. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/queries.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/queries.html
https://scanpy.readthedocs.io/en/stable/api/queries.html:7161,Performance,cache,cachedir,7161,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/api/queries.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/queries.html
https://scanpy.readthedocs.io/en/stable/api/queries.html:8402,Security,hash,hashsolo,8402,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Queries. Queries#; This module provides useful queries for annotation and enrichment. queries.biomart_annotations; Retrieve gene annotations from ensembl biomart. queries.gene_coordinates; Retriev,MatchSource.WIKI,en/stable/api/queries.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/queries.html
https://scanpy.readthedocs.io/en/stable/api/queries.html:7429,Testability,log,logfile,7429,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/api/queries.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/queries.html
https://scanpy.readthedocs.io/en/stable/api/queries.html:7468,Testability,log,logpath,7468,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/api/queries.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/queries.html
https://scanpy.readthedocs.io/en/stable/api/queries.html:7774,Testability,log,logging,7774,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/api/queries.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/queries.html
https://scanpy.readthedocs.io/en/stable/api/queries.html:7803,Testability,log,logging,7803, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/api/queries.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/queries.html
https://scanpy.readthedocs.io/en/stable/api/reading.html:8085,Deployability,toggle,toggleswitch,8085,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/api/reading.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/reading.html
https://scanpy.readthedocs.io/en/stable/api/reading.html:9169,Deployability,release,release,9169,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Reading. Reading#. Note; For reading annotation use pandas.read_…; and add it to your anndata.AnnData object. The following read functions are; intended for the numeric data in the data matrix X. Read common file formats using. read; Read file and return AnnData object. Read 10x formatted hdf5 files and directories containing .mtx files using. read_10x_h5; Read 10x-Genomics-formatted hdf5 file. read_10x_mtx; Read 10x-Genomics-formatted mtx directory. read_visium; Read 10x-Genomics-formatted visum dataset. Read other formats using functions borrowed from anndata. read_h5ad; Read .h5ad-formatted hdf5 file. read_csv; Read .csv file. read_excel; Read .xlsx (Excel) file. read_hdf; Read .h5 (hdf5) file. read_loom; Read .loom-formatted hdf5 file. read_mtx; Read .mtx file. read_text; Read .txt, .tab, .data (text) file. read_umi_tools; Read a gzipped condensed count matrix from umi_to",MatchSource.WIKI,en/stable/api/reading.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/reading.html
https://scanpy.readthedocs.io/en/stable/api/reading.html:7161,Performance,cache,cachedir,7161,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/api/reading.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/reading.html
https://scanpy.readthedocs.io/en/stable/api/reading.html:8402,Security,hash,hashsolo,8402,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Reading. Reading#. Note; For reading annotation use pandas.read_…; and add it to your anndata.AnnData object. The following read functions are; intended for the numeric data in the data matrix X. ,MatchSource.WIKI,en/stable/api/reading.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/reading.html
https://scanpy.readthedocs.io/en/stable/api/reading.html:7429,Testability,log,logfile,7429,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/api/reading.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/reading.html
https://scanpy.readthedocs.io/en/stable/api/reading.html:7468,Testability,log,logpath,7468,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/api/reading.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/reading.html
https://scanpy.readthedocs.io/en/stable/api/reading.html:7774,Testability,log,logging,7774,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/api/reading.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/reading.html
https://scanpy.readthedocs.io/en/stable/api/reading.html:7803,Testability,log,logging,7803, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/api/reading.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/reading.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:9487,Availability,avail,available,9487,"y.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Settings. Settings#; A convenience function for setting some default matplotlib.rcParams and a; high-resolution jupyter display backend useful for use in notebooks. set_figure_params; Set resolution/size, styling and format of figures. An instance of the ScanpyConfig is available as scanpy.settings and allows configuring Scanpy. _settings.ScanpyConfig; Config manager for scanpy. Some selected settings are discussed in the following.; Influence the global behavior of plotting functions. In non-interactive scripts,; you’d usually want to set settings.autoshow to False. autoshow; Automatically show figures if autosave == False (default True). autosave; Automatically save figures in figdir (default False). The default directories for saving figures, caching files and storing datasets. figdir; Directory for saving figures (default './figures/'). cachedir; Directory for cache files (default './cache/'). datasetdir; Directory for example datasets (default './data/'). The verbosity of logging output, where verbosity levels have the following; meaning: 0=’error’, 1=’warning’, 2=’info’, 3=’hint’, 4=more details, 5=even more; details, etc. verbosity; Verbosity level (default warning). Print versions of packages that might influence numerical results. log",MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:10279,Availability,error,error,10279,".cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Settings. Settings#; A convenience function for setting some default matplotlib.rcParams and a; high-resolution jupyter display backend useful for use in notebooks. set_figure_params; Set resolution/size, styling and format of figures. An instance of the ScanpyConfig is available as scanpy.settings and allows configuring Scanpy. _settings.ScanpyConfig; Config manager for scanpy. Some selected settings are discussed in the following.; Influence the global behavior of plotting functions. In non-interactive scripts,; you’d usually want to set settings.autoshow to False. autoshow; Automatically show figures if autosave == False (default True). autosave; Automatically save figures in figdir (default False). The default directories for saving figures, caching files and storing datasets. figdir; Directory for saving figures (default './figures/'). cachedir; Directory for cache files (default './cache/'). datasetdir; Directory for example datasets (default './data/'). The verbosity of logging output, where verbosity levels have the following; meaning: 0=’error’, 1=’warning’, 2=’info’, 3=’hint’, 4=more details, 5=even more; details, etc. verbosity; Verbosity level (default warning). Print versions of packages that might influence numerical results. logging.print_header; Versions that might influence the numerical results. logging.print_versions; Print versions of imported packages, OS, and jupyter environment. previous; scanpy.Neighbors.to_igraph. next; scanpy.set_figure_params. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:8086,Deployability,toggle,toggleswitch,8086,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:9170,Deployability,release,release,9170,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Settings. Settings#; A convenience function for setting some default matplotlib.rcParams and a; high-resolution jupyter display backend useful for use in notebooks. set_figure_params; Set resolution/size, styling and format of figures. An instance of the ScanpyConfig is available as scanpy.settings and allows configuring Scanpy. _settings.ScanpyConfig; Config manager for scanpy. Some selected settings are discussed in the following.; Influence the global behavior of plotting functions. In non-interactive scripts,; you’d usually want to set settings.autoshow to False. autoshow; Automatically show figures if autosave == False (default True). autosave; Automatically save figures in figdir (default False). The default directories for saving figures, caching files and storing datasets. figdir; Directory for saving figures (default './figures/'). cachedir; Directory for cache files",MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:9527,Modifiability,config,configuring,9527,"r; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Settings. Settings#; A convenience function for setting some default matplotlib.rcParams and a; high-resolution jupyter display backend useful for use in notebooks. set_figure_params; Set resolution/size, styling and format of figures. An instance of the ScanpyConfig is available as scanpy.settings and allows configuring Scanpy. _settings.ScanpyConfig; Config manager for scanpy. Some selected settings are discussed in the following.; Influence the global behavior of plotting functions. In non-interactive scripts,; you’d usually want to set settings.autoshow to False. autoshow; Automatically show figures if autosave == False (default True). autosave; Automatically save figures in figdir (default False). The default directories for saving figures, caching files and storing datasets. figdir; Directory for saving figures (default './figures/'). cachedir; Directory for cache files (default './cache/'). datasetdir; Directory for example datasets (default './data/'). The verbosity of logging output, where verbosity levels have the following; meaning: 0=’error’, 1=’warning’, 2=’info’, 3=’hint’, 4=more details, 5=even more; details, etc. verbosity; Verbosity level (default warning). Print versions of packages that might influence numerical results. logging.print_header; Versions that might influence",MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:7162,Performance,cache,cachedir,7162,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:10069,Performance,cache,cachedir,10069,".cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Settings. Settings#; A convenience function for setting some default matplotlib.rcParams and a; high-resolution jupyter display backend useful for use in notebooks. set_figure_params; Set resolution/size, styling and format of figures. An instance of the ScanpyConfig is available as scanpy.settings and allows configuring Scanpy. _settings.ScanpyConfig; Config manager for scanpy. Some selected settings are discussed in the following.; Influence the global behavior of plotting functions. In non-interactive scripts,; you’d usually want to set settings.autoshow to False. autoshow; Automatically show figures if autosave == False (default True). autosave; Automatically save figures in figdir (default False). The default directories for saving figures, caching files and storing datasets. figdir; Directory for saving figures (default './figures/'). cachedir; Directory for cache files (default './cache/'). datasetdir; Directory for example datasets (default './data/'). The verbosity of logging output, where verbosity levels have the following; meaning: 0=’error’, 1=’warning’, 2=’info’, 3=’hint’, 4=more details, 5=even more; details, etc. verbosity; Verbosity level (default warning). Print versions of packages that might influence numerical results. logging.print_header; Versions that might influence the numerical results. logging.print_versions; Print versions of imported packages, OS, and jupyter environment. previous; scanpy.Neighbors.to_igraph. next; scanpy.set_figure_params. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:10093,Performance,cache,cache,10093,".cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Settings. Settings#; A convenience function for setting some default matplotlib.rcParams and a; high-resolution jupyter display backend useful for use in notebooks. set_figure_params; Set resolution/size, styling and format of figures. An instance of the ScanpyConfig is available as scanpy.settings and allows configuring Scanpy. _settings.ScanpyConfig; Config manager for scanpy. Some selected settings are discussed in the following.; Influence the global behavior of plotting functions. In non-interactive scripts,; you’d usually want to set settings.autoshow to False. autoshow; Automatically show figures if autosave == False (default True). autosave; Automatically save figures in figdir (default False). The default directories for saving figures, caching files and storing datasets. figdir; Directory for saving figures (default './figures/'). cachedir; Directory for cache files (default './cache/'). datasetdir; Directory for example datasets (default './data/'). The verbosity of logging output, where verbosity levels have the following; meaning: 0=’error’, 1=’warning’, 2=’info’, 3=’hint’, 4=more details, 5=even more; details, etc. verbosity; Verbosity level (default warning). Print versions of packages that might influence numerical results. logging.print_header; Versions that might influence the numerical results. logging.print_versions; Print versions of imported packages, OS, and jupyter environment. previous; scanpy.Neighbors.to_igraph. next; scanpy.set_figure_params. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:10117,Performance,cache,cache,10117,".cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Settings. Settings#; A convenience function for setting some default matplotlib.rcParams and a; high-resolution jupyter display backend useful for use in notebooks. set_figure_params; Set resolution/size, styling and format of figures. An instance of the ScanpyConfig is available as scanpy.settings and allows configuring Scanpy. _settings.ScanpyConfig; Config manager for scanpy. Some selected settings are discussed in the following.; Influence the global behavior of plotting functions. In non-interactive scripts,; you’d usually want to set settings.autoshow to False. autoshow; Automatically show figures if autosave == False (default True). autosave; Automatically save figures in figdir (default False). The default directories for saving figures, caching files and storing datasets. figdir; Directory for saving figures (default './figures/'). cachedir; Directory for cache files (default './cache/'). datasetdir; Directory for example datasets (default './data/'). The verbosity of logging output, where verbosity levels have the following; meaning: 0=’error’, 1=’warning’, 2=’info’, 3=’hint’, 4=more details, 5=even more; details, etc. verbosity; Verbosity level (default warning). Print versions of packages that might influence numerical results. logging.print_header; Versions that might influence the numerical results. logging.print_versions; Print versions of imported packages, OS, and jupyter environment. previous; scanpy.Neighbors.to_igraph. next; scanpy.set_figure_params. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:8403,Security,hash,hashsolo,8403,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Settings. Settings#; A convenience function for setting some default matplotlib.rcParams and a; high-resolution jupyter display backend useful for use in notebooks. set_figure_params; Set resoluti,MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:7430,Testability,log,logfile,7430,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:7469,Testability,log,logpath,7469,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:7775,Testability,log,logging,7775,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:7804,Testability,log,logging,7804, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:10208,Testability,log,logging,10208,".cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Settings. Settings#; A convenience function for setting some default matplotlib.rcParams and a; high-resolution jupyter display backend useful for use in notebooks. set_figure_params; Set resolution/size, styling and format of figures. An instance of the ScanpyConfig is available as scanpy.settings and allows configuring Scanpy. _settings.ScanpyConfig; Config manager for scanpy. Some selected settings are discussed in the following.; Influence the global behavior of plotting functions. In non-interactive scripts,; you’d usually want to set settings.autoshow to False. autoshow; Automatically show figures if autosave == False (default True). autosave; Automatically save figures in figdir (default False). The default directories for saving figures, caching files and storing datasets. figdir; Directory for saving figures (default './figures/'). cachedir; Directory for cache files (default './cache/'). datasetdir; Directory for example datasets (default './data/'). The verbosity of logging output, where verbosity levels have the following; meaning: 0=’error’, 1=’warning’, 2=’info’, 3=’hint’, 4=more details, 5=even more; details, etc. verbosity; Verbosity level (default warning). Print versions of packages that might influence numerical results. logging.print_header; Versions that might influence the numerical results. logging.print_versions; Print versions of imported packages, OS, and jupyter environment. previous; scanpy.Neighbors.to_igraph. next; scanpy.set_figure_params. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:10476,Testability,log,logging,10476,".cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Settings. Settings#; A convenience function for setting some default matplotlib.rcParams and a; high-resolution jupyter display backend useful for use in notebooks. set_figure_params; Set resolution/size, styling and format of figures. An instance of the ScanpyConfig is available as scanpy.settings and allows configuring Scanpy. _settings.ScanpyConfig; Config manager for scanpy. Some selected settings are discussed in the following.; Influence the global behavior of plotting functions. In non-interactive scripts,; you’d usually want to set settings.autoshow to False. autoshow; Automatically show figures if autosave == False (default True). autosave; Automatically save figures in figdir (default False). The default directories for saving figures, caching files and storing datasets. figdir; Directory for saving figures (default './figures/'). cachedir; Directory for cache files (default './cache/'). datasetdir; Directory for example datasets (default './data/'). The verbosity of logging output, where verbosity levels have the following; meaning: 0=’error’, 1=’warning’, 2=’info’, 3=’hint’, 4=more details, 5=even more; details, etc. verbosity; Verbosity level (default warning). Print versions of packages that might influence numerical results. logging.print_header; Versions that might influence the numerical results. logging.print_versions; Print versions of imported packages, OS, and jupyter environment. previous; scanpy.Neighbors.to_igraph. next; scanpy.set_figure_params. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/settings.html:10551,Testability,log,logging,10551,".cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Settings. Settings#; A convenience function for setting some default matplotlib.rcParams and a; high-resolution jupyter display backend useful for use in notebooks. set_figure_params; Set resolution/size, styling and format of figures. An instance of the ScanpyConfig is available as scanpy.settings and allows configuring Scanpy. _settings.ScanpyConfig; Config manager for scanpy. Some selected settings are discussed in the following.; Influence the global behavior of plotting functions. In non-interactive scripts,; you’d usually want to set settings.autoshow to False. autoshow; Automatically show figures if autosave == False (default True). autosave; Automatically save figures in figdir (default False). The default directories for saving figures, caching files and storing datasets. figdir; Directory for saving figures (default './figures/'). cachedir; Directory for cache files (default './cache/'). datasetdir; Directory for example datasets (default './data/'). The verbosity of logging output, where verbosity levels have the following; meaning: 0=’error’, 1=’warning’, 2=’info’, 3=’hint’, 4=more details, 5=even more; details, etc. verbosity; Verbosity level (default warning). Print versions of packages that might influence numerical results. logging.print_header; Versions that might influence the numerical results. logging.print_versions; Print versions of imported packages, OS, and jupyter environment. previous; scanpy.Neighbors.to_igraph. next; scanpy.set_figure_params. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/settings.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/settings.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:8087,Deployability,toggle,toggleswitch,8087,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:9171,Deployability,release,release,9171,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tools: tl. Contents . Embeddings. Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. Tools: tl#; Any transformation of the data matrix that is not preprocessing. In contrast to a preprocessing function, a tool usually adds an easily interpretable annotation to the data matrix, which can then be visualized with a corresponding plotting function. Embeddings#. pp.pca; Principal component analysis [Pedregosa et al., 2011]. tl.tsne; t-SNE [Amir et al., 2013, Pedregosa et al., 2011, van der Maaten and Hinton, 2008]. tl.umap; Embed the neighborhood graph using UMAP [McInnes et al., 2018]. tl.draw_graph; Force-directed graph drawing [Chippada, 2018, Islam et al., 2011, Jacomy et al., 2014]. tl.diffmap; Diffusion Maps [Coifman et al., 2005, Haghverdi et al., 2015, Wolf et al., 2018]. Compute densities on embeddings. tl.embedding_",MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:9293,Deployability,integrat,integration,9293,"ntegrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tools: tl. Contents . Embeddings. Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. Tools: tl#; Any transformation of the data matrix that is not preprocessing. In contrast to a preprocessing function, a tool usually adds an easily interpretable annotation to the data matrix, which can then be visualized with a corresponding plotting function. Embeddings#. pp.pca; Principal component analysis [Pedregosa et al., 2011]. tl.tsne; t-SNE [Amir et al., 2013, Pedregosa et al., 2011, van der Maaten and Hinton, 2008]. tl.umap; Embed the neighborhood graph using UMAP [McInnes et al., 2018]. tl.draw_graph; Force-directed graph drawing [Chippada, 2018, Islam et al., 2011, Jacomy et al., 2014]. tl.diffmap; Diffusion Maps [Coifman et al., 2005, Haghverdi et al., 2015, Wolf et al., 2018]. Compute densities on embeddings. tl.embedding_density; Calculate the density of cells in an embedding (per condition). Clustering and trajectory inference#. tl.leiden; Cluster cells into subgroups [Traag et al., 2019]. tl.louvain; Cluster cells ",MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:10694,Deployability,integrat,integration,10694,"cipal component analysis [Pedregosa et al., 2011]. tl.tsne; t-SNE [Amir et al., 2013, Pedregosa et al., 2011, van der Maaten and Hinton, 2008]. tl.umap; Embed the neighborhood graph using UMAP [McInnes et al., 2018]. tl.draw_graph; Force-directed graph drawing [Chippada, 2018, Islam et al., 2011, Jacomy et al., 2014]. tl.diffmap; Diffusion Maps [Coifman et al., 2005, Haghverdi et al., 2015, Wolf et al., 2018]. Compute densities on embeddings. tl.embedding_density; Calculate the density of cells in an embedding (per condition). Clustering and trajectory inference#. tl.leiden; Cluster cells into subgroups [Traag et al., 2019]. tl.louvain; Cluster cells into subgroups [Blondel et al., 2008, Levine et al., 2015, Traag, 2015]. tl.dendrogram; Computes a hierarchical clustering for the given groupby categories. tl.dpt; Infer progression of cells through geodesic distance along the graph [Haghverdi et al., 2016, Wolf et al., 2019]. tl.paga; Mapping out the coarse-grained connectivity structures of complex manifolds [Wolf et al., 2019]. Data integration#. tl.ingest; Map labels and embeddings from reference data to new data. Marker genes#. tl.rank_genes_groups; Rank genes for characterizing groups. tl.filter_rank_genes_groups; Filters out genes based on log fold change and fraction of genes expressing the gene within and outside the groupby categories. tl.marker_gene_overlap; Calculate an overlap score between data-deriven marker genes and provided markers. Gene scores, Cell cycle#. tl.score_genes; Score a set of genes [Satija et al., 2015]. tl.score_genes_cell_cycle; Score cell cycle genes [Satija et al., 2015]. Simulations#. tl.sim; Simulate dynamic gene expression data [Wittmann et al., 2009] [Wolf et al., 2018]. previous; scanpy.pp.neighbors. next; scanpy.tl.tsne. Contents; . Embeddings. Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:11500,Deployability,integrat,integration,11500,"cipal component analysis [Pedregosa et al., 2011]. tl.tsne; t-SNE [Amir et al., 2013, Pedregosa et al., 2011, van der Maaten and Hinton, 2008]. tl.umap; Embed the neighborhood graph using UMAP [McInnes et al., 2018]. tl.draw_graph; Force-directed graph drawing [Chippada, 2018, Islam et al., 2011, Jacomy et al., 2014]. tl.diffmap; Diffusion Maps [Coifman et al., 2005, Haghverdi et al., 2015, Wolf et al., 2018]. Compute densities on embeddings. tl.embedding_density; Calculate the density of cells in an embedding (per condition). Clustering and trajectory inference#. tl.leiden; Cluster cells into subgroups [Traag et al., 2019]. tl.louvain; Cluster cells into subgroups [Blondel et al., 2008, Levine et al., 2015, Traag, 2015]. tl.dendrogram; Computes a hierarchical clustering for the given groupby categories. tl.dpt; Infer progression of cells through geodesic distance along the graph [Haghverdi et al., 2016, Wolf et al., 2019]. tl.paga; Mapping out the coarse-grained connectivity structures of complex manifolds [Wolf et al., 2019]. Data integration#. tl.ingest; Map labels and embeddings from reference data to new data. Marker genes#. tl.rank_genes_groups; Rank genes for characterizing groups. tl.filter_rank_genes_groups; Filters out genes based on log fold change and fraction of genes expressing the gene within and outside the groupby categories. tl.marker_gene_overlap; Calculate an overlap score between data-deriven marker genes and provided markers. Gene scores, Cell cycle#. tl.score_genes; Score a set of genes [Satija et al., 2015]. tl.score_genes_cell_cycle; Score cell cycle genes [Satija et al., 2015]. Simulations#. tl.sim; Simulate dynamic gene expression data [Wittmann et al., 2009] [Wolf et al., 2018]. previous; scanpy.pp.neighbors. next; scanpy.tl.tsne. Contents; . Embeddings. Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:9293,Integrability,integrat,integration,9293,"ntegrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tools: tl. Contents . Embeddings. Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. Tools: tl#; Any transformation of the data matrix that is not preprocessing. In contrast to a preprocessing function, a tool usually adds an easily interpretable annotation to the data matrix, which can then be visualized with a corresponding plotting function. Embeddings#. pp.pca; Principal component analysis [Pedregosa et al., 2011]. tl.tsne; t-SNE [Amir et al., 2013, Pedregosa et al., 2011, van der Maaten and Hinton, 2008]. tl.umap; Embed the neighborhood graph using UMAP [McInnes et al., 2018]. tl.draw_graph; Force-directed graph drawing [Chippada, 2018, Islam et al., 2011, Jacomy et al., 2014]. tl.diffmap; Diffusion Maps [Coifman et al., 2005, Haghverdi et al., 2015, Wolf et al., 2018]. Compute densities on embeddings. tl.embedding_density; Calculate the density of cells in an embedding (per condition). Clustering and trajectory inference#. tl.leiden; Cluster cells into subgroups [Traag et al., 2019]. tl.louvain; Cluster cells ",MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:10694,Integrability,integrat,integration,10694,"cipal component analysis [Pedregosa et al., 2011]. tl.tsne; t-SNE [Amir et al., 2013, Pedregosa et al., 2011, van der Maaten and Hinton, 2008]. tl.umap; Embed the neighborhood graph using UMAP [McInnes et al., 2018]. tl.draw_graph; Force-directed graph drawing [Chippada, 2018, Islam et al., 2011, Jacomy et al., 2014]. tl.diffmap; Diffusion Maps [Coifman et al., 2005, Haghverdi et al., 2015, Wolf et al., 2018]. Compute densities on embeddings. tl.embedding_density; Calculate the density of cells in an embedding (per condition). Clustering and trajectory inference#. tl.leiden; Cluster cells into subgroups [Traag et al., 2019]. tl.louvain; Cluster cells into subgroups [Blondel et al., 2008, Levine et al., 2015, Traag, 2015]. tl.dendrogram; Computes a hierarchical clustering for the given groupby categories. tl.dpt; Infer progression of cells through geodesic distance along the graph [Haghverdi et al., 2016, Wolf et al., 2019]. tl.paga; Mapping out the coarse-grained connectivity structures of complex manifolds [Wolf et al., 2019]. Data integration#. tl.ingest; Map labels and embeddings from reference data to new data. Marker genes#. tl.rank_genes_groups; Rank genes for characterizing groups. tl.filter_rank_genes_groups; Filters out genes based on log fold change and fraction of genes expressing the gene within and outside the groupby categories. tl.marker_gene_overlap; Calculate an overlap score between data-deriven marker genes and provided markers. Gene scores, Cell cycle#. tl.score_genes; Score a set of genes [Satija et al., 2015]. tl.score_genes_cell_cycle; Score cell cycle genes [Satija et al., 2015]. Simulations#. tl.sim; Simulate dynamic gene expression data [Wittmann et al., 2009] [Wolf et al., 2018]. previous; scanpy.pp.neighbors. next; scanpy.tl.tsne. Contents; . Embeddings. Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:11500,Integrability,integrat,integration,11500,"cipal component analysis [Pedregosa et al., 2011]. tl.tsne; t-SNE [Amir et al., 2013, Pedregosa et al., 2011, van der Maaten and Hinton, 2008]. tl.umap; Embed the neighborhood graph using UMAP [McInnes et al., 2018]. tl.draw_graph; Force-directed graph drawing [Chippada, 2018, Islam et al., 2011, Jacomy et al., 2014]. tl.diffmap; Diffusion Maps [Coifman et al., 2005, Haghverdi et al., 2015, Wolf et al., 2018]. Compute densities on embeddings. tl.embedding_density; Calculate the density of cells in an embedding (per condition). Clustering and trajectory inference#. tl.leiden; Cluster cells into subgroups [Traag et al., 2019]. tl.louvain; Cluster cells into subgroups [Blondel et al., 2008, Levine et al., 2015, Traag, 2015]. tl.dendrogram; Computes a hierarchical clustering for the given groupby categories. tl.dpt; Infer progression of cells through geodesic distance along the graph [Haghverdi et al., 2016, Wolf et al., 2019]. tl.paga; Mapping out the coarse-grained connectivity structures of complex manifolds [Wolf et al., 2019]. Data integration#. tl.ingest; Map labels and embeddings from reference data to new data. Marker genes#. tl.rank_genes_groups; Rank genes for characterizing groups. tl.filter_rank_genes_groups; Filters out genes based on log fold change and fraction of genes expressing the gene within and outside the groupby categories. tl.marker_gene_overlap; Calculate an overlap score between data-deriven marker genes and provided markers. Gene scores, Cell cycle#. tl.score_genes; Score a set of genes [Satija et al., 2015]. tl.score_genes_cell_cycle; Score cell cycle genes [Satija et al., 2015]. Simulations#. tl.sim; Simulate dynamic gene expression data [Wittmann et al., 2009] [Wolf et al., 2018]. previous; scanpy.pp.neighbors. next; scanpy.tl.tsne. Contents; . Embeddings. Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:7163,Performance,cache,cachedir,7163,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:8404,Security,hash,hashsolo,8404,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tools: tl. Contents . Embeddings. Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. Tools: tl#; Any transformation of the data matrix that ",MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:7431,Testability,log,logfile,7431,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:7470,Testability,log,logpath,7470,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:7776,Testability,log,logging,7776,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:7805,Testability,log,logging,7805, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/api/tools.html:10909,Testability,log,log,10909,"cipal component analysis [Pedregosa et al., 2011]. tl.tsne; t-SNE [Amir et al., 2013, Pedregosa et al., 2011, van der Maaten and Hinton, 2008]. tl.umap; Embed the neighborhood graph using UMAP [McInnes et al., 2018]. tl.draw_graph; Force-directed graph drawing [Chippada, 2018, Islam et al., 2011, Jacomy et al., 2014]. tl.diffmap; Diffusion Maps [Coifman et al., 2005, Haghverdi et al., 2015, Wolf et al., 2018]. Compute densities on embeddings. tl.embedding_density; Calculate the density of cells in an embedding (per condition). Clustering and trajectory inference#. tl.leiden; Cluster cells into subgroups [Traag et al., 2019]. tl.louvain; Cluster cells into subgroups [Blondel et al., 2008, Levine et al., 2015, Traag, 2015]. tl.dendrogram; Computes a hierarchical clustering for the given groupby categories. tl.dpt; Infer progression of cells through geodesic distance along the graph [Haghverdi et al., 2016, Wolf et al., 2019]. tl.paga; Mapping out the coarse-grained connectivity structures of complex manifolds [Wolf et al., 2019]. Data integration#. tl.ingest; Map labels and embeddings from reference data to new data. Marker genes#. tl.rank_genes_groups; Rank genes for characterizing groups. tl.filter_rank_genes_groups; Filters out genes based on log fold change and fraction of genes expressing the gene within and outside the groupby categories. tl.marker_gene_overlap; Calculate an overlap score between data-deriven marker genes and provided markers. Gene scores, Cell cycle#. tl.score_genes; Score a set of genes [Satija et al., 2015]. tl.score_genes_cell_cycle; Score cell cycle genes [Satija et al., 2015]. Simulations#. tl.sim; Simulate dynamic gene expression data [Wittmann et al., 2009] [Wolf et al., 2018]. previous; scanpy.pp.neighbors. next; scanpy.tl.tsne. Contents; . Embeddings. Clustering and trajectory inference; Data integration; Marker genes; Gene scores, Cell cycle; Simulations. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/api/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/api/tools.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9820,Availability,down,download,9820,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:8080,Deployability,toggle,toggleswitch,8080,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9164,Deployability,release,release,9164,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plot",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9282,Deployability,pipeline,pipelines,9282,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9527,Deployability,pipeline,pipelines,9527,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9656,Deployability,pipeline,pipelines,9656,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:10127,Deployability,pipeline,pipelines,10127,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:7156,Performance,cache,cachedir,7156,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:8397,Security,hash,hashsolo,8397,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’,MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:7424,Testability,log,logfile,7424,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:7463,Testability,log,logpath,7463,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:7769,Testability,log,logging,7769,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:7798,Testability,log,logging,7798, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9234,Testability,test,tests,9234,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9267,Testability,test,tests,9267,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9313,Testability,test,tests,9313,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9347,Testability,test,testing,9347,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9512,Testability,test,tests,9512,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9614,Testability,test,tests,9614,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9666,Testability,test,test,9666,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9711,Testability,test,tests,9711,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9757,Testability,test,test,9757,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:9911,Testability,test,testing,9911,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:10079,Testability,test,tests,10079,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/ci.html:10112,Testability,test,tests,10112,"reprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. CI. Contents . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. CI#. Plotting tests#; A frequent frustration in testing is the reproducibility of the plots and matplotlib’s behaviour in different environments.; We have some tooling to help with this. Viewing plots from failed tests on Azure pipelines#; The fixtures check_same_image and image_comparer upload plots from failing tests so you can view them from the azure pipelines test viewer.; To find these, navigate to the tests tab for your build. Select your failing test. And open the attachments tab. From here you can view and download the images which were compared, as well as a diff between them. Misc#; matplotlib.testing.setup() tries to establish a consistent environment for creating plots. Make sure it’s active!. previous; Documentation. next; Versioning. Contents; . Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/ci.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/ci.html
https://scanpy.readthedocs.io/en/stable/dev/code.html:9849,Availability,error,errors,9849,"sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing code. Contents . Development workflow; Code style. Contributing code#. Development workflow#. Fork the Scanpy repository to your own GitHub account; Create a development environment; Create a new branch for your PR; Add your feature or bugfix to the codebase; Make sure all tests are passing; Build and visually check any changed documentation; Open a PR back to the main repository. Code style#; Code contributions will be formatted and style checked using Ruff.; Ignored checks are configured in the tool.ruff.lint section of pyproject.toml.; To learn how to ignore checks per line please read about ignoring errors.; Additionally, we use Scanpy’s EditorConfig,; so using an editor/IDE with support for both is helpful. previous; Contributing. next; Getting set up. Contents; . Development workflow; Code style. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/code.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/code.html
https://scanpy.readthedocs.io/en/stable/dev/code.html:8095,Deployability,toggle,toggleswitch,8095,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/dev/code.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/code.html
https://scanpy.readthedocs.io/en/stable/dev/code.html:9179,Deployability,release,release,9179,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing code. Contents . Development workflow; Code style. Contributing code#. Development workflow#. Fork the Scanpy repository to your own GitHub account; Create a development environment; Create a new branch for your PR; Add your feature or bugfix to the codebase; Make sure all tests are passing; Build and visually check any changed documentation; Open a PR back to the main repository. Code style#; Code contributions will be formatted and style checked using Ruff.; Ignored checks are configured in the tool.ruff.lint section of pyproject.toml.; To learn how to ignore checks per line please read about ignoring errors.; Additionally, we use Scanpy’s EditorConfig,; so using an editor/IDE with support for both is helpful. previous; Contributing. next; Getting set up. Contents; . Development workflow; Code style. By Scanpy development team. ; © Copyright 2024, the Scanpy de",MatchSource.WIKI,en/stable/dev/code.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/code.html
https://scanpy.readthedocs.io/en/stable/dev/code.html:9722,Modifiability,config,configured,9722,"sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing code. Contents . Development workflow; Code style. Contributing code#. Development workflow#. Fork the Scanpy repository to your own GitHub account; Create a development environment; Create a new branch for your PR; Add your feature or bugfix to the codebase; Make sure all tests are passing; Build and visually check any changed documentation; Open a PR back to the main repository. Code style#; Code contributions will be formatted and style checked using Ruff.; Ignored checks are configured in the tool.ruff.lint section of pyproject.toml.; To learn how to ignore checks per line please read about ignoring errors.; Additionally, we use Scanpy’s EditorConfig,; so using an editor/IDE with support for both is helpful. previous; Contributing. next; Getting set up. Contents; . Development workflow; Code style. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/code.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/code.html
https://scanpy.readthedocs.io/en/stable/dev/code.html:7171,Performance,cache,cachedir,7171,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/dev/code.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/code.html
https://scanpy.readthedocs.io/en/stable/dev/code.html:8412,Security,hash,hashsolo,8412,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing code. Contents . Development workflow; Code style. Contributing code#. Development workflow#. Fork the Scanpy repository to your own GitHub account; Create a development environment; ,MatchSource.WIKI,en/stable/dev/code.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/code.html
https://scanpy.readthedocs.io/en/stable/dev/code.html:7439,Testability,log,logfile,7439,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/dev/code.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/code.html
https://scanpy.readthedocs.io/en/stable/dev/code.html:7478,Testability,log,logpath,7478,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/dev/code.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/code.html
https://scanpy.readthedocs.io/en/stable/dev/code.html:7784,Testability,log,logging,7784,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/dev/code.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/code.html
https://scanpy.readthedocs.io/en/stable/dev/code.html:7813,Testability,log,logging,7813, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/dev/code.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/code.html
https://scanpy.readthedocs.io/en/stable/dev/code.html:9512,Testability,test,tests,9512,"sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing code. Contents . Development workflow; Code style. Contributing code#. Development workflow#. Fork the Scanpy repository to your own GitHub account; Create a development environment; Create a new branch for your PR; Add your feature or bugfix to the codebase; Make sure all tests are passing; Build and visually check any changed documentation; Open a PR back to the main repository. Code style#; Code contributions will be formatted and style checked using Ruff.; Ignored checks are configured in the tool.ruff.lint section of pyproject.toml.; To learn how to ignore checks per line please read about ignoring errors.; Additionally, we use Scanpy’s EditorConfig,; so using an editor/IDE with support for both is helpful. previous; Contributing. next; Getting set up. Contents; . Development workflow; Code style. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/code.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/code.html
https://scanpy.readthedocs.io/en/stable/dev/code.html:9786,Usability,learn,learn,9786,"sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing code. Contents . Development workflow; Code style. Contributing code#. Development workflow#. Fork the Scanpy repository to your own GitHub account; Create a development environment; Create a new branch for your PR; Add your feature or bugfix to the codebase; Make sure all tests are passing; Build and visually check any changed documentation; Open a PR back to the main repository. Code style#; Code contributions will be formatted and style checked using Ruff.; Ignored checks are configured in the tool.ruff.lint section of pyproject.toml.; To learn how to ignore checks per line please read about ignoring errors.; Additionally, we use Scanpy’s EditorConfig,; so using an editor/IDE with support for both is helpful. previous; Contributing. next; Getting set up. Contents; . Development workflow; Code style. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/code.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/code.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:12466,Availability,down,downloaded,12466,"with a sentence per line (for easier git diffs).; Check that the docs look like what you expect them too! It’s easy to forget to add a reference to function, be sure it got added and looks right. Look at sc.tl.louvain as an example for everything mentioned here. Plots in docstrings#; One of the most useful things you can include in a docstring is examples of how the function should be used.; These are a great way to demonstrate intended usage and give users a template they can copy and modify.; We’re able to include the plots produced by these snippets in the rendered docs using matplotlib’s plot directive.; For examples of this, see the Examples sections of dotplot() or calculate_qc_metrics().; Note that anything in these sections will need to be run when the docs are built, so please keep them computationally light. If you need computed features (e.g. an embedding, differential expression results) load data that has this precomputed.; Try to re-use datasets, this reduces the amount of data that needs to be downloaded to the CI server. Params section#; The Params abbreviation is a legit replacement for Parameters.; To document parameter types use type annotations on function parameters.; These will automatically populate the docstrings on import, and when the documentation is built.; Use the python standard library types (defined in collections.abc and typing modules) for containers, e.g.; Sequences (like list),; Iterables (like set), and; Mappings (like dict).; Always specify what these contain, e.g. {'a': (1, 2)} → Mapping[str, Tuple[int, int]].; If you can’t use one of those, use a concrete class like AnnData.; If your parameter only accepts an enumeration of strings, specify them like so: Literal['elem-1', 'elem-2']. Returns section#; There are three types of return sections – prose, tuple, and a mix of both. Prose is for simple cases.; Tuple return sections are formatted like parameters. Other than in numpydoc, each tuple is first characterized by the identifie",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:8091,Deployability,toggle,toggleswitch,8091,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:9175,Deployability,release,release,9175,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Documentation. Contents . Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. Documentation#. Building the docs#; To build the docs, run hatch run docs:build.; Afterwards, you can run hatch run docs:open to open docs/_build/html/index.html.; Your browser and Sphinx cache docs which have been built previously.; Sometimes these caches are not invalidated when you’ve updated the docs.; If docs are not updating the way you expect, first try “force reloading” your browser page – e.g. reload the page without using the cache.; Next, if problems persist, clear the sphinx cache (hatch run docs:clean) and try building them again. Adding to the docs#; For any user-visible changes, please make sure a note has been added to the release notes using hatch run towncrier:create.; We recommend waiting on this until your PR i",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:9658,Deployability,update,updated,9658,"mony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Documentation. Contents . Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. Documentation#. Building the docs#; To build the docs, run hatch run docs:build.; Afterwards, you can run hatch run docs:open to open docs/_build/html/index.html.; Your browser and Sphinx cache docs which have been built previously.; Sometimes these caches are not invalidated when you’ve updated the docs.; If docs are not updating the way you expect, first try “force reloading” your browser page – e.g. reload the page without using the cache.; Next, if problems persist, clear the sphinx cache (hatch run docs:clean) and try building them again. Adding to the docs#; For any user-visible changes, please make sure a note has been added to the release notes using hatch run towncrier:create.; We recommend waiting on this until your PR is close to done since this can often causes merge conflicts.; Once you’ve added a new function to the documentation, you’ll need to make sure there is a link somewhere in the documentation site pointing to it.; This should be added to docs/api.md under a relevant heading.; For tutorials and more in depth examples, consider adding a notebook to the scanpy-tutorials repository.; The tutorials are tied to this repository via a submodule.; To update the submodule, run git submodule update --remote from the root of the repositor",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:10016,Deployability,release,release,10016,"oject; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Documentation. Contents . Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. Documentation#. Building the docs#; To build the docs, run hatch run docs:build.; Afterwards, you can run hatch run docs:open to open docs/_build/html/index.html.; Your browser and Sphinx cache docs which have been built previously.; Sometimes these caches are not invalidated when you’ve updated the docs.; If docs are not updating the way you expect, first try “force reloading” your browser page – e.g. reload the page without using the cache.; Next, if problems persist, clear the sphinx cache (hatch run docs:clean) and try building them again. Adding to the docs#; For any user-visible changes, please make sure a note has been added to the release notes using hatch run towncrier:create.; We recommend waiting on this until your PR is close to done since this can often causes merge conflicts.; Once you’ve added a new function to the documentation, you’ll need to make sure there is a link somewhere in the documentation site pointing to it.; This should be added to docs/api.md under a relevant heading.; For tutorials and more in depth examples, consider adding a notebook to the scanpy-tutorials repository.; The tutorials are tied to this repository via a submodule.; To update the submodule, run git submodule update --remote from the root of the repository.; Subsequently, commit and push the changes in a PR.; This should be done before each release to ensure the tutorials are up to date. docstrings format#; We use the numpydoc style for writing docstrings.; We’d primarily suggest looking at existing docstrings for examples, but the napolean guide to numpy style docstrings is also a great source.; If y",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:10552,Deployability,update,update,10552,"viously.; Sometimes these caches are not invalidated when you’ve updated the docs.; If docs are not updating the way you expect, first try “force reloading” your browser page – e.g. reload the page without using the cache.; Next, if problems persist, clear the sphinx cache (hatch run docs:clean) and try building them again. Adding to the docs#; For any user-visible changes, please make sure a note has been added to the release notes using hatch run towncrier:create.; We recommend waiting on this until your PR is close to done since this can often causes merge conflicts.; Once you’ve added a new function to the documentation, you’ll need to make sure there is a link somewhere in the documentation site pointing to it.; This should be added to docs/api.md under a relevant heading.; For tutorials and more in depth examples, consider adding a notebook to the scanpy-tutorials repository.; The tutorials are tied to this repository via a submodule.; To update the submodule, run git submodule update --remote from the root of the repository.; Subsequently, commit and push the changes in a PR.; This should be done before each release to ensure the tutorials are up to date. docstrings format#; We use the numpydoc style for writing docstrings.; We’d primarily suggest looking at existing docstrings for examples, but the napolean guide to numpy style docstrings is also a great source.; If you’re unfamiliar with the reStructuredText (rST) markup format, check out the Sphinx rST primer.; Some key points:. We have some custom sphinx extensions activated. When in doubt, try to copy the style of existing docstrings.; We autopopulate type information in docstrings when possible, so just add the type information to signatures.; When docs exist in the same file as code, line length restrictions still apply. In files which are just docs, go with a sentence per line (for easier git diffs).; Check that the docs look like what you expect them too! It’s easy to forget to add a reference to func",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:10592,Deployability,update,update,10592,"viously.; Sometimes these caches are not invalidated when you’ve updated the docs.; If docs are not updating the way you expect, first try “force reloading” your browser page – e.g. reload the page without using the cache.; Next, if problems persist, clear the sphinx cache (hatch run docs:clean) and try building them again. Adding to the docs#; For any user-visible changes, please make sure a note has been added to the release notes using hatch run towncrier:create.; We recommend waiting on this until your PR is close to done since this can often causes merge conflicts.; Once you’ve added a new function to the documentation, you’ll need to make sure there is a link somewhere in the documentation site pointing to it.; This should be added to docs/api.md under a relevant heading.; For tutorials and more in depth examples, consider adding a notebook to the scanpy-tutorials repository.; The tutorials are tied to this repository via a submodule.; To update the submodule, run git submodule update --remote from the root of the repository.; Subsequently, commit and push the changes in a PR.; This should be done before each release to ensure the tutorials are up to date. docstrings format#; We use the numpydoc style for writing docstrings.; We’d primarily suggest looking at existing docstrings for examples, but the napolean guide to numpy style docstrings is also a great source.; If you’re unfamiliar with the reStructuredText (rST) markup format, check out the Sphinx rST primer.; Some key points:. We have some custom sphinx extensions activated. When in doubt, try to copy the style of existing docstrings.; We autopopulate type information in docstrings when possible, so just add the type information to signatures.; When docs exist in the same file as code, line length restrictions still apply. In files which are just docs, go with a sentence per line (for easier git diffs).; Check that the docs look like what you expect them too! It’s easy to forget to add a reference to func",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:10726,Deployability,release,release,10726,"“force reloading” your browser page – e.g. reload the page without using the cache.; Next, if problems persist, clear the sphinx cache (hatch run docs:clean) and try building them again. Adding to the docs#; For any user-visible changes, please make sure a note has been added to the release notes using hatch run towncrier:create.; We recommend waiting on this until your PR is close to done since this can often causes merge conflicts.; Once you’ve added a new function to the documentation, you’ll need to make sure there is a link somewhere in the documentation site pointing to it.; This should be added to docs/api.md under a relevant heading.; For tutorials and more in depth examples, consider adding a notebook to the scanpy-tutorials repository.; The tutorials are tied to this repository via a submodule.; To update the submodule, run git submodule update --remote from the root of the repository.; Subsequently, commit and push the changes in a PR.; This should be done before each release to ensure the tutorials are up to date. docstrings format#; We use the numpydoc style for writing docstrings.; We’d primarily suggest looking at existing docstrings for examples, but the napolean guide to numpy style docstrings is also a great source.; If you’re unfamiliar with the reStructuredText (rST) markup format, check out the Sphinx rST primer.; Some key points:. We have some custom sphinx extensions activated. When in doubt, try to copy the style of existing docstrings.; We autopopulate type information in docstrings when possible, so just add the type information to signatures.; When docs exist in the same file as code, line length restrictions still apply. In files which are just docs, go with a sentence per line (for easier git diffs).; Check that the docs look like what you expect them too! It’s easy to forget to add a reference to function, be sure it got added and looks right. Look at sc.tl.louvain as an example for everything mentioned here. Plots in docstrings#; One of",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:13827,Deployability,update,updates,13827,".; Sequences (like list),; Iterables (like set), and; Mappings (like dict).; Always specify what these contain, e.g. {'a': (1, 2)} → Mapping[str, Tuple[int, int]].; If you can’t use one of those, use a concrete class like AnnData.; If your parameter only accepts an enumeration of strings, specify them like so: Literal['elem-1', 'elem-2']. Returns section#; There are three types of return sections – prose, tuple, and a mix of both. Prose is for simple cases.; Tuple return sections are formatted like parameters. Other than in numpydoc, each tuple is first characterized by the identifier and not by its type. Provide type annotation in the function header.; Mix of prose and tuple is relevant in complicated cases, e.g. when you want to describe that you added something as annotation to an `AnnData` object. Examples#; For simple cases, use prose as in normalize_total():; Returns; -------; Returns dictionary with normalized copies of `adata.X` and `adata.layers`; or updates `adata` with normalized versions of the original; `adata.X` and `adata.layers`, depending on `inplace`. For tuple return values, you can use the standard numpydoc way of populating it,; e.g. as in calculate_qc_metrics().; Do not add types in the docstring, but specify them in the function signature:; def myfunc(...) -> tuple[int, str]:; """"""; ...; Returns; -------; one_identifier; Description.; second_identifier; Description 2.; """"""; ... Many functions also just modify parts of the passed AnnData object, like e.g. dpt().; You can then combine prose and lists to best describe what happens:; Returns; -------; Depending on `copy`, returns or updates `adata` with the following fields. If `n_branchings==0`, no field `dpt_groups` will be written. dpt_pseudotime : :class:`~pandas.Series` (`adata.obs`, dtype `float`); Array of dim (number of samples) that stores the pseudotime of each; cell, that is, the DPT distance with respect to the root cell.; dpt_groups : :class:`pandas.Series` (`adata.obs`, dtype `category",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:14481,Deployability,update,updates,14481,"is for simple cases.; Tuple return sections are formatted like parameters. Other than in numpydoc, each tuple is first characterized by the identifier and not by its type. Provide type annotation in the function header.; Mix of prose and tuple is relevant in complicated cases, e.g. when you want to describe that you added something as annotation to an `AnnData` object. Examples#; For simple cases, use prose as in normalize_total():; Returns; -------; Returns dictionary with normalized copies of `adata.X` and `adata.layers`; or updates `adata` with normalized versions of the original; `adata.X` and `adata.layers`, depending on `inplace`. For tuple return values, you can use the standard numpydoc way of populating it,; e.g. as in calculate_qc_metrics().; Do not add types in the docstring, but specify them in the function signature:; def myfunc(...) -> tuple[int, str]:; """"""; ...; Returns; -------; one_identifier; Description.; second_identifier; Description 2.; """"""; ... Many functions also just modify parts of the passed AnnData object, like e.g. dpt().; You can then combine prose and lists to best describe what happens:; Returns; -------; Depending on `copy`, returns or updates `adata` with the following fields. If `n_branchings==0`, no field `dpt_groups` will be written. dpt_pseudotime : :class:`~pandas.Series` (`adata.obs`, dtype `float`); Array of dim (number of samples) that stores the pseudotime of each; cell, that is, the DPT distance with respect to the root cell.; dpt_groups : :class:`pandas.Series` (`adata.obs`, dtype `category`); Array of dim (number of samples) that stores the subgroup id ('0',; '1', ...) for each cell. The groups typically correspond to; 'progenitor cells', 'undecided cells' or 'branches' of a process. previous; Tests. next; CI. Contents; . Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:12422,Energy Efficiency,reduce,reduces,12422,"with a sentence per line (for easier git diffs).; Check that the docs look like what you expect them too! It’s easy to forget to add a reference to function, be sure it got added and looks right. Look at sc.tl.louvain as an example for everything mentioned here. Plots in docstrings#; One of the most useful things you can include in a docstring is examples of how the function should be used.; These are a great way to demonstrate intended usage and give users a template they can copy and modify.; We’re able to include the plots produced by these snippets in the rendered docs using matplotlib’s plot directive.; For examples of this, see the Examples sections of dotplot() or calculate_qc_metrics().; Note that anything in these sections will need to be run when the docs are built, so please keep them computationally light. If you need computed features (e.g. an embedding, differential expression results) load data that has this precomputed.; Try to re-use datasets, this reduces the amount of data that needs to be downloaded to the CI server. Params section#; The Params abbreviation is a legit replacement for Parameters.; To document parameter types use type annotations on function parameters.; These will automatically populate the docstrings on import, and when the documentation is built.; Use the python standard library types (defined in collections.abc and typing modules) for containers, e.g.; Sequences (like list),; Iterables (like set), and; Mappings (like dict).; Always specify what these contain, e.g. {'a': (1, 2)} → Mapping[str, Tuple[int, int]].; If you can’t use one of those, use a concrete class like AnnData.; If your parameter only accepts an enumeration of strings, specify them like so: Literal['elem-1', 'elem-2']. Returns section#; There are three types of return sections – prose, tuple, and a mix of both. Prose is for simple cases.; Tuple return sections are formatted like parameters. Other than in numpydoc, each tuple is first characterized by the identifie",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:13915,Integrability,depend,depending,13915,"dict).; Always specify what these contain, e.g. {'a': (1, 2)} → Mapping[str, Tuple[int, int]].; If you can’t use one of those, use a concrete class like AnnData.; If your parameter only accepts an enumeration of strings, specify them like so: Literal['elem-1', 'elem-2']. Returns section#; There are three types of return sections – prose, tuple, and a mix of both. Prose is for simple cases.; Tuple return sections are formatted like parameters. Other than in numpydoc, each tuple is first characterized by the identifier and not by its type. Provide type annotation in the function header.; Mix of prose and tuple is relevant in complicated cases, e.g. when you want to describe that you added something as annotation to an `AnnData` object. Examples#; For simple cases, use prose as in normalize_total():; Returns; -------; Returns dictionary with normalized copies of `adata.X` and `adata.layers`; or updates `adata` with normalized versions of the original; `adata.X` and `adata.layers`, depending on `inplace`. For tuple return values, you can use the standard numpydoc way of populating it,; e.g. as in calculate_qc_metrics().; Do not add types in the docstring, but specify them in the function signature:; def myfunc(...) -> tuple[int, str]:; """"""; ...; Returns; -------; one_identifier; Description.; second_identifier; Description 2.; """"""; ... Many functions also just modify parts of the passed AnnData object, like e.g. dpt().; You can then combine prose and lists to best describe what happens:; Returns; -------; Depending on `copy`, returns or updates `adata` with the following fields. If `n_branchings==0`, no field `dpt_groups` will be written. dpt_pseudotime : :class:`~pandas.Series` (`adata.obs`, dtype `float`); Array of dim (number of samples) that stores the pseudotime of each; cell, that is, the DPT distance with respect to the root cell.; dpt_groups : :class:`pandas.Series` (`adata.obs`, dtype `category`); Array of dim (number of samples) that stores the subgroup id ('0",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:13815,Modifiability,layers,layers,13815,".; Sequences (like list),; Iterables (like set), and; Mappings (like dict).; Always specify what these contain, e.g. {'a': (1, 2)} → Mapping[str, Tuple[int, int]].; If you can’t use one of those, use a concrete class like AnnData.; If your parameter only accepts an enumeration of strings, specify them like so: Literal['elem-1', 'elem-2']. Returns section#; There are three types of return sections – prose, tuple, and a mix of both. Prose is for simple cases.; Tuple return sections are formatted like parameters. Other than in numpydoc, each tuple is first characterized by the identifier and not by its type. Provide type annotation in the function header.; Mix of prose and tuple is relevant in complicated cases, e.g. when you want to describe that you added something as annotation to an `AnnData` object. Examples#; For simple cases, use prose as in normalize_total():; Returns; -------; Returns dictionary with normalized copies of `adata.X` and `adata.layers`; or updates `adata` with normalized versions of the original; `adata.X` and `adata.layers`, depending on `inplace`. For tuple return values, you can use the standard numpydoc way of populating it,; e.g. as in calculate_qc_metrics().; Do not add types in the docstring, but specify them in the function signature:; def myfunc(...) -> tuple[int, str]:; """"""; ...; Returns; -------; one_identifier; Description.; second_identifier; Description 2.; """"""; ... Many functions also just modify parts of the passed AnnData object, like e.g. dpt().; You can then combine prose and lists to best describe what happens:; Returns; -------; Depending on `copy`, returns or updates `adata` with the following fields. If `n_branchings==0`, no field `dpt_groups` will be written. dpt_pseudotime : :class:`~pandas.Series` (`adata.obs`, dtype `float`); Array of dim (number of samples) that stores the pseudotime of each; cell, that is, the DPT distance with respect to the root cell.; dpt_groups : :class:`pandas.Series` (`adata.obs`, dtype `category",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:13906,Modifiability,layers,layers,13906,"dict).; Always specify what these contain, e.g. {'a': (1, 2)} → Mapping[str, Tuple[int, int]].; If you can’t use one of those, use a concrete class like AnnData.; If your parameter only accepts an enumeration of strings, specify them like so: Literal['elem-1', 'elem-2']. Returns section#; There are three types of return sections – prose, tuple, and a mix of both. Prose is for simple cases.; Tuple return sections are formatted like parameters. Other than in numpydoc, each tuple is first characterized by the identifier and not by its type. Provide type annotation in the function header.; Mix of prose and tuple is relevant in complicated cases, e.g. when you want to describe that you added something as annotation to an `AnnData` object. Examples#; For simple cases, use prose as in normalize_total():; Returns; -------; Returns dictionary with normalized copies of `adata.X` and `adata.layers`; or updates `adata` with normalized versions of the original; `adata.X` and `adata.layers`, depending on `inplace`. For tuple return values, you can use the standard numpydoc way of populating it,; e.g. as in calculate_qc_metrics().; Do not add types in the docstring, but specify them in the function signature:; def myfunc(...) -> tuple[int, str]:; """"""; ...; Returns; -------; one_identifier; Description.; second_identifier; Description 2.; """"""; ... Many functions also just modify parts of the passed AnnData object, like e.g. dpt().; You can then combine prose and lists to best describe what happens:; Returns; -------; Depending on `copy`, returns or updates `adata` with the following fields. If `n_branchings==0`, no field `dpt_groups` will be written. dpt_pseudotime : :class:`~pandas.Series` (`adata.obs`, dtype `float`); Array of dim (number of samples) that stores the pseudotime of each; cell, that is, the DPT distance with respect to the root cell.; dpt_groups : :class:`pandas.Series` (`adata.obs`, dtype `category`); Array of dim (number of samples) that stores the subgroup id ('0",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:7167,Performance,cache,cachedir,7167,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:9557,Performance,cache,cache,9557,"y.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Documentation. Contents . Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. Documentation#. Building the docs#; To build the docs, run hatch run docs:build.; Afterwards, you can run hatch run docs:open to open docs/_build/html/index.html.; Your browser and Sphinx cache docs which have been built previously.; Sometimes these caches are not invalidated when you’ve updated the docs.; If docs are not updating the way you expect, first try “force reloading” your browser page – e.g. reload the page without using the cache.; Next, if problems persist, clear the sphinx cache (hatch run docs:clean) and try building them again. Adding to the docs#; For any user-visible changes, please make sure a note has been added to the release notes using hatch run towncrier:create.; We recommend waiting on this until your PR is close to done since this can often causes merge conflicts.; Once you’ve added a new function to the documentation, you’ll need to make sure there is a link somewhere in the documentation site pointing to it.; This should be added to docs/api.md under a relevant heading.; For tutorials and more in depth examples, consider adding a notebook to the scanpy-tutorials repository.; The tutorials are tied to this repository via a submodule.; To update the sub",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:9619,Performance,cache,caches,9619,"mony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Documentation. Contents . Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. Documentation#. Building the docs#; To build the docs, run hatch run docs:build.; Afterwards, you can run hatch run docs:open to open docs/_build/html/index.html.; Your browser and Sphinx cache docs which have been built previously.; Sometimes these caches are not invalidated when you’ve updated the docs.; If docs are not updating the way you expect, first try “force reloading” your browser page – e.g. reload the page without using the cache.; Next, if problems persist, clear the sphinx cache (hatch run docs:clean) and try building them again. Adding to the docs#; For any user-visible changes, please make sure a note has been added to the release notes using hatch run towncrier:create.; We recommend waiting on this until your PR is close to done since this can often causes merge conflicts.; Once you’ve added a new function to the documentation, you’ll need to make sure there is a link somewhere in the documentation site pointing to it.; This should be added to docs/api.md under a relevant heading.; For tutorials and more in depth examples, consider adding a notebook to the scanpy-tutorials repository.; The tutorials are tied to this repository via a submodule.; To update the submodule, run git submodule update --remote from the root of the repositor",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:9809,Performance,cache,cache,9809,"tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Documentation. Contents . Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. Documentation#. Building the docs#; To build the docs, run hatch run docs:build.; Afterwards, you can run hatch run docs:open to open docs/_build/html/index.html.; Your browser and Sphinx cache docs which have been built previously.; Sometimes these caches are not invalidated when you’ve updated the docs.; If docs are not updating the way you expect, first try “force reloading” your browser page – e.g. reload the page without using the cache.; Next, if problems persist, clear the sphinx cache (hatch run docs:clean) and try building them again. Adding to the docs#; For any user-visible changes, please make sure a note has been added to the release notes using hatch run towncrier:create.; We recommend waiting on this until your PR is close to done since this can often causes merge conflicts.; Once you’ve added a new function to the documentation, you’ll need to make sure there is a link somewhere in the documentation site pointing to it.; This should be added to docs/api.md under a relevant heading.; For tutorials and more in depth examples, consider adding a notebook to the scanpy-tutorials repository.; The tutorials are tied to this repository via a submodule.; To update the submodule, run git submodule update --remote from the root of the repository.; Subsequently, commit and push the changes in a PR.; This should be done before each release to ensure the tutorials are up to date. docstrings format#; W",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:9861,Performance,cache,cache,9861,"rimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Documentation. Contents . Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. Documentation#. Building the docs#; To build the docs, run hatch run docs:build.; Afterwards, you can run hatch run docs:open to open docs/_build/html/index.html.; Your browser and Sphinx cache docs which have been built previously.; Sometimes these caches are not invalidated when you’ve updated the docs.; If docs are not updating the way you expect, first try “force reloading” your browser page – e.g. reload the page without using the cache.; Next, if problems persist, clear the sphinx cache (hatch run docs:clean) and try building them again. Adding to the docs#; For any user-visible changes, please make sure a note has been added to the release notes using hatch run towncrier:create.; We recommend waiting on this until your PR is close to done since this can often causes merge conflicts.; Once you’ve added a new function to the documentation, you’ll need to make sure there is a link somewhere in the documentation site pointing to it.; This should be added to docs/api.md under a relevant heading.; For tutorials and more in depth examples, consider adding a notebook to the scanpy-tutorials repository.; The tutorials are tied to this repository via a submodule.; To update the submodule, run git submodule update --remote from the root of the repository.; Subsequently, commit and push the changes in a PR.; This should be done before each release to ensure the tutorials are up to date. docstrings format#; We use the numpydoc style for writing docstrings.; We’d primarily suggest",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:12355,Performance,load,load,12355,"he same file as code, line length restrictions still apply. In files which are just docs, go with a sentence per line (for easier git diffs).; Check that the docs look like what you expect them too! It’s easy to forget to add a reference to function, be sure it got added and looks right. Look at sc.tl.louvain as an example for everything mentioned here. Plots in docstrings#; One of the most useful things you can include in a docstring is examples of how the function should be used.; These are a great way to demonstrate intended usage and give users a template they can copy and modify.; We’re able to include the plots produced by these snippets in the rendered docs using matplotlib’s plot directive.; For examples of this, see the Examples sections of dotplot() or calculate_qc_metrics().; Note that anything in these sections will need to be run when the docs are built, so please keep them computationally light. If you need computed features (e.g. an embedding, differential expression results) load data that has this precomputed.; Try to re-use datasets, this reduces the amount of data that needs to be downloaded to the CI server. Params section#; The Params abbreviation is a legit replacement for Parameters.; To document parameter types use type annotations on function parameters.; These will automatically populate the docstrings on import, and when the documentation is built.; Use the python standard library types (defined in collections.abc and typing modules) for containers, e.g.; Sequences (like list),; Iterables (like set), and; Mappings (like dict).; Always specify what these contain, e.g. {'a': (1, 2)} → Mapping[str, Tuple[int, int]].; If you can’t use one of those, use a concrete class like AnnData.; If your parameter only accepts an enumeration of strings, specify them like so: Literal['elem-1', 'elem-2']. Returns section#; There are three types of return sections – prose, tuple, and a mix of both. Prose is for simple cases.; Tuple return sections are formatt",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:8408,Security,hash,hashsolo,8408,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Documentation. Contents . Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. Documentation#. Building the docs#; To build the,MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:7435,Testability,log,logfile,7435,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:7474,Testability,log,logpath,7474,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:7780,Testability,log,logging,7780,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:7809,Testability,log,logging,7809, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:9844,Usability,clear,clear,9844,"rimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Documentation. Contents . Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. Documentation#. Building the docs#; To build the docs, run hatch run docs:build.; Afterwards, you can run hatch run docs:open to open docs/_build/html/index.html.; Your browser and Sphinx cache docs which have been built previously.; Sometimes these caches are not invalidated when you’ve updated the docs.; If docs are not updating the way you expect, first try “force reloading” your browser page – e.g. reload the page without using the cache.; Next, if problems persist, clear the sphinx cache (hatch run docs:clean) and try building them again. Adding to the docs#; For any user-visible changes, please make sure a note has been added to the release notes using hatch run towncrier:create.; We recommend waiting on this until your PR is close to done since this can often causes merge conflicts.; Once you’ve added a new function to the documentation, you’ll need to make sure there is a link somewhere in the documentation site pointing to it.; This should be added to docs/api.md under a relevant heading.; For tutorials and more in depth examples, consider adding a notebook to the scanpy-tutorials repository.; The tutorials are tied to this repository via a submodule.; To update the submodule, run git submodule update --remote from the root of the repository.; Subsequently, commit and push the changes in a PR.; This should be done before each release to ensure the tutorials are up to date. docstrings format#; We use the numpydoc style for writing docstrings.; We’d primarily suggest",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:10930,Usability,guid,guide,10930,"ain. Adding to the docs#; For any user-visible changes, please make sure a note has been added to the release notes using hatch run towncrier:create.; We recommend waiting on this until your PR is close to done since this can often causes merge conflicts.; Once you’ve added a new function to the documentation, you’ll need to make sure there is a link somewhere in the documentation site pointing to it.; This should be added to docs/api.md under a relevant heading.; For tutorials and more in depth examples, consider adding a notebook to the scanpy-tutorials repository.; The tutorials are tied to this repository via a submodule.; To update the submodule, run git submodule update --remote from the root of the repository.; Subsequently, commit and push the changes in a PR.; This should be done before each release to ensure the tutorials are up to date. docstrings format#; We use the numpydoc style for writing docstrings.; We’d primarily suggest looking at existing docstrings for examples, but the napolean guide to numpy style docstrings is also a great source.; If you’re unfamiliar with the reStructuredText (rST) markup format, check out the Sphinx rST primer.; Some key points:. We have some custom sphinx extensions activated. When in doubt, try to copy the style of existing docstrings.; We autopopulate type information in docstrings when possible, so just add the type information to signatures.; When docs exist in the same file as code, line length restrictions still apply. In files which are just docs, go with a sentence per line (for easier git diffs).; Check that the docs look like what you expect them too! It’s easy to forget to add a reference to function, be sure it got added and looks right. Look at sc.tl.louvain as an example for everything mentioned here. Plots in docstrings#; One of the most useful things you can include in a docstring is examples of how the function should be used.; These are a great way to demonstrate intended usage and give users a template",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:13301,Usability,simpl,simple,13301,"s (e.g. an embedding, differential expression results) load data that has this precomputed.; Try to re-use datasets, this reduces the amount of data that needs to be downloaded to the CI server. Params section#; The Params abbreviation is a legit replacement for Parameters.; To document parameter types use type annotations on function parameters.; These will automatically populate the docstrings on import, and when the documentation is built.; Use the python standard library types (defined in collections.abc and typing modules) for containers, e.g.; Sequences (like list),; Iterables (like set), and; Mappings (like dict).; Always specify what these contain, e.g. {'a': (1, 2)} → Mapping[str, Tuple[int, int]].; If you can’t use one of those, use a concrete class like AnnData.; If your parameter only accepts an enumeration of strings, specify them like so: Literal['elem-1', 'elem-2']. Returns section#; There are three types of return sections – prose, tuple, and a mix of both. Prose is for simple cases.; Tuple return sections are formatted like parameters. Other than in numpydoc, each tuple is first characterized by the identifier and not by its type. Provide type annotation in the function header.; Mix of prose and tuple is relevant in complicated cases, e.g. when you want to describe that you added something as annotation to an `AnnData` object. Examples#; For simple cases, use prose as in normalize_total():; Returns; -------; Returns dictionary with normalized copies of `adata.X` and `adata.layers`; or updates `adata` with normalized versions of the original; `adata.X` and `adata.layers`, depending on `inplace`. For tuple return values, you can use the standard numpydoc way of populating it,; e.g. as in calculate_qc_metrics().; Do not add types in the docstring, but specify them in the function signature:; def myfunc(...) -> tuple[int, str]:; """"""; ...; Returns; -------; one_identifier; Description.; second_identifier; Description 2.; """"""; ... Many functions also just ",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/documentation.html:13681,Usability,simpl,simple,13681,"ion is built.; Use the python standard library types (defined in collections.abc and typing modules) for containers, e.g.; Sequences (like list),; Iterables (like set), and; Mappings (like dict).; Always specify what these contain, e.g. {'a': (1, 2)} → Mapping[str, Tuple[int, int]].; If you can’t use one of those, use a concrete class like AnnData.; If your parameter only accepts an enumeration of strings, specify them like so: Literal['elem-1', 'elem-2']. Returns section#; There are three types of return sections – prose, tuple, and a mix of both. Prose is for simple cases.; Tuple return sections are formatted like parameters. Other than in numpydoc, each tuple is first characterized by the identifier and not by its type. Provide type annotation in the function header.; Mix of prose and tuple is relevant in complicated cases, e.g. when you want to describe that you added something as annotation to an `AnnData` object. Examples#; For simple cases, use prose as in normalize_total():; Returns; -------; Returns dictionary with normalized copies of `adata.X` and `adata.layers`; or updates `adata` with normalized versions of the original; `adata.X` and `adata.layers`, depending on `inplace`. For tuple return values, you can use the standard numpydoc way of populating it,; e.g. as in calculate_qc_metrics().; Do not add types in the docstring, but specify them in the function signature:; def myfunc(...) -> tuple[int, str]:; """"""; ...; Returns; -------; one_identifier; Description.; second_identifier; Description 2.; """"""; ... Many functions also just modify parts of the passed AnnData object, like e.g. dpt().; You can then combine prose and lists to best describe what happens:; Returns; -------; Depending on `copy`, returns or updates `adata` with the following fields. If `n_branchings==0`, no field `dpt_groups` will be written. dpt_pseudotime : :class:`~pandas.Series` (`adata.obs`, dtype `float`); Array of dim (number of samples) that stores the pseudotime of each; cell, th",MatchSource.WIKI,en/stable/dev/documentation.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/documentation.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:8093,Deployability,toggle,toggleswitch,8093,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:9177,Deployability,release,release,9177,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Getting set up. Contents . Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Getting set up#. Working with git#; This section of the docs covers our practices for working with git on our codebase. For more in-depth guides, we can recommend a few sources:; For a more complete git tutorials we recommend checking out:. Atlassian’s git tutorialBeginner friendly introductions to the git command line interface. Setting up git for GitHubConfiguring git to work with your GitHub user account. Forking and cloning#; To get the code, and be able to push changes back to the main project, you’ll need to (1) fork the repository on github and (2) clone the repository to your local machine.; This is very straight forward if you’re using GitHub’s CLI:; $ gh repo fork scverse/scanpy --clone --remote. This will f",MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:10917,Deployability,install,install,10917,"(1) fork the repository on github and (2) clone the repository to your local machine.; This is very straight forward if you’re using GitHub’s CLI:; $ gh repo fork scverse/scanpy --clone --remote. This will fork the repo to your github account, create a clone of the repo on your current machine, add our repository as a remote, and set the main development branch to track our repository.; To do this manually, first make a fork of the repository by clicking the “fork” button on our main github package. Then, on your machine, run:; $ # Clone your fork of the repository (substitute in your username); $ git clone https://github.com/{your-username}/scanpy.git; $ # Enter the cloned repository; $ cd scanpy; $ # Add our repository as a remote; $ git remote add upstream https://github.com/scverse/scanpy.git; $ # git branch --set-upstream-to ""upstream/main"". pre-commit#; We use pre-commit to run some styling checks in an automated way.; We also test against these checks, so make sure you follow them!; You can install pre-commit with:; $ pip install pre-commit. You can then install it to run while developing here with:; $ pre-commit install. From the root of the repo.; If you choose not to run the hooks on each commit, you can run them manually with pre-commit run --files={your files}. Creating a branch for your feature#; All development should occur in branches dedicated to the particular work being done.; Additionally, unless you are a maintainer, all changes should be directed at the main branch.; You can create a branch with:; $ git checkout main # Starting from the main branch; $ git pull # Syncing with the repo; $ git switch -c {your-branch-name} # Making and changing to the new branch. Open a pull request#; When you’re ready to have your code reviewed, push your changes up to your fork:; $ # The first time you push the branch, you'll need to tell git where; $ git push --set-upstream origin {your-branch-name}; $ # After that, just use; $ git push. And open a pull request by",MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:10949,Deployability,install,install,10949,"(1) fork the repository on github and (2) clone the repository to your local machine.; This is very straight forward if you’re using GitHub’s CLI:; $ gh repo fork scverse/scanpy --clone --remote. This will fork the repo to your github account, create a clone of the repo on your current machine, add our repository as a remote, and set the main development branch to track our repository.; To do this manually, first make a fork of the repository by clicking the “fork” button on our main github package. Then, on your machine, run:; $ # Clone your fork of the repository (substitute in your username); $ git clone https://github.com/{your-username}/scanpy.git; $ # Enter the cloned repository; $ cd scanpy; $ # Add our repository as a remote; $ git remote add upstream https://github.com/scverse/scanpy.git; $ # git branch --set-upstream-to ""upstream/main"". pre-commit#; We use pre-commit to run some styling checks in an automated way.; We also test against these checks, so make sure you follow them!; You can install pre-commit with:; $ pip install pre-commit. You can then install it to run while developing here with:; $ pre-commit install. From the root of the repo.; If you choose not to run the hooks on each commit, you can run them manually with pre-commit run --files={your files}. Creating a branch for your feature#; All development should occur in branches dedicated to the particular work being done.; Additionally, unless you are a maintainer, all changes should be directed at the main branch.; You can create a branch with:; $ git checkout main # Starting from the main branch; $ git pull # Syncing with the repo; $ git switch -c {your-branch-name} # Making and changing to the new branch. Open a pull request#; When you’re ready to have your code reviewed, push your changes up to your fork:; $ # The first time you push the branch, you'll need to tell git where; $ git push --set-upstream origin {your-branch-name}; $ # After that, just use; $ git push. And open a pull request by",MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:10982,Deployability,install,install,10982,"ght forward if you’re using GitHub’s CLI:; $ gh repo fork scverse/scanpy --clone --remote. This will fork the repo to your github account, create a clone of the repo on your current machine, add our repository as a remote, and set the main development branch to track our repository.; To do this manually, first make a fork of the repository by clicking the “fork” button on our main github package. Then, on your machine, run:; $ # Clone your fork of the repository (substitute in your username); $ git clone https://github.com/{your-username}/scanpy.git; $ # Enter the cloned repository; $ cd scanpy; $ # Add our repository as a remote; $ git remote add upstream https://github.com/scverse/scanpy.git; $ # git branch --set-upstream-to ""upstream/main"". pre-commit#; We use pre-commit to run some styling checks in an automated way.; We also test against these checks, so make sure you follow them!; You can install pre-commit with:; $ pip install pre-commit. You can then install it to run while developing here with:; $ pre-commit install. From the root of the repo.; If you choose not to run the hooks on each commit, you can run them manually with pre-commit run --files={your files}. Creating a branch for your feature#; All development should occur in branches dedicated to the particular work being done.; Additionally, unless you are a maintainer, all changes should be directed at the main branch.; You can create a branch with:; $ git checkout main # Starting from the main branch; $ git pull # Syncing with the repo; $ git switch -c {your-branch-name} # Making and changing to the new branch. Open a pull request#; When you’re ready to have your code reviewed, push your changes up to your fork:; $ # The first time you push the branch, you'll need to tell git where; $ git push --set-upstream origin {your-branch-name}; $ # After that, just use; $ git push. And open a pull request by going to the main repo and clicking New pull request.; GitHub is also pretty good about prompting you t",MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:11042,Deployability,install,install,11042,"ght forward if you’re using GitHub’s CLI:; $ gh repo fork scverse/scanpy --clone --remote. This will fork the repo to your github account, create a clone of the repo on your current machine, add our repository as a remote, and set the main development branch to track our repository.; To do this manually, first make a fork of the repository by clicking the “fork” button on our main github package. Then, on your machine, run:; $ # Clone your fork of the repository (substitute in your username); $ git clone https://github.com/{your-username}/scanpy.git; $ # Enter the cloned repository; $ cd scanpy; $ # Add our repository as a remote; $ git remote add upstream https://github.com/scverse/scanpy.git; $ # git branch --set-upstream-to ""upstream/main"". pre-commit#; We use pre-commit to run some styling checks in an automated way.; We also test against these checks, so make sure you follow them!; You can install pre-commit with:; $ pip install pre-commit. You can then install it to run while developing here with:; $ pre-commit install. From the root of the repo.; If you choose not to run the hooks on each commit, you can run them manually with pre-commit run --files={your files}. Creating a branch for your feature#; All development should occur in branches dedicated to the particular work being done.; Additionally, unless you are a maintainer, all changes should be directed at the main branch.; You can create a branch with:; $ git checkout main # Starting from the main branch; $ git pull # Syncing with the repo; $ git switch -c {your-branch-name} # Making and changing to the new branch. Open a pull request#; When you’re ready to have your code reviewed, push your changes up to your fork:; $ # The first time you push the branch, you'll need to tell git where; $ git push --set-upstream origin {your-branch-name}; $ # After that, just use; $ git push. And open a pull request by going to the main repo and clicking New pull request.; GitHub is also pretty good about prompting you t",MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:12547,Deployability,install,install,12547,"lso test against these checks, so make sure you follow them!; You can install pre-commit with:; $ pip install pre-commit. You can then install it to run while developing here with:; $ pre-commit install. From the root of the repo.; If you choose not to run the hooks on each commit, you can run them manually with pre-commit run --files={your files}. Creating a branch for your feature#; All development should occur in branches dedicated to the particular work being done.; Additionally, unless you are a maintainer, all changes should be directed at the main branch.; You can create a branch with:; $ git checkout main # Starting from the main branch; $ git pull # Syncing with the repo; $ git switch -c {your-branch-name} # Making and changing to the new branch. Open a pull request#; When you’re ready to have your code reviewed, push your changes up to your fork:; $ # The first time you push the branch, you'll need to tell git where; $ git push --set-upstream origin {your-branch-name}; $ # After that, just use; $ git push. And open a pull request by going to the main repo and clicking New pull request.; GitHub is also pretty good about prompting you to open PRs for recently pushed branches.; We’ll try and get back to you soon!. Development environments#; It’s recommended to do development work in an isolated environment.; There are number of ways to do this, including virtual environments, conda environments, and virtual machines.; We think the easiest is probably Hatch environments.; Using one of the predefined environments in hatch.toml is as simple as running hatch test or hatch run docs:build (they will be created on demand).; For an in-depth guide, refer to the development install instructions of scanpy. previous; Contributing code. next; Tests. Contents; . Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:9705,Integrability,interface,interface,9705,"nal.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Getting set up. Contents . Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Getting set up#. Working with git#; This section of the docs covers our practices for working with git on our codebase. For more in-depth guides, we can recommend a few sources:; For a more complete git tutorials we recommend checking out:. Atlassian’s git tutorialBeginner friendly introductions to the git command line interface. Setting up git for GitHubConfiguring git to work with your GitHub user account. Forking and cloning#; To get the code, and be able to push changes back to the main project, you’ll need to (1) fork the repository on github and (2) clone the repository to your local machine.; This is very straight forward if you’re using GitHub’s CLI:; $ gh repo fork scverse/scanpy --clone --remote. This will fork the repo to your github account, create a clone of the repo on your current machine, add our repository as a remote, and set the main development branch to track our repository.; To do this manually, first make a fork of the repository by clicking the “fork” button on our main github package. Then, on your machine, run:; $ # Clone your fork of the repository (substitute in your username); $ git clone https://github.com/{your-username}/scanpy.git; $ # Enter the cloned repository; $ cd scanpy; $ # Add our repository as a remote; $ git remote add upstr",MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:7169,Performance,cache,cachedir,7169,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:8410,Security,hash,hashsolo,8410,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Getting set up. Contents . Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Getting set up#. Working with git#;,MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:7437,Testability,log,logfile,7437,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:7476,Testability,log,logpath,7476,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:7782,Testability,log,logging,7782,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:7811,Testability,log,logging,7811, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:10851,Testability,test,test,10851,"(1) fork the repository on github and (2) clone the repository to your local machine.; This is very straight forward if you’re using GitHub’s CLI:; $ gh repo fork scverse/scanpy --clone --remote. This will fork the repo to your github account, create a clone of the repo on your current machine, add our repository as a remote, and set the main development branch to track our repository.; To do this manually, first make a fork of the repository by clicking the “fork” button on our main github package. Then, on your machine, run:; $ # Clone your fork of the repository (substitute in your username); $ git clone https://github.com/{your-username}/scanpy.git; $ # Enter the cloned repository; $ cd scanpy; $ # Add our repository as a remote; $ git remote add upstream https://github.com/scverse/scanpy.git; $ # git branch --set-upstream-to ""upstream/main"". pre-commit#; We use pre-commit to run some styling checks in an automated way.; We also test against these checks, so make sure you follow them!; You can install pre-commit with:; $ pip install pre-commit. You can then install it to run while developing here with:; $ pre-commit install. From the root of the repo.; If you choose not to run the hooks on each commit, you can run them manually with pre-commit run --files={your files}. Creating a branch for your feature#; All development should occur in branches dedicated to the particular work being done.; Additionally, unless you are a maintainer, all changes should be directed at the main branch.; You can create a branch with:; $ git checkout main # Starting from the main branch; $ git pull # Syncing with the repo; $ git switch -c {your-branch-name} # Making and changing to the new branch. Open a pull request#; When you’re ready to have your code reviewed, push your changes up to your fork:; $ # The first time you push the branch, you'll need to tell git where; $ git push --set-upstream origin {your-branch-name}; $ # After that, just use; $ git push. And open a pull request by",MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:12435,Testability,test,test,12435,"lso test against these checks, so make sure you follow them!; You can install pre-commit with:; $ pip install pre-commit. You can then install it to run while developing here with:; $ pre-commit install. From the root of the repo.; If you choose not to run the hooks on each commit, you can run them manually with pre-commit run --files={your files}. Creating a branch for your feature#; All development should occur in branches dedicated to the particular work being done.; Additionally, unless you are a maintainer, all changes should be directed at the main branch.; You can create a branch with:; $ git checkout main # Starting from the main branch; $ git pull # Syncing with the repo; $ git switch -c {your-branch-name} # Making and changing to the new branch. Open a pull request#; When you’re ready to have your code reviewed, push your changes up to your fork:; $ # The first time you push the branch, you'll need to tell git where; $ git push --set-upstream origin {your-branch-name}; $ # After that, just use; $ git push. And open a pull request by going to the main repo and clicking New pull request.; GitHub is also pretty good about prompting you to open PRs for recently pushed branches.; We’ll try and get back to you soon!. Development environments#; It’s recommended to do development work in an isolated environment.; There are number of ways to do this, including virtual environments, conda environments, and virtual machines.; We think the easiest is probably Hatch environments.; Using one of the predefined environments in hatch.toml is as simple as running hatch test or hatch run docs:build (they will be created on demand).; For an in-depth guide, refer to the development install instructions of scanpy. previous; Contributing code. next; Tests. Contents; . Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:9522,Usability,guid,guides,9522,"scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Getting set up. Contents . Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Getting set up#. Working with git#; This section of the docs covers our practices for working with git on our codebase. For more in-depth guides, we can recommend a few sources:; For a more complete git tutorials we recommend checking out:. Atlassian’s git tutorialBeginner friendly introductions to the git command line interface. Setting up git for GitHubConfiguring git to work with your GitHub user account. Forking and cloning#; To get the code, and be able to push changes back to the main project, you’ll need to (1) fork the repository on github and (2) clone the repository to your local machine.; This is very straight forward if you’re using GitHub’s CLI:; $ gh repo fork scverse/scanpy --clone --remote. This will fork the repo to your github account, create a clone of the repo on your current machine, add our repository as a remote, and set the main development branch to track our repository.; To do this manually, first make a fork of the repository by clicking the “fork” button on our main github package. Then, on your machine, run:; $ # Clone your fork of the repository (substitute in your username); $ git clone https://github.com/{your-username}/scanpy.git",MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:12411,Usability,simpl,simple,12411,"lso test against these checks, so make sure you follow them!; You can install pre-commit with:; $ pip install pre-commit. You can then install it to run while developing here with:; $ pre-commit install. From the root of the repo.; If you choose not to run the hooks on each commit, you can run them manually with pre-commit run --files={your files}. Creating a branch for your feature#; All development should occur in branches dedicated to the particular work being done.; Additionally, unless you are a maintainer, all changes should be directed at the main branch.; You can create a branch with:; $ git checkout main # Starting from the main branch; $ git pull # Syncing with the repo; $ git switch -c {your-branch-name} # Making and changing to the new branch. Open a pull request#; When you’re ready to have your code reviewed, push your changes up to your fork:; $ # The first time you push the branch, you'll need to tell git where; $ git push --set-upstream origin {your-branch-name}; $ # After that, just use; $ git push. And open a pull request by going to the main repo and clicking New pull request.; GitHub is also pretty good about prompting you to open PRs for recently pushed branches.; We’ll try and get back to you soon!. Development environments#; It’s recommended to do development work in an isolated environment.; There are number of ways to do this, including virtual environments, conda environments, and virtual machines.; We think the easiest is probably Hatch environments.; Using one of the predefined environments in hatch.toml is as simple as running hatch test or hatch run docs:build (they will be created on demand).; For an in-depth guide, refer to the development install instructions of scanpy. previous; Contributing code. next; Tests. Contents; . Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html:12515,Usability,guid,guide,12515,"lso test against these checks, so make sure you follow them!; You can install pre-commit with:; $ pip install pre-commit. You can then install it to run while developing here with:; $ pre-commit install. From the root of the repo.; If you choose not to run the hooks on each commit, you can run them manually with pre-commit run --files={your files}. Creating a branch for your feature#; All development should occur in branches dedicated to the particular work being done.; Additionally, unless you are a maintainer, all changes should be directed at the main branch.; You can create a branch with:; $ git checkout main # Starting from the main branch; $ git pull # Syncing with the repo; $ git switch -c {your-branch-name} # Making and changing to the new branch. Open a pull request#; When you’re ready to have your code reviewed, push your changes up to your fork:; $ # The first time you push the branch, you'll need to tell git where; $ git push --set-upstream origin {your-branch-name}; $ # After that, just use; $ git push. And open a pull request by going to the main repo and clicking New pull request.; GitHub is also pretty good about prompting you to open PRs for recently pushed branches.; We’ll try and get back to you soon!. Development environments#; It’s recommended to do development work in an isolated environment.; There are number of ways to do this, including virtual environments, conda environments, and virtual machines.; We think the easiest is probably Hatch environments.; Using one of the predefined environments in hatch.toml is as simple as running hatch test or hatch run docs:build (they will be created on demand).; For an in-depth guide, refer to the development install instructions of scanpy. previous; Contributing code. next; Tests. Contents; . Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/getting-set-up.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/getting-set-up.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:8090,Deployability,toggle,toggleswitch,8090,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:9174,Deployability,release,release,9174,py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of t,MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:9880,Deployability,pipeline,pipelines,9880,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:9984,Deployability,release,release,9984,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:10007,Deployability,release,release,10007,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:10036,Deployability,release,release,10036,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:10060,Deployability,release,release,10060,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:10132,Energy Efficiency,adapt,adapted,10132,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:10132,Modifiability,adapt,adapted,10132,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:7166,Performance,cache,cachedir,7166,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:8407,Security,hash,hashsolo,8407,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; ,MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:7434,Testability,log,logfile,7434,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:7473,Testability,log,logpath,7473,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:7779,Testability,log,logging,7779,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:7808,Testability,log,logging,7808, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:9597,Testability,test,tests,9597,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:9632,Testability,test,tests,9632,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:9647,Testability,test,test,9647,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:9675,Testability,test,tests,9675,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:9832,Testability,test,tests,9832,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:9865,Testability,test,tests,9865,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:9326,Usability,guid,guidelines,9326,y_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanp,MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:10111,Usability,guid,guidelines,10111,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:10171,Usability,guid,guides,10171,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/index.html:10205,Usability,guid,guides,10205,"_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Contributing. Contributing#; Contributions to scanpy are welcome!; This section of the docs provides some guidelines and tips to follow when contributing. Contributing code; Development workflow; Code style. Getting set up; Working with git; Forking and cloning; pre-commit; Creating a branch for your feature; Open a pull request. Development environments. Tests; Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Documentation; Building the docs; Adding to the docs; docstrings format; Plots in docstrings; Params section; Returns section; Examples. CI; Plotting tests; Viewing plots from failed tests on Azure pipelines; Misc. Versioning; Semantic versioning; Version numbers. Tooling; Technical details. Making a release; Preparing the release; Actually making the release; After making a release; Debugging the build process. Parts of the guidelines have been adapted from the pandas and MDAnalysis guides.; These are both excellent guides and we highly recommend checking them out. previous; News. next; Contributing code. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/index.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:11,Deployability,release,release,11,. Making a release — scanpy. Skip to main content. Back to top. Ctrl+K. Installation; Tutorials; Basics; Preprocessing and clustering; Preprocessing and clustering 3k PBMCs (legacy workflow); Integrating data using ingest and BBKNN. Plotting; Core plotting functions; Customizing Scanpy plots. Trajectories; Trajectory inference for hematopoiesis in mouse. Spatial; Analysis and visualization of spatial transcriptomics data; Integrating spatial data with scRNA-seq using scanorama. Experimental; How to preprocess UMI count data with analytic Pearson residuals; Using dask with Scanpy. Usage Principles; How to; Using other kNN libraries in Scanpy; Plotting with Marsilea. API; Preprocessing: pp; scanpy.pp.calculate_qc_metrics; scanpy.pp.filter_cells; scanpy.pp.filter_genes; scanpy.pp.highly_variable_genes; scanpy.pp.log1p; scanpy.pp.pca; scanpy.pp.normalize_total; scanpy.pp.regress_out; scanpy.pp.scale; scanpy.pp.subsample; scanpy.pp.downsample_counts; scanpy.pp.recipe_zheng17; scanpy.pp.recipe_weinreb17; scanpy.pp.recipe_seurat; scanpy.pp.combat; scanpy.pp.scrublet; scanpy.pp.scrublet_simulate_doublets; scanpy.pp.neighbors. Tools: tl; scanpy.pp.pca; scanpy.tl.tsne; scanpy.tl.umap; scanpy.tl.draw_graph; scanpy.tl.diffmap; scanpy.tl.embedding_density; scanpy.tl.leiden; scanpy.tl.louvain; scanpy.tl.dendrogram; scanpy.tl.dpt; scanpy.tl.paga; scanpy.tl.ingest; scanpy.tl.rank_genes_groups; scanpy.tl.filter_rank_genes_groups; scanpy.tl.marker_gene_overlap; scanpy.tl.score_genes; scanpy.tl.score_genes_cell_cycle; scanpy.tl.sim. Plotting: pl; scanpy.pl.scatter; scanpy.pl.heatmap; scanpy.pl.dotplot; scanpy.pl.tracksplot; scanpy.pl.violin; scanpy.pl.stacked_violin; scanpy.pl.matrixplot; scanpy.pl.clustermap; scanpy.pl.ranking; scanpy.pl.dendrogram; scanpy.pl.DotPlot; scanpy.pl.DotPlot.DEFAULT_CATEGORY_HEIGHT; scanpy.pl.DotPlot.DEFAULT_CATEGORY_WIDTH; scanpy.pl.DotPlot.DEFAULT_COLORMAP; scanpy.pl.DotPlot.DEFAULT_COLOR_LEGEND_TITLE; scanpy.pl.DotPlot.DEFAULT_COLOR_ON; scanpy.pl.DotPlot,MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:8094,Deployability,toggle,toggleswitch,8094,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9178,Deployability,release,release,9178,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9233,Deployability,release,release,9233,"API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, sele",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9267,Deployability,release,release,9267,"mony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x f",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9296,Deployability,release,release,9296,"mony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x f",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9320,Deployability,release,release,9320,"mony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x f",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9367,Deployability,release,release,9367,"nal.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9426,Deployability,release,release,9426,"nal.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9495,Deployability,release,releases,9495,"xternal.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9544,Deployability,release,release,9544,"py.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9598,Deployability,release,release,9598,"ograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case o",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9625,Deployability,release,release,9625,"ograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case o",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9653,Deployability,patch,patch,9653,"ograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case o",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9659,Deployability,release,release,9659,"ograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case o",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9773,Deployability,release,release,9773,"s; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a b",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9840,Deployability,patch,patch,9840,"rimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9846,Deployability,release,release,9846,"rimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9933,Deployability,release,release,9933,"_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announc",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9958,Deployability,release,releases,9958," scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:9997,Deployability,release,release,9997,"roject; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10092,Deployability,release,release,10092,"s; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file fo",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10173,Deployability,patch,patch,10173,"ase. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10279,Deployability,release,release,10279," Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. T",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10320,Deployability,patch,patch,10320," release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Deb",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10326,Deployability,release,release,10326," release; Debugging the build process. Making a release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Deb",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10366,Deployability,release,release,10366," release#; First, check out Versioning to see which kind of release you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed someth",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10436,Deployability,release,release,10436,"se you want to make.; That page also explains concepts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuratio",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10470,Deployability,release,release,10470,"ts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10490,Deployability,release,release,10490,"ts like pre-releases and applications thereof. Preparing the release#. Switch to the main branch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10546,Deployability,release,release,10546,"anch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Cle",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10581,Deployability,release,release,10581,"anch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Cle",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10593,Deployability,release,releases,10593,"anch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Cle",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10628,Deployability,release,release,10628,"anch for a major/minor release and the respective release series branch for a patch release (e.g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Cle",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10650,Deployability,release,releases,10650,".g. 1.8.x when releasing version 1.8.4).; Run hatch towncrier:build to generate a PR that creates a new release notes file. Wait for the PR to be auto-merged.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10844,Deployability,release,release,10844,"ed.; If it is a patch release, merge the backport PR (see Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload t",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:10880,Deployability,release,release,10880,"ee Tooling) into the main branch. Actually making the release#. Go to GitHub’s releases page.; Click the “Draft a new release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload the package to <test.pypi.org> (tutorial); $ twine upload",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:11041,Deployability,release,release,11041,"w release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload the package to <test.pypi.org> (tutorial); $ twine upload --repository testpypi dist/*. The above approximates what the publish workflow does automatically for us.; If you ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:11079,Deployability,release,release,11079,"w release” button.; Open the “Choose a tag” dropdown and type the version of the tag you want to release, such as 1.9.6.; Select the dropdown entry “+ Create new tag: 1.<minor>.<patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload the package to <test.pypi.org> (tutorial); $ twine upload --repository testpypi dist/*. The above approximates what the publish workflow does automatically for us.; If you ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:11174,Deployability,release,released,11174,"patch> on publish”.; In the second dropdown “Target:”, select the base branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload the package to <test.pypi.org> (tutorial); $ twine upload --repository testpypi dist/*. The above approximates what the publish workflow does automatically for us.; If you want to replicate the process more exactly, make sure you are careful,; and create a version tag before building (make sure you delete it after uploading to TestPyPI!). previous;",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:11246,Deployability,release,release,11246,"e branch i.e. main for a minor/major release,; and e.g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload the package to <test.pypi.org> (tutorial); $ twine upload --repository testpypi dist/*. The above approximates what the publish workflow does automatically for us.; If you want to replicate the process more exactly, make sure you are careful,; and create a version tag before building (make sure you delete it after uploading to TestPyPI!). previous; Versioning. next; Contributors. Contents; . Preparing the release; A",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:11296,Deployability,release,release,11296,".g. 1.9.x for our example patch release 1.9.6.; If the version is a pre-release version, such as 1.7.0rc1 or 1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload the package to <test.pypi.org> (tutorial); $ twine upload --repository testpypi dist/*. The above approximates what the publish workflow does automatically for us.; If you want to replicate the process more exactly, make sure you are careful,; and create a version tag before building (make sure you delete it after uploading to TestPyPI!). previous; Versioning. next; Contributors. Contents; . Preparing the release; Actually making the release; After making a release; ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:11419,Deployability,configurat,configuration,11419,"1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload the package to <test.pypi.org> (tutorial); $ twine upload --repository testpypi dist/*. The above approximates what the publish workflow does automatically for us.; If you want to replicate the process more exactly, make sure you are careful,; and create a version tag before building (make sure you delete it after uploading to TestPyPI!). previous; Versioning. next; Contributors. Contents; . Preparing the release; Actually making the release; After making a release; Debugging the build process. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:12232,Deployability,release,release,12232,"1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload the package to <test.pypi.org> (tutorial); $ twine upload --repository testpypi dist/*. The above approximates what the publish workflow does automatically for us.; If you want to replicate the process more exactly, make sure you are careful,; and create a version tag before building (make sure you delete it after uploading to TestPyPI!). previous; Versioning. next; Contributors. Contents; . Preparing the release; Actually making the release; After making a release; Debugging the build process. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:12261,Deployability,release,release,12261,"1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload the package to <test.pypi.org> (tutorial); $ twine upload --repository testpypi dist/*. The above approximates what the publish workflow does automatically for us.; If you want to replicate the process more exactly, make sure you are careful,; and create a version tag before building (make sure you delete it after uploading to TestPyPI!). previous; Versioning. next; Contributors. Contents; . Preparing the release; Actually making the release; After making a release; Debugging the build process. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:12285,Deployability,release,release,12285,"1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload the package to <test.pypi.org> (tutorial); $ twine upload --repository testpypi dist/*. The above approximates what the publish workflow does automatically for us.; If you want to replicate the process more exactly, make sure you are careful,; and create a version tag before building (make sure you delete it after uploading to TestPyPI!). previous; Versioning. next; Contributors. Contents; . Preparing the release; Actually making the release; After making a release; Debugging the build process. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:11419,Modifiability,config,configuration,11419,"1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload the package to <test.pypi.org> (tutorial); $ twine upload --repository testpypi dist/*. The above approximates what the publish workflow does automatically for us.; If you want to replicate the process more exactly, make sure you are careful,; and create a version tag before building (make sure you delete it after uploading to TestPyPI!). previous; Versioning. next; Contributors. Contents; . Preparing the release; Actually making the release; After making a release; Debugging the build process. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:7170,Performance,cache,cachedir,7170,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:8411,Security,hash,hashsolo,8411,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Making a release. Contents . Preparing the release; Actually making the release; After making a release; Debugging the build process. Making a release#; First, check out Versioning to see which ki",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:7438,Testability,log,logfile,7438,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:7477,Testability,log,logpath,7477,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:7783,Testability,log,logging,7783,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:7812,Testability,log,logging,7812, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:11839,Testability,test,test,11839,"1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload the package to <test.pypi.org> (tutorial); $ twine upload --repository testpypi dist/*. The above approximates what the publish workflow does automatically for us.; If you want to replicate the process more exactly, make sure you are careful,; and create a version tag before building (make sure you delete it after uploading to TestPyPI!). previous; Versioning. next; Contributors. Contents; . Preparing the release; Actually making the release; After making a release; Debugging the build process. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/release.html:11894,Testability,test,testpypi,11894,"1.10.0a1, tick the “Set as a pre-release” checkbox. After making a release#; After any release has been made:. Create a milestone for the next release (in case you made a bugfix release) or releases (in case of a major/minor release).; For bugfix releases, this should have on-merge: backport to 0.<minor>.x,; so the meeseeksdev bot will create a backport PR. See Versioning for more info.; Clear out and close the milestone you just made a release for. After a major or minor release has been made:. Tweet about it! Announce it on Zulip! Announce it on Discourse! Think about making a bot for this! Maybe actually do that?; Create a new release notes file for the next minor release. This should only be added to the dev branch.; Tag the development branch. If you just released 1.7.0, this would be 1.8.0.dev0.; Create a new branch for this release series, like 1.7.x. This should get a new release notes file. Debugging the build process#; If you changed something about the build process (e.g. Hatchling’s build configuration),; or something about the package’s structure,; you might want to manually check if the build and upload process behaves as expected:; $ # Clear out old distributions; $ rm -r dist; $ # Build source distribution and wheel both; $ python -m build; $ # Now check those build artifacts; $ twine check dist/*; $ # List the wheel archive’s contents; $ bsdtar -tf dist/*.whl. You can also upload the package to <test.pypi.org> (tutorial); $ twine upload --repository testpypi dist/*. The above approximates what the publish workflow does automatically for us.; If you want to replicate the process more exactly, make sure you are careful,; and create a version tag before building (make sure you delete it after uploading to TestPyPI!). previous; Versioning. next; Contributors. Contents; . Preparing the release; Actually making the release; After making a release; Debugging the build process. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/release.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/release.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9722,Availability,down,down,9722,"alantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s d",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:11010,Availability,error,error,11010,"l using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argu",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:11102,Availability,error,error,11102,"lts with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider ca",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:11132,Availability,error,error,11132,"lts with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider ca",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:11194,Availability,error,error,11194,"lts with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider ca",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:8083,Deployability,toggle,toggleswitch,8083,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9167,Deployability,release,release,9167,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s o",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9525,Deployability,release,release,9525,"phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often ma",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:11138,Integrability,message,message,11138,"lts with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider ca",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:11200,Integrability,message,message,11200,"lts with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider ca",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:12209,Integrability,depend,dependent,12209,"rown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment va",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:13068,Integrability,interface,interface,13068,"rformance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write the test as though an expected result already exists, run it once to generate the output, then move that output to the reference directory. previous; Getting set up. next; Documentation. Contents; . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10587,Modifiability,parameteriz,parameterizing,10587,"To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10635,Modifiability,parameteriz,parameterize,10635," can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? C",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:11548,Modifiability,extend,extended,11548,"our function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:13220,Modifiability,variab,variables,13220,"rformance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write the test as though an expected result already exists, run it once to generate the output, then move that output to the reference directory. previous; Getting set up. next; Documentation. Contents; . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:7159,Performance,cache,cachedir,7159,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:11625,Performance,optimiz,optimizing,11625," decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:8400,Security,hash,hashsolo,8400,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source packa,MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:7427,Testability,log,logfile,7427,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:7466,Testability,log,logpath,7466,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:7772,Testability,log,logging,7772,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:7801,Testability,log,logging,7801, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9243,Testability,test,tests,9243,"py.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9278,Testability,test,tests,9278,"integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written test",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9293,Testability,test,test,9293,"integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written test",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9321,Testability,test,tests,9321,"integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written test",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9419,Testability,test,test,9419,"e; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9540,Testability,test,test,9540,"phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often ma",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9564,Testability,test,tests,9564," scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9589,Testability,test,test,9589," scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9614,Testability,test,tests,9614,"l.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9638,Testability,test,test,9638,"l.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9682,Testability,test,test,9682,"shbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture d",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9784,Testability,test,tests,9784,"py.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9832,Testability,test,test,9832,"ate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9885,Testability,test,test,9885,"anpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas in",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9916,Testability,test,test,9916,"scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each oth",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9947,Testability,test,tests,9947,"scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each oth",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9999,Testability,test,test,9999,"nal.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function t",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10082,Testability,test,test,10082,"y; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input val",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10125,Testability,test,test,10125," Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10207,Testability,test,tests,10207,"nning the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can y",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10245,Testability,test,test,10245,"nning the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can y",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10294,Testability,test,tests,10294,"lotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different i",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10343,Testability,test,testing,10343,"lotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different i",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10465,Testability,test,tests,10465,"king before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are indep",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10607,Testability,test,tests,10607,"To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10778,Testability,test,test,10778,"rking on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more i",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10817,Testability,test,test,10817,"ing the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10851,Testability,test,tests,10851,"ing the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:11775,Testability,test,testing,11775," test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite w",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:11814,Testability,test,test,11814," test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite w",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:11870,Testability,test,test,11870,"our function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the act",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:11916,Testability,test,tests,11916,"with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:11999,Testability,test,tests,11999,"e pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:12117,Testability,test,test,12117,"u add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that pl",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:12158,Testability,test,test,12158,"u add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that pl",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:12197,Testability,test,testing,12197,"rown.; Can you place bounds on the values returned by your function?; Are there different input values which should generate equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment va",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:12283,Testability,test,tests,12283,"te equivalent output (e.g. if an array is sparse or dense)?; Do you have arguments which should have orthogonal effects on the output? Check that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:12515,Testability,test,test,12515,"heck that they are independent. For example, if there is a flag for extended output, the base output should remain the same either way.; Are you optimizing a method? Check that it’s results are the same as a gold standard implementation. Performance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write the test as though an expected result already exists, run it once to generate the output, then move that output to the reference directo",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:12707,Testability,test,tests,12707,"rformance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write the test as though an expected result already exists, run it once to generate the output, then move that output to the reference directory. previous; Getting set up. next; Documentation. Contents; . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:12736,Testability,test,tests,12736,"rformance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write the test as though an expected result already exists, run it once to generate the output, then move that output to the reference directory. previous; Getting set up. next; Documentation. Contents; . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:12766,Testability,test,test,12766,"rformance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write the test as though an expected result already exists, run it once to generate the output, then move that output to the reference directory. previous; Getting set up. next; Documentation. Contents; . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:12998,Testability,test,test,12998,"rformance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write the test as though an expected result already exists, run it once to generate the output, then move that output to the reference directory. previous; Getting set up. next; Documentation. Contents; . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:13180,Testability,test,test,13180,"rformance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write the test as though an expected result already exists, run it once to generate the output, then move that output to the reference directory. previous; Getting set up. next; Documentation. Contents; . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:13348,Testability,test,test,13348,"rformance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write the test as though an expected result already exists, run it once to generate the output, then move that output to the reference directory. previous; Getting set up. next; Documentation. Contents; . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:13555,Testability,test,tests,13555,"rformance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write the test as though an expected result already exists, run it once to generate the output, then move that output to the reference directory. previous; Getting set up. next; Documentation. Contents; . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:13590,Testability,test,tests,13590,"rformance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write the test as though an expected result already exists, run it once to generate the output, then move that output to the reference directory. previous; Getting set up. next; Documentation. Contents; . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:13605,Testability,test,test,13605,"rformance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write the test as though an expected result already exists, run it once to generate the output, then move that output to the reference directory. previous; Getting set up. next; Documentation. Contents; . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:13633,Testability,test,tests,13633,"rformance#; It’s more important that you’re accurately testing the code works than it is that test suite runs quickly.; That said, it’s nice when the test suite runs fast.; You can check how long tests take to run by passing --durations=0 argument to pytest.; Hopefully your new tests won’t show up on top!; Some approaches to this include:. Is there a common setup/ computation happening in each test? Consider caching these in a scoped test fixture.; Is the behaviour you’re testing for dependent on the size of the data? If not, consider reducing it. Plotting tests#; While computational functions will return arrays and values, it can be harder to work with the output of plotting functions.; To make this easier, we use the image_comparer fixture for comparing plotting results (search the test suite for example usage).; This is used to check that generated plots look the same as they did previously.; Reference images (the expected output) are stored as expected.png to relevant tests directory under scanpy/tests/_images.; When run, the test suite will generate actual.png files for each check.; These files are compared, and if the actual plot differs from the reference plot, a diff of the images is also generated.; Paths for all these files will be reported when a test fails, and images for failed plots can be viewed via the :doc:CI interface <ci>.; A common gotcha here is that plots often change slightly on different machines/ OSs.; scanpy’s test suite sets a number of environment variables to ensure as similar of plots as possible.; When adding new reference plots, the recommended workflow is to write the test as though an expected result already exists, run it once to generate the output, then move that output to the reference directory. previous; Getting set up. next; Documentation. Contents; . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:9621,Usability,simpl,simply,9621,"l.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tests. Contents . Running the tests; Miscellaneous tips. Writing tests; What to test; Performance; Plotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/testing.html:10351,Usability,guid,guide,10351,"lotting tests. Tests#; Possibly the most important part of contributing to any open source package is the test suite.; Implementations may change, but the only way we can know the code is working before making a release is the test suite. Running the tests#; We use pytest to test scanpy.; To run the tests, simply run hatch test.; It can take a while to run the whole test suite. There are a few ways to cut down on this while working on a PR:. Only run a subset of the tests.; This can be done by specifying paths or test name patterns using the -k argument (e.g. hatch test test_plotting.py or hatch test -k ""test_umap*""); Run the tests in parallel using the -n argument (e.g. hatch test -n 8). Miscellaneous tips#. A lot of warnings can be thrown while running the test suite.; It’s often easier to read the test results with them hidden via the --disable-pytest-warnings argument. Writing tests#; You can refer to the existing test suite for examples.; If you haven’t written tests before, Software Carpentry has an in-depth testing guide.; We highly recommend using Test-Driven Development when contributing code.; This not only ensures you have tests written, it often makes implementation easier since you start out with a specification for your function.; Consider parameterizing your tests using the pytest.mark.parameterize and pytest.fixture decorators.; You can read more about fixtures in pytest’s documentation, but we’d also recommend searching our test suite for existing usage. What to test#; If you’re not sure what to tests about your function, some ideas include:. Are there arguments which conflict with each other? Check that if they are both passed, the function throws an error (see pytest.raises docs).; Are there input values which should cause your function to error?; Did you add a helpful error message that recommends better outputs? Check that that error message is actually thrown.; Can you place bounds on the values returned by your function?; Are there different i",MatchSource.WIKI,en/stable/dev/testing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/testing.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:9588,Availability,down,down,9588,"nal.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Versioning. Contents . Semantic versioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged,",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:10731,Availability,failure,failures,10731,"rsioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes require manual intervention due to merge conflicts or test failures. Technical details#; The [meeseeks bot][] reacts to commands like this,; given as a comment on the PR, or a label or milestone description:. @Meeseeksdev backport <branch>. In our case, these commands are part of the milestone description,; which causes the merge of a PR assigned to a milestone to trigger the bot. previous; CI. next; Making a release. Contents; . Semantic versioning; Version numbers. Tooling; Technical details. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:8088,Deployability,toggle,toggleswitch,8088,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:9172,Deployability,release,release,9172,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Versioning. Contents . Semantic versioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this schem",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:9657,Deployability,release,release,9657,"ne; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Versioning. Contents . Semantic versioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes requi",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:9718,Deployability,release,releases,9718,"lantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Versioning. Contents . Semantic versioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes require manual intervention due to merge conflicts or test ",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:9760,Deployability,release,releases,9760,"bag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Versioning. Contents . Semantic versioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes require manual intervention due to merge conflicts or test failures. Technical details#; The [mees",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:9859,Deployability,release,releasesshould,9859,"py.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Versioning. Contents . Semantic versioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes require manual intervention due to merge conflicts or test failures. Technical details#; The [meeseeks bot][] reacts to commands like this,; given as a comment on the PR, or a label or milestone descript",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:10211,Deployability,release,release,10211,"mantic versioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes require manual intervention due to merge conflicts or test failures. Technical details#; The [meeseeks bot][] reacts to commands like this,; given as a comment on the PR, or a label or milestone description:. @Meeseeksdev backport <branch>. In our case, these commands are part of the milestone description,; which causes the merge of a PR assigned to a milestone to trigger the bot. previous; CI. next; Making a release. Contents; . Semantic versioning; Version numbers. Tooling; Technical details. By Scanpy development team. ; © Copyright 2024, the Scanpy development ",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:10230,Deployability,release,release,10230,"mantic versioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes require manual intervention due to merge conflicts or test failures. Technical details#; The [meeseeks bot][] reacts to commands like this,; given as a comment on the PR, or a label or milestone description:. @Meeseeksdev backport <branch>. In our case, these commands are part of the milestone description,; which causes the merge of a PR assigned to a milestone to trigger the bot. previous; CI. next; Making a release. Contents; . Semantic versioning; Version numbers. Tooling; Technical details. By Scanpy development team. ; © Copyright 2024, the Scanpy development ",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:10311,Deployability,release,release,10311,"rsioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes require manual intervention due to merge conflicts or test failures. Technical details#; The [meeseeks bot][] reacts to commands like this,; given as a comment on the PR, or a label or milestone description:. @Meeseeksdev backport <branch>. In our case, these commands are part of the milestone description,; which causes the merge of a PR assigned to a milestone to trigger the bot. previous; CI. next; Making a release. Contents; . Semantic versioning; Version numbers. Tooling; Technical details. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:10379,Deployability,release,release,10379,"rsioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes require manual intervention due to merge conflicts or test failures. Technical details#; The [meeseeks bot][] reacts to commands like this,; given as a comment on the PR, or a label or milestone description:. @Meeseeksdev backport <branch>. In our case, these commands are part of the milestone description,; which causes the merge of a PR assigned to a milestone to trigger the bot. previous; CI. next; Making a release. Contents; . Semantic versioning; Version numbers. Tooling; Technical details. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:10447,Deployability,release,release,10447,"rsioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes require manual intervention due to merge conflicts or test failures. Technical details#; The [meeseeks bot][] reacts to commands like this,; given as a comment on the PR, or a label or milestone description:. @Meeseeksdev backport <branch>. In our case, these commands are part of the milestone description,; which causes the merge of a PR assigned to a milestone to trigger the bot. previous; CI. next; Making a release. Contents; . Semantic versioning; Version numbers. Tooling; Technical details. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:10520,Deployability,patch,patch,10520,"rsioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes require manual intervention due to merge conflicts or test failures. Technical details#; The [meeseeks bot][] reacts to commands like this,; given as a comment on the PR, or a label or milestone description:. @Meeseeksdev backport <branch>. In our case, these commands are part of the milestone description,; which causes the merge of a PR assigned to a milestone to trigger the bot. previous; CI. next; Making a release. Contents; . Semantic versioning; Version numbers. Tooling; Technical details. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:11085,Deployability,release,release,11085,"rsioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes require manual intervention due to merge conflicts or test failures. Technical details#; The [meeseeks bot][] reacts to commands like this,; given as a comment on the PR, or a label or milestone description:. @Meeseeksdev backport <branch>. In our case, these commands are part of the milestone description,; which causes the merge of a PR assigned to a milestone to trigger the bot. previous; CI. next; Making a release. Contents; . Semantic versioning; Version numbers. Tooling; Technical details. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:7164,Performance,cache,cachedir,7164,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:8405,Security,hash,hashsolo,8405,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Versioning. Contents . Semantic versioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently docu,MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:9978,Security,hash,hash,9978,"npy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Versioning. Contents . Semantic versioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes require manual intervention due to merge conflicts or test failures. Technical details#; The [meeseeks bot][] reacts to commands like this,; given as a comment on the PR, or a label or milestone description:. @Meeseeksdev backport <branch>. In our case, these commands are part of the milestone description,; which causes the",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:7432,Testability,log,logfile,7432,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:7471,Testability,log,logpath,7471,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:7777,Testability,log,logging,7777,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:7806,Testability,log,logging,7806, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/dev/versioning.html:10726,Testability,test,test,10726,"rsioning; Version numbers. Tooling; Technical details. Versioning#. Note; We are currently experimenting with our development practices.; These are currently documented on a best effort basis, but may not be completely accurate. Semantic versioning#; We try to follow semantic versioning with our versioning scheme.; This scheme breaks down a version number into {major.minor.point} sections.; At a point release, there should be no changes beyond bug fixes.; minor releases can include new features.; major releases can break old APIs. Version numbers#; Valid version numbers are described in PEP 440. Pre-releasesshould have versions like 1.7.0rc1 or 1.7.0rc2. Development versionsshould look like 1.8.0.dev0, with a commit hash optionally appended as a local version identifier (e.g. 1.8.0.dev2+g00ad77b). Tooling#; To be sure we can follow this scheme and maintain some agility in development, we use some tooling and development practices.; When a minor release is made, a release branch should be cut and pushed to the main repo (e.g. 1.7.x for the 1.7 release series).; For PRs which fix an bug in the most recent minor release, the changes will need to added to both the development and release branches.; To accomplish this, PRs which fix bugs are assigned a patch version milestone such as 1.7.4.; Once the PR is approved and merged, the bot will attempt to make a backport and open a PR.; This will sometimes require manual intervention due to merge conflicts or test failures. Technical details#; The [meeseeks bot][] reacts to commands like this,; given as a comment on the PR, or a label or milestone description:. @Meeseeksdev backport <branch>. In our case, these commands are part of the milestone description,; which causes the merge of a PR assigned to a milestone to trigger the bot. previous; CI. next; Making a release. Contents; . Semantic versioning; Version numbers. Tooling; Technical details. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/dev/versioning.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/dev/versioning.html
https://scanpy.readthedocs.io/en/stable/external/exporting.html:8087,Deployability,toggle,toggleswitch,8087,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/external/exporting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/exporting.html
https://scanpy.readthedocs.io/en/stable/external/exporting.html:9171,Deployability,release,release,9171,"ity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Exporting. Exporting#. exporting.spring_project(adata, project_dir, ...); Exports to a SPRING project directory [Weinreb et al., 2017]. exporting.cellbrowser(adata, data_dir, ...); Export adata to a UCSC Cell Browser project directory. previous; scanpy.external.pl.wishbone_marker_trajectory. next; scanpy.external.exporting.spring_project. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/exporting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/exporting.html
https://scanpy.readthedocs.io/en/stable/external/exporting.html:7163,Performance,cache,cachedir,7163,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/external/exporting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/exporting.html
https://scanpy.readthedocs.io/en/stable/external/exporting.html:8404,Security,hash,hashsolo,8404,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Exporting. Exporting#. exporting.spring_project(adata, project_dir, ...); Exports to a SPRING project directory [Weinreb et al., 2017]. exporting.cellbrowser(adata, data_dir, ...); Export adata to",MatchSource.WIKI,en/stable/external/exporting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/exporting.html
https://scanpy.readthedocs.io/en/stable/external/exporting.html:7431,Testability,log,logfile,7431,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/external/exporting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/exporting.html
https://scanpy.readthedocs.io/en/stable/external/exporting.html:7470,Testability,log,logpath,7470,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/external/exporting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/exporting.html
https://scanpy.readthedocs.io/en/stable/external/exporting.html:7776,Testability,log,logging,7776,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/external/exporting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/exporting.html
https://scanpy.readthedocs.io/en/stable/external/exporting.html:7805,Testability,log,logging,7805, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/external/exporting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/exporting.html
https://scanpy.readthedocs.io/en/stable/external/index.html:8090,Deployability,toggle,toggleswitch,8090,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/external/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/index.html
https://scanpy.readthedocs.io/en/stable/external/index.html:9174,Deployability,release,release,9174,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. External API. External API#. Warning; We are no longer accepting new tools into scanpy.external.; Instead, please submit your tool to the scverse ecosystem package listing. Note; For tools that integrate well with scanpy and anndata, see:. The scverse ecosystem; Scanpy’s ecosystem ecosystem page. Import Scanpy’s wrappers to external tools as:; import scanpy.external as sce. Preprocessing: PP; Data integration; Sample demultiplexing; Imputation. Tools: TL; Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. previous; scanpy.pp.normalize_per_cell. next; Preprocessing: PP. By Scanpy development team. ; © Copyright 2024, the Scanpy ",MatchSource.WIKI,en/stable/external/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/index.html
https://scanpy.readthedocs.io/en/stable/external/index.html:9414,Deployability,integrat,integrate,9414,"e. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. External API. External API#. Warning; We are no longer accepting new tools into scanpy.external.; Instead, please submit your tool to the scverse ecosystem package listing. Note; For tools that integrate well with scanpy and anndata, see:. The scverse ecosystem; Scanpy’s ecosystem ecosystem page. Import Scanpy’s wrappers to external tools as:; import scanpy.external as sce. Preprocessing: PP; Data integration; Sample demultiplexing; Imputation. Tools: TL; Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. previous; scanpy.pp.normalize_per_cell. next; Preprocessing: PP. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/index.html
https://scanpy.readthedocs.io/en/stable/external/index.html:9621,Deployability,integrat,integration,9621,"e. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. External API. External API#. Warning; We are no longer accepting new tools into scanpy.external.; Instead, please submit your tool to the scverse ecosystem package listing. Note; For tools that integrate well with scanpy and anndata, see:. The scverse ecosystem; Scanpy’s ecosystem ecosystem page. Import Scanpy’s wrappers to external tools as:; import scanpy.external as sce. Preprocessing: PP; Data integration; Sample demultiplexing; Imputation. Tools: TL; Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. previous; scanpy.pp.normalize_per_cell. next; Preprocessing: PP. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/index.html
https://scanpy.readthedocs.io/en/stable/external/index.html:9414,Integrability,integrat,integrate,9414,"e. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. External API. External API#. Warning; We are no longer accepting new tools into scanpy.external.; Instead, please submit your tool to the scverse ecosystem package listing. Note; For tools that integrate well with scanpy and anndata, see:. The scverse ecosystem; Scanpy’s ecosystem ecosystem page. Import Scanpy’s wrappers to external tools as:; import scanpy.external as sce. Preprocessing: PP; Data integration; Sample demultiplexing; Imputation. Tools: TL; Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. previous; scanpy.pp.normalize_per_cell. next; Preprocessing: PP. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/index.html
https://scanpy.readthedocs.io/en/stable/external/index.html:9534,Integrability,wrap,wrappers,9534,"e. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. External API. External API#. Warning; We are no longer accepting new tools into scanpy.external.; Instead, please submit your tool to the scverse ecosystem package listing. Note; For tools that integrate well with scanpy and anndata, see:. The scverse ecosystem; Scanpy’s ecosystem ecosystem page. Import Scanpy’s wrappers to external tools as:; import scanpy.external as sce. Preprocessing: PP; Data integration; Sample demultiplexing; Imputation. Tools: TL; Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. previous; scanpy.pp.normalize_per_cell. next; Preprocessing: PP. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/index.html
https://scanpy.readthedocs.io/en/stable/external/index.html:9621,Integrability,integrat,integration,9621,"e. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. External API. External API#. Warning; We are no longer accepting new tools into scanpy.external.; Instead, please submit your tool to the scverse ecosystem package listing. Note; For tools that integrate well with scanpy and anndata, see:. The scverse ecosystem; Scanpy’s ecosystem ecosystem page. Import Scanpy’s wrappers to external tools as:; import scanpy.external as sce. Preprocessing: PP; Data integration; Sample demultiplexing; Imputation. Tools: TL; Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. previous; scanpy.pp.normalize_per_cell. next; Preprocessing: PP. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/index.html
https://scanpy.readthedocs.io/en/stable/external/index.html:7166,Performance,cache,cachedir,7166,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/external/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/index.html
https://scanpy.readthedocs.io/en/stable/external/index.html:8407,Security,hash,hashsolo,8407,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. External API. External API#. Warning; We are no longer accepting new tools into scanpy.external.; Instead, please submit your tool to the scverse ecosystem package listing. Note; For tools that in",MatchSource.WIKI,en/stable/external/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/index.html
https://scanpy.readthedocs.io/en/stable/external/index.html:7434,Testability,log,logfile,7434,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/external/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/index.html
https://scanpy.readthedocs.io/en/stable/external/index.html:7473,Testability,log,logpath,7473,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/external/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/index.html
https://scanpy.readthedocs.io/en/stable/external/index.html:7779,Testability,log,logging,7779,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/external/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/index.html
https://scanpy.readthedocs.io/en/stable/external/index.html:7808,Testability,log,logging,7808, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/external/index.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/index.html
https://scanpy.readthedocs.io/en/stable/external/plotting.html:8090,Deployability,toggle,toggleswitch,8090,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/external/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/plotting.html
https://scanpy.readthedocs.io/en/stable/external/plotting.html:9174,Deployability,release,release,9174,"Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Plotting: PL. Plotting: PL#. pl.phate(adata, *[, color, mask_obs, ...]); Scatter plot in PHATE basis. pl.trimap(adata, *[, color, mask_obs, ...]); Scatter plot in TriMap basis. pl.sam(adata[, projection, c, cmap, ...]); Scatter plot using the SAM projection or another input projection. pl.wishbone_marker_trajectory(adata, markers, *); Plot marker trends along trajectory, and return trajectory branches for further analysis and visualization (heatmap, etc..). previous; scanpy.external.tl.cyclone. next; scanpy.external.pl.phate. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/plotting.html
https://scanpy.readthedocs.io/en/stable/external/plotting.html:7166,Performance,cache,cachedir,7166,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/external/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/plotting.html
https://scanpy.readthedocs.io/en/stable/external/plotting.html:8407,Security,hash,hashsolo,8407,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Plotting: PL. Plotting: PL#. pl.phate(adata, *[, color, mask_obs, ...]); Scatter plot in PHATE basis. pl.trimap(adata, *[, color, mask_obs, ...]); Scatter plot in TriMap basis. pl.sam(adata[, proj",MatchSource.WIKI,en/stable/external/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/plotting.html
https://scanpy.readthedocs.io/en/stable/external/plotting.html:7434,Testability,log,logfile,7434,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/external/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/plotting.html
https://scanpy.readthedocs.io/en/stable/external/plotting.html:7473,Testability,log,logpath,7473,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/external/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/plotting.html
https://scanpy.readthedocs.io/en/stable/external/plotting.html:7779,Testability,log,logging,7779,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/external/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/plotting.html
https://scanpy.readthedocs.io/en/stable/external/plotting.html:7808,Testability,log,logging,7808, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/external/plotting.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/plotting.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:8095,Deployability,toggle,toggleswitch,8095,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:9179,Deployability,release,release,9179,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polański et al., 2019]. pp.harmony_integrate(adata, key, *[, basis, ...]); Use harmonypy [Korsunsky et al., 2019] to integrate different experiments. pp.mnn_correct(*datas[, var_index, ...]); Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018]. pp.scanorama_integrate(adata, key, *[, ...]); Use Scanorama [Hie et al., 2019] to integrate different experiments. Sample demultiplexing#. pp.hashsolo(adata, cell_hashing_columns, *); Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Imputation#; Note that the fundamental limitations of imputation are still under debate. pp.dca(adata[, mode, ae_type, ...]); Deep cou",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:9260,Deployability,integrat,integration,9260,"n; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polański et al., 2019]. pp.harmony_integrate(adata, key, *[, basis, ...]); Use harmonypy [Korsunsky et al., 2019] to integrate different experiments. pp.mnn_correct(*datas[, var_index, ...]); Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018]. pp.scanorama_integrate(adata, key, *[, ...]); Use Scanorama [Hie et al., 2019] to integrate different experiments. Sample demultiplexing#. pp.hashsolo(adata, cell_hashing_columns, *); Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Imputation#; Note that the fundamental limitations of imputation are still under debate. pp.dca(adata[, mode, ae_type, ...]); Deep count autoencoder [Eraslan et al., 2019]. pp.magic(adata[, name_list, knn, decay, ...]); Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:9333,Deployability,integrat,integration,9333,".pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polański et al., 2019]. pp.harmony_integrate(adata, key, *[, basis, ...]); Use harmonypy [Korsunsky et al., 2019] to integrate different experiments. pp.mnn_correct(*datas[, var_index, ...]); Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018]. pp.scanorama_integrate(adata, key, *[, ...]); Use Scanorama [Hie et al., 2019] to integrate different experiments. Sample demultiplexing#. pp.hashsolo(adata, cell_hashing_columns, *); Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Imputation#; Note that the fundamental limitations of imputation are still under debate. pp.dca(adata[, mode, ae_type, ...]); Deep count autoencoder [Eraslan et al., 2019]. pp.magic(adata[, name_list, knn, decay, ...]); Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018]. previous; External API. next; scanpy.external.pp.bbkn",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:9531,Deployability,integrat,integrate,9531,"anpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polański et al., 2019]. pp.harmony_integrate(adata, key, *[, basis, ...]); Use harmonypy [Korsunsky et al., 2019] to integrate different experiments. pp.mnn_correct(*datas[, var_index, ...]); Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018]. pp.scanorama_integrate(adata, key, *[, ...]); Use Scanorama [Hie et al., 2019] to integrate different experiments. Sample demultiplexing#. pp.hashsolo(adata, cell_hashing_columns, *); Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Imputation#; Note that the fundamental limitations of imputation are still under debate. pp.dca(adata[, mode, ae_type, ...]); Deep count autoencoder [Eraslan et al., 2019]. pp.magic(adata[, name_list, knn, decay, ...]); Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018]. previous; External API. next; scanpy.external.pp.bbknn. Contents; . Data integration; Sample demultiplexing; Imputation. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:9786,Deployability,integrat,integrate,9786,"anpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polański et al., 2019]. pp.harmony_integrate(adata, key, *[, basis, ...]); Use harmonypy [Korsunsky et al., 2019] to integrate different experiments. pp.mnn_correct(*datas[, var_index, ...]); Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018]. pp.scanorama_integrate(adata, key, *[, ...]); Use Scanorama [Hie et al., 2019] to integrate different experiments. Sample demultiplexing#. pp.hashsolo(adata, cell_hashing_columns, *); Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Imputation#; Note that the fundamental limitations of imputation are still under debate. pp.dca(adata[, mode, ae_type, ...]); Deep count autoencoder [Eraslan et al., 2019]. pp.magic(adata[, name_list, knn, decay, ...]); Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018]. previous; External API. next; scanpy.external.pp.bbknn. Contents; . Data integration; Sample demultiplexing; Imputation. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:10357,Deployability,integrat,integration,10357,"anpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polański et al., 2019]. pp.harmony_integrate(adata, key, *[, basis, ...]); Use harmonypy [Korsunsky et al., 2019] to integrate different experiments. pp.mnn_correct(*datas[, var_index, ...]); Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018]. pp.scanorama_integrate(adata, key, *[, ...]); Use Scanorama [Hie et al., 2019] to integrate different experiments. Sample demultiplexing#. pp.hashsolo(adata, cell_hashing_columns, *); Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Imputation#; Note that the fundamental limitations of imputation are still under debate. pp.dca(adata[, mode, ae_type, ...]); Deep count autoencoder [Eraslan et al., 2019]. pp.magic(adata[, name_list, knn, decay, ...]); Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018]. previous; External API. next; scanpy.external.pp.bbknn. Contents; . Data integration; Sample demultiplexing; Imputation. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:9260,Integrability,integrat,integration,9260,"n; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polański et al., 2019]. pp.harmony_integrate(adata, key, *[, basis, ...]); Use harmonypy [Korsunsky et al., 2019] to integrate different experiments. pp.mnn_correct(*datas[, var_index, ...]); Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018]. pp.scanorama_integrate(adata, key, *[, ...]); Use Scanorama [Hie et al., 2019] to integrate different experiments. Sample demultiplexing#. pp.hashsolo(adata, cell_hashing_columns, *); Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Imputation#; Note that the fundamental limitations of imputation are still under debate. pp.dca(adata[, mode, ae_type, ...]); Deep count autoencoder [Eraslan et al., 2019]. pp.magic(adata[, name_list, knn, decay, ...]); Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:9333,Integrability,integrat,integration,9333,".pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polański et al., 2019]. pp.harmony_integrate(adata, key, *[, basis, ...]); Use harmonypy [Korsunsky et al., 2019] to integrate different experiments. pp.mnn_correct(*datas[, var_index, ...]); Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018]. pp.scanorama_integrate(adata, key, *[, ...]); Use Scanorama [Hie et al., 2019] to integrate different experiments. Sample demultiplexing#. pp.hashsolo(adata, cell_hashing_columns, *); Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Imputation#; Note that the fundamental limitations of imputation are still under debate. pp.dca(adata[, mode, ae_type, ...]); Deep count autoencoder [Eraslan et al., 2019]. pp.magic(adata[, name_list, knn, decay, ...]); Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018]. previous; External API. next; scanpy.external.pp.bbkn",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:9531,Integrability,integrat,integrate,9531,"anpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polański et al., 2019]. pp.harmony_integrate(adata, key, *[, basis, ...]); Use harmonypy [Korsunsky et al., 2019] to integrate different experiments. pp.mnn_correct(*datas[, var_index, ...]); Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018]. pp.scanorama_integrate(adata, key, *[, ...]); Use Scanorama [Hie et al., 2019] to integrate different experiments. Sample demultiplexing#. pp.hashsolo(adata, cell_hashing_columns, *); Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Imputation#; Note that the fundamental limitations of imputation are still under debate. pp.dca(adata[, mode, ae_type, ...]); Deep count autoencoder [Eraslan et al., 2019]. pp.magic(adata[, name_list, knn, decay, ...]); Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018]. previous; External API. next; scanpy.external.pp.bbknn. Contents; . Data integration; Sample demultiplexing; Imputation. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:9786,Integrability,integrat,integrate,9786,"anpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polański et al., 2019]. pp.harmony_integrate(adata, key, *[, basis, ...]); Use harmonypy [Korsunsky et al., 2019] to integrate different experiments. pp.mnn_correct(*datas[, var_index, ...]); Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018]. pp.scanorama_integrate(adata, key, *[, ...]); Use Scanorama [Hie et al., 2019] to integrate different experiments. Sample demultiplexing#. pp.hashsolo(adata, cell_hashing_columns, *); Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Imputation#; Note that the fundamental limitations of imputation are still under debate. pp.dca(adata[, mode, ae_type, ...]); Deep count autoencoder [Eraslan et al., 2019]. pp.magic(adata[, name_list, knn, decay, ...]); Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018]. previous; External API. next; scanpy.external.pp.bbknn. Contents; . Data integration; Sample demultiplexing; Imputation. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:10357,Integrability,integrat,integration,10357,"anpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polański et al., 2019]. pp.harmony_integrate(adata, key, *[, basis, ...]); Use harmonypy [Korsunsky et al., 2019] to integrate different experiments. pp.mnn_correct(*datas[, var_index, ...]); Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018]. pp.scanorama_integrate(adata, key, *[, ...]); Use Scanorama [Hie et al., 2019] to integrate different experiments. Sample demultiplexing#. pp.hashsolo(adata, cell_hashing_columns, *); Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Imputation#; Note that the fundamental limitations of imputation are still under debate. pp.dca(adata[, mode, ae_type, ...]); Deep count autoencoder [Eraslan et al., 2019]. pp.magic(adata[, name_list, knn, decay, ...]); Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018]. previous; External API. next; scanpy.external.pp.bbknn. Contents; . Data integration; Sample demultiplexing; Imputation. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:7171,Performance,cache,cachedir,7171,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:8412,Security,hash,hashsolo,8412,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polańsk",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:9846,Security,hash,hashsolo,9846,"anpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polański et al., 2019]. pp.harmony_integrate(adata, key, *[, basis, ...]); Use harmonypy [Korsunsky et al., 2019] to integrate different experiments. pp.mnn_correct(*datas[, var_index, ...]); Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018]. pp.scanorama_integrate(adata, key, *[, ...]); Use Scanorama [Hie et al., 2019] to integrate different experiments. Sample demultiplexing#. pp.hashsolo(adata, cell_hashing_columns, *); Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Imputation#; Note that the fundamental limitations of imputation are still under debate. pp.dca(adata[, mode, ae_type, ...]); Deep count autoencoder [Eraslan et al., 2019]. pp.magic(adata[, name_list, knn, decay, ...]); Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018]. previous; External API. next; scanpy.external.pp.bbknn. Contents; . Data integration; Sample demultiplexing; Imputation. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:9925,Security,hash,hashing,9925,"anpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Preprocessing: PP. Contents . Data integration; Sample demultiplexing; Imputation. Preprocessing: PP#. Data integration#. pp.bbknn(adata, *[, batch_key, use_rep, ...]); Batch balanced kNN [Polański et al., 2019]. pp.harmony_integrate(adata, key, *[, basis, ...]); Use harmonypy [Korsunsky et al., 2019] to integrate different experiments. pp.mnn_correct(*datas[, var_index, ...]); Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018]. pp.scanorama_integrate(adata, key, *[, ...]); Use Scanorama [Hie et al., 2019] to integrate different experiments. Sample demultiplexing#. pp.hashsolo(adata, cell_hashing_columns, *); Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Imputation#; Note that the fundamental limitations of imputation are still under debate. pp.dca(adata[, mode, ae_type, ...]); Deep count autoencoder [Eraslan et al., 2019]. pp.magic(adata[, name_list, knn, decay, ...]); Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018]. previous; External API. next; scanpy.external.pp.bbknn. Contents; . Data integration; Sample demultiplexing; Imputation. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:7439,Testability,log,logfile,7439,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:7478,Testability,log,logpath,7478,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:7784,Testability,log,logging,7784,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/preprocessing.html:7813,Testability,log,logging,7813, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/external/preprocessing.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/preprocessing.html
https://scanpy.readthedocs.io/en/stable/external/tools.html:8087,Deployability,toggle,toggleswitch,8087,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/external/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/tools.html
https://scanpy.readthedocs.io/en/stable/external/tools.html:9171,Deployability,release,release,9171,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tools: TL. Contents . Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. Tools: TL#. Embeddings#. tl.phate(adata[, n_components, k, a, ...]); PHATE [Moon et al., 2019]. tl.palantir(adata, *[, n_components, knn, ...]); Run Diffusion maps using the adaptive anisotropic kernel [Setty et al., 2019]. tl.trimap(adata[, n_components, n_inliers, ...]); TriMap: Large-scale Dimensionality Reduction Using Triplets [Amid and Warmuth, 2019]. tl.sam(adata, *[, max_iter, num_norm_avg, ...]); Self-Assembling Manifolds single-cell RNA sequencing analysis tool [Tarashansky et al., 2019]. Clustering and trajectory inference#. tl.phenograph(data[, clustering_algo, k, ...]); PhenoGraph clustering [Levine et al., 2015]. tl.harmony_timeseries(adata, tp, *[, ...]); Harmony time series for data visualization with augmented affinity matrix at discrete time points [Nowotschin et ",MatchSource.WIKI,en/stable/external/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/tools.html
https://scanpy.readthedocs.io/en/stable/external/tools.html:9487,Energy Efficiency,adapt,adaptive,9487,"tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tools: TL. Contents . Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. Tools: TL#. Embeddings#. tl.phate(adata[, n_components, k, a, ...]); PHATE [Moon et al., 2019]. tl.palantir(adata, *[, n_components, knn, ...]); Run Diffusion maps using the adaptive anisotropic kernel [Setty et al., 2019]. tl.trimap(adata[, n_components, n_inliers, ...]); TriMap: Large-scale Dimensionality Reduction Using Triplets [Amid and Warmuth, 2019]. tl.sam(adata, *[, max_iter, num_norm_avg, ...]); Self-Assembling Manifolds single-cell RNA sequencing analysis tool [Tarashansky et al., 2019]. Clustering and trajectory inference#. tl.phenograph(data[, clustering_algo, k, ...]); PhenoGraph clustering [Levine et al., 2015]. tl.harmony_timeseries(adata, tp, *[, ...]); Harmony time series for data visualization with augmented affinity matrix at discrete time points [Nowotschin et al., 2019]. tl.wishbone(adata, start_cell, *[, branch, ...]); Wishbone identifies bifurcating developmental trajectories from single-cell data [Setty et al., 2016]. tl.palantir(adata, *[, n_components, knn, ...]); Run Diffusion maps using the adaptive anisotropic kernel [Setty et al., 2019]. tl.palantir_results(adata, early_cell, *[, ...]); Running Palantir. Gene scores, Cell cycle#.",MatchSource.WIKI,en/stable/external/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/tools.html
https://scanpy.readthedocs.io/en/stable/external/tools.html:10348,Energy Efficiency,adapt,adaptive,10348,"g_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tools: TL. Contents . Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. Tools: TL#. Embeddings#. tl.phate(adata[, n_components, k, a, ...]); PHATE [Moon et al., 2019]. tl.palantir(adata, *[, n_components, knn, ...]); Run Diffusion maps using the adaptive anisotropic kernel [Setty et al., 2019]. tl.trimap(adata[, n_components, n_inliers, ...]); TriMap: Large-scale Dimensionality Reduction Using Triplets [Amid and Warmuth, 2019]. tl.sam(adata, *[, max_iter, num_norm_avg, ...]); Self-Assembling Manifolds single-cell RNA sequencing analysis tool [Tarashansky et al., 2019]. Clustering and trajectory inference#. tl.phenograph(data[, clustering_algo, k, ...]); PhenoGraph clustering [Levine et al., 2015]. tl.harmony_timeseries(adata, tp, *[, ...]); Harmony time series for data visualization with augmented affinity matrix at discrete time points [Nowotschin et al., 2019]. tl.wishbone(adata, start_cell, *[, branch, ...]); Wishbone identifies bifurcating developmental trajectories from single-cell data [Setty et al., 2016]. tl.palantir(adata, *[, n_components, knn, ...]); Run Diffusion maps using the adaptive anisotropic kernel [Setty et al., 2019]. tl.palantir_results(adata, early_cell, *[, ...]); Running Palantir. Gene scores, Cell cycle#. tl.sandbag(adata[, annotation, fraction, ...]); Calculate marker pairs of genes [Fechtner, 2018, Scialdone et al., 2015]. tl.cyclone(adata[, marker_pairs, ...]); Assigns scores and predicted class to observations [Scialdone et al., 2015] [Fechtner, 2018]. previous; scanpy.external.pp.magic. next; scanpy.external.tl.phate. Contents; . Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/tools.html
https://scanpy.readthedocs.io/en/stable/external/tools.html:9487,Modifiability,adapt,adaptive,9487,"tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tools: TL. Contents . Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. Tools: TL#. Embeddings#. tl.phate(adata[, n_components, k, a, ...]); PHATE [Moon et al., 2019]. tl.palantir(adata, *[, n_components, knn, ...]); Run Diffusion maps using the adaptive anisotropic kernel [Setty et al., 2019]. tl.trimap(adata[, n_components, n_inliers, ...]); TriMap: Large-scale Dimensionality Reduction Using Triplets [Amid and Warmuth, 2019]. tl.sam(adata, *[, max_iter, num_norm_avg, ...]); Self-Assembling Manifolds single-cell RNA sequencing analysis tool [Tarashansky et al., 2019]. Clustering and trajectory inference#. tl.phenograph(data[, clustering_algo, k, ...]); PhenoGraph clustering [Levine et al., 2015]. tl.harmony_timeseries(adata, tp, *[, ...]); Harmony time series for data visualization with augmented affinity matrix at discrete time points [Nowotschin et al., 2019]. tl.wishbone(adata, start_cell, *[, branch, ...]); Wishbone identifies bifurcating developmental trajectories from single-cell data [Setty et al., 2016]. tl.palantir(adata, *[, n_components, knn, ...]); Run Diffusion maps using the adaptive anisotropic kernel [Setty et al., 2019]. tl.palantir_results(adata, early_cell, *[, ...]); Running Palantir. Gene scores, Cell cycle#.",MatchSource.WIKI,en/stable/external/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/tools.html
https://scanpy.readthedocs.io/en/stable/external/tools.html:10348,Modifiability,adapt,adaptive,10348,"g_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tools: TL. Contents . Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. Tools: TL#. Embeddings#. tl.phate(adata[, n_components, k, a, ...]); PHATE [Moon et al., 2019]. tl.palantir(adata, *[, n_components, knn, ...]); Run Diffusion maps using the adaptive anisotropic kernel [Setty et al., 2019]. tl.trimap(adata[, n_components, n_inliers, ...]); TriMap: Large-scale Dimensionality Reduction Using Triplets [Amid and Warmuth, 2019]. tl.sam(adata, *[, max_iter, num_norm_avg, ...]); Self-Assembling Manifolds single-cell RNA sequencing analysis tool [Tarashansky et al., 2019]. Clustering and trajectory inference#. tl.phenograph(data[, clustering_algo, k, ...]); PhenoGraph clustering [Levine et al., 2015]. tl.harmony_timeseries(adata, tp, *[, ...]); Harmony time series for data visualization with augmented affinity matrix at discrete time points [Nowotschin et al., 2019]. tl.wishbone(adata, start_cell, *[, branch, ...]); Wishbone identifies bifurcating developmental trajectories from single-cell data [Setty et al., 2016]. tl.palantir(adata, *[, n_components, knn, ...]); Run Diffusion maps using the adaptive anisotropic kernel [Setty et al., 2019]. tl.palantir_results(adata, early_cell, *[, ...]); Running Palantir. Gene scores, Cell cycle#. tl.sandbag(adata[, annotation, fraction, ...]); Calculate marker pairs of genes [Fechtner, 2018, Scialdone et al., 2015]. tl.cyclone(adata[, marker_pairs, ...]); Assigns scores and predicted class to observations [Scialdone et al., 2015] [Fechtner, 2018]. previous; scanpy.external.pp.magic. next; scanpy.external.tl.phate. Contents; . Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/tools.html
https://scanpy.readthedocs.io/en/stable/external/tools.html:7163,Performance,cache,cachedir,7163,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/external/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/tools.html
https://scanpy.readthedocs.io/en/stable/external/tools.html:10673,Safety,predict,predicted,10673,"g_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tools: TL. Contents . Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. Tools: TL#. Embeddings#. tl.phate(adata[, n_components, k, a, ...]); PHATE [Moon et al., 2019]. tl.palantir(adata, *[, n_components, knn, ...]); Run Diffusion maps using the adaptive anisotropic kernel [Setty et al., 2019]. tl.trimap(adata[, n_components, n_inliers, ...]); TriMap: Large-scale Dimensionality Reduction Using Triplets [Amid and Warmuth, 2019]. tl.sam(adata, *[, max_iter, num_norm_avg, ...]); Self-Assembling Manifolds single-cell RNA sequencing analysis tool [Tarashansky et al., 2019]. Clustering and trajectory inference#. tl.phenograph(data[, clustering_algo, k, ...]); PhenoGraph clustering [Levine et al., 2015]. tl.harmony_timeseries(adata, tp, *[, ...]); Harmony time series for data visualization with augmented affinity matrix at discrete time points [Nowotschin et al., 2019]. tl.wishbone(adata, start_cell, *[, branch, ...]); Wishbone identifies bifurcating developmental trajectories from single-cell data [Setty et al., 2016]. tl.palantir(adata, *[, n_components, knn, ...]); Run Diffusion maps using the adaptive anisotropic kernel [Setty et al., 2019]. tl.palantir_results(adata, early_cell, *[, ...]); Running Palantir. Gene scores, Cell cycle#. tl.sandbag(adata[, annotation, fraction, ...]); Calculate marker pairs of genes [Fechtner, 2018, Scialdone et al., 2015]. tl.cyclone(adata[, marker_pairs, ...]); Assigns scores and predicted class to observations [Scialdone et al., 2015] [Fechtner, 2018]. previous; scanpy.external.pp.magic. next; scanpy.external.tl.phate. Contents; . Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/external/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/tools.html
https://scanpy.readthedocs.io/en/stable/external/tools.html:8404,Security,hash,hashsolo,8404,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .md. .pdf. Tools: TL. Contents . Embeddings; Clustering and trajectory inference; Gene scores, Cell cycle. Tools: TL#. Embeddings#. tl.phate(adata[, n_components, k, a, ...]); PHATE [Moon et al., 2019]. tl.p",MatchSource.WIKI,en/stable/external/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/tools.html
https://scanpy.readthedocs.io/en/stable/external/tools.html:7431,Testability,log,logfile,7431,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/external/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/tools.html
https://scanpy.readthedocs.io/en/stable/external/tools.html:7470,Testability,log,logpath,7470,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/external/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/tools.html
https://scanpy.readthedocs.io/en/stable/external/tools.html:7776,Testability,log,logging,7776,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/external/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/tools.html
https://scanpy.readthedocs.io/en/stable/external/tools.html:7805,Testability,log,logging,7805, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/external/tools.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/external/tools.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html:8099,Deployability,toggle,toggleswitch,8099,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.datasets.blobs.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html:9183,Deployability,release,release,9183,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.blobs. Contents . blobs(). scanpy.datasets.blobs#. scanpy.datasets.blobs(*, n_variables=11, n_centers=5, cluster_std=1.0, n_observations=640, random_state=0)[source]#; Gaussian Blobs. Parameters:. n_variables int (default: 11)Dimension of feature space. n_centers int (default: 5)Number of cluster centers. cluster_std float (default: 1.0)Standard deviation of clusters. n_observations int (default: 640)Number of observations. By default, this is the same observation number; as in scanpy.datasets.krumsiek11(). random_state Union[int, RandomState, None] (default: 0)Determines random number generation for dataset creation. Return type:; AnnData. Returns:; Annotated data matrix containing a observation annotation ‘blobs’ that; indicates cluster identity. Examples; >>> import scanpy as sc; >>> sc.datasets.blobs(); AnnData object with n_obs × n_vars = 640 × 11; obs: ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.blobs.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html:7175,Performance,cache,cachedir,7175,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.datasets.blobs.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html:8416,Security,hash,hashsolo,8416,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.blobs. Contents . blobs(). scanpy.datasets.blobs#. scanpy.datasets.blobs(*, n_variables=11, n_centers=5, cluster_std=1.0, n_observations=640, random_state=0)[source]#; Gaussian Bl",MatchSource.WIKI,en/stable/generated/scanpy.datasets.blobs.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html:7443,Testability,log,logfile,7443,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.datasets.blobs.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html:7482,Testability,log,logpath,7482,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.datasets.blobs.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html:7788,Testability,log,logging,7788,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.datasets.blobs.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html:7817,Testability,log,logging,7817, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.datasets.blobs.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.blobs.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html:8114,Deployability,toggle,toggleswitch,8114,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.datasets.ebi_expression_atlas.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html:9198,Deployability,release,release,9198,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.ebi_expression_atlas. Contents . ebi_expression_atlas(). scanpy.datasets.ebi_expression_atlas#. scanpy.datasets.ebi_expression_atlas(accession, *, filter_boring=False)[source]#; Load a dataset from the EBI Single Cell Expression Atlas.; The atlas can be browsed online to find the accession you want.; Downloaded datasets are saved in the directory specified by; datasetdir. Parameters:. accession strDataset accession. Like E-GEOD-98816 or E-MTAB-4888.; This can be found in the url on the datasets page, for example E-GEOD-98816. filter_boring bool (default: False)Whether boring labels in .obs should be automatically removed, such as; labels with a single or n_obs distinct values. Return type:; AnnData. Returns:; Annotated data matrix. Example; >>> import scanpy as sc; >>> sc.datasets.ebi_expression_atlas(""E-MTAB-4888"") ; AnnData object with n_obs × n_vars = 2261",MatchSource.WIKI,en/stable/generated/scanpy.datasets.ebi_expression_atlas.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html:7190,Performance,cache,cachedir,7190,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.datasets.ebi_expression_atlas.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html:8431,Security,hash,hashsolo,8431,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.ebi_expression_atlas. Contents . ebi_expression_atlas(). scanpy.datasets.ebi_expression_atlas#. scanpy.datasets.ebi_expression_atlas(accession, *, filter_boring=False)[source]#; L",MatchSource.WIKI,en/stable/generated/scanpy.datasets.ebi_expression_atlas.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html:9394,Security,access,accession,9394,"hsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.ebi_expression_atlas. Contents . ebi_expression_atlas(). scanpy.datasets.ebi_expression_atlas#. scanpy.datasets.ebi_expression_atlas(accession, *, filter_boring=False)[source]#; Load a dataset from the EBI Single Cell Expression Atlas.; The atlas can be browsed online to find the accession you want.; Downloaded datasets are saved in the directory specified by; datasetdir. Parameters:. accession strDataset accession. Like E-GEOD-98816 or E-MTAB-4888.; This can be found in the url on the datasets page, for example E-GEOD-98816. filter_boring bool (default: False)Whether boring labels in .obs should be automatically removed, such as; labels with a single or n_obs distinct values. Return type:; AnnData. Returns:; Annotated data matrix. Example; >>> import scanpy as sc; >>> sc.datasets.ebi_expression_atlas(""E-MTAB-4888"") ; AnnData object with n_obs × n_vars = 2261 × 23899; obs: 'Sample Characteristic[organism]', 'Sample Characteristic Ontology Term[organism]', ..., 'Factor Value[cell type]', 'Factor Value Ontology Term[cell type]'. previous; scanpy.datasets.blobs. next; scanpy.datasets.krumsiek11. Contents; . ebi_expression_atlas(). By Scanpy development team. ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.ebi_expression_atlas.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html:9542,Security,access,accession,9542,"ic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.ebi_expression_atlas. Contents . ebi_expression_atlas(). scanpy.datasets.ebi_expression_atlas#. scanpy.datasets.ebi_expression_atlas(accession, *, filter_boring=False)[source]#; Load a dataset from the EBI Single Cell Expression Atlas.; The atlas can be browsed online to find the accession you want.; Downloaded datasets are saved in the directory specified by; datasetdir. Parameters:. accession strDataset accession. Like E-GEOD-98816 or E-MTAB-4888.; This can be found in the url on the datasets page, for example E-GEOD-98816. filter_boring bool (default: False)Whether boring labels in .obs should be automatically removed, such as; labels with a single or n_obs distinct values. Return type:; AnnData. Returns:; Annotated data matrix. Example; >>> import scanpy as sc; >>> sc.datasets.ebi_expression_atlas(""E-MTAB-4888"") ; AnnData object with n_obs × n_vars = 2261 × 23899; obs: 'Sample Characteristic[organism]', 'Sample Characteristic Ontology Term[organism]', ..., 'Factor Value[cell type]', 'Factor Value Ontology Term[cell type]'. previous; scanpy.datasets.blobs. next; scanpy.datasets.krumsiek11. Contents; . ebi_expression_atlas(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.ebi_expression_atlas.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html:9649,Security,access,accession,9649,"ic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.ebi_expression_atlas. Contents . ebi_expression_atlas(). scanpy.datasets.ebi_expression_atlas#. scanpy.datasets.ebi_expression_atlas(accession, *, filter_boring=False)[source]#; Load a dataset from the EBI Single Cell Expression Atlas.; The atlas can be browsed online to find the accession you want.; Downloaded datasets are saved in the directory specified by; datasetdir. Parameters:. accession strDataset accession. Like E-GEOD-98816 or E-MTAB-4888.; This can be found in the url on the datasets page, for example E-GEOD-98816. filter_boring bool (default: False)Whether boring labels in .obs should be automatically removed, such as; labels with a single or n_obs distinct values. Return type:; AnnData. Returns:; Annotated data matrix. Example; >>> import scanpy as sc; >>> sc.datasets.ebi_expression_atlas(""E-MTAB-4888"") ; AnnData object with n_obs × n_vars = 2261 × 23899; obs: 'Sample Characteristic[organism]', 'Sample Characteristic Ontology Term[organism]', ..., 'Factor Value[cell type]', 'Factor Value Ontology Term[cell type]'. previous; scanpy.datasets.blobs. next; scanpy.datasets.krumsiek11. Contents; . ebi_expression_atlas(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.ebi_expression_atlas.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html:9670,Security,access,accession,9670,"ic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.ebi_expression_atlas. Contents . ebi_expression_atlas(). scanpy.datasets.ebi_expression_atlas#. scanpy.datasets.ebi_expression_atlas(accession, *, filter_boring=False)[source]#; Load a dataset from the EBI Single Cell Expression Atlas.; The atlas can be browsed online to find the accession you want.; Downloaded datasets are saved in the directory specified by; datasetdir. Parameters:. accession strDataset accession. Like E-GEOD-98816 or E-MTAB-4888.; This can be found in the url on the datasets page, for example E-GEOD-98816. filter_boring bool (default: False)Whether boring labels in .obs should be automatically removed, such as; labels with a single or n_obs distinct values. Return type:; AnnData. Returns:; Annotated data matrix. Example; >>> import scanpy as sc; >>> sc.datasets.ebi_expression_atlas(""E-MTAB-4888"") ; AnnData object with n_obs × n_vars = 2261 × 23899; obs: 'Sample Characteristic[organism]', 'Sample Characteristic Ontology Term[organism]', ..., 'Factor Value[cell type]', 'Factor Value Ontology Term[cell type]'. previous; scanpy.datasets.blobs. next; scanpy.datasets.krumsiek11. Contents; . ebi_expression_atlas(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.ebi_expression_atlas.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html:7458,Testability,log,logfile,7458,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.datasets.ebi_expression_atlas.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html:7497,Testability,log,logpath,7497,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.datasets.ebi_expression_atlas.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html:7803,Testability,log,logging,7803,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.datasets.ebi_expression_atlas.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html:7832,Testability,log,logging,7832, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.datasets.ebi_expression_atlas.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.ebi_expression_atlas.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html:8104,Deployability,toggle,toggleswitch,8104,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.datasets.krumsiek11.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html:9188,Deployability,release,release,9188,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.krumsiek11. Contents . krumsiek11(). scanpy.datasets.krumsiek11#. scanpy.datasets.krumsiek11()[source]#; Simulated myeloid progenitors [Krumsiek et al., 2011].; The literature-curated boolean network from Krumsiek et al. [2011] was used to; simulate the data. It describes development to four cell fates annotated in; obs[""cell_type""]:; “monocyte” (Mo), “erythrocyte” (Ery), “megakaryocyte” (Mk) and “neutrophil” (Neu).; See also the discussion of this data in Wolf et al. [2019].; Simulate via sim(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.krumsiek11(); UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; utils.warn_names_duplicates(""obs""); AnnData object with n_obs × n_vars = 640 × 11; obs: 'cell_type'; uns: 'iroot', 'highlights'. previous; scanpy.da",MatchSource.WIKI,en/stable/generated/scanpy.datasets.krumsiek11.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html:7180,Performance,cache,cachedir,7180,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.datasets.krumsiek11.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html:8421,Security,hash,hashsolo,8421,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.krumsiek11. Contents . krumsiek11(). scanpy.datasets.krumsiek11#. scanpy.datasets.krumsiek11()[source]#; Simulated myeloid progenitors [Krumsiek et al., 2011].; The literature-cur",MatchSource.WIKI,en/stable/generated/scanpy.datasets.krumsiek11.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html:7448,Testability,log,logfile,7448,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.datasets.krumsiek11.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html:7487,Testability,log,logpath,7487,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.datasets.krumsiek11.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html:7793,Testability,log,logging,7793,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.datasets.krumsiek11.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html:7822,Testability,log,logging,7822, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.datasets.krumsiek11.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.krumsiek11.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html:8104,Deployability,toggle,toggleswitch,8104,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.datasets.moignard15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html:9188,Deployability,release,release,9188,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.moignard15. Contents . moignard15(). scanpy.datasets.moignard15#. scanpy.datasets.moignard15()[source]#; Hematopoiesis in early mouse embryos [Moignard et al., 2015].; The data was obtained using qRT–PCR.; X contains the normalized dCt values from supp. table 7 of the publication.; obs[""exp_groups""] contains the stages derived by; flow sorting and GFP marker status:; “primitive streak” (PS), “neural plate” (NP), “head fold (HF),; “four somite” blood/GFP⁺ (4SG), and “four somite” endothelial/GFP¯ (4SFG). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.moignard15(); AnnData object with n_obs × n_vars = 3934 × 42; obs: 'exp_groups'; uns: 'iroot', 'exp_groups_colors'. previous; scanpy.datasets.krumsiek11. next; scanpy.datasets.pbmc3k. Contents; . moignard15(). By Scanpy development team. ; © Copyright 202",MatchSource.WIKI,en/stable/generated/scanpy.datasets.moignard15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html:7180,Performance,cache,cachedir,7180,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.datasets.moignard15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html:8421,Security,hash,hashsolo,8421,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.moignard15. Contents . moignard15(). scanpy.datasets.moignard15#. scanpy.datasets.moignard15()[source]#; Hematopoiesis in early mouse embryos [Moignard et al., 2015].; The data wa",MatchSource.WIKI,en/stable/generated/scanpy.datasets.moignard15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html:7448,Testability,log,logfile,7448,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.datasets.moignard15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html:7487,Testability,log,logpath,7487,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.datasets.moignard15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html:7793,Testability,log,logging,7793,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.datasets.moignard15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html:7822,Testability,log,logging,7822, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.datasets.moignard15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.moignard15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html:8100,Deployability,toggle,toggleswitch,8100,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.datasets.paul15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html:9184,Deployability,release,release,9184,"py.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.paul15. Contents . paul15(). scanpy.datasets.paul15#. scanpy.datasets.paul15()[source]#; Development of Myeloid Progenitors [Paul et al., 2015].; Non-logarithmized raw data.; The data has been sent out by Email from the Amit Lab. An R version for; loading the data can be found here. Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.paul15(); AnnData object with n_obs × n_vars = 2730 × 3451; obs: 'paul15_clusters'; uns: 'iroot'. previous; scanpy.datasets.pbmc68k_reduced. next; scanpy.datasets.toggleswitch. Contents; . paul15(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.paul15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html:9801,Deployability,toggle,toggleswitch,9801,"py.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.paul15. Contents . paul15(). scanpy.datasets.paul15#. scanpy.datasets.paul15()[source]#; Development of Myeloid Progenitors [Paul et al., 2015].; Non-logarithmized raw data.; The data has been sent out by Email from the Amit Lab. An R version for; loading the data can be found here. Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.paul15(); AnnData object with n_obs × n_vars = 2730 × 3451; obs: 'paul15_clusters'; uns: 'iroot'. previous; scanpy.datasets.pbmc68k_reduced. next; scanpy.datasets.toggleswitch. Contents; . paul15(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.paul15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html:7176,Performance,cache,cachedir,7176,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.datasets.paul15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html:9495,Performance,load,loading,9495,"py.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.paul15. Contents . paul15(). scanpy.datasets.paul15#. scanpy.datasets.paul15()[source]#; Development of Myeloid Progenitors [Paul et al., 2015].; Non-logarithmized raw data.; The data has been sent out by Email from the Amit Lab. An R version for; loading the data can be found here. Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.paul15(); AnnData object with n_obs × n_vars = 2730 × 3451; obs: 'paul15_clusters'; uns: 'iroot'. previous; scanpy.datasets.pbmc68k_reduced. next; scanpy.datasets.toggleswitch. Contents; . paul15(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.paul15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html:8417,Security,hash,hashsolo,8417,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.paul15. Contents . paul15(). scanpy.datasets.paul15#. scanpy.datasets.paul15()[source]#; Development of Myeloid Progenitors [Paul et al., 2015].; Non-logarithmized raw data.; The ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.paul15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html:7444,Testability,log,logfile,7444,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.datasets.paul15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html:7483,Testability,log,logpath,7483,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.datasets.paul15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html:7789,Testability,log,logging,7789,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.datasets.paul15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html:7818,Testability,log,logging,7818, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.datasets.paul15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html:9397,Testability,log,logarithmized,9397,"py.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.paul15. Contents . paul15(). scanpy.datasets.paul15#. scanpy.datasets.paul15()[source]#; Development of Myeloid Progenitors [Paul et al., 2015].; Non-logarithmized raw data.; The data has been sent out by Email from the Amit Lab. An R version for; loading the data can be found here. Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.paul15(); AnnData object with n_obs × n_vars = 2730 × 3451; obs: 'paul15_clusters'; uns: 'iroot'. previous; scanpy.datasets.pbmc68k_reduced. next; scanpy.datasets.toggleswitch. Contents; . paul15(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.paul15.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.paul15.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:9430,Availability,avail,available,9430,"lo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc3k. Contents . pbmc3k(). scanpy.datasets.pbmc3k#. scanpy.datasets.pbmc3k()[source]#; 3k PBMCs from 10x Genomics.; The data consists in 3k PBMCs from a Healthy Donor and is freely available; from 10x Genomics (file from this webpage).; The exact same data is also used in Seurat’s basic clustering tutorial. Note; This downloads 5.9 MB of data upon the first call of the function and stores it in; datasetdir/pbmc3k_raw.h5ad. The following code was run to produce the file.; adata = sc.read_10x_mtx(; # the directory with the `.mtx` file; './data/filtered_gene_bc_matrices/hg19/',; # use gene symbols for the variable names (variables-axis index); var_names='gene_symbols',; # write a cache file for faster subsequent reading; cache=True,; ). adata.var_names_make_unique() # this is unnecessary if using 'gene_ids'; adata.write('write/pbmc3k_raw.h5ad', compression='gzip'). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.pbmc3k(); AnnData object with n_obs × n_vars = 2700 × 32738; var: 'gene_ids'. previous; scanpy.datasets.moignard15. next; scanpy.datasets.pbmc3k_processed. Contents; . pbmc3k(). By Scanpy devel",MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:9569,Availability,down,downloads,9569,"canpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc3k. Contents . pbmc3k(). scanpy.datasets.pbmc3k#. scanpy.datasets.pbmc3k()[source]#; 3k PBMCs from 10x Genomics.; The data consists in 3k PBMCs from a Healthy Donor and is freely available; from 10x Genomics (file from this webpage).; The exact same data is also used in Seurat’s basic clustering tutorial. Note; This downloads 5.9 MB of data upon the first call of the function and stores it in; datasetdir/pbmc3k_raw.h5ad. The following code was run to produce the file.; adata = sc.read_10x_mtx(; # the directory with the `.mtx` file; './data/filtered_gene_bc_matrices/hg19/',; # use gene symbols for the variable names (variables-axis index); var_names='gene_symbols',; # write a cache file for faster subsequent reading; cache=True,; ). adata.var_names_make_unique() # this is unnecessary if using 'gene_ids'; adata.write('write/pbmc3k_raw.h5ad', compression='gzip'). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.pbmc3k(); AnnData object with n_obs × n_vars = 2700 × 32738; var: 'gene_ids'. previous; scanpy.datasets.moignard15. next; scanpy.datasets.pbmc3k_processed. Contents; . pbmc3k(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:8100,Deployability,toggle,toggleswitch,8100,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:9184,Deployability,release,release,9184,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc3k. Contents . pbmc3k(). scanpy.datasets.pbmc3k#. scanpy.datasets.pbmc3k()[source]#; 3k PBMCs from 10x Genomics.; The data consists in 3k PBMCs from a Healthy Donor and is freely available; from 10x Genomics (file from this webpage).; The exact same data is also used in Seurat’s basic clustering tutorial. Note; This downloads 5.9 MB of data upon the first call of the function and stores it in; datasetdir/pbmc3k_raw.h5ad. The following code was run to produce the file.; adata = sc.read_10x_mtx(; # the directory with the `.mtx` file; './data/filtered_gene_bc_matrices/hg19/',; # use gene symbols for the variable names (variables-axis index); var_names='gene_symbols',; # write a cache file for faster subsequent reading; cache=True,; ). adata.var_names_make_unique() # this is unnecessary if using 'gene_ids'; adata.write('write/pbmc3k_raw.h5ad', compression='gz",MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:9859,Modifiability,variab,variable,9859,"canpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc3k. Contents . pbmc3k(). scanpy.datasets.pbmc3k#. scanpy.datasets.pbmc3k()[source]#; 3k PBMCs from 10x Genomics.; The data consists in 3k PBMCs from a Healthy Donor and is freely available; from 10x Genomics (file from this webpage).; The exact same data is also used in Seurat’s basic clustering tutorial. Note; This downloads 5.9 MB of data upon the first call of the function and stores it in; datasetdir/pbmc3k_raw.h5ad. The following code was run to produce the file.; adata = sc.read_10x_mtx(; # the directory with the `.mtx` file; './data/filtered_gene_bc_matrices/hg19/',; # use gene symbols for the variable names (variables-axis index); var_names='gene_symbols',; # write a cache file for faster subsequent reading; cache=True,; ). adata.var_names_make_unique() # this is unnecessary if using 'gene_ids'; adata.write('write/pbmc3k_raw.h5ad', compression='gzip'). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.pbmc3k(); AnnData object with n_obs × n_vars = 2700 × 32738; var: 'gene_ids'. previous; scanpy.datasets.moignard15. next; scanpy.datasets.pbmc3k_processed. Contents; . pbmc3k(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:9875,Modifiability,variab,variables-axis,9875,"canpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc3k. Contents . pbmc3k(). scanpy.datasets.pbmc3k#. scanpy.datasets.pbmc3k()[source]#; 3k PBMCs from 10x Genomics.; The data consists in 3k PBMCs from a Healthy Donor and is freely available; from 10x Genomics (file from this webpage).; The exact same data is also used in Seurat’s basic clustering tutorial. Note; This downloads 5.9 MB of data upon the first call of the function and stores it in; datasetdir/pbmc3k_raw.h5ad. The following code was run to produce the file.; adata = sc.read_10x_mtx(; # the directory with the `.mtx` file; './data/filtered_gene_bc_matrices/hg19/',; # use gene symbols for the variable names (variables-axis index); var_names='gene_symbols',; # write a cache file for faster subsequent reading; cache=True,; ). adata.var_names_make_unique() # this is unnecessary if using 'gene_ids'; adata.write('write/pbmc3k_raw.h5ad', compression='gzip'). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.pbmc3k(); AnnData object with n_obs × n_vars = 2700 × 32738; var: 'gene_ids'. previous; scanpy.datasets.moignard15. next; scanpy.datasets.pbmc3k_processed. Contents; . pbmc3k(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:7176,Performance,cache,cachedir,7176,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:9935,Performance,cache,cache,9935,"canpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc3k. Contents . pbmc3k(). scanpy.datasets.pbmc3k#. scanpy.datasets.pbmc3k()[source]#; 3k PBMCs from 10x Genomics.; The data consists in 3k PBMCs from a Healthy Donor and is freely available; from 10x Genomics (file from this webpage).; The exact same data is also used in Seurat’s basic clustering tutorial. Note; This downloads 5.9 MB of data upon the first call of the function and stores it in; datasetdir/pbmc3k_raw.h5ad. The following code was run to produce the file.; adata = sc.read_10x_mtx(; # the directory with the `.mtx` file; './data/filtered_gene_bc_matrices/hg19/',; # use gene symbols for the variable names (variables-axis index); var_names='gene_symbols',; # write a cache file for faster subsequent reading; cache=True,; ). adata.var_names_make_unique() # this is unnecessary if using 'gene_ids'; adata.write('write/pbmc3k_raw.h5ad', compression='gzip'). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.pbmc3k(); AnnData object with n_obs × n_vars = 2700 × 32738; var: 'gene_ids'. previous; scanpy.datasets.moignard15. next; scanpy.datasets.pbmc3k_processed. Contents; . pbmc3k(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:9977,Performance,cache,cache,9977,"canpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc3k. Contents . pbmc3k(). scanpy.datasets.pbmc3k#. scanpy.datasets.pbmc3k()[source]#; 3k PBMCs from 10x Genomics.; The data consists in 3k PBMCs from a Healthy Donor and is freely available; from 10x Genomics (file from this webpage).; The exact same data is also used in Seurat’s basic clustering tutorial. Note; This downloads 5.9 MB of data upon the first call of the function and stores it in; datasetdir/pbmc3k_raw.h5ad. The following code was run to produce the file.; adata = sc.read_10x_mtx(; # the directory with the `.mtx` file; './data/filtered_gene_bc_matrices/hg19/',; # use gene symbols for the variable names (variables-axis index); var_names='gene_symbols',; # write a cache file for faster subsequent reading; cache=True,; ). adata.var_names_make_unique() # this is unnecessary if using 'gene_ids'; adata.write('write/pbmc3k_raw.h5ad', compression='gzip'). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.pbmc3k(); AnnData object with n_obs × n_vars = 2700 × 32738; var: 'gene_ids'. previous; scanpy.datasets.moignard15. next; scanpy.datasets.pbmc3k_processed. Contents; . pbmc3k(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:8417,Security,hash,hashsolo,8417,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc3k. Contents . pbmc3k(). scanpy.datasets.pbmc3k#. scanpy.datasets.pbmc3k()[source]#; 3k PBMCs from 10x Genomics.; The data consists in 3k PBMCs from a Healthy Donor and is fre,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:7444,Testability,log,logfile,7444,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:7483,Testability,log,logpath,7483,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:7789,Testability,log,logging,7789,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html:7818,Testability,log,logging,7818, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html:8110,Deployability,toggle,toggleswitch,8110,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k_processed.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html:9194,Deployability,release,release,9194,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc3k_processed. Contents . pbmc3k_processed(). scanpy.datasets.pbmc3k_processed#. scanpy.datasets.pbmc3k_processed()[source]#; Processed 3k PBMCs from 10x Genomics.; Processed using the basic tutorial Preprocessing and clustering 3k PBMCs (legacy workflow).; For preprocessing, cells are filtered out that have few gene counts or too high a percent_mito.; The counts are logarithmized and only genes marked by highly_variable_genes() are retained.; The obs variables n_counts and percent_mito are corrected for; using regress_out(), and values are scaled and clipped by scale().; Finally, pca() and neighbors() are calculated.; As analysis steps, the embeddings tsne() and umap() are performed.; Communities are identified using louvain() and marker genes using rank_genes_groups(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as",MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k_processed.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html:9716,Modifiability,variab,variables,9716,"ries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc3k_processed. Contents . pbmc3k_processed(). scanpy.datasets.pbmc3k_processed#. scanpy.datasets.pbmc3k_processed()[source]#; Processed 3k PBMCs from 10x Genomics.; Processed using the basic tutorial Preprocessing and clustering 3k PBMCs (legacy workflow).; For preprocessing, cells are filtered out that have few gene counts or too high a percent_mito.; The counts are logarithmized and only genes marked by highly_variable_genes() are retained.; The obs variables n_counts and percent_mito are corrected for; using regress_out(), and values are scaled and clipped by scale().; Finally, pca() and neighbors() are calculated.; As analysis steps, the embeddings tsne() and umap() are performed.; Communities are identified using louvain() and marker genes using rank_genes_groups(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.pbmc3k_processed(); AnnData object with n_obs × n_vars = 2638 × 1838; obs: 'n_genes', 'percent_mito', 'n_counts', 'louvain'; var: 'n_cells'; uns: 'draw_graph', 'louvain', 'louvain_colors', 'neighbors', 'pca', 'rank_genes_groups'; obsm: 'X_pca', 'X_tsne', 'X_umap', 'X_draw_graph_fr'; varm: 'PCs'; obsp: 'distances', 'connectivities'. previous; scanpy.datasets.pbmc3k. next; scanpy.datasets.pbmc68k_reduced. Contents; . pbmc3k_processed(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k_processed.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html:7186,Performance,cache,cachedir,7186,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k_processed.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html:9943,Performance,perform,performed,9943,"ries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc3k_processed. Contents . pbmc3k_processed(). scanpy.datasets.pbmc3k_processed#. scanpy.datasets.pbmc3k_processed()[source]#; Processed 3k PBMCs from 10x Genomics.; Processed using the basic tutorial Preprocessing and clustering 3k PBMCs (legacy workflow).; For preprocessing, cells are filtered out that have few gene counts or too high a percent_mito.; The counts are logarithmized and only genes marked by highly_variable_genes() are retained.; The obs variables n_counts and percent_mito are corrected for; using regress_out(), and values are scaled and clipped by scale().; Finally, pca() and neighbors() are calculated.; As analysis steps, the embeddings tsne() and umap() are performed.; Communities are identified using louvain() and marker genes using rank_genes_groups(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.pbmc3k_processed(); AnnData object with n_obs × n_vars = 2638 × 1838; obs: 'n_genes', 'percent_mito', 'n_counts', 'louvain'; var: 'n_cells'; uns: 'draw_graph', 'louvain', 'louvain_colors', 'neighbors', 'pca', 'rank_genes_groups'; obsm: 'X_pca', 'X_tsne', 'X_umap', 'X_draw_graph_fr'; varm: 'PCs'; obsp: 'distances', 'connectivities'. previous; scanpy.datasets.pbmc3k. next; scanpy.datasets.pbmc68k_reduced. Contents; . pbmc3k_processed(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k_processed.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html:8427,Security,hash,hashsolo,8427,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc3k_processed. Contents . pbmc3k_processed(). scanpy.datasets.pbmc3k_processed#. scanpy.datasets.pbmc3k_processed()[source]#; Processed 3k PBMCs from 10x Genomics.; Processed u,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k_processed.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html:7454,Testability,log,logfile,7454,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k_processed.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html:7493,Testability,log,logpath,7493,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k_processed.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html:7799,Testability,log,logging,7799,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k_processed.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html:7828,Testability,log,logging,7828, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k_processed.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html:9630,Testability,log,logarithmized,9630,"ny_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc3k_processed. Contents . pbmc3k_processed(). scanpy.datasets.pbmc3k_processed#. scanpy.datasets.pbmc3k_processed()[source]#; Processed 3k PBMCs from 10x Genomics.; Processed using the basic tutorial Preprocessing and clustering 3k PBMCs (legacy workflow).; For preprocessing, cells are filtered out that have few gene counts or too high a percent_mito.; The counts are logarithmized and only genes marked by highly_variable_genes() are retained.; The obs variables n_counts and percent_mito are corrected for; using regress_out(), and values are scaled and clipped by scale().; Finally, pca() and neighbors() are calculated.; As analysis steps, the embeddings tsne() and umap() are performed.; Communities are identified using louvain() and marker genes using rank_genes_groups(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.pbmc3k_processed(); AnnData object with n_obs × n_vars = 2638 × 1838; obs: 'n_genes', 'percent_mito', 'n_counts', 'louvain'; var: 'n_cells'; uns: 'draw_graph', 'louvain', 'louvain_colors', 'neighbors', 'pca', 'rank_genes_groups'; obsm: 'X_pca', 'X_tsne', 'X_umap', 'X_draw_graph_fr'; varm: 'PCs'; obsp: 'distances', 'connectivities'. previous; scanpy.datasets.pbmc3k. next; scanpy.datasets.pbmc68k_reduced. Contents; . pbmc3k_processed(). By Scanpy development team. ; © Copyright 2024, the Scanpy development t",MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc3k_processed.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc3k_processed.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html:8109,Deployability,toggle,toggleswitch,8109,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc68k_reduced.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html:9193,Deployability,release,release,9193,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc68k_reduced. Contents . pbmc68k_reduced(). scanpy.datasets.pbmc68k_reduced#. scanpy.datasets.pbmc68k_reduced()[source]#; Subsampled and processed 68k PBMCs.; PBMC 68k dataset from 10x Genomics.; The original PBMC 68k dataset was preprocessed with steps including; normalize_total()[1] and scale().; It was saved keeping only 724 cells and 221 highly variable genes.; The saved file contains the annotation of cell types (key: 'bulk_labels'),; UMAP coordinates, louvain clustering and gene rankings based on the; bulk_labels. [1]; Back when the dataset was created, normalize_per_cell() was used instead. Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.pbmc68k_reduced(); AnnData object with n_obs × n_vars = 700 × 765; obs: 'bulk_labels', 'n_genes', 'percent_mito', 'n_counts', 'S_score', 'G2M_score', 'phase",MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc68k_reduced.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html:9610,Modifiability,variab,variable,9610," scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc68k_reduced. Contents . pbmc68k_reduced(). scanpy.datasets.pbmc68k_reduced#. scanpy.datasets.pbmc68k_reduced()[source]#; Subsampled and processed 68k PBMCs.; PBMC 68k dataset from 10x Genomics.; The original PBMC 68k dataset was preprocessed with steps including; normalize_total()[1] and scale().; It was saved keeping only 724 cells and 221 highly variable genes.; The saved file contains the annotation of cell types (key: 'bulk_labels'),; UMAP coordinates, louvain clustering and gene rankings based on the; bulk_labels. [1]; Back when the dataset was created, normalize_per_cell() was used instead. Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.pbmc68k_reduced(); AnnData object with n_obs × n_vars = 700 × 765; obs: 'bulk_labels', 'n_genes', 'percent_mito', 'n_counts', 'S_score', 'G2M_score', 'phase', 'louvain'; var: 'n_counts', 'means', 'dispersions', 'dispersions_norm', 'highly_variable'; uns: 'bulk_labels_colors', 'louvain', 'louvain_colors', 'neighbors', 'pca', 'rank_genes_groups'; obsm: 'X_pca', 'X_umap'; varm: 'PCs'; obsp: 'distances', 'connectivities'. previous; scanpy.datasets.pbmc3k_processed. next; scanpy.datasets.paul15. Contents; . pbmc68k_reduced(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc68k_reduced.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html:7185,Performance,cache,cachedir,7185,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc68k_reduced.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html:8426,Security,hash,hashsolo,8426,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.pbmc68k_reduced. Contents . pbmc68k_reduced(). scanpy.datasets.pbmc68k_reduced#. scanpy.datasets.pbmc68k_reduced()[source]#; Subsampled and processed 68k PBMCs.; PBMC 68k dataset ,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc68k_reduced.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html:7453,Testability,log,logfile,7453,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc68k_reduced.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html:7492,Testability,log,logpath,7492,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc68k_reduced.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html:7798,Testability,log,logging,7798,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc68k_reduced.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html:7827,Testability,log,logging,7827, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.datasets.pbmc68k_reduced.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.pbmc68k_reduced.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:18,Deployability,toggle,toggleswitch,18,. scanpy.datasets.toggleswitch — scanpy. Skip to main content. Back to top. Ctrl+K. Installation; Tutorials; Basics; Preprocessing and clustering; Preprocessing and clustering 3k PBMCs (legacy workflow); Integrating data using ingest and BBKNN. Plotting; Core plotting functions; Customizing Scanpy plots. Trajectories; Trajectory inference for hematopoiesis in mouse. Spatial; Analysis and visualization of spatial transcriptomics data; Integrating spatial data with scRNA-seq using scanorama. Experimental; How to preprocess UMI count data with analytic Pearson residuals; Using dask with Scanpy. Usage Principles; How to; Using other kNN libraries in Scanpy; Plotting with Marsilea. API; Preprocessing: pp; scanpy.pp.calculate_qc_metrics; scanpy.pp.filter_cells; scanpy.pp.filter_genes; scanpy.pp.highly_variable_genes; scanpy.pp.log1p; scanpy.pp.pca; scanpy.pp.normalize_total; scanpy.pp.regress_out; scanpy.pp.scale; scanpy.pp.subsample; scanpy.pp.downsample_counts; scanpy.pp.recipe_zheng17; scanpy.pp.recipe_weinreb17; scanpy.pp.recipe_seurat; scanpy.pp.combat; scanpy.pp.scrublet; scanpy.pp.scrublet_simulate_doublets; scanpy.pp.neighbors. Tools: tl; scanpy.pp.pca; scanpy.tl.tsne; scanpy.tl.umap; scanpy.tl.draw_graph; scanpy.tl.diffmap; scanpy.tl.embedding_density; scanpy.tl.leiden; scanpy.tl.louvain; scanpy.tl.dendrogram; scanpy.tl.dpt; scanpy.tl.paga; scanpy.tl.ingest; scanpy.tl.rank_genes_groups; scanpy.tl.filter_rank_genes_groups; scanpy.tl.marker_gene_overlap; scanpy.tl.score_genes; scanpy.tl.score_genes_cell_cycle; scanpy.tl.sim. Plotting: pl; scanpy.pl.scatter; scanpy.pl.heatmap; scanpy.pl.dotplot; scanpy.pl.tracksplot; scanpy.pl.violin; scanpy.pl.stacked_violin; scanpy.pl.matrixplot; scanpy.pl.clustermap; scanpy.pl.ranking; scanpy.pl.dendrogram; scanpy.pl.DotPlot; scanpy.pl.DotPlot.DEFAULT_CATEGORY_HEIGHT; scanpy.pl.DotPlot.DEFAULT_CATEGORY_WIDTH; scanpy.pl.DotPlot.DEFAULT_COLORMAP; scanpy.pl.DotPlot.DEFAULT_COLOR_LEGEND_TITLE; scanpy.pl.DotPlot.DEFAULT_COLOR_ON; scanp,MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:8106,Deployability,toggle,toggleswitch,8106,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:9190,Deployability,release,release,9190,"anpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.toggleswitch. Contents . toggleswitch(). scanpy.datasets.toggleswitch#. scanpy.datasets.toggleswitch()[source]#; Simulated toggleswitch.; Data obtained simulating a simple toggleswitch [Gardner et al., 2000]; Simulate via sim(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.toggleswitch(); UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; utils.warn_names_duplicates(""obs""); AnnData object with n_obs × n_vars = 200 × 2; uns: 'iroot'. previous; scanpy.datasets.paul15. next; scanpy.datasets.visium_sge. Contents; . toggleswitch(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:9253,Deployability,toggle,toggleswitch,9253,"anpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.toggleswitch. Contents . toggleswitch(). scanpy.datasets.toggleswitch#. scanpy.datasets.toggleswitch()[source]#; Simulated toggleswitch.; Data obtained simulating a simple toggleswitch [Gardner et al., 2000]; Simulate via sim(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.toggleswitch(); UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; utils.warn_names_duplicates(""obs""); AnnData object with n_obs × n_vars = 200 × 2; uns: 'iroot'. previous; scanpy.datasets.paul15. next; scanpy.datasets.visium_sge. Contents; . toggleswitch(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:9278,Deployability,toggle,toggleswitch,9278,"anpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.toggleswitch. Contents . toggleswitch(). scanpy.datasets.toggleswitch#. scanpy.datasets.toggleswitch()[source]#; Simulated toggleswitch.; Data obtained simulating a simple toggleswitch [Gardner et al., 2000]; Simulate via sim(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.toggleswitch(); UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; utils.warn_names_duplicates(""obs""); AnnData object with n_obs × n_vars = 200 × 2; uns: 'iroot'. previous; scanpy.datasets.paul15. next; scanpy.datasets.visium_sge. Contents; . toggleswitch(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:9310,Deployability,toggle,toggleswitch,9310,"anpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.toggleswitch. Contents . toggleswitch(). scanpy.datasets.toggleswitch#. scanpy.datasets.toggleswitch()[source]#; Simulated toggleswitch.; Data obtained simulating a simple toggleswitch [Gardner et al., 2000]; Simulate via sim(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.toggleswitch(); UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; utils.warn_names_duplicates(""obs""); AnnData object with n_obs × n_vars = 200 × 2; uns: 'iroot'. previous; scanpy.datasets.paul15. next; scanpy.datasets.visium_sge. Contents; . toggleswitch(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:9341,Deployability,toggle,toggleswitch,9341,"anpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.toggleswitch. Contents . toggleswitch(). scanpy.datasets.toggleswitch#. scanpy.datasets.toggleswitch()[source]#; Simulated toggleswitch.; Data obtained simulating a simple toggleswitch [Gardner et al., 2000]; Simulate via sim(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.toggleswitch(); UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; utils.warn_names_duplicates(""obs""); AnnData object with n_obs × n_vars = 200 × 2; uns: 'iroot'. previous; scanpy.datasets.paul15. next; scanpy.datasets.visium_sge. Contents; . toggleswitch(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:9376,Deployability,toggle,toggleswitch,9376,"anpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.toggleswitch. Contents . toggleswitch(). scanpy.datasets.toggleswitch#. scanpy.datasets.toggleswitch()[source]#; Simulated toggleswitch.; Data obtained simulating a simple toggleswitch [Gardner et al., 2000]; Simulate via sim(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.toggleswitch(); UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; utils.warn_names_duplicates(""obs""); AnnData object with n_obs × n_vars = 200 × 2; uns: 'iroot'. previous; scanpy.datasets.paul15. next; scanpy.datasets.visium_sge. Contents; . toggleswitch(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:9425,Deployability,toggle,toggleswitch,9425,"anpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.toggleswitch. Contents . toggleswitch(). scanpy.datasets.toggleswitch#. scanpy.datasets.toggleswitch()[source]#; Simulated toggleswitch.; Data obtained simulating a simple toggleswitch [Gardner et al., 2000]; Simulate via sim(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.toggleswitch(); UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; utils.warn_names_duplicates(""obs""); AnnData object with n_obs × n_vars = 200 × 2; uns: 'iroot'. previous; scanpy.datasets.paul15. next; scanpy.datasets.visium_sge. Contents; . toggleswitch(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:9589,Deployability,toggle,toggleswitch,9589,"anpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.toggleswitch. Contents . toggleswitch(). scanpy.datasets.toggleswitch#. scanpy.datasets.toggleswitch()[source]#; Simulated toggleswitch.; Data obtained simulating a simple toggleswitch [Gardner et al., 2000]; Simulate via sim(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.toggleswitch(); UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; utils.warn_names_duplicates(""obs""); AnnData object with n_obs × n_vars = 200 × 2; uns: 'iroot'. previous; scanpy.datasets.paul15. next; scanpy.datasets.visium_sge. Contents; . toggleswitch(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:9881,Deployability,toggle,toggleswitch,9881,"anpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.toggleswitch. Contents . toggleswitch(). scanpy.datasets.toggleswitch#. scanpy.datasets.toggleswitch()[source]#; Simulated toggleswitch.; Data obtained simulating a simple toggleswitch [Gardner et al., 2000]; Simulate via sim(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.toggleswitch(); UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; utils.warn_names_duplicates(""obs""); AnnData object with n_obs × n_vars = 200 × 2; uns: 'iroot'. previous; scanpy.datasets.paul15. next; scanpy.datasets.visium_sge. Contents; . toggleswitch(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:7182,Performance,cache,cachedir,7182,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:8423,Security,hash,hashsolo,8423,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.toggleswitch. Contents . toggleswitch(). scanpy.datasets.toggleswitch#. scanpy.datasets.toggleswitch()[source]#; Simulated toggleswitch.; Data obtained simulating a simple toggles,MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:7450,Testability,log,logfile,7450,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:7489,Testability,log,logpath,7489,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:7795,Testability,log,logging,7795,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:7824,Testability,log,logging,7824, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html:9418,Usability,simpl,simple,9418,"anpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.toggleswitch. Contents . toggleswitch(). scanpy.datasets.toggleswitch#. scanpy.datasets.toggleswitch()[source]#; Simulated toggleswitch.; Data obtained simulating a simple toggleswitch [Gardner et al., 2000]; Simulate via sim(). Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.toggleswitch(); UserWarning: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.; utils.warn_names_duplicates(""obs""); AnnData object with n_obs × n_vars = 200 × 2; uns: 'iroot'. previous; scanpy.datasets.paul15. next; scanpy.datasets.visium_sge. Contents; . toggleswitch(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.toggleswitch.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.toggleswitch.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html:8104,Deployability,toggle,toggleswitch,8104,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.datasets.visium_sge.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html:9188,Deployability,release,release,9188,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.visium_sge. Contents . visium_sge(). scanpy.datasets.visium_sge#. scanpy.datasets.visium_sge(sample_id='V1_Breast_Cancer_Block_A_Section_1', *, include_hires_tiff=False)[source]#; Processed Visium Spatial Gene Expression data from 10x Genomics’ database.; The database can be browsed online to find the sample_id you want. Parameters:. sample_id Literal['V1_Breast_Cancer_Block_A_Section_1', 'V1_Breast_Cancer_Block_A_Section_2', 'V1_Human_Heart', 'V1_Human_Lymph_Node', 'V1_Mouse_Kidney', 'V1_Adult_Mouse_Brain', 'V1_Mouse_Brain_Sagittal_Posterior', 'V1_Mouse_Brain_Sagittal_Posterior_Section_2', 'V1_Mouse_Brain_Sagittal_Anterior', 'V1_Mouse_Brain_Sagittal_Anterior_Section_2', 'V1_Human_Brain_Section_1', 'V1_Human_Brain_Section_2', 'V1_Adult_Mouse_Brain_Coronal_Section_1', 'V1_Adult_Mouse_Brain_Coronal_Section_2', 'Targeted_Visium_Human_Cerebellum_Neuroscience', 'P",MatchSource.WIKI,en/stable/generated/scanpy.datasets.visium_sge.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html:11276,Deployability,toggle,toggleswitch,11276,"rce]#; Processed Visium Spatial Gene Expression data from 10x Genomics’ database.; The database can be browsed online to find the sample_id you want. Parameters:. sample_id Literal['V1_Breast_Cancer_Block_A_Section_1', 'V1_Breast_Cancer_Block_A_Section_2', 'V1_Human_Heart', 'V1_Human_Lymph_Node', 'V1_Mouse_Kidney', 'V1_Adult_Mouse_Brain', 'V1_Mouse_Brain_Sagittal_Posterior', 'V1_Mouse_Brain_Sagittal_Posterior_Section_2', 'V1_Mouse_Brain_Sagittal_Anterior', 'V1_Mouse_Brain_Sagittal_Anterior_Section_2', 'V1_Human_Brain_Section_1', 'V1_Human_Brain_Section_2', 'V1_Adult_Mouse_Brain_Coronal_Section_1', 'V1_Adult_Mouse_Brain_Coronal_Section_2', 'Targeted_Visium_Human_Cerebellum_Neuroscience', 'Parent_Visium_Human_Cerebellum', 'Targeted_Visium_Human_SpinalCord_Neuroscience', 'Parent_Visium_Human_SpinalCord', 'Targeted_Visium_Human_Glioblastoma_Pan_Cancer', 'Parent_Visium_Human_Glioblastoma', 'Targeted_Visium_Human_BreastCancer_Immunology', 'Parent_Visium_Human_BreastCancer', 'Targeted_Visium_Human_OvarianCancer_Pan_Cancer', 'Targeted_Visium_Human_OvarianCancer_Immunology', 'Parent_Visium_Human_OvarianCancer', 'Targeted_Visium_Human_ColorectalCancer_GeneSignature', 'Parent_Visium_Human_ColorectalCancer'] (default: 'V1_Breast_Cancer_Block_A_Section_1')The ID of the data sample in 10x’s spatial database. include_hires_tiff bool (default: False)Download and include the high-resolution tissue image (tiff) in; adata.uns[""spatial""][sample_id][""metadata""][""source_image_path""]. Return type:; AnnData. Returns:; Annotated data matrix. Examples; >>> import scanpy as sc; >>> sc.datasets.visium_sge(sample_id='V1_Breast_Cancer_Block_A_Section_1'); AnnData object with n_obs × n_vars = 3798 × 36601; obs: 'in_tissue', 'array_row', 'array_col'; var: 'gene_ids', 'feature_types', 'genome'; uns: 'spatial'; obsm: 'spatial'. previous; scanpy.datasets.toggleswitch. next; Deprecated functions. Contents; . visium_sge(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.datasets.visium_sge.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html:7180,Performance,cache,cachedir,7180,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.datasets.visium_sge.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html:8421,Security,hash,hashsolo,8421,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.datasets.visium_sge. Contents . visium_sge(). scanpy.datasets.visium_sge#. scanpy.datasets.visium_sge(sample_id='V1_Breast_Cancer_Block_A_Section_1', *, include_hires_tiff=False)[source]#;",MatchSource.WIKI,en/stable/generated/scanpy.datasets.visium_sge.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html:7448,Testability,log,logfile,7448,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.datasets.visium_sge.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html:7487,Testability,log,logpath,7487,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.datasets.visium_sge.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html:7793,Testability,log,logging,7793,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.datasets.visium_sge.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html:7822,Testability,log,logging,7822, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.datasets.visium_sge.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.datasets.visium_sge.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:8122,Deployability,toggle,toggleswitch,8122,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:9206,Deployability,release,release,9206,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.experimental.pp.highly_variable_genes. Contents . highly_variable_genes(). scanpy.experimental.pp.highly_variable_genes#. scanpy.experimental.pp.highly_variable_genes(adata, *, theta=100, clip=None, n_top_genes=None, batch_key=None, chunksize=1000, flavor='pearson_residuals', check_values=True, layer=None, subset=False, inplace=True)[source]#; Select highly variable genes using analytic Pearson residuals [Lause et al., 2021].; In Lause et al. [2021], Pearson residuals of a negative binomial offset model are computed; (with overdispersion theta shared across genes). By default, overdispersion; theta=100 is used and residuals are clipped to sqrt(n_obs). Finally, genes; are ranked by residual variance.; Expects raw count input. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:12217,Deployability,update,update,12217," within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. flavor Literal['pearson_residuals'] (default: 'pearson_residuals')Choose the flavor for identifying highly variable genes. In this experimental; version, only ‘pearson_residuals’ is functional. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is used. subset bool (default: False)If True, subset the data to highly-variable genes after finding them.; Otherwise merely indicate highly variable genes in adata.var (see below). inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; DataFrame | None. Returns:; If inplace=True, adata.var is updated with the following fields. Otherwise,; returns the same fields as DataFrame. highly_variableboolboolean indicator of highly-variable genes. meansfloatmeans per gene. variancesfloatvariance per gene. residual_variancesfloatFor flavor='pearson_residuals', residual variance per gene. Averaged in the; case of multiple batches. highly_variable_rankfloatFor flavor='pearson_residuals', rank of the gene according to residual.; variance, median rank in the case of multiple batches. highly_variable_nbatchesintIf batch_key given, denotes in how many batches genes are detected as HVG. highly_variable_intersectionboolIf batch_key given, denotes the genes that are highly variable in all batches. Notes; Experimental version of sc.pp.highly_variable_genes(). previous; scanpy.experimental.pp.normalize_pearson_residuals_pc",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:12387,Deployability,update,updated,12387,"al variance. Choosing a smaller value will reduce; the required memory. flavor Literal['pearson_residuals'] (default: 'pearson_residuals')Choose the flavor for identifying highly variable genes. In this experimental; version, only ‘pearson_residuals’ is functional. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is used. subset bool (default: False)If True, subset the data to highly-variable genes after finding them.; Otherwise merely indicate highly variable genes in adata.var (see below). inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; DataFrame | None. Returns:; If inplace=True, adata.var is updated with the following fields. Otherwise,; returns the same fields as DataFrame. highly_variableboolboolean indicator of highly-variable genes. meansfloatmeans per gene. variancesfloatvariance per gene. residual_variancesfloatFor flavor='pearson_residuals', residual variance per gene. Averaged in the; case of multiple batches. highly_variable_rankfloatFor flavor='pearson_residuals', rank of the gene according to residual.; variance, median rank in the case of multiple batches. highly_variable_nbatchesintIf batch_key given, denotes in how many batches genes are detected as HVG. highly_variable_intersectionboolIf batch_key given, denotes the genes that are highly variable in all batches. Notes; Experimental version of sc.pp.highly_variable_genes(). previous; scanpy.experimental.pp.normalize_pearson_residuals_pca. next; scanpy.experimental.pp.recipe_pearson_residuals. Contents; . highly_variable_genes(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:11429,Energy Efficiency,reduce,reduce,11429," If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes int | None (default: None)Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3' or; flavor='pearson_residuals'. batch_key str | None (default: None)If specified, highly-variable genes are selected within each batch separately; and merged. This simple process avoids the selection of batch-specific genes; and acts as a lightweight batch correction method. Genes are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. flavor Literal['pearson_residuals'] (default: 'pearson_residuals')Choose the flavor for identifying highly variable genes. In this experimental; version, only ‘pearson_residuals’ is functional. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is used. subset bool (default: False)If True, subset the data to highly-variable genes after finding them.; Otherwise merely indicate highly variable genes in adata.var (see below). inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; DataFrame | None. Returns:; If inplace=True, adata.var is updated with the following fields. Otherw",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:9620,Modifiability,variab,variable,9620,"external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.experimental.pp.highly_variable_genes. Contents . highly_variable_genes(). scanpy.experimental.pp.highly_variable_genes#. scanpy.experimental.pp.highly_variable_genes(adata, *, theta=100, clip=None, n_top_genes=None, batch_key=None, chunksize=1000, flavor='pearson_residuals', check_values=True, layer=None, subset=False, inplace=True)[source]#; Select highly variable genes using analytic Pearson residuals [Lause et al., 2021].; In Lause et al. [2021], Pearson residuals of a negative binomial offset model are computed; (with overdispersion theta shared across genes). By default, overdispersion; theta=100 is used and residuals are clipped to sqrt(n_obs). Finally, genes; are ranked by residual variance.; Expects raw count input. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in t",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:10727,Modifiability,variab,variable,10727,"21], Pearson residuals of a negative binomial offset model are computed; (with overdispersion theta shared across genes). By default, overdispersion; theta=100 is used and residuals are clipped to sqrt(n_obs). Finally, genes; are ranked by residual variance.; Expects raw count input. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes int | None (default: None)Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3' or; flavor='pearson_residuals'. batch_key str | None (default: None)If specified, highly-variable genes are selected within each batch separately; and merged. This simple process avoids the selection of batch-specific genes; and acts as a lightweight batch correction method. Genes are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. flavor Literal['pearson_residuals'] (default: 'pearson_residuals')Choose the flavor for identifying highly variable genes. In this experimental; version, only ‘pearson_residuals’ is functional. check_values bool (default: True)If True, checks if counts ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:10872,Modifiability,variab,variable,10872," and residuals are clipped to sqrt(n_obs). Finally, genes; are ranked by residual variance.; Expects raw count input. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes int | None (default: None)Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3' or; flavor='pearson_residuals'. batch_key str | None (default: None)If specified, highly-variable genes are selected within each batch separately; and merged. This simple process avoids the selection of batch-specific genes; and acts as a lightweight batch correction method. Genes are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. flavor Literal['pearson_residuals'] (default: 'pearson_residuals')Choose the flavor for identifying highly variable genes. In this experimental; version, only ‘pearson_residuals’ is functional. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to Fal",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:11565,Modifiability,variab,variable,11565," the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes int | None (default: None)Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3' or; flavor='pearson_residuals'. batch_key str | None (default: None)If specified, highly-variable genes are selected within each batch separately; and merged. This simple process avoids the selection of batch-specific genes; and acts as a lightweight batch correction method. Genes are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. flavor Literal['pearson_residuals'] (default: 'pearson_residuals')Choose the flavor for identifying highly variable genes. In this experimental; version, only ‘pearson_residuals’ is functional. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is used. subset bool (default: False)If True, subset the data to highly-variable genes after finding them.; Otherwise merely indicate highly variable genes in adata.var (see below). inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; DataFrame | None. Returns:; If inplace=True, adata.var is updated with the following fields. Otherwise,; returns the same fields as DataFrame. highly_variableboolboolean indicator of highly-",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:12070,Modifiability,variab,variable,12070,"od. Genes are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. flavor Literal['pearson_residuals'] (default: 'pearson_residuals')Choose the flavor for identifying highly variable genes. In this experimental; version, only ‘pearson_residuals’ is functional. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is used. subset bool (default: False)If True, subset the data to highly-variable genes after finding them.; Otherwise merely indicate highly variable genes in adata.var (see below). inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; DataFrame | None. Returns:; If inplace=True, adata.var is updated with the following fields. Otherwise,; returns the same fields as DataFrame. highly_variableboolboolean indicator of highly-variable genes. meansfloatmeans per gene. variancesfloatvariance per gene. residual_variancesfloatFor flavor='pearson_residuals', residual variance per gene. Averaged in the; case of multiple batches. highly_variable_rankfloatFor flavor='pearson_residuals', rank of the gene according to residual.; variance, median rank in the case of multiple batches. highly_variable_nbatchesintIf batch_key given, denotes in how many batches genes are detected as HVG. highly_variable_intersectionboolIf batch_key given, denotes the genes that are h",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:12139,Modifiability,variab,variable,12139,"rson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. flavor Literal['pearson_residuals'] (default: 'pearson_residuals')Choose the flavor for identifying highly variable genes. In this experimental; version, only ‘pearson_residuals’ is functional. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is used. subset bool (default: False)If True, subset the data to highly-variable genes after finding them.; Otherwise merely indicate highly variable genes in adata.var (see below). inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; DataFrame | None. Returns:; If inplace=True, adata.var is updated with the following fields. Otherwise,; returns the same fields as DataFrame. highly_variableboolboolean indicator of highly-variable genes. meansfloatmeans per gene. variancesfloatvariance per gene. residual_variancesfloatFor flavor='pearson_residuals', residual variance per gene. Averaged in the; case of multiple batches. highly_variable_rankfloatFor flavor='pearson_residuals', rank of the gene according to residual.; variance, median rank in the case of multiple batches. highly_variable_nbatchesintIf batch_key given, denotes in how many batches genes are detected as HVG. highly_variable_intersectionboolIf batch_key given, denotes the genes that are highly variable in all batches. Notes; Experimental version of sc.pp.highly_vari",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:12519,Modifiability,variab,variable,12519,"al variance. Choosing a smaller value will reduce; the required memory. flavor Literal['pearson_residuals'] (default: 'pearson_residuals')Choose the flavor for identifying highly variable genes. In this experimental; version, only ‘pearson_residuals’ is functional. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is used. subset bool (default: False)If True, subset the data to highly-variable genes after finding them.; Otherwise merely indicate highly variable genes in adata.var (see below). inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; DataFrame | None. Returns:; If inplace=True, adata.var is updated with the following fields. Otherwise,; returns the same fields as DataFrame. highly_variableboolboolean indicator of highly-variable genes. meansfloatmeans per gene. variancesfloatvariance per gene. residual_variancesfloatFor flavor='pearson_residuals', residual variance per gene. Averaged in the; case of multiple batches. highly_variable_rankfloatFor flavor='pearson_residuals', rank of the gene according to residual.; variance, median rank in the case of multiple batches. highly_variable_nbatchesintIf batch_key given, denotes in how many batches genes are detected as HVG. highly_variable_intersectionboolIf batch_key given, denotes the genes that are highly variable in all batches. Notes; Experimental version of sc.pp.highly_variable_genes(). previous; scanpy.experimental.pp.normalize_pearson_residuals_pca. next; scanpy.experimental.pp.recipe_pearson_residuals. Contents; . highly_variable_genes(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:13061,Modifiability,variab,variable,13061,"al variance. Choosing a smaller value will reduce; the required memory. flavor Literal['pearson_residuals'] (default: 'pearson_residuals')Choose the flavor for identifying highly variable genes. In this experimental; version, only ‘pearson_residuals’ is functional. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is used. subset bool (default: False)If True, subset the data to highly-variable genes after finding them.; Otherwise merely indicate highly variable genes in adata.var (see below). inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; DataFrame | None. Returns:; If inplace=True, adata.var is updated with the following fields. Otherwise,; returns the same fields as DataFrame. highly_variableboolboolean indicator of highly-variable genes. meansfloatmeans per gene. variancesfloatvariance per gene. residual_variancesfloatFor flavor='pearson_residuals', residual variance per gene. Averaged in the; case of multiple batches. highly_variable_rankfloatFor flavor='pearson_residuals', rank of the gene according to residual.; variance, median rank in the case of multiple batches. highly_variable_nbatchesintIf batch_key given, denotes in how many batches genes are detected as HVG. highly_variable_intersectionboolIf batch_key given, denotes the genes that are highly variable in all batches. Notes; Experimental version of sc.pp.highly_variable_genes(). previous; scanpy.experimental.pp.normalize_pearson_residuals_pca. next; scanpy.experimental.pp.recipe_pearson_residuals. Contents; . highly_variable_genes(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:7198,Performance,cache,cachedir,7198,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:10962,Safety,avoid,avoids,10962,"meters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes int | None (default: None)Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3' or; flavor='pearson_residuals'. batch_key str | None (default: None)If specified, highly-variable genes are selected within each batch separately; and merged. This simple process avoids the selection of batch-specific genes; and acts as a lightweight batch correction method. Genes are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. flavor Literal['pearson_residuals'] (default: 'pearson_residuals')Choose the flavor for identifying highly variable genes. In this experimental; version, only ‘pearson_residuals’ is functional. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:12958,Safety,detect,detected,12958,"al variance. Choosing a smaller value will reduce; the required memory. flavor Literal['pearson_residuals'] (default: 'pearson_residuals')Choose the flavor for identifying highly variable genes. In this experimental; version, only ‘pearson_residuals’ is functional. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is used. subset bool (default: False)If True, subset the data to highly-variable genes after finding them.; Otherwise merely indicate highly variable genes in adata.var (see below). inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; DataFrame | None. Returns:; If inplace=True, adata.var is updated with the following fields. Otherwise,; returns the same fields as DataFrame. highly_variableboolboolean indicator of highly-variable genes. meansfloatmeans per gene. variancesfloatvariance per gene. residual_variancesfloatFor flavor='pearson_residuals', residual variance per gene. Averaged in the; case of multiple batches. highly_variable_rankfloatFor flavor='pearson_residuals', rank of the gene according to residual.; variance, median rank in the case of multiple batches. highly_variable_nbatchesintIf batch_key given, denotes in how many batches genes are detected as HVG. highly_variable_intersectionboolIf batch_key given, denotes the genes that are highly variable in all batches. Notes; Experimental version of sc.pp.highly_variable_genes(). previous; scanpy.experimental.pp.normalize_pearson_residuals_pca. next; scanpy.experimental.pp.recipe_pearson_residuals. Contents; . highly_variable_genes(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:8439,Security,hash,hashsolo,8439,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.experimental.pp.highly_variable_genes. Contents . highly_variable_genes(). scanpy.experimental.pp.highly_variable_genes#. scanpy.experimental.pp.highly_variable_genes(adata, *, theta=100, ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:7466,Testability,log,logfile,7466,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:7505,Testability,log,logpath,7505,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:7811,Testability,log,logging,7811,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:7840,Testability,log,logging,7840, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html:10947,Usability,simpl,simple,10947,"meters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes int | None (default: None)Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3' or; flavor='pearson_residuals'. batch_key str | None (default: None)If specified, highly-variable genes are selected within each batch separately; and merged. This simple process avoids the selection of batch-specific genes; and acts as a lightweight batch correction method. Genes are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. flavor Literal['pearson_residuals'] (default: 'pearson_residuals')Choose the flavor for identifying highly variable genes. In this experimental; version, only ‘pearson_residuals’ is functional. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.highly_variable_genes.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html:8128,Deployability,toggle,toggleswitch,8128,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html:9212,Deployability,release,release,9212,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.experimental.pp.normalize_pearson_residuals. Contents . normalize_pearson_residuals(). scanpy.experimental.pp.normalize_pearson_residuals#. scanpy.experimental.pp.normalize_pearson_residuals(adata, *, theta=100, clip=None, check_values=True, layer=None, inplace=True, copy=False)[source]#; Applies analytic Pearson residual normalization, based on Lause et al. [2021].; The residuals are based on a negative binomial offset model with overdispersion; theta shared across genes. By default, residuals are clipped to sqrt(n_obs); and overdispersion theta=100 is used.; Expects raw count input. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html:10927,Deployability,update,update,10927,"obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is used. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. copy bool (default: False)If True, the function runs on a copy of the input object and returns the; modified copy. Otherwise, the input object is modified direcly. Not compatible; with inplace=False. Return type:; AnnData | dict[str, ndarray] | None. Returns:; If inplace=True, adata.X or the selected layer in adata.layers is updated; with the normalized values. adata.uns is updated with the following fields.; If inplace=False, the same fields are returned as dictionary with the; normalized values in results_dict['X']. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter theta. .uns['pearson_residuals_normalization']['clip']The used value of the clipping parameter. .uns['pearson_residuals_normalization']['computed_on']The name of the layer on which the residuals were computed. previous; Experimental. next; scanpy.experimental.pp.normalize_pears",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html:11352,Deployability,update,updated,11352,"for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is used. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. copy bool (default: False)If True, the function runs on a copy of the input object and returns the; modified copy. Otherwise, the input object is modified direcly. Not compatible; with inplace=False. Return type:; AnnData | dict[str, ndarray] | None. Returns:; If inplace=True, adata.X or the selected layer in adata.layers is updated; with the normalized values. adata.uns is updated with the following fields.; If inplace=False, the same fields are returned as dictionary with the; normalized values in results_dict['X']. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter theta. .uns['pearson_residuals_normalization']['clip']The used value of the clipping parameter. .uns['pearson_residuals_normalization']['computed_on']The name of the layer on which the residuals were computed. previous; Experimental. next; scanpy.experimental.pp.normalize_pearson_residuals_pca. Contents; . normalize_pearson_residuals(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html:11402,Deployability,update,updated,11402,"for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is used. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. copy bool (default: False)If True, the function runs on a copy of the input object and returns the; modified copy. Otherwise, the input object is modified direcly. Not compatible; with inplace=False. Return type:; AnnData | dict[str, ndarray] | None. Returns:; If inplace=True, adata.X or the selected layer in adata.layers is updated; with the normalized values. adata.uns is updated with the following fields.; If inplace=False, the same fields are returned as dictionary with the; normalized values in results_dict['X']. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter theta. .uns['pearson_residuals_normalization']['clip']The used value of the clipping parameter. .uns['pearson_residuals_normalization']['computed_on']The name of the layer on which the residuals were computed. previous; Experimental. next; scanpy.experimental.pp.normalize_pearson_residuals_pca. Contents; . normalize_pearson_residuals(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html:11342,Modifiability,layers,layers,11342,"for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. layer str | None (default: None)Layer to use as input instead of X. If None, X is used. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. copy bool (default: False)If True, the function runs on a copy of the input object and returns the; modified copy. Otherwise, the input object is modified direcly. Not compatible; with inplace=False. Return type:; AnnData | dict[str, ndarray] | None. Returns:; If inplace=True, adata.X or the selected layer in adata.layers is updated; with the normalized values. adata.uns is updated with the following fields.; If inplace=False, the same fields are returned as dictionary with the; normalized values in results_dict['X']. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter theta. .uns['pearson_residuals_normalization']['clip']The used value of the clipping parameter. .uns['pearson_residuals_normalization']['computed_on']The name of the layer on which the residuals were computed. previous; Experimental. next; scanpy.experimental.pp.normalize_pearson_residuals_pca. Contents; . normalize_pearson_residuals(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html:7204,Performance,cache,cachedir,7204,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html:8445,Security,hash,hashsolo,8445,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.experimental.pp.normalize_pearson_residuals. Contents . normalize_pearson_residuals(). scanpy.experimental.pp.normalize_pearson_residuals#. scanpy.experimental.pp.normalize_pearson_residua,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html:7472,Testability,log,logfile,7472,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html:7511,Testability,log,logpath,7511,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html:7817,Testability,log,logging,7817,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html:7846,Testability,log,logging,7846, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:11299,Availability,avail,available,11299,"son residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_comps int | None (default: 50)Number of principal components to compute in the PCA step. random_state float (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca Mapping[str, Any] (default: mappingproxy({}))Dictionary of further keyword arguments passed on to scanpy.pp.pca(). mask_var ndarray | str | None | Empty (default: _empty)To run only on a certain set of genes given by a boolean array; or a string referring to an array in var.; By default, uses .var['highly_variable'] if available, else everything. use_highly_variable bool | None (default: None)Whether to use highly variable genes only, stored in; .var['highly_variable'].; By default uses them if they have been determined beforehand. Deprecated since version 1.10.0: Use mask_var instead. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; AnnData | None. Returns:; If inplace=False, returns the Pearson residual-based PCA results (as AnnData; object). If inplace=True, updates adata with the following fields:. .uns['pearson_residuals_normalization']['pearson_residuals_df']The subset of highly variable genes, normalized by Pearson residuals. .uns['pe",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:8132,Deployability,toggle,toggleswitch,8132,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:9216,Deployability,release,release,9216,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.experimental.pp.normalize_pearson_residuals_pca. Contents . normalize_pearson_residuals_pca(). scanpy.experimental.pp.normalize_pearson_residuals_pca#. scanpy.experimental.pp.normalize_pearson_residuals_pca(adata, *, theta=100, clip=None, n_comps=50, random_state=0, kwargs_pca=mappingproxy({}), mask_var=_empty, use_highly_variable=None, check_values=True, inplace=True)[source]#; Applies analytic Pearson residual normalization and PCA, based on Lause et al. [2021].; The residuals are based on a negative binomial offset model with overdispersion; theta shared across genes. By default, residuals are clipped to sqrt(n_obs),; overdispersion theta=100 is used, and PCA is run with 50 components.; Operates on the subset of highly variable genes in adata.var['highly_variable']; by default. Expects raw count input. Parameters:. adata AnnDataThe annotated data matrix of shape n_",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:11875,Deployability,update,update,11875,"loat (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca Mapping[str, Any] (default: mappingproxy({}))Dictionary of further keyword arguments passed on to scanpy.pp.pca(). mask_var ndarray | str | None | Empty (default: _empty)To run only on a certain set of genes given by a boolean array; or a string referring to an array in var.; By default, uses .var['highly_variable'] if available, else everything. use_highly_variable bool | None (default: None)Whether to use highly variable genes only, stored in; .var['highly_variable'].; By default uses them if they have been determined beforehand. Deprecated since version 1.10.0: Use mask_var instead. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; AnnData | None. Returns:; If inplace=False, returns the Pearson residual-based PCA results (as AnnData; object). If inplace=True, updates adata with the following fields:. .uns['pearson_residuals_normalization']['pearson_residuals_df']The subset of highly variable genes, normalized by Pearson residuals. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter theta. .uns['pearson_residuals_normalization']['clip']The used value of the clipping parameter. .obsm['X_pca']PCA representation of data after gene selection (if applicable) and Pearson; residual normalization. .varm['PCs']The principal components containing the loadings. When inplace=True and; use_highly_variable=True, this will contain empty rows for the genes not; selected. .uns['pca']['variance_ratio']Ratio of explained variance. .uns['pca']['variance']Explained variance, eq",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:12117,Deployability,update,updates,12117,"ty (default: _empty)To run only on a certain set of genes given by a boolean array; or a string referring to an array in var.; By default, uses .var['highly_variable'] if available, else everything. use_highly_variable bool | None (default: None)Whether to use highly variable genes only, stored in; .var['highly_variable'].; By default uses them if they have been determined beforehand. Deprecated since version 1.10.0: Use mask_var instead. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; AnnData | None. Returns:; If inplace=False, returns the Pearson residual-based PCA results (as AnnData; object). If inplace=True, updates adata with the following fields:. .uns['pearson_residuals_normalization']['pearson_residuals_df']The subset of highly variable genes, normalized by Pearson residuals. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter theta. .uns['pearson_residuals_normalization']['clip']The used value of the clipping parameter. .obsm['X_pca']PCA representation of data after gene selection (if applicable) and Pearson; residual normalization. .varm['PCs']The principal components containing the loadings. When inplace=True and; use_highly_variable=True, this will contain empty rows for the genes not; selected. .uns['pca']['variance_ratio']Ratio of explained variance. .uns['pca']['variance']Explained variance, equivalent to the eigenvalues of the covariance matrix. previous; scanpy.experimental.pp.normalize_pearson_residuals. next; scanpy.experimental.pp.highly_variable_genes. Contents; . normalize_pearson_residuals_pca(). By Scanpy development team. ; © Copyright 202",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:10002,Modifiability,variab,variable,10002,"scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.experimental.pp.normalize_pearson_residuals_pca. Contents . normalize_pearson_residuals_pca(). scanpy.experimental.pp.normalize_pearson_residuals_pca#. scanpy.experimental.pp.normalize_pearson_residuals_pca(adata, *, theta=100, clip=None, n_comps=50, random_state=0, kwargs_pca=mappingproxy({}), mask_var=_empty, use_highly_variable=None, check_values=True, inplace=True)[source]#; Applies analytic Pearson residual normalization and PCA, based on Lause et al. [2021].; The residuals are based on a negative binomial offset model with overdispersion; theta shared across genes. By default, residuals are clipped to sqrt(n_obs),; overdispersion theta=100 is used, and PCA is run with 50 components.; Operates on the subset of highly variable genes in adata.var['highly_variable']; by default. Expects raw count input. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_comps int | None (default: 50)Number of principal components to compute in the PCA step. random_state float (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca Mapping[str, Any] (",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:11396,Modifiability,variab,variable,11396,"mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_comps int | None (default: 50)Number of principal components to compute in the PCA step. random_state float (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca Mapping[str, Any] (default: mappingproxy({}))Dictionary of further keyword arguments passed on to scanpy.pp.pca(). mask_var ndarray | str | None | Empty (default: _empty)To run only on a certain set of genes given by a boolean array; or a string referring to an array in var.; By default, uses .var['highly_variable'] if available, else everything. use_highly_variable bool | None (default: None)Whether to use highly variable genes only, stored in; .var['highly_variable'].; By default uses them if they have been determined beforehand. Deprecated since version 1.10.0: Use mask_var instead. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; AnnData | None. Returns:; If inplace=False, returns the Pearson residual-based PCA results (as AnnData; object). If inplace=True, updates adata with the following fields:. .uns['pearson_residuals_normalization']['pearson_residuals_df']The subset of highly variable genes, normalized by Pearson residuals. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion pa",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:12243,Modifiability,variab,variable,12243," certain set of genes given by a boolean array; or a string referring to an array in var.; By default, uses .var['highly_variable'] if available, else everything. use_highly_variable bool | None (default: None)Whether to use highly variable genes only, stored in; .var['highly_variable'].; By default uses them if they have been determined beforehand. Deprecated since version 1.10.0: Use mask_var instead. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; AnnData | None. Returns:; If inplace=False, returns the Pearson residual-based PCA results (as AnnData; object). If inplace=True, updates adata with the following fields:. .uns['pearson_residuals_normalization']['pearson_residuals_df']The subset of highly variable genes, normalized by Pearson residuals. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter theta. .uns['pearson_residuals_normalization']['clip']The used value of the clipping parameter. .obsm['X_pca']PCA representation of data after gene selection (if applicable) and Pearson; residual normalization. .varm['PCs']The principal components containing the loadings. When inplace=True and; use_highly_variable=True, this will contain empty rows for the genes not; selected. .uns['pca']['variance_ratio']Ratio of explained variance. .uns['pca']['variance']Explained variance, equivalent to the eigenvalues of the covariance matrix. previous; scanpy.experimental.pp.normalize_pearson_residuals. next; scanpy.experimental.pp.highly_variable_genes. Contents; . normalize_pearson_residuals_pca(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:7208,Performance,cache,cachedir,7208,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:10937,Performance,optimiz,optimization,10937,"ion theta=100 is used, and PCA is run with 50 components.; Operates on the subset of highly variable genes in adata.var['highly_variable']; by default. Expects raw count input. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_comps int | None (default: 50)Number of principal components to compute in the PCA step. random_state float (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca Mapping[str, Any] (default: mappingproxy({}))Dictionary of further keyword arguments passed on to scanpy.pp.pca(). mask_var ndarray | str | None | Empty (default: _empty)To run only on a certain set of genes given by a boolean array; or a string referring to an array in var.; By default, uses .var['highly_variable'] if available, else everything. use_highly_variable bool | None (default: None)Whether to use highly variable genes only, stored in; .var['highly_variable'].; By default uses them if they have been determined beforehand. Deprecated since version 1.10.0: Use mask_var instead. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. inplace bool (default: True)If True, update adata with results. Otherwis",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:12649,Performance,load,loadings,12649," certain set of genes given by a boolean array; or a string referring to an array in var.; By default, uses .var['highly_variable'] if available, else everything. use_highly_variable bool | None (default: None)Whether to use highly variable genes only, stored in; .var['highly_variable'].; By default uses them if they have been determined beforehand. Deprecated since version 1.10.0: Use mask_var instead. check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; AnnData | None. Returns:; If inplace=False, returns the Pearson residual-based PCA results (as AnnData; object). If inplace=True, updates adata with the following fields:. .uns['pearson_residuals_normalization']['pearson_residuals_df']The subset of highly variable genes, normalized by Pearson residuals. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter theta. .uns['pearson_residuals_normalization']['clip']The used value of the clipping parameter. .obsm['X_pca']PCA representation of data after gene selection (if applicable) and Pearson; residual normalization. .varm['PCs']The principal components containing the loadings. When inplace=True and; use_highly_variable=True, this will contain empty rows for the genes not; selected. .uns['pca']['variance_ratio']Ratio of explained variance. .uns['pca']['variance']Explained variance, equivalent to the eigenvalues of the covariance matrix. previous; scanpy.experimental.pp.normalize_pearson_residuals. next; scanpy.experimental.pp.highly_variable_genes. Contents; . normalize_pearson_residuals_pca(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:8449,Security,hash,hashsolo,8449,tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.experimental.pp.normalize_pearson_residuals_pca. Contents . normalize_pearson_residuals_pca(). scanpy.experimental.pp.normalize_pearson_residuals_pca#. scanpy.experimental.pp.normalize_pea,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:7476,Testability,log,logfile,7476,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:7515,Testability,log,logpath,7515,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:7821,Testability,log,logging,7821,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html:7850,Testability,log,logging,7850, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.normalize_pearson_residuals_pca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:8125,Deployability,toggle,toggleswitch,8125,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:9209,Deployability,release,release,9209,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.experimental.pp.recipe_pearson_residuals. Contents . recipe_pearson_residuals(). scanpy.experimental.pp.recipe_pearson_residuals#. scanpy.experimental.pp.recipe_pearson_residuals(adata, *, theta=100, clip=None, n_top_genes=1000, batch_key=None, chunksize=1000, n_comps=50, random_state=0, kwargs_pca={}, check_values=True, inplace=True)[source]#; Full pipeline for HVG selection and normalization by analytic Pearson residuals [Lause et al., 2021].; Applies gene selection based on Pearson residuals. On the resulting subset,; Pearson residual normalization and PCA are performed.; Expects raw count input. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersi",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:9615,Deployability,pipeline,pipeline,9615,"lantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.experimental.pp.recipe_pearson_residuals. Contents . recipe_pearson_residuals(). scanpy.experimental.pp.recipe_pearson_residuals#. scanpy.experimental.pp.recipe_pearson_residuals(adata, *, theta=100, clip=None, n_top_genes=1000, batch_key=None, chunksize=1000, n_comps=50, random_state=0, kwargs_pca={}, check_values=True, inplace=True)[source]#; Full pipeline for HVG selection and normalization by analytic Pearson residuals [Lause et al., 2021].; Applies gene selection based on Pearson residuals. On the resulting subset,; Pearson residual normalization and PCA are performed.; Expects raw count input. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes i",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:11939,Deployability,update,update,11939,"are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. n_comps int | None (default: 50)Number of principal components to compute in the PCA step. random_state float | None (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca dict (default: {})Dictionary of further keyword arguments passed on to scanpy.pp.pca(). check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; tuple[AnnData, DataFrame] | None. Returns:; If inplace=False, separately returns the gene selection results (as; DataFrame) and Pearson residual-based PCA results (as; AnnData). If inplace=True, updates adata with the; following fields for gene selection results:. .var['highly_variable']boolboolean indicator of highly-variable genes. .var['means']floatmeans per gene. .var['variances']floatvariances per gene. .var['residual_variances']floatPearson residual variance per gene. Averaged in the case of multiple; batches. .var['highly_variable_rank']floatRank of the gene according to residual variance, median rank in the; case of multiple batches. .var['highly_variable_nbatches']intIf batch_key is given, this denotes in how many batches genes are; detected as HVG. .var['highly_variable_intersection']boolIf batch_key is given, this denotes the genes that are highly variable; i",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:12246,Deployability,update,updates,12246,"sing a smaller value will reduce; the required memory. n_comps int | None (default: 50)Number of principal components to compute in the PCA step. random_state float | None (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca dict (default: {})Dictionary of further keyword arguments passed on to scanpy.pp.pca(). check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; tuple[AnnData, DataFrame] | None. Returns:; If inplace=False, separately returns the gene selection results (as; DataFrame) and Pearson residual-based PCA results (as; AnnData). If inplace=True, updates adata with the; following fields for gene selection results:. .var['highly_variable']boolboolean indicator of highly-variable genes. .var['means']floatmeans per gene. .var['variances']floatvariances per gene. .var['residual_variances']floatPearson residual variance per gene. Averaged in the case of multiple; batches. .var['highly_variable_rank']floatRank of the gene according to residual variance, median rank in the; case of multiple batches. .var['highly_variable_nbatches']intIf batch_key is given, this denotes in how many batches genes are; detected as HVG. .var['highly_variable_intersection']boolIf batch_key is given, this denotes the genes that are highly variable; in all batches. The following fields contain Pearson residual-based PCA results and; normalization settings:. .uns['pearson_residuals_normalization']['pearson_residuals_df']The subset of highly variable genes, normalized by Pearson residuals. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter the",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:11297,Energy Efficiency,reduce,reduce,11297,"ipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes int (default: 1000)Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3' or; flavor='pearson_residuals'. batch_key str | None (default: None)If specified, highly-variable genes are selected within each batch separately; and merged. This simple process avoids the selection of batch-specific genes; and acts as a lightweight batch correction method. Genes are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. n_comps int | None (default: 50)Number of principal components to compute in the PCA step. random_state float | None (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca dict (default: {})Dictionary of further keyword arguments passed on to scanpy.pp.pca(). check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; tuple[AnnData, DataFrame] | None. Returns:; If inplace=False, separately returns the gene selection results (as; DataFrame) and Pearson residual-based PCA results (as; AnnData). If inplace=True, updates adata with the; following fields for gene ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:10595,Modifiability,variab,variable,10595,"ue, inplace=True)[source]#; Full pipeline for HVG selection and normalization by analytic Pearson residuals [Lause et al., 2021].; Applies gene selection based on Pearson residuals. On the resulting subset,; Pearson residual normalization and PCA are performed.; Expects raw count input. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes int (default: 1000)Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3' or; flavor='pearson_residuals'. batch_key str | None (default: None)If specified, highly-variable genes are selected within each batch separately; and merged. This simple process avoids the selection of batch-specific genes; and acts as a lightweight batch correction method. Genes are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. n_comps int | None (default: 50)Number of principal components to compute in the PCA step. random_state float | None (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca dict (default: {})Dictionary of fur",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:10740,Modifiability,variab,variable,10740,"Pearson residuals. On the resulting subset,; Pearson residual normalization and PCA are performed.; Expects raw count input. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes int (default: 1000)Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3' or; flavor='pearson_residuals'. batch_key str | None (default: None)If specified, highly-variable genes are selected within each batch separately; and merged. This simple process avoids the selection of batch-specific genes; and acts as a lightweight batch correction method. Genes are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. n_comps int | None (default: 50)Number of principal components to compute in the PCA step. random_state float | None (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca dict (default: {})Dictionary of further keyword arguments passed on to scanpy.pp.pca(). check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:12371,Modifiability,variab,variable,12371,"lt: 50)Number of principal components to compute in the PCA step. random_state float | None (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca dict (default: {})Dictionary of further keyword arguments passed on to scanpy.pp.pca(). check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; tuple[AnnData, DataFrame] | None. Returns:; If inplace=False, separately returns the gene selection results (as; DataFrame) and Pearson residual-based PCA results (as; AnnData). If inplace=True, updates adata with the; following fields for gene selection results:. .var['highly_variable']boolboolean indicator of highly-variable genes. .var['means']floatmeans per gene. .var['variances']floatvariances per gene. .var['residual_variances']floatPearson residual variance per gene. Averaged in the case of multiple; batches. .var['highly_variable_rank']floatRank of the gene according to residual variance, median rank in the; case of multiple batches. .var['highly_variable_nbatches']intIf batch_key is given, this denotes in how many batches genes are; detected as HVG. .var['highly_variable_intersection']boolIf batch_key is given, this denotes the genes that are highly variable; in all batches. The following fields contain Pearson residual-based PCA results and; normalization settings:. .uns['pearson_residuals_normalization']['pearson_residuals_df']The subset of highly variable genes, normalized by Pearson residuals. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter theta. .uns['pearson_residuals_normalization']['clip']The used value of the clippin",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:12922,Modifiability,variab,variable,12922,"r large datasets. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; tuple[AnnData, DataFrame] | None. Returns:; If inplace=False, separately returns the gene selection results (as; DataFrame) and Pearson residual-based PCA results (as; AnnData). If inplace=True, updates adata with the; following fields for gene selection results:. .var['highly_variable']boolboolean indicator of highly-variable genes. .var['means']floatmeans per gene. .var['variances']floatvariances per gene. .var['residual_variances']floatPearson residual variance per gene. Averaged in the case of multiple; batches. .var['highly_variable_rank']floatRank of the gene according to residual variance, median rank in the; case of multiple batches. .var['highly_variable_nbatches']intIf batch_key is given, this denotes in how many batches genes are; detected as HVG. .var['highly_variable_intersection']boolIf batch_key is given, this denotes the genes that are highly variable; in all batches. The following fields contain Pearson residual-based PCA results and; normalization settings:. .uns['pearson_residuals_normalization']['pearson_residuals_df']The subset of highly variable genes, normalized by Pearson residuals. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter theta. .uns['pearson_residuals_normalization']['clip']The used value of the clipping parameter. .obsm['X_pca']PCA representation of data after gene selection and Pearson residual; normalization. .varm['PCs']The principal components containing the loadings. When inplace=True this; will contain empty rows for the genes not selected during HVG selection. .uns['pca']['variance_ratio']Ratio of explained variance. .uns['pca']['variance']Explained variance, equivalent to the eigenvalues of the covariance matrix. previous; scanpy.experimental.pp.highly_variable_genes. next; Classes. Contents; . recipe_pearson_residu",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:13126,Modifiability,variab,variable,13126,"wise, return results. See below for; details of what is returned. Return type:; tuple[AnnData, DataFrame] | None. Returns:; If inplace=False, separately returns the gene selection results (as; DataFrame) and Pearson residual-based PCA results (as; AnnData). If inplace=True, updates adata with the; following fields for gene selection results:. .var['highly_variable']boolboolean indicator of highly-variable genes. .var['means']floatmeans per gene. .var['variances']floatvariances per gene. .var['residual_variances']floatPearson residual variance per gene. Averaged in the case of multiple; batches. .var['highly_variable_rank']floatRank of the gene according to residual variance, median rank in the; case of multiple batches. .var['highly_variable_nbatches']intIf batch_key is given, this denotes in how many batches genes are; detected as HVG. .var['highly_variable_intersection']boolIf batch_key is given, this denotes the genes that are highly variable; in all batches. The following fields contain Pearson residual-based PCA results and; normalization settings:. .uns['pearson_residuals_normalization']['pearson_residuals_df']The subset of highly variable genes, normalized by Pearson residuals. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter theta. .uns['pearson_residuals_normalization']['clip']The used value of the clipping parameter. .obsm['X_pca']PCA representation of data after gene selection and Pearson residual; normalization. .varm['PCs']The principal components containing the loadings. When inplace=True this; will contain empty rows for the genes not selected during HVG selection. .uns['pca']['variance_ratio']Ratio of explained variance. .uns['pca']['variance']Explained variance, equivalent to the eigenvalues of the covariance matrix. previous; scanpy.experimental.pp.highly_variable_genes. next; Classes. Contents; . recipe_pearson_residuals(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:7201,Performance,cache,cachedir,7201,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:9833,Performance,perform,performed,9833,"sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.experimental.pp.recipe_pearson_residuals. Contents . recipe_pearson_residuals(). scanpy.experimental.pp.recipe_pearson_residuals#. scanpy.experimental.pp.recipe_pearson_residuals(adata, *, theta=100, clip=None, n_top_genes=1000, batch_key=None, chunksize=1000, n_comps=50, random_state=0, kwargs_pca={}, check_values=True, inplace=True)[source]#; Full pipeline for HVG selection and normalization by analytic Pearson residuals [Lause et al., 2021].; Applies gene selection based on Pearson residuals. On the resulting subset,; Pearson residual normalization and PCA are performed.; Expects raw count input. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes int (default: 1000)Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3' or; flavor='pearson_residuals'. batch_key str | None (default: None)If specified, highly-variable genes are selected within each batch separately; and m",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:11506,Performance,optimiz,optimization,11506,"s are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes int (default: 1000)Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3' or; flavor='pearson_residuals'. batch_key str | None (default: None)If specified, highly-variable genes are selected within each batch separately; and merged. This simple process avoids the selection of batch-specific genes; and acts as a lightweight batch correction method. Genes are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. n_comps int | None (default: 50)Number of principal components to compute in the PCA step. random_state float | None (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca dict (default: {})Dictionary of further keyword arguments passed on to scanpy.pp.pca(). check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; tuple[AnnData, DataFrame] | None. Returns:; If inplace=False, separately returns the gene selection results (as; DataFrame) and Pearson residual-based PCA results (as; AnnData). If inplace=True, updates adata with the; following fields for gene selection results:. .var['highly_variable']boolboolean indicator of highly-variable genes. .var['means']floatmeans per gene. .var['variances']floatvariances per gene. .var['residua",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:13516,Performance,load,loadings,13516,"wise, return results. See below for; details of what is returned. Return type:; tuple[AnnData, DataFrame] | None. Returns:; If inplace=False, separately returns the gene selection results (as; DataFrame) and Pearson residual-based PCA results (as; AnnData). If inplace=True, updates adata with the; following fields for gene selection results:. .var['highly_variable']boolboolean indicator of highly-variable genes. .var['means']floatmeans per gene. .var['variances']floatvariances per gene. .var['residual_variances']floatPearson residual variance per gene. Averaged in the case of multiple; batches. .var['highly_variable_rank']floatRank of the gene according to residual variance, median rank in the; case of multiple batches. .var['highly_variable_nbatches']intIf batch_key is given, this denotes in how many batches genes are; detected as HVG. .var['highly_variable_intersection']boolIf batch_key is given, this denotes the genes that are highly variable; in all batches. The following fields contain Pearson residual-based PCA results and; normalization settings:. .uns['pearson_residuals_normalization']['pearson_residuals_df']The subset of highly variable genes, normalized by Pearson residuals. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter theta. .uns['pearson_residuals_normalization']['clip']The used value of the clipping parameter. .obsm['X_pca']PCA representation of data after gene selection and Pearson residual; normalization. .varm['PCs']The principal components containing the loadings. When inplace=True this; will contain empty rows for the genes not selected during HVG selection. .uns['pca']['variance_ratio']Ratio of explained variance. .uns['pca']['variance']Explained variance, equivalent to the eigenvalues of the covariance matrix. previous; scanpy.experimental.pp.highly_variable_genes. next; Classes. Contents; . recipe_pearson_residuals(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:10830,Safety,avoid,avoids,10830,"t. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes int (default: 1000)Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3' or; flavor='pearson_residuals'. batch_key str | None (default: None)If specified, highly-variable genes are selected within each batch separately; and merged. This simple process avoids the selection of batch-specific genes; and acts as a lightweight batch correction method. Genes are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. n_comps int | None (default: 50)Number of principal components to compute in the PCA step. random_state float | None (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca dict (default: {})Dictionary of further keyword arguments passed on to scanpy.pp.pca(). check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:12803,Safety,detect,detected,12803,"return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can speed up code for large datasets. inplace bool (default: True)If True, update adata with results. Otherwise, return results. See below for; details of what is returned. Return type:; tuple[AnnData, DataFrame] | None. Returns:; If inplace=False, separately returns the gene selection results (as; DataFrame) and Pearson residual-based PCA results (as; AnnData). If inplace=True, updates adata with the; following fields for gene selection results:. .var['highly_variable']boolboolean indicator of highly-variable genes. .var['means']floatmeans per gene. .var['variances']floatvariances per gene. .var['residual_variances']floatPearson residual variance per gene. Averaged in the case of multiple; batches. .var['highly_variable_rank']floatRank of the gene according to residual variance, median rank in the; case of multiple batches. .var['highly_variable_nbatches']intIf batch_key is given, this denotes in how many batches genes are; detected as HVG. .var['highly_variable_intersection']boolIf batch_key is given, this denotes the genes that are highly variable; in all batches. The following fields contain Pearson residual-based PCA results and; normalization settings:. .uns['pearson_residuals_normalization']['pearson_residuals_df']The subset of highly variable genes, normalized by Pearson residuals. .uns['pearson_residuals_normalization']['theta']The used value of the overdisperion parameter theta. .uns['pearson_residuals_normalization']['clip']The used value of the clipping parameter. .obsm['X_pca']PCA representation of data after gene selection and Pearson residual; normalization. .varm['PCs']The principal components containing the loadings. When inplace=True this; will contain empty rows for the genes not selected during HVG selection. .uns['pca']['variance_ratio']Ratio of explained variance. .uns['pca']['variance']Explained variance, equivalent to the eigenvalues of the ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:8442,Security,hash,hashsolo,8442,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.experimental.pp.recipe_pearson_residuals. Contents . recipe_pearson_residuals(). scanpy.experimental.pp.recipe_pearson_residuals#. scanpy.experimental.pp.recipe_pearson_residuals(adata, *,",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:7469,Testability,log,logfile,7469,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:7508,Testability,log,logpath,7508,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:7814,Testability,log,logging,7814,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:7843,Testability,log,logging,7843, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html:10815,Usability,simpl,simple,10815,"t. Parameters:. adata AnnDataThe annotated data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. theta float (default: 100)The negative binomial overdispersion parameter theta for Pearson residuals.; Higher values correspond to less overdispersion (var = mean + mean^2/theta), and theta=np.inf corresponds to a Poisson model. clip float | None (default: None)Determines if and how residuals are clipped:. If None, residuals are clipped to the interval [-sqrt(n_obs), sqrt(n_obs)], where n_obs is the number of cells in the dataset (default behavior).; If any scalar c, residuals are clipped to the interval [-c, c]. Set clip=np.inf for no clipping. n_top_genes int (default: 1000)Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3' or; flavor='pearson_residuals'. batch_key str | None (default: None)If specified, highly-variable genes are selected within each batch separately; and merged. This simple process avoids the selection of batch-specific genes; and acts as a lightweight batch correction method. Genes are first sorted by; how many batches they are a HVG. If flavor='pearson_residuals', ties are; broken by the median rank (across batches) based on within-batch residual; variance. chunksize int (default: 1000)If flavor='pearson_residuals', this dertermines how many genes are processed at; once while computing the residual variance. Choosing a smaller value will reduce; the required memory. n_comps int | None (default: 50)Number of principal components to compute in the PCA step. random_state float | None (default: 0)Random seed for setting the initial states for the optimization in the PCA step. kwargs_pca dict (default: {})Dictionary of further keyword arguments passed on to scanpy.pp.pca(). check_values bool (default: True)If True, checks if counts in selected layer are integers as expected by this; function, and return a warning if non-integers are found. Otherwise, proceed; without checking. Setting this to False can ",MatchSource.WIKI,en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.experimental.pp.recipe_pearson_residuals.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html:11540,Availability,avail,available,11540,"ame of dataset in Cell Browser, a string without special characters.; This is written to data_dir/cellbrowser.conf.; Ideally this is a short unique name for the dataset,; like ""pbmc3k"" or ""tabulamuris"". embedding_keys Iterable[str] | Mapping[str, str] | str | None (default: None)2-D embeddings in adata.obsm to export.; The prefix X_ or X_draw_graph_ is not necessary.; Coordinates missing from adata are skipped.; By default (or when specifying 'all' or None), these keys are tried:; [""tsne"", ""umap"", ""pagaFa"", ""pagaFr"", ""pagaUmap"", ""phate"",; ""fa"", ""fr"", ""kk"", ""drl"", ""rt"", ""trimap""].; For these, default display labels are automatically used.; For other values, you can specify a mapping from coordinate name to; display label, e.g. {""tsne"": ""t-SNE by Scanpy""}. annot_keys Iterable[str] | Mapping[str, str] | None (default: ('louvain', 'percent_mito', 'n_genes', 'n_counts'))Annotations in adata.obsm to export.; Can be a mapping from annotation column name to display label.; Specify None for all available columns in .obs. skip_matrix bool (default: False)Do not export the matrix.; If you had previously exported this adata into the same data_dir,; then there is no need to export the whole matrix again.; This option will make the export a lot faster,; e.g. when only coordinates or meta data were changed. html_dir Path | str | None (default: None)If this variable is set, the export will build html; files from data_dir to html_dir, creating html/js/json files.; Usually there is one global html output directory for all datasets.; Often, html_dir is located under a webserver’s (like Apache); htdocs directory or is copied to one.; A directory html_dir/project_name will be created and; an index.html will be created under html_dir for all subdirectories.; Existing files will be overwritten.; If do not to use html_dir,; you can use the command line tool cbBuild to build the html directory. port int | None (default: None)If this variable and html_dir are set,; Python’s built-in web serve",MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.cellbrowser.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html:8115,Deployability,toggle,toggleswitch,8115,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.cellbrowser.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html:9199,Deployability,release,release,9199,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.exporting.cellbrowser. Contents . cellbrowser(). scanpy.external.exporting.cellbrowser#. scanpy.external.exporting.cellbrowser(adata, data_dir, data_name, *, embedding_keys=None, annot_keys=('louvain', 'percent_mito', 'n_genes', 'n_counts'), cluster_field='louvain', nb_marker=50, skip_matrix=False, html_dir=None, port=None, do_debug=False)[source]#; Export adata to a UCSC Cell Browser project directory. If html_dir is; set, subsequently build the html files from the project directory into; html_dir. If port is set, start an HTTP server in the background and; serve html_dir on port.; By default, export all gene expression data from adata.raw, the; annotations louvain, percent_mito, n_genes and n_counts and the top; nb_marker cluster markers. All existing files in data_dir are; overwritten, except cellbrowser.conf.; See UCSC Cellbrowser for; details. Parameters",MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.cellbrowser.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html:11903,Modifiability,variab,variable,11903,"from adata are skipped.; By default (or when specifying 'all' or None), these keys are tried:; [""tsne"", ""umap"", ""pagaFa"", ""pagaFr"", ""pagaUmap"", ""phate"",; ""fa"", ""fr"", ""kk"", ""drl"", ""rt"", ""trimap""].; For these, default display labels are automatically used.; For other values, you can specify a mapping from coordinate name to; display label, e.g. {""tsne"": ""t-SNE by Scanpy""}. annot_keys Iterable[str] | Mapping[str, str] | None (default: ('louvain', 'percent_mito', 'n_genes', 'n_counts'))Annotations in adata.obsm to export.; Can be a mapping from annotation column name to display label.; Specify None for all available columns in .obs. skip_matrix bool (default: False)Do not export the matrix.; If you had previously exported this adata into the same data_dir,; then there is no need to export the whole matrix again.; This option will make the export a lot faster,; e.g. when only coordinates or meta data were changed. html_dir Path | str | None (default: None)If this variable is set, the export will build html; files from data_dir to html_dir, creating html/js/json files.; Usually there is one global html output directory for all datasets.; Often, html_dir is located under a webserver’s (like Apache); htdocs directory or is copied to one.; A directory html_dir/project_name will be created and; an index.html will be created under html_dir for all subdirectories.; Existing files will be overwritten.; If do not to use html_dir,; you can use the command line tool cbBuild to build the html directory. port int | None (default: None)If this variable and html_dir are set,; Python’s built-in web server will be spawned as a daemon in the; background and serve the files under html_dir.; To kill the process, call cellbrowser.cellbrowser.stop(). do_debug bool (default: False)Activate debugging output. Examples; See this; tutorial. previous; scanpy.external.exporting.spring_project. next; Ecosystem. Contents; . cellbrowser(). By Scanpy development team. ; © Copyright 2024, the Scanpy devel",MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.cellbrowser.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html:12481,Modifiability,variab,variable,12481,"ipped.; By default (or when specifying 'all' or None), these keys are tried:; [""tsne"", ""umap"", ""pagaFa"", ""pagaFr"", ""pagaUmap"", ""phate"",; ""fa"", ""fr"", ""kk"", ""drl"", ""rt"", ""trimap""].; For these, default display labels are automatically used.; For other values, you can specify a mapping from coordinate name to; display label, e.g. {""tsne"": ""t-SNE by Scanpy""}. annot_keys Iterable[str] | Mapping[str, str] | None (default: ('louvain', 'percent_mito', 'n_genes', 'n_counts'))Annotations in adata.obsm to export.; Can be a mapping from annotation column name to display label.; Specify None for all available columns in .obs. skip_matrix bool (default: False)Do not export the matrix.; If you had previously exported this adata into the same data_dir,; then there is no need to export the whole matrix again.; This option will make the export a lot faster,; e.g. when only coordinates or meta data were changed. html_dir Path | str | None (default: None)If this variable is set, the export will build html; files from data_dir to html_dir, creating html/js/json files.; Usually there is one global html output directory for all datasets.; Often, html_dir is located under a webserver’s (like Apache); htdocs directory or is copied to one.; A directory html_dir/project_name will be created and; an index.html will be created under html_dir for all subdirectories.; Existing files will be overwritten.; If do not to use html_dir,; you can use the command line tool cbBuild to build the html directory. port int | None (default: None)If this variable and html_dir are set,; Python’s built-in web server will be spawned as a daemon in the; background and serve the files under html_dir.; To kill the process, call cellbrowser.cellbrowser.stop(). do_debug bool (default: False)Activate debugging output. Examples; See this; tutorial. previous; scanpy.external.exporting.spring_project. next; Ecosystem. Contents; . cellbrowser(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.cellbrowser.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html:7191,Performance,cache,cachedir,7191,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.cellbrowser.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html:8432,Security,hash,hashsolo,8432,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.exporting.cellbrowser. Contents . cellbrowser(). scanpy.external.exporting.cellbrowser#. scanpy.external.exporting.cellbrowser(adata, data_dir, data_name, *, embedding_keys=None, ",MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.cellbrowser.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html:7459,Testability,log,logfile,7459,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.cellbrowser.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html:7498,Testability,log,logpath,7498,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.cellbrowser.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html:7804,Testability,log,logging,7804,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.cellbrowser.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html:7833,Testability,log,logging,7833, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.cellbrowser.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.cellbrowser.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html:8118,Deployability,toggle,toggleswitch,8118,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.spring_project.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html:9202,Deployability,release,release,9202,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.exporting.spring_project. Contents . spring_project(). scanpy.external.exporting.spring_project#. scanpy.external.exporting.spring_project(adata, project_dir, embedding_method, *, subplot_name=None, cell_groupings=None, custom_color_tracks=None, total_counts_key='n_counts', neighbors_key=None, overwrite=False)[source]#; Exports to a SPRING project directory [Weinreb et al., 2017].; Visualize annotation present in adata. By default, export all gene expression data; from adata.raw and categorical and continuous annotations present in adata.obs.; See SPRING or Weinreb et al. [2017] for details. Parameters:. adata AnnDataAnnotated data matrix: adata.uns['neighbors'] needs to; be present. project_dir Path | strPath to directory for exported SPRING files. embedding_method strName of a 2-D embedding in adata.obsm. subplot_name str | None (default: None)Name of subpl",MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.spring_project.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html:9769,Deployability,continuous,continuous,9769,"scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.exporting.spring_project. Contents . spring_project(). scanpy.external.exporting.spring_project#. scanpy.external.exporting.spring_project(adata, project_dir, embedding_method, *, subplot_name=None, cell_groupings=None, custom_color_tracks=None, total_counts_key='n_counts', neighbors_key=None, overwrite=False)[source]#; Exports to a SPRING project directory [Weinreb et al., 2017].; Visualize annotation present in adata. By default, export all gene expression data; from adata.raw and categorical and continuous annotations present in adata.obs.; See SPRING or Weinreb et al. [2017] for details. Parameters:. adata AnnDataAnnotated data matrix: adata.uns['neighbors'] needs to; be present. project_dir Path | strPath to directory for exported SPRING files. embedding_method strName of a 2-D embedding in adata.obsm. subplot_name str | None (default: None)Name of subplot folder to be created at project_dir+""/""+subplot_name. cell_groupings str | Iterable[str] | None (default: None)Instead of importing all categorical annotations when None,; pass a list of keys for adata.obs. custom_color_tracks str | Iterable[str] | None (default: None)Specify specific adata.obs keys for continuous coloring. total_counts_key str (default: 'n_counts')Name of key for total transcript counts in adata.obs. overwrite bool (default: False)When True, existing counts matrices in project_dir are overwritten. Return type:; None. Examples; See this tutorial. previous; Exporting. next; scanpy.external.exporting.cellbrowser. Co",MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.spring_project.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html:10444,Deployability,continuous,continuous,10444,"nal.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.exporting.spring_project. Contents . spring_project(). scanpy.external.exporting.spring_project#. scanpy.external.exporting.spring_project(adata, project_dir, embedding_method, *, subplot_name=None, cell_groupings=None, custom_color_tracks=None, total_counts_key='n_counts', neighbors_key=None, overwrite=False)[source]#; Exports to a SPRING project directory [Weinreb et al., 2017].; Visualize annotation present in adata. By default, export all gene expression data; from adata.raw and categorical and continuous annotations present in adata.obs.; See SPRING or Weinreb et al. [2017] for details. Parameters:. adata AnnDataAnnotated data matrix: adata.uns['neighbors'] needs to; be present. project_dir Path | strPath to directory for exported SPRING files. embedding_method strName of a 2-D embedding in adata.obsm. subplot_name str | None (default: None)Name of subplot folder to be created at project_dir+""/""+subplot_name. cell_groupings str | Iterable[str] | None (default: None)Instead of importing all categorical annotations when None,; pass a list of keys for adata.obs. custom_color_tracks str | Iterable[str] | None (default: None)Specify specific adata.obs keys for continuous coloring. total_counts_key str (default: 'n_counts')Name of key for total transcript counts in adata.obs. overwrite bool (default: False)When True, existing counts matrices in project_dir are overwritten. Return type:; None. Examples; See this tutorial. previous; Exporting. next; scanpy.external.exporting.cellbrowser. Contents; . spring_project(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.spring_project.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html:7194,Performance,cache,cachedir,7194,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.spring_project.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html:8435,Security,hash,hashsolo,8435,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.exporting.spring_project. Contents . spring_project(). scanpy.external.exporting.spring_project#. scanpy.external.exporting.spring_project(adata, project_dir, embedding_method, *,",MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.spring_project.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html:7462,Testability,log,logfile,7462,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.spring_project.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html:7501,Testability,log,logpath,7501,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.spring_project.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html:7807,Testability,log,logging,7807,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.spring_project.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html:7836,Testability,log,logging,7836, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.external.exporting.spring_project.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.exporting.spring_project.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:12389,Availability,avail,available,12389,"specified, this looks; .obsp[.uns[neighbors_key][‘connectivities_key’]] for connectivities. arrows bool (default: False)Show arrows (deprecated in favour of scvelo.pl.velocity_embedding). arrows_kwds Mapping[str, Any] | None (default: None)Passed to quiver(). sort_order bool (default: True)For continuous annotations used as color parameter, plot data points; with higher values on top of others. groups str | Sequence[str] | None (default: None)Restrict to a few categories in categorical observation annotation.; The default is not to restrict to any groups. dimensions tuple[int, int] | Sequence[tuple[int, int]] | None (default: None)0-indexed dimensions of the embedding to plot as integers. E.g. [(0, 1), (1, 2)].; Unlike components, this argument is used in the same way as colors, e.g. is; used to specify a single plot at a time. Will eventually replace the components; argument. components str | Sequence[str] | None (default: None)For instance, ['1,2', '2,3']. To plot all available components use; components='all'. projection Literal['2d', '3d'] (default: '2d')Projection of plot (default: '2d'). legend_loc Optional[Literal['none', 'right margin', 'on data', 'on data export', 'best', 'upper right', 'upper left', 'lower left', 'lower right', 'right', 'center left', 'center right', 'lower center', 'upper center', 'center']] (default: 'right margin')Location of legend, either 'on data', 'right margin', None,; or a valid keyword for the loc parameter of Legend. legend_fontsize Union[int, float, Literal['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'], None] (default: None)Numeric size in pt or string describing the size.; See set_fontsize(). legend_fontweight Union[int, Literal['light', 'normal', 'medium', 'semibold', 'bold', 'heavy', 'black']] (default: 'bold')Legend font weight. A numeric value in range 0-1000 or a string.; Defaults to 'bold' if legend_loc == 'on data', otherwise to 'normal'.; See set_fontweight(). legend_fontoutline int | None (",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:14792,Availability,mask,masked,14792,"a sequence containing the size for each cell. The order should be; the same as in adata.obs. color_map Colormap | str | None (default: None)Color map to use for continous variables. Can be a name or a; Colormap instance (e.g. ""magma”, ""viridis""; or mpl.cm.cividis), see get_cmap().; If None, the value of mpl.rcParams[""image.cmap""] is used.; The default color_map can be set using set_figure_params(). palette str | Sequence[str] | Cycler | None (default: None)Colors to use for plotting categorical annotation groups.; The palette can be a valid ListedColormap name; ('Set2', 'tab20', …), a Cycler object, a dict mapping; categories to colors, or a sequence of colors. Colors must be valid to; matplotlib. (see is_color_like()).; If None, mpl.rcParams[""axes.prop_cycle""] is used unless the categorical; variable already has colors stored in adata.uns[""{var}_colors""].; If provided, values of adata.uns[""{var}_colors""] will be set. na_color Union[str, tuple[float, ...]] (default: 'lightgray')Color to use for null or masked values. Can be anything matplotlib accepts as a; color. Used for all points if color=None. na_in_legend bool (default: True)If there are missing values, whether they get an entry in the legend. Currently; only implemented for categorical legends. frameon bool | None (default: None)Draw a frame around the scatter plot. Defaults to value set in; set_figure_params(), defaults to True. title str | Sequence[str] | None (default: None)Provide title for panels either as string or list of strings,; e.g. ['title1', 'title2', ...]. vmin Union[str, float, Callable[[Sequence[float]], float], Sequence[Union[str, float, Callable[[Sequence[float]], float]]], None] (default: None)The value representing the lower limit of the color scale. Values smaller than vmin are plotted; with the same color as vmin. vmin can be a number, a string, a function or None. If; vmin is a string and has the format pN, this is interpreted as a vmin=percentile(N).; For example vmin=’p1.5’ is interpr",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:8102,Deployability,toggle,toggleswitch,8102,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:9186,Deployability,release,release,9186,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pl.phate. Contents . phate(). scanpy.external.pl.phate#. scanpy.external.pl.phate(adata, *, color=None, mask_obs=None, gene_symbols=None, use_raw=None, sort_order=True, edges=False, edges_width=0.1, edges_color='grey', neighbors_key=None, arrows=False, arrows_kwds=None, groups=None, components=None, dimensions=None, layer=None, projection='2d', scale_factor=None, color_map=None, cmap=None, palette=None, na_color='lightgray', na_in_legend=True, size=None, frameon=None, legend_fontsize=None, legend_fontweight='bold', legend_loc='right margin', legend_fontoutline=None, colorbar_loc='right', vmax=None, vmin=None, vcenter=None, norm=None, add_outline=False, outline_width=(0.3, 0.05), outline_color=('black', 'white'), ncols=4, hspace=0.25, wspace=None, title=None, show=None, save=None, ax=None, return_fig=None, marker='.', **kwargs)[source]#; Scatter plot in PHATE ",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:11699,Deployability,continuous,continuous,11699," None (default: None)Name of the AnnData object layer that wants to be plotted. By default; adata.raw.X is plotted. If use_raw=False is set, then adata.X is plotted.; If layer is set to a valid layer name, then the layer is plotted. layer; takes precedence over use_raw. edges bool (default: False)Show edges. edges_width float (default: 0.1)Width of edges. edges_color str | Sequence[float] | Sequence[str] (default: 'grey')Color of edges. See draw_networkx_edges(). neighbors_key str | None (default: None)Where to look for neighbors connectivities.; If not specified, this looks .obsp[‘connectivities’] for connectivities; (default storage place for pp.neighbors).; If specified, this looks; .obsp[.uns[neighbors_key][‘connectivities_key’]] for connectivities. arrows bool (default: False)Show arrows (deprecated in favour of scvelo.pl.velocity_embedding). arrows_kwds Mapping[str, Any] | None (default: None)Passed to quiver(). sort_order bool (default: True)For continuous annotations used as color parameter, plot data points; with higher values on top of others. groups str | Sequence[str] | None (default: None)Restrict to a few categories in categorical observation annotation.; The default is not to restrict to any groups. dimensions tuple[int, int] | Sequence[tuple[int, int]] | None (default: None)0-indexed dimensions of the embedding to plot as integers. E.g. [(0, 1), (1, 2)].; Unlike components, this argument is used in the same way as colors, e.g. is; used to specify a single plot at a time. Will eventually replace the components; argument. components str | Sequence[str] | None (default: None)For instance, ['1,2', '2,3']. To plot all available components use; components='all'. projection Literal['2d', '3d'] (default: '2d')Projection of plot (default: '2d'). legend_loc Optional[Literal['none', 'right margin', 'on data', 'on data export', 'best', 'upper right', 'upper left', 'lower left', 'lower right', 'right', 'center left', 'center right', 'lower center', 'upper center'",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:10270,Modifiability,variab,variables,10270," scanpy.external.pl.phate. Contents . phate(). scanpy.external.pl.phate#. scanpy.external.pl.phate(adata, *, color=None, mask_obs=None, gene_symbols=None, use_raw=None, sort_order=True, edges=False, edges_width=0.1, edges_color='grey', neighbors_key=None, arrows=False, arrows_kwds=None, groups=None, components=None, dimensions=None, layer=None, projection='2d', scale_factor=None, color_map=None, cmap=None, palette=None, na_color='lightgray', na_in_legend=True, size=None, frameon=None, legend_fontsize=None, legend_fontweight='bold', legend_loc='right margin', legend_fontoutline=None, colorbar_loc='right', vmax=None, vmin=None, vcenter=None, norm=None, add_outline=False, outline_width=(0.3, 0.05), outline_color=('black', 'white'), ncols=4, hspace=0.25, wspace=None, title=None, show=None, save=None, ax=None, return_fig=None, marker='.', **kwargs)[source]#; Scatter plot in PHATE basis. Parameters:. adata AnnDataAnnotated data matrix. color str | Sequence[str] | None (default: None)Keys for annotations of observations/cells or variables/genes, e.g.,; 'ann1' or ['ann1', 'ann2']. gene_symbols str | None (default: None)Column name in .var DataFrame that stores gene symbols. By default var_names; refer to the index column of the .var DataFrame. Setting this option allows; alternative names to be used. use_raw bool | None (default: None)Use .raw attribute of adata for coloring with gene expression. If None,; defaults to True if layer isn’t provided and adata.raw is present. layer str | None (default: None)Name of the AnnData object layer that wants to be plotted. By default; adata.raw.X is plotted. If use_raw=False is set, then adata.X is plotted.; If layer is set to a valid layer name, then the layer is plotted. layer; takes precedence over use_raw. edges bool (default: False)Show edges. edges_width float (default: 0.1)Width of edges. edges_color str | Sequence[float] | Sequence[str] (default: 'grey')Color of edges. See draw_networkx_edges(). neighbors_key str | None (defaul",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:13604,Modifiability,variab,variables,13604," 'on data', 'on data export', 'best', 'upper right', 'upper left', 'lower left', 'lower right', 'right', 'center left', 'center right', 'lower center', 'upper center', 'center']] (default: 'right margin')Location of legend, either 'on data', 'right margin', None,; or a valid keyword for the loc parameter of Legend. legend_fontsize Union[int, float, Literal['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'], None] (default: None)Numeric size in pt or string describing the size.; See set_fontsize(). legend_fontweight Union[int, Literal['light', 'normal', 'medium', 'semibold', 'bold', 'heavy', 'black']] (default: 'bold')Legend font weight. A numeric value in range 0-1000 or a string.; Defaults to 'bold' if legend_loc == 'on data', otherwise to 'normal'.; See set_fontweight(). legend_fontoutline int | None (default: None)Line width of the legend font outline in pt. Draws a white outline using; the path effect withStroke. colorbar_loc str | None (default: 'right')Where to place the colorbar for continous variables. If None, no colorbar; is added. size float | Sequence[float] | None (default: None)Point size. If None, is automatically computed as 120000 / n_cells.; Can be a sequence containing the size for each cell. The order should be; the same as in adata.obs. color_map Colormap | str | None (default: None)Color map to use for continous variables. Can be a name or a; Colormap instance (e.g. ""magma”, ""viridis""; or mpl.cm.cividis), see get_cmap().; If None, the value of mpl.rcParams[""image.cmap""] is used.; The default color_map can be set using set_figure_params(). palette str | Sequence[str] | Cycler | None (default: None)Colors to use for plotting categorical annotation groups.; The palette can be a valid ListedColormap name; ('Set2', 'tab20', …), a Cycler object, a dict mapping; categories to colors, or a sequence of colors. Colors must be valid to; matplotlib. (see is_color_like()).; If None, mpl.rcParams[""axes.prop_cycle""] is used unless the ca",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:13945,Modifiability,variab,variables,13945,"float, Literal['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'], None] (default: None)Numeric size in pt or string describing the size.; See set_fontsize(). legend_fontweight Union[int, Literal['light', 'normal', 'medium', 'semibold', 'bold', 'heavy', 'black']] (default: 'bold')Legend font weight. A numeric value in range 0-1000 or a string.; Defaults to 'bold' if legend_loc == 'on data', otherwise to 'normal'.; See set_fontweight(). legend_fontoutline int | None (default: None)Line width of the legend font outline in pt. Draws a white outline using; the path effect withStroke. colorbar_loc str | None (default: 'right')Where to place the colorbar for continous variables. If None, no colorbar; is added. size float | Sequence[float] | None (default: None)Point size. If None, is automatically computed as 120000 / n_cells.; Can be a sequence containing the size for each cell. The order should be; the same as in adata.obs. color_map Colormap | str | None (default: None)Color map to use for continous variables. Can be a name or a; Colormap instance (e.g. ""magma”, ""viridis""; or mpl.cm.cividis), see get_cmap().; If None, the value of mpl.rcParams[""image.cmap""] is used.; The default color_map can be set using set_figure_params(). palette str | Sequence[str] | Cycler | None (default: None)Colors to use for plotting categorical annotation groups.; The palette can be a valid ListedColormap name; ('Set2', 'tab20', …), a Cycler object, a dict mapping; categories to colors, or a sequence of colors. Colors must be valid to; matplotlib. (see is_color_like()).; If None, mpl.rcParams[""axes.prop_cycle""] is used unless the categorical; variable already has colors stored in adata.uns[""{var}_colors""].; If provided, values of adata.uns[""{var}_colors""] will be set. na_color Union[str, tuple[float, ...]] (default: 'lightgray')Color to use for null or masked values. Can be anything matplotlib accepts as a; color. Used for all points if color=None. na_in_legend bool (de",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:14578,Modifiability,variab,variable,14578,"the colorbar for continous variables. If None, no colorbar; is added. size float | Sequence[float] | None (default: None)Point size. If None, is automatically computed as 120000 / n_cells.; Can be a sequence containing the size for each cell. The order should be; the same as in adata.obs. color_map Colormap | str | None (default: None)Color map to use for continous variables. Can be a name or a; Colormap instance (e.g. ""magma”, ""viridis""; or mpl.cm.cividis), see get_cmap().; If None, the value of mpl.rcParams[""image.cmap""] is used.; The default color_map can be set using set_figure_params(). palette str | Sequence[str] | Cycler | None (default: None)Colors to use for plotting categorical annotation groups.; The palette can be a valid ListedColormap name; ('Set2', 'tab20', …), a Cycler object, a dict mapping; categories to colors, or a sequence of colors. Colors must be valid to; matplotlib. (see is_color_like()).; If None, mpl.rcParams[""axes.prop_cycle""] is used unless the categorical; variable already has colors stored in adata.uns[""{var}_colors""].; If provided, values of adata.uns[""{var}_colors""] will be set. na_color Union[str, tuple[float, ...]] (default: 'lightgray')Color to use for null or masked values. Can be anything matplotlib accepts as a; color. Used for all points if color=None. na_in_legend bool (default: True)If there are missing values, whether they get an entry in the legend. Currently; only implemented for categorical legends. frameon bool | None (default: None)Draw a frame around the scatter plot. Defaults to value set in; set_figure_params(), defaults to True. title str | Sequence[str] | None (default: None)Provide title for panels either as string or list of strings,; e.g. ['title1', 'title2', ...]. vmin Union[str, float, Callable[[Sequence[float]], float], Sequence[Union[str, float, Callable[[Sequence[float]], float]]], None] (default: None)The value representing the lower limit of the color scale. Values smaller than vmin are plotted; with the ",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:16999,Modifiability,enhance,enhance,16999,"np.mean(values) and then set vmin=my_vmin. If vmin is None (default) an automatic; minimum value is used as defined by matplotlib scatter function. When making multiple; plots, vmin can be a list of values, one for each plot. For example vmin=[0.1, 'p1', None, my_vmin]. vmax Union[str, float, Callable[[Sequence[float]], float], Sequence[Union[str, float, Callable[[Sequence[float]], float]]], None] (default: None)The value representing the upper limit of the color scale. The format is the same as for vmin. vcenter Union[str, float, Callable[[Sequence[float]], float], Sequence[Union[str, float, Callable[[Sequence[float]], float]]], None] (default: None)The value representing the center of the color scale. Useful for diverging colormaps.; The format is the same as for vmin.; Example: sc.pl.umap(adata, color=’TREM2’, vcenter=’p50’, cmap=’RdBu_r’). add_outline bool | None (default: False)If set to True, this will add a thin border around groups of dots. In some situations; this can enhance the aesthetics of the resulting image. outline_color tuple[str, str] (default: ('black', 'white'))Tuple with two valid color names used to adjust the add_outline. The first color is the; border color (default: black), while the second color is a gap color between the; border color and the scatter dot (default: white). outline_width tuple[float, float] (default: (0.3, 0.05))Tuple with two width numbers used to adjust the outline. The first value is the width; of the border color as a fraction of the scatter dot size (default: 0.3). The second value is; width of the gap color (default: 0.05). ncols int (default: 4)Number of panels per row. wspace float | None (default: None)Adjust the width of the space between multiple panels. hspace float (default: 0.25)Adjust the height of the space between multiple panels. return_fig bool | None (default: None)Return the matplotlib figure. kwargsArguments to pass to matplotlib.pyplot.scatter(),; for instance: the maximum and minimum values (e.g. vmin",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:7178,Performance,cache,cachedir,7178,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:8419,Security,hash,hashsolo,8419,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pl.phate. Contents . phate(). scanpy.external.pl.phate#. scanpy.external.pl.phate(adata, *, color=None, mask_obs=None, gene_symbols=None, use_raw=None, sort_order=True, edges=Fals",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:7446,Testability,log,logfile,7446,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:7485,Testability,log,logpath,7485,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:7791,Testability,log,logging,7791,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html:7820,Testability,log,logging,7820, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.phate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.phate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html:8100,Deployability,toggle,toggleswitch,8100,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.sam.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html:9184,Deployability,release,release,9184,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pl.sam. Contents . sam(). scanpy.external.pl.sam#. scanpy.external.pl.sam(adata, projection='X_umap', *, c=None, cmap='Spectral_r', linewidth=0.0, edgecolor='k', axes=None, colorbar=True, s=10.0, **kwargs)[source]#; Scatter plot using the SAM projection or another input projection. Parameters:. projection str | ndarray (default: 'X_umap')A case-sensitive string indicating the projection to display (a key; in adata.obsm) or a 2D numpy array with cell coordinates. If None,; projection defaults to UMAP. c str | ndarray | None (default: None)Cell color values overlaid on the projection. Can be a string from adata.obs; to overlay cluster assignments / annotations or a 1D numpy array. axes Axes | None (default: None)Plot output to the specified, existing axes. If None, create new; figure window. kwargs Anyall keyword arguments in matplotlib.pyplot.scatter are eligi",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.sam.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html:7176,Performance,cache,cachedir,7176,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.sam.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html:8417,Security,hash,hashsolo,8417,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pl.sam. Contents . sam(). scanpy.external.pl.sam#. scanpy.external.pl.sam(adata, projection='X_umap', *, c=None, cmap='Spectral_r', linewidth=0.0, edgecolor='k', axes=None, colorb",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.sam.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html:7444,Testability,log,logfile,7444,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.sam.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html:7483,Testability,log,logpath,7483,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.sam.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html:7789,Testability,log,logging,7789,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.sam.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html:7818,Testability,log,logging,7818, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.sam.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.sam.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:12395,Availability,avail,available,12395,"specified, this looks; .obsp[.uns[neighbors_key][‘connectivities_key’]] for connectivities. arrows bool (default: False)Show arrows (deprecated in favour of scvelo.pl.velocity_embedding). arrows_kwds Mapping[str, Any] | None (default: None)Passed to quiver(). sort_order bool (default: True)For continuous annotations used as color parameter, plot data points; with higher values on top of others. groups str | Sequence[str] | None (default: None)Restrict to a few categories in categorical observation annotation.; The default is not to restrict to any groups. dimensions tuple[int, int] | Sequence[tuple[int, int]] | None (default: None)0-indexed dimensions of the embedding to plot as integers. E.g. [(0, 1), (1, 2)].; Unlike components, this argument is used in the same way as colors, e.g. is; used to specify a single plot at a time. Will eventually replace the components; argument. components str | Sequence[str] | None (default: None)For instance, ['1,2', '2,3']. To plot all available components use; components='all'. projection Literal['2d', '3d'] (default: '2d')Projection of plot (default: '2d'). legend_loc Optional[Literal['none', 'right margin', 'on data', 'on data export', 'best', 'upper right', 'upper left', 'lower left', 'lower right', 'right', 'center left', 'center right', 'lower center', 'upper center', 'center']] (default: 'right margin')Location of legend, either 'on data', 'right margin', None,; or a valid keyword for the loc parameter of Legend. legend_fontsize Union[int, float, Literal['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'], None] (default: None)Numeric size in pt or string describing the size.; See set_fontsize(). legend_fontweight Union[int, Literal['light', 'normal', 'medium', 'semibold', 'bold', 'heavy', 'black']] (default: 'bold')Legend font weight. A numeric value in range 0-1000 or a string.; Defaults to 'bold' if legend_loc == 'on data', otherwise to 'normal'.; See set_fontweight(). legend_fontoutline int | None (",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:14798,Availability,mask,masked,14798,"a sequence containing the size for each cell. The order should be; the same as in adata.obs. color_map Colormap | str | None (default: None)Color map to use for continous variables. Can be a name or a; Colormap instance (e.g. ""magma”, ""viridis""; or mpl.cm.cividis), see get_cmap().; If None, the value of mpl.rcParams[""image.cmap""] is used.; The default color_map can be set using set_figure_params(). palette str | Sequence[str] | Cycler | None (default: None)Colors to use for plotting categorical annotation groups.; The palette can be a valid ListedColormap name; ('Set2', 'tab20', …), a Cycler object, a dict mapping; categories to colors, or a sequence of colors. Colors must be valid to; matplotlib. (see is_color_like()).; If None, mpl.rcParams[""axes.prop_cycle""] is used unless the categorical; variable already has colors stored in adata.uns[""{var}_colors""].; If provided, values of adata.uns[""{var}_colors""] will be set. na_color Union[str, tuple[float, ...]] (default: 'lightgray')Color to use for null or masked values. Can be anything matplotlib accepts as a; color. Used for all points if color=None. na_in_legend bool (default: True)If there are missing values, whether they get an entry in the legend. Currently; only implemented for categorical legends. frameon bool | None (default: None)Draw a frame around the scatter plot. Defaults to value set in; set_figure_params(), defaults to True. title str | Sequence[str] | None (default: None)Provide title for panels either as string or list of strings,; e.g. ['title1', 'title2', ...]. vmin Union[str, float, Callable[[Sequence[float]], float], Sequence[Union[str, float, Callable[[Sequence[float]], float]]], None] (default: None)The value representing the lower limit of the color scale. Values smaller than vmin are plotted; with the same color as vmin. vmin can be a number, a string, a function or None. If; vmin is a string and has the format pN, this is interpreted as a vmin=percentile(N).; For example vmin=’p1.5’ is interpr",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:8103,Deployability,toggle,toggleswitch,8103,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:9187,Deployability,release,release,9187,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pl.trimap. Contents . trimap(). scanpy.external.pl.trimap#. scanpy.external.pl.trimap(adata, *, color=None, mask_obs=None, gene_symbols=None, use_raw=None, sort_order=True, edges=False, edges_width=0.1, edges_color='grey', neighbors_key=None, arrows=False, arrows_kwds=None, groups=None, components=None, dimensions=None, layer=None, projection='2d', scale_factor=None, color_map=None, cmap=None, palette=None, na_color='lightgray', na_in_legend=True, size=None, frameon=None, legend_fontsize=None, legend_fontweight='bold', legend_loc='right margin', legend_fontoutline=None, colorbar_loc='right', vmax=None, vmin=None, vcenter=None, norm=None, add_outline=False, outline_width=(0.3, 0.05), outline_color=('black', 'white'), ncols=4, hspace=0.25, wspace=None, title=None, show=None, save=None, ax=None, return_fig=None, marker='.', **kwargs)[source]#; Scatter plot in Tr",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:11705,Deployability,continuous,continuous,11705," None (default: None)Name of the AnnData object layer that wants to be plotted. By default; adata.raw.X is plotted. If use_raw=False is set, then adata.X is plotted.; If layer is set to a valid layer name, then the layer is plotted. layer; takes precedence over use_raw. edges bool (default: False)Show edges. edges_width float (default: 0.1)Width of edges. edges_color str | Sequence[float] | Sequence[str] (default: 'grey')Color of edges. See draw_networkx_edges(). neighbors_key str | None (default: None)Where to look for neighbors connectivities.; If not specified, this looks .obsp[‘connectivities’] for connectivities; (default storage place for pp.neighbors).; If specified, this looks; .obsp[.uns[neighbors_key][‘connectivities_key’]] for connectivities. arrows bool (default: False)Show arrows (deprecated in favour of scvelo.pl.velocity_embedding). arrows_kwds Mapping[str, Any] | None (default: None)Passed to quiver(). sort_order bool (default: True)For continuous annotations used as color parameter, plot data points; with higher values on top of others. groups str | Sequence[str] | None (default: None)Restrict to a few categories in categorical observation annotation.; The default is not to restrict to any groups. dimensions tuple[int, int] | Sequence[tuple[int, int]] | None (default: None)0-indexed dimensions of the embedding to plot as integers. E.g. [(0, 1), (1, 2)].; Unlike components, this argument is used in the same way as colors, e.g. is; used to specify a single plot at a time. Will eventually replace the components; argument. components str | Sequence[str] | None (default: None)For instance, ['1,2', '2,3']. To plot all available components use; components='all'. projection Literal['2d', '3d'] (default: '2d')Projection of plot (default: '2d'). legend_loc Optional[Literal['none', 'right margin', 'on data', 'on data export', 'best', 'upper right', 'upper left', 'lower left', 'lower right', 'right', 'center left', 'center right', 'lower center', 'upper center'",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:10276,Modifiability,variab,variables,10276,"py.external.pl.trimap. Contents . trimap(). scanpy.external.pl.trimap#. scanpy.external.pl.trimap(adata, *, color=None, mask_obs=None, gene_symbols=None, use_raw=None, sort_order=True, edges=False, edges_width=0.1, edges_color='grey', neighbors_key=None, arrows=False, arrows_kwds=None, groups=None, components=None, dimensions=None, layer=None, projection='2d', scale_factor=None, color_map=None, cmap=None, palette=None, na_color='lightgray', na_in_legend=True, size=None, frameon=None, legend_fontsize=None, legend_fontweight='bold', legend_loc='right margin', legend_fontoutline=None, colorbar_loc='right', vmax=None, vmin=None, vcenter=None, norm=None, add_outline=False, outline_width=(0.3, 0.05), outline_color=('black', 'white'), ncols=4, hspace=0.25, wspace=None, title=None, show=None, save=None, ax=None, return_fig=None, marker='.', **kwargs)[source]#; Scatter plot in TriMap basis. Parameters:. adata AnnDataAnnotated data matrix. color str | Sequence[str] | None (default: None)Keys for annotations of observations/cells or variables/genes, e.g.,; 'ann1' or ['ann1', 'ann2']. gene_symbols str | None (default: None)Column name in .var DataFrame that stores gene symbols. By default var_names; refer to the index column of the .var DataFrame. Setting this option allows; alternative names to be used. use_raw bool | None (default: None)Use .raw attribute of adata for coloring with gene expression. If None,; defaults to True if layer isn’t provided and adata.raw is present. layer str | None (default: None)Name of the AnnData object layer that wants to be plotted. By default; adata.raw.X is plotted. If use_raw=False is set, then adata.X is plotted.; If layer is set to a valid layer name, then the layer is plotted. layer; takes precedence over use_raw. edges bool (default: False)Show edges. edges_width float (default: 0.1)Width of edges. edges_color str | Sequence[float] | Sequence[str] (default: 'grey')Color of edges. See draw_networkx_edges(). neighbors_key str | None (defaul",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:13610,Modifiability,variab,variables,13610," 'on data', 'on data export', 'best', 'upper right', 'upper left', 'lower left', 'lower right', 'right', 'center left', 'center right', 'lower center', 'upper center', 'center']] (default: 'right margin')Location of legend, either 'on data', 'right margin', None,; or a valid keyword for the loc parameter of Legend. legend_fontsize Union[int, float, Literal['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'], None] (default: None)Numeric size in pt or string describing the size.; See set_fontsize(). legend_fontweight Union[int, Literal['light', 'normal', 'medium', 'semibold', 'bold', 'heavy', 'black']] (default: 'bold')Legend font weight. A numeric value in range 0-1000 or a string.; Defaults to 'bold' if legend_loc == 'on data', otherwise to 'normal'.; See set_fontweight(). legend_fontoutline int | None (default: None)Line width of the legend font outline in pt. Draws a white outline using; the path effect withStroke. colorbar_loc str | None (default: 'right')Where to place the colorbar for continous variables. If None, no colorbar; is added. size float | Sequence[float] | None (default: None)Point size. If None, is automatically computed as 120000 / n_cells.; Can be a sequence containing the size for each cell. The order should be; the same as in adata.obs. color_map Colormap | str | None (default: None)Color map to use for continous variables. Can be a name or a; Colormap instance (e.g. ""magma”, ""viridis""; or mpl.cm.cividis), see get_cmap().; If None, the value of mpl.rcParams[""image.cmap""] is used.; The default color_map can be set using set_figure_params(). palette str | Sequence[str] | Cycler | None (default: None)Colors to use for plotting categorical annotation groups.; The palette can be a valid ListedColormap name; ('Set2', 'tab20', …), a Cycler object, a dict mapping; categories to colors, or a sequence of colors. Colors must be valid to; matplotlib. (see is_color_like()).; If None, mpl.rcParams[""axes.prop_cycle""] is used unless the ca",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:13951,Modifiability,variab,variables,13951,"float, Literal['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'], None] (default: None)Numeric size in pt or string describing the size.; See set_fontsize(). legend_fontweight Union[int, Literal['light', 'normal', 'medium', 'semibold', 'bold', 'heavy', 'black']] (default: 'bold')Legend font weight. A numeric value in range 0-1000 or a string.; Defaults to 'bold' if legend_loc == 'on data', otherwise to 'normal'.; See set_fontweight(). legend_fontoutline int | None (default: None)Line width of the legend font outline in pt. Draws a white outline using; the path effect withStroke. colorbar_loc str | None (default: 'right')Where to place the colorbar for continous variables. If None, no colorbar; is added. size float | Sequence[float] | None (default: None)Point size. If None, is automatically computed as 120000 / n_cells.; Can be a sequence containing the size for each cell. The order should be; the same as in adata.obs. color_map Colormap | str | None (default: None)Color map to use for continous variables. Can be a name or a; Colormap instance (e.g. ""magma”, ""viridis""; or mpl.cm.cividis), see get_cmap().; If None, the value of mpl.rcParams[""image.cmap""] is used.; The default color_map can be set using set_figure_params(). palette str | Sequence[str] | Cycler | None (default: None)Colors to use for plotting categorical annotation groups.; The palette can be a valid ListedColormap name; ('Set2', 'tab20', …), a Cycler object, a dict mapping; categories to colors, or a sequence of colors. Colors must be valid to; matplotlib. (see is_color_like()).; If None, mpl.rcParams[""axes.prop_cycle""] is used unless the categorical; variable already has colors stored in adata.uns[""{var}_colors""].; If provided, values of adata.uns[""{var}_colors""] will be set. na_color Union[str, tuple[float, ...]] (default: 'lightgray')Color to use for null or masked values. Can be anything matplotlib accepts as a; color. Used for all points if color=None. na_in_legend bool (de",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:14584,Modifiability,variab,variable,14584,"the colorbar for continous variables. If None, no colorbar; is added. size float | Sequence[float] | None (default: None)Point size. If None, is automatically computed as 120000 / n_cells.; Can be a sequence containing the size for each cell. The order should be; the same as in adata.obs. color_map Colormap | str | None (default: None)Color map to use for continous variables. Can be a name or a; Colormap instance (e.g. ""magma”, ""viridis""; or mpl.cm.cividis), see get_cmap().; If None, the value of mpl.rcParams[""image.cmap""] is used.; The default color_map can be set using set_figure_params(). palette str | Sequence[str] | Cycler | None (default: None)Colors to use for plotting categorical annotation groups.; The palette can be a valid ListedColormap name; ('Set2', 'tab20', …), a Cycler object, a dict mapping; categories to colors, or a sequence of colors. Colors must be valid to; matplotlib. (see is_color_like()).; If None, mpl.rcParams[""axes.prop_cycle""] is used unless the categorical; variable already has colors stored in adata.uns[""{var}_colors""].; If provided, values of adata.uns[""{var}_colors""] will be set. na_color Union[str, tuple[float, ...]] (default: 'lightgray')Color to use for null or masked values. Can be anything matplotlib accepts as a; color. Used for all points if color=None. na_in_legend bool (default: True)If there are missing values, whether they get an entry in the legend. Currently; only implemented for categorical legends. frameon bool | None (default: None)Draw a frame around the scatter plot. Defaults to value set in; set_figure_params(), defaults to True. title str | Sequence[str] | None (default: None)Provide title for panels either as string or list of strings,; e.g. ['title1', 'title2', ...]. vmin Union[str, float, Callable[[Sequence[float]], float], Sequence[Union[str, float, Callable[[Sequence[float]], float]]], None] (default: None)The value representing the lower limit of the color scale. Values smaller than vmin are plotted; with the ",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:17005,Modifiability,enhance,enhance,17005,"np.mean(values) and then set vmin=my_vmin. If vmin is None (default) an automatic; minimum value is used as defined by matplotlib scatter function. When making multiple; plots, vmin can be a list of values, one for each plot. For example vmin=[0.1, 'p1', None, my_vmin]. vmax Union[str, float, Callable[[Sequence[float]], float], Sequence[Union[str, float, Callable[[Sequence[float]], float]]], None] (default: None)The value representing the upper limit of the color scale. The format is the same as for vmin. vcenter Union[str, float, Callable[[Sequence[float]], float], Sequence[Union[str, float, Callable[[Sequence[float]], float]]], None] (default: None)The value representing the center of the color scale. Useful for diverging colormaps.; The format is the same as for vmin.; Example: sc.pl.umap(adata, color=’TREM2’, vcenter=’p50’, cmap=’RdBu_r’). add_outline bool | None (default: False)If set to True, this will add a thin border around groups of dots. In some situations; this can enhance the aesthetics of the resulting image. outline_color tuple[str, str] (default: ('black', 'white'))Tuple with two valid color names used to adjust the add_outline. The first color is the; border color (default: black), while the second color is a gap color between the; border color and the scatter dot (default: white). outline_width tuple[float, float] (default: (0.3, 0.05))Tuple with two width numbers used to adjust the outline. The first value is the width; of the border color as a fraction of the scatter dot size (default: 0.3). The second value is; width of the gap color (default: 0.05). ncols int (default: 4)Number of panels per row. wspace float | None (default: None)Adjust the width of the space between multiple panels. hspace float (default: 0.25)Adjust the height of the space between multiple panels. return_fig bool | None (default: None)Return the matplotlib figure. kwargsArguments to pass to matplotlib.pyplot.scatter(),; for instance: the maximum and minimum values (e.g. vmin",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:7179,Performance,cache,cachedir,7179,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:8420,Security,hash,hashsolo,8420,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pl.trimap. Contents . trimap(). scanpy.external.pl.trimap#. scanpy.external.pl.trimap(adata, *, color=None, mask_obs=None, gene_symbols=None, use_raw=None, sort_order=True, edges=",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:7447,Testability,log,logfile,7447,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:7486,Testability,log,logpath,7486,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:7792,Testability,log,logging,7792,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html:7821,Testability,log,logging,7821, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.trimap.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.trimap.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html:8123,Deployability,toggle,toggleswitch,8123,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html:9207,Deployability,release,release,9207,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pl.wishbone_marker_trajectory. Contents . wishbone_marker_trajectory(). scanpy.external.pl.wishbone_marker_trajectory#. scanpy.external.pl.wishbone_marker_trajectory(adata, markers, *, no_bins=150, smoothing_factor=1, min_delta=0.1, show_variance=False, figsize=None, return_fig=False, show=True, save=None, ax=None)[source]#; Plot marker trends along trajectory, and return trajectory branches for further; analysis and visualization (heatmap, etc..). Parameters:. adata AnnDataAnnotated data matrix. markers Collection[str]Iterable of markers/genes to be plotted. show_variance bool (default: False)Logical indicating if the trends should be accompanied with variance. no_bins int (default: 150)Number of bins for calculating marker density. smoothing_factor int (default: 1)Parameter controlling the degree of smoothing. min_delta float (default: 0.1)Minimum differenc",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html:7199,Performance,cache,cachedir,7199,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html:8440,Security,hash,hashsolo,8440,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pl.wishbone_marker_trajectory. Contents . wishbone_marker_trajectory(). scanpy.external.pl.wishbone_marker_trajectory#. scanpy.external.pl.wishbone_marker_trajectory(adata, marker",MatchSource.WIKI,en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html:7467,Testability,log,logfile,7467,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html:7506,Testability,log,logpath,7506,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html:7812,Testability,log,logging,7812,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html:7841,Testability,log,logging,7841, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pl.wishbone_marker_trajectory.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:11031,Availability,avail,available,11031,"use in the scanpy workflow as an alternative to neighbors(). Note; This is just a wrapper of bbknn.bbknn(): up to date docstring,; more information and bug reports there. Parameters:. adata AnnDataNeeds the PCA computed and stored in adata.obsm[""X_pca""]. batch_key str (default: 'batch')adata.obs column name discriminating between your batches. use_rep str (default: 'X_pca')The dimensionality reduction in .obsm to use for neighbour detection. Defaults to PCA. approx bool (default: True)If True, use approximate neighbour finding - annoy or PyNNDescent. This results; in a quicker run time for large datasets while also potentially increasing the degree of; batch correction. use_annoy bool (default: True)Only used when approx=True. If True, will use annoy for neighbour finding. If; False, will use pyNNDescent instead. metric Union[str, Callable, DistanceMetric] (default: 'euclidean')What distance metric to use. The options depend on the choice of neighbour algorithm.; ”euclidean”, the default, is always available.; Annoy supports “angular”, “manhattan” and “hamming”.; PyNNDescent supports metrics listed in pynndescent.distances.named_distances; and custom functions, including compiled Numba code.; >>> import pynndescent; >>> pynndescent.distances.named_distances.keys() ; dict_keys(['euclidean', 'l2', 'sqeuclidean', 'manhattan', 'taxicab', 'l1', 'chebyshev', 'linfinity',; 'linfty', 'linf', 'minkowski', 'seuclidean', 'standardised_euclidean', 'wminkowski', ...]). KDTree supports members of sklearn.neighbors.KDTree’s valid_metrics list, or parameterised; DistanceMetric objects:; >>> import sklearn.neighbors; >>> sklearn.neighbors.KDTree.valid_metrics; ['euclidean', 'l2', 'minkowski', 'p', 'manhattan', 'cityblock', 'l1', 'chebyshev', 'infinity']. Note; check the relevant documentation for up-to-date lists. copy bool (default: False)If True, return a copy instead of writing to the supplied adata. neighbors_within_batch int (default: 3)How many top neighbours to report for eac",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:8102,Deployability,toggle,toggleswitch,8102,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:9186,Deployability,release,release,9186,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.bbknn. Contents . bbknn(). scanpy.external.pp.bbknn#. scanpy.external.pp.bbknn(adata, *, batch_key='batch', use_rep='X_pca', approx=True, use_annoy=True, metric='euclidean', copy=False, neighbors_within_batch=3, n_pcs=50, trim=None, annoy_n_trees=10, pynndescent_n_neighbors=30, pynndescent_random_state=0, use_faiss=True, set_op_mix_ratio=1.0, local_connectivity=1, **kwargs)[source]#; Batch balanced kNN [Polański et al., 2019].; Batch balanced kNN alters the kNN procedure to identify each cell’s top neighbours in; each batch separately instead of the entire cell pool with no accounting for batch.; The nearest neighbours for each batch are then merged to create a final list of; neighbours for the cell. Aligns batches in a quick and lightweight manner.; For use in the scanpy workflow as an alternative to neighbors(). Note; This is just a wrapper of bbknn.bbkn",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:13568,Deployability,install,installed,13568,"many top connectivities. May help with; population independence and improve the tidiness of clustering. The lower the value the; more independent the individual populations, at the cost of more conserved batch effect.; If None, sets the parameter value automatically to 10 times neighbors_within_batch; times the number of batches. Set to 0 to skip. annoy_n_trees int (default: 10)Only used with annoy neighbour identification. The number of trees to construct in the; annoy forest. More trees give higher precision when querying, at the cost of increased; run time and resource intensity. pynndescent_n_neighbors int (default: 30)Only used with pyNNDescent neighbour identification. The number of neighbours to include; in the approximate neighbour graph. More neighbours give higher precision when querying,; at the cost of increased run time and resource intensity. pynndescent_random_state int (default: 0)Only used with pyNNDescent neighbour identification. The RNG seed to use when creating; the graph. use_faiss bool (default: True)If approx=False and the metric is “euclidean”, use the faiss package to compute; nearest neighbours if installed. This improves performance at a minor cost to numerical; precision as faiss operates on float32. set_op_mix_ratio float (default: 1.0)UMAP connectivity computation parameter, float between 0 and 1, controlling the; blend between a connectivity matrix formed exclusively from mutual nearest neighbour; pairs (0) and a union of all observed neighbour relationships with the mutual pairs; emphasised (1). local_connectivity int (default: 1)UMAP connectivity computation parameter, how many nearest neighbors of each cell; are assumed to be fully connected (and given a connectivity value of 1). Return type:; AnnData | None. Returns:; The adata with the batch-corrected graph. previous; Preprocessing: PP. next; scanpy.external.pp.harmony_integrate. Contents; . bbknn(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:10099,Integrability,wrap,wrapper,10099,"buting; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.bbknn. Contents . bbknn(). scanpy.external.pp.bbknn#. scanpy.external.pp.bbknn(adata, *, batch_key='batch', use_rep='X_pca', approx=True, use_annoy=True, metric='euclidean', copy=False, neighbors_within_batch=3, n_pcs=50, trim=None, annoy_n_trees=10, pynndescent_n_neighbors=30, pynndescent_random_state=0, use_faiss=True, set_op_mix_ratio=1.0, local_connectivity=1, **kwargs)[source]#; Batch balanced kNN [Polański et al., 2019].; Batch balanced kNN alters the kNN procedure to identify each cell’s top neighbours in; each batch separately instead of the entire cell pool with no accounting for batch.; The nearest neighbours for each batch are then merged to create a final list of; neighbours for the cell. Aligns batches in a quick and lightweight manner.; For use in the scanpy workflow as an alternative to neighbors(). Note; This is just a wrapper of bbknn.bbknn(): up to date docstring,; more information and bug reports there. Parameters:. adata AnnDataNeeds the PCA computed and stored in adata.obsm[""X_pca""]. batch_key str (default: 'batch')adata.obs column name discriminating between your batches. use_rep str (default: 'X_pca')The dimensionality reduction in .obsm to use for neighbour detection. Defaults to PCA. approx bool (default: True)If True, use approximate neighbour finding - annoy or PyNNDescent. This results; in a quicker run time for large datasets while also potentially increasing the degree of; batch correction. use_annoy bool (default: True)Only used when approx=True. If True, will use annoy for neighbour finding. If; False, will use pyNNDescent instead. metric Union[str, Callable, DistanceMetric] (default: 'euclidean')What distance metric to use. The options depend on the choice of neighbour algorithm.; ”euclidean”, the default, is always available.; Annoy supports “angular”, “manhattan” and “hamming”.; ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:10949,Integrability,depend,depend,10949,"igns batches in a quick and lightweight manner.; For use in the scanpy workflow as an alternative to neighbors(). Note; This is just a wrapper of bbknn.bbknn(): up to date docstring,; more information and bug reports there. Parameters:. adata AnnDataNeeds the PCA computed and stored in adata.obsm[""X_pca""]. batch_key str (default: 'batch')adata.obs column name discriminating between your batches. use_rep str (default: 'X_pca')The dimensionality reduction in .obsm to use for neighbour detection. Defaults to PCA. approx bool (default: True)If True, use approximate neighbour finding - annoy or PyNNDescent. This results; in a quicker run time for large datasets while also potentially increasing the degree of; batch correction. use_annoy bool (default: True)Only used when approx=True. If True, will use annoy for neighbour finding. If; False, will use pyNNDescent instead. metric Union[str, Callable, DistanceMetric] (default: 'euclidean')What distance metric to use. The options depend on the choice of neighbour algorithm.; ”euclidean”, the default, is always available.; Annoy supports “angular”, “manhattan” and “hamming”.; PyNNDescent supports metrics listed in pynndescent.distances.named_distances; and custom functions, including compiled Numba code.; >>> import pynndescent; >>> pynndescent.distances.named_distances.keys() ; dict_keys(['euclidean', 'l2', 'sqeuclidean', 'manhattan', 'taxicab', 'l1', 'chebyshev', 'linfinity',; 'linfty', 'linf', 'minkowski', 'seuclidean', 'standardised_euclidean', 'wminkowski', ...]). KDTree supports members of sklearn.neighbors.KDTree’s valid_metrics list, or parameterised; DistanceMetric objects:; >>> import sklearn.neighbors; >>> sklearn.neighbors.KDTree.valid_metrics; ['euclidean', 'l2', 'minkowski', 'p', 'manhattan', 'cityblock', 'l1', 'chebyshev', 'infinity']. Note; check the relevant documentation for up-to-date lists. copy bool (default: False)If True, return a copy instead of writing to the supplied adata. neighbors_within_batch int (",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:7178,Performance,cache,cachedir,7178,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:13593,Performance,perform,performance,13593,"many top connectivities. May help with; population independence and improve the tidiness of clustering. The lower the value the; more independent the individual populations, at the cost of more conserved batch effect.; If None, sets the parameter value automatically to 10 times neighbors_within_batch; times the number of batches. Set to 0 to skip. annoy_n_trees int (default: 10)Only used with annoy neighbour identification. The number of trees to construct in the; annoy forest. More trees give higher precision when querying, at the cost of increased; run time and resource intensity. pynndescent_n_neighbors int (default: 30)Only used with pyNNDescent neighbour identification. The number of neighbours to include; in the approximate neighbour graph. More neighbours give higher precision when querying,; at the cost of increased run time and resource intensity. pynndescent_random_state int (default: 0)Only used with pyNNDescent neighbour identification. The RNG seed to use when creating; the graph. use_faiss bool (default: True)If approx=False and the metric is “euclidean”, use the faiss package to compute; nearest neighbours if installed. This improves performance at a minor cost to numerical; precision as faiss operates on float32. set_op_mix_ratio float (default: 1.0)UMAP connectivity computation parameter, float between 0 and 1, controlling the; blend between a connectivity matrix formed exclusively from mutual nearest neighbour; pairs (0) and a union of all observed neighbour relationships with the mutual pairs; emphasised (1). local_connectivity int (default: 1)UMAP connectivity computation parameter, how many nearest neighbors of each cell; are assumed to be fully connected (and given a connectivity value of 1). Return type:; AnnData | None. Returns:; The adata with the batch-corrected graph. previous; Preprocessing: PP. next; scanpy.external.pp.harmony_integrate. Contents; . bbknn(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:10452,Safety,detect,detection,10452,"ors_within_batch=3, n_pcs=50, trim=None, annoy_n_trees=10, pynndescent_n_neighbors=30, pynndescent_random_state=0, use_faiss=True, set_op_mix_ratio=1.0, local_connectivity=1, **kwargs)[source]#; Batch balanced kNN [Polański et al., 2019].; Batch balanced kNN alters the kNN procedure to identify each cell’s top neighbours in; each batch separately instead of the entire cell pool with no accounting for batch.; The nearest neighbours for each batch are then merged to create a final list of; neighbours for the cell. Aligns batches in a quick and lightweight manner.; For use in the scanpy workflow as an alternative to neighbors(). Note; This is just a wrapper of bbknn.bbknn(): up to date docstring,; more information and bug reports there. Parameters:. adata AnnDataNeeds the PCA computed and stored in adata.obsm[""X_pca""]. batch_key str (default: 'batch')adata.obs column name discriminating between your batches. use_rep str (default: 'X_pca')The dimensionality reduction in .obsm to use for neighbour detection. Defaults to PCA. approx bool (default: True)If True, use approximate neighbour finding - annoy or PyNNDescent. This results; in a quicker run time for large datasets while also potentially increasing the degree of; batch correction. use_annoy bool (default: True)Only used when approx=True. If True, will use annoy for neighbour finding. If; False, will use pyNNDescent instead. metric Union[str, Callable, DistanceMetric] (default: 'euclidean')What distance metric to use. The options depend on the choice of neighbour algorithm.; ”euclidean”, the default, is always available.; Annoy supports “angular”, “manhattan” and “hamming”.; PyNNDescent supports metrics listed in pynndescent.distances.named_distances; and custom functions, including compiled Numba code.; >>> import pynndescent; >>> pynndescent.distances.named_distances.keys() ; dict_keys(['euclidean', 'l2', 'sqeuclidean', 'manhattan', 'taxicab', 'l1', 'chebyshev', 'linfinity',; 'linfty', 'linf', 'minkowski', 'seucli",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:8419,Security,hash,hashsolo,8419,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.bbknn. Contents . bbknn(). scanpy.external.pp.bbknn#. scanpy.external.pp.bbknn(adata, *, batch_key='batch', use_rep='X_pca', approx=True, use_annoy=True, metric='euclidean', co",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:7446,Testability,log,logfile,7446,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:7485,Testability,log,logpath,7485,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:7791,Testability,log,logging,7791,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html:7820,Testability,log,logging,7820, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.bbknn.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.bbknn.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:8100,Deployability,toggle,toggleswitch,8100,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:9184,Deployability,release,release,9184,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.dca. Contents . dca(). scanpy.external.pp.dca#. scanpy.external.pp.dca(adata, mode='denoise', *, ae_type='nb-conddisp', normalize_per_cell=True, scale=True, log1p=True, hidden_size=(64, 32, 64), hidden_dropout=0.0, batchnorm=True, activation='relu', init='glorot_uniform', network_kwds=mappingproxy({}), epochs=300, reduce_lr=10, early_stop=15, batch_size=32, optimizer='RMSprop', random_state=0, threads=None, learning_rate=None, verbose=False, training_kwds=mappingproxy({}), return_model=False, return_info=False, copy=False)[source]#; Deep count autoencoder [Eraslan et al., 2019].; Fits a count autoencoder to the raw count data given in the anndata object; in order to denoise the data and to capture hidden representation of; cells in low dimensions. Type of the autoencoder and return values are; determined by the parameters. Note; More information and bug re",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:10749,Integrability,depend,dependant,10749,"y({}), return_model=False, return_info=False, copy=False)[source]#; Deep count autoencoder [Eraslan et al., 2019].; Fits a count autoencoder to the raw count data given in the anndata object; in order to denoise the data and to capture hidden representation of; cells in low dimensions. Type of the autoencoder and return values are; determined by the parameters. Note; More information and bug reports here. Parameters:. adata AnnDataAn anndata file with .raw attribute representing raw counts. mode Literal['denoise', 'latent'] (default: 'denoise')denoise overwrites adata.X with denoised expression values.; In latent mode DCA adds adata.obsm['X_dca'] to given adata; object. This matrix represent latent representation of cells via DCA. ae_type Literal['zinb-conddisp', 'zinb', 'nb-conddisp', 'nb'] (default: 'nb-conddisp')Type of the autoencoder. Return values and the architecture is; determined by the type e.g. nb does not provide dropout; probabilities. Types that end with “-conddisp”, assumes that dispersion is mean dependant. normalize_per_cell bool (default: True)If true, library size normalization is performed using; the sc.pp.normalize_per_cell function in Scanpy and saved into adata; object. Mean layer is re-introduces library size differences by; scaling the mean value of each cell in the output layer. See the; manuscript for more details. scale bool (default: True)If true, the input of the autoencoder is centered using; sc.pp.scale function of Scanpy. Note that the output is kept as raw; counts as loss functions are designed for the count data. log1p bool (default: True)If true, the input of the autoencoder is log transformed with a; pseudocount of one using sc.pp.log1p function of Scanpy. hidden_size Sequence[int] (default: (64, 32, 64))Width of hidden layers. hidden_dropout float | Sequence[float] (default: 0.0)Probability of weight dropout in the autoencoder (per layer if list; or tuple). batchnorm bool (default: True)If true, batch normalization is performed.",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:11508,Modifiability,layers,layers,11508,"'zinb-conddisp', 'zinb', 'nb-conddisp', 'nb'] (default: 'nb-conddisp')Type of the autoencoder. Return values and the architecture is; determined by the type e.g. nb does not provide dropout; probabilities. Types that end with “-conddisp”, assumes that dispersion is mean dependant. normalize_per_cell bool (default: True)If true, library size normalization is performed using; the sc.pp.normalize_per_cell function in Scanpy and saved into adata; object. Mean layer is re-introduces library size differences by; scaling the mean value of each cell in the output layer. See the; manuscript for more details. scale bool (default: True)If true, the input of the autoencoder is centered using; sc.pp.scale function of Scanpy. Note that the output is kept as raw; counts as loss functions are designed for the count data. log1p bool (default: True)If true, the input of the autoencoder is log transformed with a; pseudocount of one using sc.pp.log1p function of Scanpy. hidden_size Sequence[int] (default: (64, 32, 64))Width of hidden layers. hidden_dropout float | Sequence[float] (default: 0.0)Probability of weight dropout in the autoencoder (per layer if list; or tuple). batchnorm bool (default: True)If true, batch normalization is performed. activation str (default: 'relu')Activation function of hidden layers. init str (default: 'glorot_uniform')Initialization method used to initialize weights. network_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the autoencoder. epochs int (default: 300)Number of total epochs in training. reduce_lr int (default: 10)Reduces learning rate if validation loss does not improve in given number of epochs. early_stop int (default: 15)Stops training if validation loss does not improve in given number of epochs. batch_size int (default: 32)Number of samples in the batch used for SGD. optimizer str (default: 'RMSprop')Type of optimization method used for training. random_state Union[int, RandomState, None] (default: 0)Seed ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:11784,Modifiability,layers,layers,11784,"nt. normalize_per_cell bool (default: True)If true, library size normalization is performed using; the sc.pp.normalize_per_cell function in Scanpy and saved into adata; object. Mean layer is re-introduces library size differences by; scaling the mean value of each cell in the output layer. See the; manuscript for more details. scale bool (default: True)If true, the input of the autoencoder is centered using; sc.pp.scale function of Scanpy. Note that the output is kept as raw; counts as loss functions are designed for the count data. log1p bool (default: True)If true, the input of the autoencoder is log transformed with a; pseudocount of one using sc.pp.log1p function of Scanpy. hidden_size Sequence[int] (default: (64, 32, 64))Width of hidden layers. hidden_dropout float | Sequence[float] (default: 0.0)Probability of weight dropout in the autoencoder (per layer if list; or tuple). batchnorm bool (default: True)If true, batch normalization is performed. activation str (default: 'relu')Activation function of hidden layers. init str (default: 'glorot_uniform')Initialization method used to initialize weights. network_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the autoencoder. epochs int (default: 300)Number of total epochs in training. reduce_lr int (default: 10)Reduces learning rate if validation loss does not improve in given number of epochs. early_stop int (default: 15)Stops training if validation loss does not improve in given number of epochs. batch_size int (default: 32)Number of samples in the batch used for SGD. optimizer str (default: 'RMSprop')Type of optimization method used for training. random_state Union[int, RandomState, None] (default: 0)Seed for python, numpy and tensorflow. threads int | None (default: None)Number of threads to use in training. All cores are used by default. learning_rate float | None (default: None)Learning rate to use in the training. verbose bool (default: False)If true, prints additional info",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:7176,Performance,cache,cachedir,7176,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:9610,Performance,optimiz,optimizer,9610,"harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.dca. Contents . dca(). scanpy.external.pp.dca#. scanpy.external.pp.dca(adata, mode='denoise', *, ae_type='nb-conddisp', normalize_per_cell=True, scale=True, log1p=True, hidden_size=(64, 32, 64), hidden_dropout=0.0, batchnorm=True, activation='relu', init='glorot_uniform', network_kwds=mappingproxy({}), epochs=300, reduce_lr=10, early_stop=15, batch_size=32, optimizer='RMSprop', random_state=0, threads=None, learning_rate=None, verbose=False, training_kwds=mappingproxy({}), return_model=False, return_info=False, copy=False)[source]#; Deep count autoencoder [Eraslan et al., 2019].; Fits a count autoencoder to the raw count data given in the anndata object; in order to denoise the data and to capture hidden representation of; cells in low dimensions. Type of the autoencoder and return values are; determined by the parameters. Note; More information and bug reports here. Parameters:. adata AnnDataAn anndata file with .raw attribute representing raw counts. mode Literal['denoise', 'latent'] (default: 'denoise')denoise overwrites adata.X with denoised expression values.; In latent mode DCA adds adata.obsm['X_dca'] to given adata; object. This matrix represent latent representation of cells via DCA. ae_type Literal['zinb-conddisp', 'zinb', 'nb-conddisp', 'nb'] (default: 'nb-conddisp')Type of the autoencoder. Return values and the architecture is; determined by the type e.g. nb do",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:10838,Performance,perform,performed,10838,"r [Eraslan et al., 2019].; Fits a count autoencoder to the raw count data given in the anndata object; in order to denoise the data and to capture hidden representation of; cells in low dimensions. Type of the autoencoder and return values are; determined by the parameters. Note; More information and bug reports here. Parameters:. adata AnnDataAn anndata file with .raw attribute representing raw counts. mode Literal['denoise', 'latent'] (default: 'denoise')denoise overwrites adata.X with denoised expression values.; In latent mode DCA adds adata.obsm['X_dca'] to given adata; object. This matrix represent latent representation of cells via DCA. ae_type Literal['zinb-conddisp', 'zinb', 'nb-conddisp', 'nb'] (default: 'nb-conddisp')Type of the autoencoder. Return values and the architecture is; determined by the type e.g. nb does not provide dropout; probabilities. Types that end with “-conddisp”, assumes that dispersion is mean dependant. normalize_per_cell bool (default: True)If true, library size normalization is performed using; the sc.pp.normalize_per_cell function in Scanpy and saved into adata; object. Mean layer is re-introduces library size differences by; scaling the mean value of each cell in the output layer. See the; manuscript for more details. scale bool (default: True)If true, the input of the autoencoder is centered using; sc.pp.scale function of Scanpy. Note that the output is kept as raw; counts as loss functions are designed for the count data. log1p bool (default: True)If true, the input of the autoencoder is log transformed with a; pseudocount of one using sc.pp.log1p function of Scanpy. hidden_size Sequence[int] (default: (64, 32, 64))Width of hidden layers. hidden_dropout float | Sequence[float] (default: 0.0)Probability of weight dropout in the autoencoder (per layer if list; or tuple). batchnorm bool (default: True)If true, batch normalization is performed. activation str (default: 'relu')Activation function of hidden layers. init str (default: ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:11711,Performance,perform,performed,11711,"Types that end with “-conddisp”, assumes that dispersion is mean dependant. normalize_per_cell bool (default: True)If true, library size normalization is performed using; the sc.pp.normalize_per_cell function in Scanpy and saved into adata; object. Mean layer is re-introduces library size differences by; scaling the mean value of each cell in the output layer. See the; manuscript for more details. scale bool (default: True)If true, the input of the autoencoder is centered using; sc.pp.scale function of Scanpy. Note that the output is kept as raw; counts as loss functions are designed for the count data. log1p bool (default: True)If true, the input of the autoencoder is log transformed with a; pseudocount of one using sc.pp.log1p function of Scanpy. hidden_size Sequence[int] (default: (64, 32, 64))Width of hidden layers. hidden_dropout float | Sequence[float] (default: 0.0)Probability of weight dropout in the autoencoder (per layer if list; or tuple). batchnorm bool (default: True)If true, batch normalization is performed. activation str (default: 'relu')Activation function of hidden layers. init str (default: 'glorot_uniform')Initialization method used to initialize weights. network_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the autoencoder. epochs int (default: 300)Number of total epochs in training. reduce_lr int (default: 10)Reduces learning rate if validation loss does not improve in given number of epochs. early_stop int (default: 15)Stops training if validation loss does not improve in given number of epochs. batch_size int (default: 32)Number of samples in the batch used for SGD. optimizer str (default: 'RMSprop')Type of optimization method used for training. random_state Union[int, RandomState, None] (default: 0)Seed for python, numpy and tensorflow. threads int | None (default: None)Number of threads to use in training. All cores are used by default. learning_rate float | None (default: None)Learning rate to use in the",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:12338,Performance,optimiz,optimizer,12338," with a; pseudocount of one using sc.pp.log1p function of Scanpy. hidden_size Sequence[int] (default: (64, 32, 64))Width of hidden layers. hidden_dropout float | Sequence[float] (default: 0.0)Probability of weight dropout in the autoencoder (per layer if list; or tuple). batchnorm bool (default: True)If true, batch normalization is performed. activation str (default: 'relu')Activation function of hidden layers. init str (default: 'glorot_uniform')Initialization method used to initialize weights. network_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the autoencoder. epochs int (default: 300)Number of total epochs in training. reduce_lr int (default: 10)Reduces learning rate if validation loss does not improve in given number of epochs. early_stop int (default: 15)Stops training if validation loss does not improve in given number of epochs. batch_size int (default: 32)Number of samples in the batch used for SGD. optimizer str (default: 'RMSprop')Type of optimization method used for training. random_state Union[int, RandomState, None] (default: 0)Seed for python, numpy and tensorflow. threads int | None (default: None)Number of threads to use in training. All cores are used by default. learning_rate float | None (default: None)Learning rate to use in the training. verbose bool (default: False)If true, prints additional information about training and architecture. training_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the training process. return_model bool (default: False)If true, trained autoencoder object is returned. See “Returns”. return_info bool (default: False)If true, all additional parameters of DCA are stored in adata.obsm such as dropout; probabilities (obsm[‘X_dca_dropout’]) and estimated dispersion values; (obsm[‘X_dca_dispersion’]), in case that autoencoder is of type; zinb or zinb-conddisp. copy bool (default: False)If true, a copy of anndata is returned. Return type:; AnnData | Non",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:12380,Performance,optimiz,optimization,12380," with a; pseudocount of one using sc.pp.log1p function of Scanpy. hidden_size Sequence[int] (default: (64, 32, 64))Width of hidden layers. hidden_dropout float | Sequence[float] (default: 0.0)Probability of weight dropout in the autoencoder (per layer if list; or tuple). batchnorm bool (default: True)If true, batch normalization is performed. activation str (default: 'relu')Activation function of hidden layers. init str (default: 'glorot_uniform')Initialization method used to initialize weights. network_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the autoencoder. epochs int (default: 300)Number of total epochs in training. reduce_lr int (default: 10)Reduces learning rate if validation loss does not improve in given number of epochs. early_stop int (default: 15)Stops training if validation loss does not improve in given number of epochs. batch_size int (default: 32)Number of samples in the batch used for SGD. optimizer str (default: 'RMSprop')Type of optimization method used for training. random_state Union[int, RandomState, None] (default: 0)Seed for python, numpy and tensorflow. threads int | None (default: None)Number of threads to use in training. All cores are used by default. learning_rate float | None (default: None)Learning rate to use in the training. verbose bool (default: False)If true, prints additional information about training and architecture. training_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the training process. return_model bool (default: False)If true, trained autoencoder object is returned. See “Returns”. return_info bool (default: False)If true, all additional parameters of DCA are stored in adata.obsm such as dropout; probabilities (obsm[‘X_dca_dropout’]) and estimated dispersion values; (obsm[‘X_dca_dispersion’]), in case that autoencoder is of type; zinb or zinb-conddisp. copy bool (default: False)If true, a copy of anndata is returned. Return type:; AnnData | Non",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:8417,Security,hash,hashsolo,8417,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.dca. Contents . dca(). scanpy.external.pp.dca#. scanpy.external.pp.dca(adata, mode='denoise', *, ae_type='nb-conddisp', normalize_per_cell=True, scale=True, log1p=True, hidden_",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:12099,Security,validat,validation,12099,"lt: True)If true, the input of the autoencoder is centered using; sc.pp.scale function of Scanpy. Note that the output is kept as raw; counts as loss functions are designed for the count data. log1p bool (default: True)If true, the input of the autoencoder is log transformed with a; pseudocount of one using sc.pp.log1p function of Scanpy. hidden_size Sequence[int] (default: (64, 32, 64))Width of hidden layers. hidden_dropout float | Sequence[float] (default: 0.0)Probability of weight dropout in the autoencoder (per layer if list; or tuple). batchnorm bool (default: True)If true, batch normalization is performed. activation str (default: 'relu')Activation function of hidden layers. init str (default: 'glorot_uniform')Initialization method used to initialize weights. network_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the autoencoder. epochs int (default: 300)Number of total epochs in training. reduce_lr int (default: 10)Reduces learning rate if validation loss does not improve in given number of epochs. early_stop int (default: 15)Stops training if validation loss does not improve in given number of epochs. batch_size int (default: 32)Number of samples in the batch used for SGD. optimizer str (default: 'RMSprop')Type of optimization method used for training. random_state Union[int, RandomState, None] (default: 0)Seed for python, numpy and tensorflow. threads int | None (default: None)Number of threads to use in training. All cores are used by default. learning_rate float | None (default: None)Learning rate to use in the training. verbose bool (default: False)If true, prints additional information about training and architecture. training_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the training process. return_model bool (default: False)If true, trained autoencoder object is returned. See “Returns”. return_info bool (default: False)If true, all additional parameters of DCA are stored in adat",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:12205,Security,validat,validation,12205,"he output is kept as raw; counts as loss functions are designed for the count data. log1p bool (default: True)If true, the input of the autoencoder is log transformed with a; pseudocount of one using sc.pp.log1p function of Scanpy. hidden_size Sequence[int] (default: (64, 32, 64))Width of hidden layers. hidden_dropout float | Sequence[float] (default: 0.0)Probability of weight dropout in the autoencoder (per layer if list; or tuple). batchnorm bool (default: True)If true, batch normalization is performed. activation str (default: 'relu')Activation function of hidden layers. init str (default: 'glorot_uniform')Initialization method used to initialize weights. network_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the autoencoder. epochs int (default: 300)Number of total epochs in training. reduce_lr int (default: 10)Reduces learning rate if validation loss does not improve in given number of epochs. early_stop int (default: 15)Stops training if validation loss does not improve in given number of epochs. batch_size int (default: 32)Number of samples in the batch used for SGD. optimizer str (default: 'RMSprop')Type of optimization method used for training. random_state Union[int, RandomState, None] (default: 0)Seed for python, numpy and tensorflow. threads int | None (default: None)Number of threads to use in training. All cores are used by default. learning_rate float | None (default: None)Learning rate to use in the training. verbose bool (default: False)If true, prints additional information about training and architecture. training_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the training process. return_model bool (default: False)If true, trained autoencoder object is returned. See “Returns”. return_info bool (default: False)If true, all additional parameters of DCA are stored in adata.obsm such as dropout; probabilities (obsm[‘X_dca_dropout’]) and estimated dispersion values; (obsm[‘X_dca_d",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:14409,Security,hash,hashsolo,14409,"ber of threads to use in training. All cores are used by default. learning_rate float | None (default: None)Learning rate to use in the training. verbose bool (default: False)If true, prints additional information about training and architecture. training_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the training process. return_model bool (default: False)If true, trained autoencoder object is returned. See “Returns”. return_info bool (default: False)If true, all additional parameters of DCA are stored in adata.obsm such as dropout; probabilities (obsm[‘X_dca_dropout’]) and estimated dispersion values; (obsm[‘X_dca_dispersion’]), in case that autoencoder is of type; zinb or zinb-conddisp. copy bool (default: False)If true, a copy of anndata is returned. Return type:; AnnData | None. Returns:; If copy is true and return_model is false, AnnData object is returned.; In “denoise” mode, adata.X is overwritten with the denoised values.; In “latent” mode, latent low dimensional representation of cells are stored; in adata.obsm['X_dca'] and adata.X is not modified.; Note that these values are not corrected for library size effects.; If return_info is true, all estimated distribution parameters are stored; in AnnData like this:. .obsm[""X_dca_dropout""]The mixture coefficient (pi) of the zero component in ZINB,; i.e. dropout probability (if ae_type is zinb or zinb-conddisp). .obsm[""X_dca_dispersion""]The dispersion parameter of NB. .uns[""dca_loss_history""]The loss history of the training.; See .history attribute of Keras History class for mode details. Finally, the raw counts are stored in .raw attribute of AnnData object.; If return_model is given, trained model is returned.; When both copy and return_model are true,; a tuple of anndata and model is returned in that order. previous; scanpy.external.pp.hashsolo. next; scanpy.external.pp.magic. Contents; . dca(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:7444,Testability,log,logfile,7444,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:7483,Testability,log,logpath,7483,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:7789,Testability,log,logging,7789,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:7818,Testability,log,logging,7818, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:11362,Testability,log,log,11362,"s adata.obsm['X_dca'] to given adata; object. This matrix represent latent representation of cells via DCA. ae_type Literal['zinb-conddisp', 'zinb', 'nb-conddisp', 'nb'] (default: 'nb-conddisp')Type of the autoencoder. Return values and the architecture is; determined by the type e.g. nb does not provide dropout; probabilities. Types that end with “-conddisp”, assumes that dispersion is mean dependant. normalize_per_cell bool (default: True)If true, library size normalization is performed using; the sc.pp.normalize_per_cell function in Scanpy and saved into adata; object. Mean layer is re-introduces library size differences by; scaling the mean value of each cell in the output layer. See the; manuscript for more details. scale bool (default: True)If true, the input of the autoencoder is centered using; sc.pp.scale function of Scanpy. Note that the output is kept as raw; counts as loss functions are designed for the count data. log1p bool (default: True)If true, the input of the autoencoder is log transformed with a; pseudocount of one using sc.pp.log1p function of Scanpy. hidden_size Sequence[int] (default: (64, 32, 64))Width of hidden layers. hidden_dropout float | Sequence[float] (default: 0.0)Probability of weight dropout in the autoencoder (per layer if list; or tuple). batchnorm bool (default: True)If true, batch normalization is performed. activation str (default: 'relu')Activation function of hidden layers. init str (default: 'glorot_uniform')Initialization method used to initialize weights. network_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the autoencoder. epochs int (default: 300)Number of total epochs in training. reduce_lr int (default: 10)Reduces learning rate if validation loss does not improve in given number of epochs. early_stop int (default: 15)Stops training if validation loss does not improve in given number of epochs. batch_size int (default: 32)Number of samples in the batch used for SGD. optimizer str (d",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html:12082,Usability,learn,learning,12082,"lt: True)If true, the input of the autoencoder is centered using; sc.pp.scale function of Scanpy. Note that the output is kept as raw; counts as loss functions are designed for the count data. log1p bool (default: True)If true, the input of the autoencoder is log transformed with a; pseudocount of one using sc.pp.log1p function of Scanpy. hidden_size Sequence[int] (default: (64, 32, 64))Width of hidden layers. hidden_dropout float | Sequence[float] (default: 0.0)Probability of weight dropout in the autoencoder (per layer if list; or tuple). batchnorm bool (default: True)If true, batch normalization is performed. activation str (default: 'relu')Activation function of hidden layers. init str (default: 'glorot_uniform')Initialization method used to initialize weights. network_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the autoencoder. epochs int (default: 300)Number of total epochs in training. reduce_lr int (default: 10)Reduces learning rate if validation loss does not improve in given number of epochs. early_stop int (default: 15)Stops training if validation loss does not improve in given number of epochs. batch_size int (default: 32)Number of samples in the batch used for SGD. optimizer str (default: 'RMSprop')Type of optimization method used for training. random_state Union[int, RandomState, None] (default: 0)Seed for python, numpy and tensorflow. threads int | None (default: None)Number of threads to use in training. All cores are used by default. learning_rate float | None (default: None)Learning rate to use in the training. verbose bool (default: False)If true, prints additional information about training and architecture. training_kwds Mapping[str, Any] (default: mappingproxy({}))Additional keyword arguments for the training process. return_model bool (default: False)If true, trained autoencoder object is returned. See “Returns”. return_info bool (default: False)If true, all additional parameters of DCA are stored in adat",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.dca.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.dca.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:8114,Deployability,toggle,toggleswitch,8114,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:9198,Deployability,release,release,9198,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.harmony_integrate. Contents . harmony_integrate(). scanpy.external.pp.harmony_integrate#. scanpy.external.pp.harmony_integrate(adata, key, *, basis='X_pca', adjusted_basis='X_pca_harmony', **kwargs)[source]#; Use harmonypy [Korsunsky et al., 2019] to integrate different experiments.; Harmony [Korsunsky et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments. This function uses the python; port of Harmony, harmonypy, to integrate single-cell data; stored in an AnnData object. As Harmony works by adjusting the; principal components, this function should be run after performing; PCA but before computing the neighbor graph, as illustrated in the; example below. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. basis str (default: 'X_p",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:9515,Deployability,integrat,integrate,9515,"e; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.harmony_integrate. Contents . harmony_integrate(). scanpy.external.pp.harmony_integrate#. scanpy.external.pp.harmony_integrate(adata, key, *, basis='X_pca', adjusted_basis='X_pca_harmony', **kwargs)[source]#; Use harmonypy [Korsunsky et al., 2019] to integrate different experiments.; Harmony [Korsunsky et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments. This function uses the python; port of Harmony, harmonypy, to integrate single-cell data; stored in an AnnData object. As Harmony works by adjusting the; principal components, this function should be run after performing; PCA but before computing the neighbor graph, as illustrated in the; example below. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. basis str (default: 'X_pca')The name of the field in adata.obsm where the PCA table is; stored. Defaults to 'X_pca', which is the default for; sc.pp.pca(). adjusted_basis str (default: 'X_pca_harmony')The name of the field in adata.obsm where the adjusted PCA; table will be stored after running this function. Defaults to; X_pca_harmony. kwargsAny additional arguments will be passed to; harmonypy.run_harmony(). Retu",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:9602,Deployability,integrat,integrating,9602,"xternal.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.harmony_integrate. Contents . harmony_integrate(). scanpy.external.pp.harmony_integrate#. scanpy.external.pp.harmony_integrate(adata, key, *, basis='X_pca', adjusted_basis='X_pca_harmony', **kwargs)[source]#; Use harmonypy [Korsunsky et al., 2019] to integrate different experiments.; Harmony [Korsunsky et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments. This function uses the python; port of Harmony, harmonypy, to integrate single-cell data; stored in an AnnData object. As Harmony works by adjusting the; principal components, this function should be run after performing; PCA but before computing the neighbor graph, as illustrated in the; example below. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. basis str (default: 'X_pca')The name of the field in adata.obsm where the PCA table is; stored. Defaults to 'X_pca', which is the default for; sc.pp.pca(). adjusted_basis str (default: 'X_pca_harmony')The name of the field in adata.obsm where the adjusted PCA; table will be stored after running this function. Defaults to; X_pca_harmony. kwargsAny additional arguments will be passed to; harmonypy.run_harmony(). Returns:; Updates adata with the field adata.obsm[obsm_out_field],; containing principal compo",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:9721,Deployability,integrat,integrate,9721,"ernal.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.harmony_integrate. Contents . harmony_integrate(). scanpy.external.pp.harmony_integrate#. scanpy.external.pp.harmony_integrate(adata, key, *, basis='X_pca', adjusted_basis='X_pca_harmony', **kwargs)[source]#; Use harmonypy [Korsunsky et al., 2019] to integrate different experiments.; Harmony [Korsunsky et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments. This function uses the python; port of Harmony, harmonypy, to integrate single-cell data; stored in an AnnData object. As Harmony works by adjusting the; principal components, this function should be run after performing; PCA but before computing the neighbor graph, as illustrated in the; example below. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. basis str (default: 'X_pca')The name of the field in adata.obsm where the PCA table is; stored. Defaults to 'X_pca', which is the default for; sc.pp.pca(). adjusted_basis str (default: 'X_pca_harmony')The name of the field in adata.obsm where the adjusted PCA; table will be stored after running this function. Defaults to; X_pca_harmony. kwargsAny additional arguments will be passed to; harmonypy.run_harmony(). Returns:; Updates adata with the field adata.obsm[obsm_out_field],; containing principal components adjusted by Harmony such that; different experiments are integrated. Example; First, load librar",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:10679,Deployability,integrat,integrated,10679,"nts.; Harmony [Korsunsky et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments. This function uses the python; port of Harmony, harmonypy, to integrate single-cell data; stored in an AnnData object. As Harmony works by adjusting the; principal components, this function should be run after performing; PCA but before computing the neighbor graph, as illustrated in the; example below. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. basis str (default: 'X_pca')The name of the field in adata.obsm where the PCA table is; stored. Defaults to 'X_pca', which is the default for; sc.pp.pca(). adjusted_basis str (default: 'X_pca_harmony')The name of the field in adata.obsm where the adjusted PCA; table will be stored after running this function. Defaults to; X_pca_harmony. kwargsAny additional arguments will be passed to; harmonypy.run_harmony(). Returns:; Updates adata with the field adata.obsm[obsm_out_field],; containing principal components adjusted by Harmony such that; different experiments are integrated. Example; First, load libraries and example dataset, and preprocess.; >>> import scanpy as sc; >>> import scanpy.external as sce; >>> adata = sc.datasets.pbmc3k(); >>> sc.pp.recipe_zheng17(adata); >>> sc.pp.pca(adata). We now arbitrarily assign a batch metadata variable to each cell; for the sake of example, but during real usage there would already; be a column in adata.obs giving the experiment each cell came; from.; >>> adata.obs['batch'] = 1350*['a'] + 1350*['b']. Finally, run harmony. Afterwards, there will be a new table in; adata.obsm containing the adjusted PC’s.; >>> sce.pp.harmony_integrate(adata, 'batch'); >>> 'X_pca_harmony' in adata.obsm; True. previous; scanpy.external.pp.bbknn. next; scanpy.external.pp.mnn_correct. Contents; . harmony_integrate(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:9515,Integrability,integrat,integrate,9515,"e; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.harmony_integrate. Contents . harmony_integrate(). scanpy.external.pp.harmony_integrate#. scanpy.external.pp.harmony_integrate(adata, key, *, basis='X_pca', adjusted_basis='X_pca_harmony', **kwargs)[source]#; Use harmonypy [Korsunsky et al., 2019] to integrate different experiments.; Harmony [Korsunsky et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments. This function uses the python; port of Harmony, harmonypy, to integrate single-cell data; stored in an AnnData object. As Harmony works by adjusting the; principal components, this function should be run after performing; PCA but before computing the neighbor graph, as illustrated in the; example below. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. basis str (default: 'X_pca')The name of the field in adata.obsm where the PCA table is; stored. Defaults to 'X_pca', which is the default for; sc.pp.pca(). adjusted_basis str (default: 'X_pca_harmony')The name of the field in adata.obsm where the adjusted PCA; table will be stored after running this function. Defaults to; X_pca_harmony. kwargsAny additional arguments will be passed to; harmonypy.run_harmony(). Retu",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:9602,Integrability,integrat,integrating,9602,"xternal.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.harmony_integrate. Contents . harmony_integrate(). scanpy.external.pp.harmony_integrate#. scanpy.external.pp.harmony_integrate(adata, key, *, basis='X_pca', adjusted_basis='X_pca_harmony', **kwargs)[source]#; Use harmonypy [Korsunsky et al., 2019] to integrate different experiments.; Harmony [Korsunsky et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments. This function uses the python; port of Harmony, harmonypy, to integrate single-cell data; stored in an AnnData object. As Harmony works by adjusting the; principal components, this function should be run after performing; PCA but before computing the neighbor graph, as illustrated in the; example below. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. basis str (default: 'X_pca')The name of the field in adata.obsm where the PCA table is; stored. Defaults to 'X_pca', which is the default for; sc.pp.pca(). adjusted_basis str (default: 'X_pca_harmony')The name of the field in adata.obsm where the adjusted PCA; table will be stored after running this function. Defaults to; X_pca_harmony. kwargsAny additional arguments will be passed to; harmonypy.run_harmony(). Returns:; Updates adata with the field adata.obsm[obsm_out_field],; containing principal compo",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:9721,Integrability,integrat,integrate,9721,"ernal.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.harmony_integrate. Contents . harmony_integrate(). scanpy.external.pp.harmony_integrate#. scanpy.external.pp.harmony_integrate(adata, key, *, basis='X_pca', adjusted_basis='X_pca_harmony', **kwargs)[source]#; Use harmonypy [Korsunsky et al., 2019] to integrate different experiments.; Harmony [Korsunsky et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments. This function uses the python; port of Harmony, harmonypy, to integrate single-cell data; stored in an AnnData object. As Harmony works by adjusting the; principal components, this function should be run after performing; PCA but before computing the neighbor graph, as illustrated in the; example below. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. basis str (default: 'X_pca')The name of the field in adata.obsm where the PCA table is; stored. Defaults to 'X_pca', which is the default for; sc.pp.pca(). adjusted_basis str (default: 'X_pca_harmony')The name of the field in adata.obsm where the adjusted PCA; table will be stored after running this function. Defaults to; X_pca_harmony. kwargsAny additional arguments will be passed to; harmonypy.run_harmony(). Returns:; Updates adata with the field adata.obsm[obsm_out_field],; containing principal components adjusted by Harmony such that; different experiments are integrated. Example; First, load librar",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:10679,Integrability,integrat,integrated,10679,"nts.; Harmony [Korsunsky et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments. This function uses the python; port of Harmony, harmonypy, to integrate single-cell data; stored in an AnnData object. As Harmony works by adjusting the; principal components, this function should be run after performing; PCA but before computing the neighbor graph, as illustrated in the; example below. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. basis str (default: 'X_pca')The name of the field in adata.obsm where the PCA table is; stored. Defaults to 'X_pca', which is the default for; sc.pp.pca(). adjusted_basis str (default: 'X_pca_harmony')The name of the field in adata.obsm where the adjusted PCA; table will be stored after running this function. Defaults to; X_pca_harmony. kwargsAny additional arguments will be passed to; harmonypy.run_harmony(). Returns:; Updates adata with the field adata.obsm[obsm_out_field],; containing principal components adjusted by Harmony such that; different experiments are integrated. Example; First, load libraries and example dataset, and preprocess.; >>> import scanpy as sc; >>> import scanpy.external as sce; >>> adata = sc.datasets.pbmc3k(); >>> sc.pp.recipe_zheng17(adata); >>> sc.pp.pca(adata). We now arbitrarily assign a batch metadata variable to each cell; for the sake of example, but during real usage there would already; be a column in adata.obs giving the experiment each cell came; from.; >>> adata.obs['batch'] = 1350*['a'] + 1350*['b']. Finally, run harmony. Afterwards, there will be a new table in; adata.obsm containing the adjusted PC’s.; >>> sce.pp.harmony_integrate(adata, 'batch'); >>> 'X_pca_harmony' in adata.obsm; True. previous; scanpy.external.pp.bbknn. next; scanpy.external.pp.mnn_correct. Contents; . harmony_integrate(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:10952,Modifiability,variab,variable,10952,"nts.; Harmony [Korsunsky et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments. This function uses the python; port of Harmony, harmonypy, to integrate single-cell data; stored in an AnnData object. As Harmony works by adjusting the; principal components, this function should be run after performing; PCA but before computing the neighbor graph, as illustrated in the; example below. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. basis str (default: 'X_pca')The name of the field in adata.obsm where the PCA table is; stored. Defaults to 'X_pca', which is the default for; sc.pp.pca(). adjusted_basis str (default: 'X_pca_harmony')The name of the field in adata.obsm where the adjusted PCA; table will be stored after running this function. Defaults to; X_pca_harmony. kwargsAny additional arguments will be passed to; harmonypy.run_harmony(). Returns:; Updates adata with the field adata.obsm[obsm_out_field],; containing principal components adjusted by Harmony such that; different experiments are integrated. Example; First, load libraries and example dataset, and preprocess.; >>> import scanpy as sc; >>> import scanpy.external as sce; >>> adata = sc.datasets.pbmc3k(); >>> sc.pp.recipe_zheng17(adata); >>> sc.pp.pca(adata). We now arbitrarily assign a batch metadata variable to each cell; for the sake of example, but during real usage there would already; be a column in adata.obs giving the experiment each cell came; from.; >>> adata.obs['batch'] = 1350*['a'] + 1350*['b']. Finally, run harmony. Afterwards, there will be a new table in; adata.obsm containing the adjusted PC’s.; >>> sce.pp.harmony_integrate(adata, 'batch'); >>> 'X_pca_harmony' in adata.obsm; True. previous; scanpy.external.pp.bbknn. next; scanpy.external.pp.mnn_correct. Contents; . harmony_integrate(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:7190,Performance,cache,cachedir,7190,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:9869,Performance,perform,performing,9869,"canpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.harmony_integrate. Contents . harmony_integrate(). scanpy.external.pp.harmony_integrate#. scanpy.external.pp.harmony_integrate(adata, key, *, basis='X_pca', adjusted_basis='X_pca_harmony', **kwargs)[source]#; Use harmonypy [Korsunsky et al., 2019] to integrate different experiments.; Harmony [Korsunsky et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments. This function uses the python; port of Harmony, harmonypy, to integrate single-cell data; stored in an AnnData object. As Harmony works by adjusting the; principal components, this function should be run after performing; PCA but before computing the neighbor graph, as illustrated in the; example below. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. basis str (default: 'X_pca')The name of the field in adata.obsm where the PCA table is; stored. Defaults to 'X_pca', which is the default for; sc.pp.pca(). adjusted_basis str (default: 'X_pca_harmony')The name of the field in adata.obsm where the adjusted PCA; table will be stored after running this function. Defaults to; X_pca_harmony. kwargsAny additional arguments will be passed to; harmonypy.run_harmony(). Returns:; Updates adata with the field adata.obsm[obsm_out_field],; containing principal components adjusted by Harmony such that; different experiments are integrated. Example; First, load libraries and example dataset, and preprocess.; >>> import scanpy as sc; >>> import scanpy.external as sce; >>> adata = sc.datasets.pbmc3k(); >>> sc.pp.recipe",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:10707,Performance,load,load,10707,"nts.; Harmony [Korsunsky et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments. This function uses the python; port of Harmony, harmonypy, to integrate single-cell data; stored in an AnnData object. As Harmony works by adjusting the; principal components, this function should be run after performing; PCA but before computing the neighbor graph, as illustrated in the; example below. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. basis str (default: 'X_pca')The name of the field in adata.obsm where the PCA table is; stored. Defaults to 'X_pca', which is the default for; sc.pp.pca(). adjusted_basis str (default: 'X_pca_harmony')The name of the field in adata.obsm where the adjusted PCA; table will be stored after running this function. Defaults to; X_pca_harmony. kwargsAny additional arguments will be passed to; harmonypy.run_harmony(). Returns:; Updates adata with the field adata.obsm[obsm_out_field],; containing principal components adjusted by Harmony such that; different experiments are integrated. Example; First, load libraries and example dataset, and preprocess.; >>> import scanpy as sc; >>> import scanpy.external as sce; >>> adata = sc.datasets.pbmc3k(); >>> sc.pp.recipe_zheng17(adata); >>> sc.pp.pca(adata). We now arbitrarily assign a batch metadata variable to each cell; for the sake of example, but during real usage there would already; be a column in adata.obs giving the experiment each cell came; from.; >>> adata.obs['batch'] = 1350*['a'] + 1350*['b']. Finally, run harmony. Afterwards, there will be a new table in; adata.obsm containing the adjusted PC’s.; >>> sce.pp.harmony_integrate(adata, 'batch'); >>> 'X_pca_harmony' in adata.obsm; True. previous; scanpy.external.pp.bbknn. next; scanpy.external.pp.mnn_correct. Contents; . harmony_integrate(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:8431,Security,hash,hashsolo,8431,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.harmony_integrate. Contents . harmony_integrate(). scanpy.external.pp.harmony_integrate#. scanpy.external.pp.harmony_integrate(adata, key, *, basis='X_pca', adjusted_basis='X_p",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:7458,Testability,log,logfile,7458,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:7497,Testability,log,logpath,7497,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:7803,Testability,log,logging,7803,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html:7832,Testability,log,logging,7832, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.harmony_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.harmony_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:8105,Deployability,toggle,toggleswitch,8105,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:9189,Deployability,release,release,9189,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.hashsolo. Contents . hashsolo(). scanpy.external.pp.hashsolo#. scanpy.external.pp.hashsolo(adata, cell_hashing_columns, *, priors=(0.01, 0.8, 0.19), pre_existing_clusters=None, number_of_noise_barcodes=None, inplace=True)[source]#; Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Note; More information and bug reports here. Parameters:. adata AnnDataThe (annotated) data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. cell_hashing_columns Sequence[str].obs columns that contain cell hashing counts. priors tuple[float, float, float] (default: (0.01, 0.8, 0.19))Prior probabilities of each hypothesis, in; the order [negative, singlet, doublet]. The default is set to; [0.01, 0.8, 0.19] assuming barcode counts are from cells that; have passed QC in the transcriptome space, e.g. UMI counts, ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:10595,Deployability,update,update,10595,"mation and bug reports here. Parameters:. adata AnnDataThe (annotated) data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. cell_hashing_columns Sequence[str].obs columns that contain cell hashing counts. priors tuple[float, float, float] (default: (0.01, 0.8, 0.19))Prior probabilities of each hypothesis, in; the order [negative, singlet, doublet]. The default is set to; [0.01, 0.8, 0.19] assuming barcode counts are from cells that; have passed QC in the transcriptome space, e.g. UMI counts, pct; mito reads, etc. pre_existing_clusters str | None (default: None)The column in .obs containing pre-existing cluster assignments; (e.g. Leiden clusters or cell types, but not batch assignments).; If provided, demultiplexing will be performed separately for each; cluster. number_of_noise_barcodes int | None (default: None)The number of barcodes used to create the noise distribution.; Defaults to len(cell_hashing_columns) - 2. inplace bool (default: True)Whether to update adata in-place or return a copy. Return type:; AnnData | None. Returns:; A copy of the input adata if inplace=False, otherwise the input; adata. The following fields are added:. .obs[""most_likely_hypothesis""]Index of the most likely hypothesis, where 0 corresponds to negative,; 1 to singlet, and 2 to doublet. .obs[""cluster_feature""]The cluster assignments used for demultiplexing. .obs[""negative_hypothesis_probability""]Probability of the negative hypothesis. .obs[""singlet_hypothesis_probability""]Probability of the singlet hypothesis. .obs[""doublet_hypothesis_probability""]Probability of the doublet hypothesis. .obs[""Classification""]:Classification of the cell, one of the barcodes in cell_hashing_columns,; ""Negative"", or ""Doublet"". Examples; >>> import anndata; >>> import scanpy.external as sce; >>> adata = anndata.read_h5ad(""data.h5ad""); >>> sce.pp.hashsolo(adata, [""Hash1"", ""Hash2"", ""Hash3""]); >>> adata.obs.head(). previous; scanpy.external.pp.scanorama_integrate. next; scanpy.ext",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:7181,Performance,cache,cachedir,7181,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:10359,Performance,perform,performed,10359,"ashing_columns, *, priors=(0.01, 0.8, 0.19), pre_existing_clusters=None, number_of_noise_barcodes=None, inplace=True)[source]#; Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Note; More information and bug reports here. Parameters:. adata AnnDataThe (annotated) data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. cell_hashing_columns Sequence[str].obs columns that contain cell hashing counts. priors tuple[float, float, float] (default: (0.01, 0.8, 0.19))Prior probabilities of each hypothesis, in; the order [negative, singlet, doublet]. The default is set to; [0.01, 0.8, 0.19] assuming barcode counts are from cells that; have passed QC in the transcriptome space, e.g. UMI counts, pct; mito reads, etc. pre_existing_clusters str | None (default: None)The column in .obs containing pre-existing cluster assignments; (e.g. Leiden clusters or cell types, but not batch assignments).; If provided, demultiplexing will be performed separately for each; cluster. number_of_noise_barcodes int | None (default: None)The number of barcodes used to create the noise distribution.; Defaults to len(cell_hashing_columns) - 2. inplace bool (default: True)Whether to update adata in-place or return a copy. Return type:; AnnData | None. Returns:; A copy of the input adata if inplace=False, otherwise the input; adata. The following fields are added:. .obs[""most_likely_hypothesis""]Index of the most likely hypothesis, where 0 corresponds to negative,; 1 to singlet, and 2 to doublet. .obs[""cluster_feature""]The cluster assignments used for demultiplexing. .obs[""negative_hypothesis_probability""]Probability of the negative hypothesis. .obs[""singlet_hypothesis_probability""]Probability of the singlet hypothesis. .obs[""doublet_hypothesis_probability""]Probability of the doublet hypothesis. .obs[""Classification""]:Classification of the cell, one of the barcodes in cell_hashing_columns,; ""Negative"", or ""Doublet"". Examples; >>> impor",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:21,Security,hash,hashsolo,21,. scanpy.external.pp.hashsolo — scanpy. Skip to main content. Back to top. Ctrl+K. Installation; Tutorials; Basics; Preprocessing and clustering; Preprocessing and clustering 3k PBMCs (legacy workflow); Integrating data using ingest and BBKNN. Plotting; Core plotting functions; Customizing Scanpy plots. Trajectories; Trajectory inference for hematopoiesis in mouse. Spatial; Analysis and visualization of spatial transcriptomics data; Integrating spatial data with scRNA-seq using scanorama. Experimental; How to preprocess UMI count data with analytic Pearson residuals; Using dask with Scanpy. Usage Principles; How to; Using other kNN libraries in Scanpy; Plotting with Marsilea. API; Preprocessing: pp; scanpy.pp.calculate_qc_metrics; scanpy.pp.filter_cells; scanpy.pp.filter_genes; scanpy.pp.highly_variable_genes; scanpy.pp.log1p; scanpy.pp.pca; scanpy.pp.normalize_total; scanpy.pp.regress_out; scanpy.pp.scale; scanpy.pp.subsample; scanpy.pp.downsample_counts; scanpy.pp.recipe_zheng17; scanpy.pp.recipe_weinreb17; scanpy.pp.recipe_seurat; scanpy.pp.combat; scanpy.pp.scrublet; scanpy.pp.scrublet_simulate_doublets; scanpy.pp.neighbors. Tools: tl; scanpy.pp.pca; scanpy.tl.tsne; scanpy.tl.umap; scanpy.tl.draw_graph; scanpy.tl.diffmap; scanpy.tl.embedding_density; scanpy.tl.leiden; scanpy.tl.louvain; scanpy.tl.dendrogram; scanpy.tl.dpt; scanpy.tl.paga; scanpy.tl.ingest; scanpy.tl.rank_genes_groups; scanpy.tl.filter_rank_genes_groups; scanpy.tl.marker_gene_overlap; scanpy.tl.score_genes; scanpy.tl.score_genes_cell_cycle; scanpy.tl.sim. Plotting: pl; scanpy.pl.scatter; scanpy.pl.heatmap; scanpy.pl.dotplot; scanpy.pl.tracksplot; scanpy.pl.violin; scanpy.pl.stacked_violin; scanpy.pl.matrixplot; scanpy.pl.clustermap; scanpy.pl.ranking; scanpy.pl.dendrogram; scanpy.pl.DotPlot; scanpy.pl.DotPlot.DEFAULT_CATEGORY_HEIGHT; scanpy.pl.DotPlot.DEFAULT_CATEGORY_WIDTH; scanpy.pl.DotPlot.DEFAULT_COLORMAP; scanpy.pl.DotPlot.DEFAULT_COLOR_LEGEND_TITLE; scanpy.pl.DotPlot.DEFAULT_COLOR_ON; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:8422,Security,hash,hashsolo,8422,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.hashsolo. Contents . hashsolo(). scanpy.external.pp.hashsolo#. scanpy.external.pp.hashsolo(adata, cell_hashing_columns, *, priors=(0.01, 0.8, 0.19), pre_existing_clusters=None,",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:9255,Security,hash,hashsolo,9255,"ng: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.hashsolo. Contents . hashsolo(). scanpy.external.pp.hashsolo#. scanpy.external.pp.hashsolo(adata, cell_hashing_columns, *, priors=(0.01, 0.8, 0.19), pre_existing_clusters=None, number_of_noise_barcodes=None, inplace=True)[source]#; Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Note; More information and bug reports here. Parameters:. adata AnnDataThe (annotated) data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. cell_hashing_columns Sequence[str].obs columns that contain cell hashing counts. priors tuple[float, float, float] (default: (0.01, 0.8, 0.19))Prior probabilities of each hypothesis, in; the order [negative, singlet, doublet]. The default is set to; [0.01, 0.8, 0.19] assuming barcode counts are from cells that; have passed QC in the transcriptome space, e.g. UMI counts, pct; mito reads, etc. pre_existing_clusters str | None (default: None)The column in .obs containing pre-existing cluster assignments; (e.",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:9276,Security,hash,hashsolo,9276,"l.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.hashsolo. Contents . hashsolo(). scanpy.external.pp.hashsolo#. scanpy.external.pp.hashsolo(adata, cell_hashing_columns, *, priors=(0.01, 0.8, 0.19), pre_existing_clusters=None, number_of_noise_barcodes=None, inplace=True)[source]#; Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Note; More information and bug reports here. Parameters:. adata AnnDataThe (annotated) data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. cell_hashing_columns Sequence[str].obs columns that contain cell hashing counts. priors tuple[float, float, float] (default: (0.01, 0.8, 0.19))Prior probabilities of each hypothesis, in; the order [negative, singlet, doublet]. The default is set to; [0.01, 0.8, 0.19] assuming barcode counts are from cells that; have passed QC in the transcriptome space, e.g. UMI counts, pct; mito reads, etc. pre_existing_clusters str | None (default: None)The column in .obs containing pre-existing cluster assignments; (e.g. Leiden clusters or",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:9307,Security,hash,hashsolo,9307,"harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.hashsolo. Contents . hashsolo(). scanpy.external.pp.hashsolo#. scanpy.external.pp.hashsolo(adata, cell_hashing_columns, *, priors=(0.01, 0.8, 0.19), pre_existing_clusters=None, number_of_noise_barcodes=None, inplace=True)[source]#; Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Note; More information and bug reports here. Parameters:. adata AnnDataThe (annotated) data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. cell_hashing_columns Sequence[str].obs columns that contain cell hashing counts. priors tuple[float, float, float] (default: (0.01, 0.8, 0.19))Prior probabilities of each hypothesis, in; the order [negative, singlet, doublet]. The default is set to; [0.01, 0.8, 0.19] assuming barcode counts are from cells that; have passed QC in the transcriptome space, e.g. UMI counts, pct; mito reads, etc. pre_existing_clusters str | None (default: None)The column in .obs containing pre-existing cluster assignments; (e.g. Leiden clusters or cell types, but not batch assi",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:9337,Security,hash,hashsolo,9337," scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.hashsolo. Contents . hashsolo(). scanpy.external.pp.hashsolo#. scanpy.external.pp.hashsolo(adata, cell_hashing_columns, *, priors=(0.01, 0.8, 0.19), pre_existing_clusters=None, number_of_noise_barcodes=None, inplace=True)[source]#; Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Note; More information and bug reports here. Parameters:. adata AnnDataThe (annotated) data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. cell_hashing_columns Sequence[str].obs columns that contain cell hashing counts. priors tuple[float, float, float] (default: (0.01, 0.8, 0.19))Prior probabilities of each hypothesis, in; the order [negative, singlet, doublet]. The default is set to; [0.01, 0.8, 0.19] assuming barcode counts are from cells that; have passed QC in the transcriptome space, e.g. UMI counts, pct; mito reads, etc. pre_existing_clusters str | None (default: None)The column in .obs containing pre-existing cluster assignments; (e.g. Leiden clusters or cell types, but not batch assignments).; If provided, demultiplexing will be perf",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:9524,Security,hash,hashing,9524,"ols: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.hashsolo. Contents . hashsolo(). scanpy.external.pp.hashsolo#. scanpy.external.pp.hashsolo(adata, cell_hashing_columns, *, priors=(0.01, 0.8, 0.19), pre_existing_clusters=None, number_of_noise_barcodes=None, inplace=True)[source]#; Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Note; More information and bug reports here. Parameters:. adata AnnDataThe (annotated) data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. cell_hashing_columns Sequence[str].obs columns that contain cell hashing counts. priors tuple[float, float, float] (default: (0.01, 0.8, 0.19))Prior probabilities of each hypothesis, in; the order [negative, singlet, doublet]. The default is set to; [0.01, 0.8, 0.19] assuming barcode counts are from cells that; have passed QC in the transcriptome space, e.g. UMI counts, pct; mito reads, etc. pre_existing_clusters str | None (default: None)The column in .obs containing pre-existing cluster assignments; (e.g. Leiden clusters or cell types, but not batch assignments).; If provided, demultiplexing will be performed separately for each; cluster. number_of_noise_barcodes int | None (default: None)The number of barcodes used to cre",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:9815,Security,hash,hashing,9815,".tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.hashsolo. Contents . hashsolo(). scanpy.external.pp.hashsolo#. scanpy.external.pp.hashsolo(adata, cell_hashing_columns, *, priors=(0.01, 0.8, 0.19), pre_existing_clusters=None, number_of_noise_barcodes=None, inplace=True)[source]#; Probabilistic demultiplexing of cell hashing data using HashSolo [Bernstein et al., 2020]. Note; More information and bug reports here. Parameters:. adata AnnDataThe (annotated) data matrix of shape n_obs × n_vars.; Rows correspond to cells and columns to genes. cell_hashing_columns Sequence[str].obs columns that contain cell hashing counts. priors tuple[float, float, float] (default: (0.01, 0.8, 0.19))Prior probabilities of each hypothesis, in; the order [negative, singlet, doublet]. The default is set to; [0.01, 0.8, 0.19] assuming barcode counts are from cells that; have passed QC in the transcriptome space, e.g. UMI counts, pct; mito reads, etc. pre_existing_clusters str | None (default: None)The column in .obs containing pre-existing cluster assignments; (e.g. Leiden clusters or cell types, but not batch assignments).; If provided, demultiplexing will be performed separately for each; cluster. number_of_noise_barcodes int | None (default: None)The number of barcodes used to create the noise distribution.; Defaults to len(cell_hashing_columns) - 2. inplace bool (default: True)Whether to update adata in-place or return a copy. Return type:; AnnData | None. Returns:; A copy of the input adata if inplace=False, otherwise the input; adata. The following fields are added:. .obs[""most_likely_hypothesis",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:11461,Security,hash,hashsolo,11461,"spond to cells and columns to genes. cell_hashing_columns Sequence[str].obs columns that contain cell hashing counts. priors tuple[float, float, float] (default: (0.01, 0.8, 0.19))Prior probabilities of each hypothesis, in; the order [negative, singlet, doublet]. The default is set to; [0.01, 0.8, 0.19] assuming barcode counts are from cells that; have passed QC in the transcriptome space, e.g. UMI counts, pct; mito reads, etc. pre_existing_clusters str | None (default: None)The column in .obs containing pre-existing cluster assignments; (e.g. Leiden clusters or cell types, but not batch assignments).; If provided, demultiplexing will be performed separately for each; cluster. number_of_noise_barcodes int | None (default: None)The number of barcodes used to create the noise distribution.; Defaults to len(cell_hashing_columns) - 2. inplace bool (default: True)Whether to update adata in-place or return a copy. Return type:; AnnData | None. Returns:; A copy of the input adata if inplace=False, otherwise the input; adata. The following fields are added:. .obs[""most_likely_hypothesis""]Index of the most likely hypothesis, where 0 corresponds to negative,; 1 to singlet, and 2 to doublet. .obs[""cluster_feature""]The cluster assignments used for demultiplexing. .obs[""negative_hypothesis_probability""]Probability of the negative hypothesis. .obs[""singlet_hypothesis_probability""]Probability of the singlet hypothesis. .obs[""doublet_hypothesis_probability""]Probability of the doublet hypothesis. .obs[""Classification""]:Classification of the cell, one of the barcodes in cell_hashing_columns,; ""Negative"", or ""Doublet"". Examples; >>> import anndata; >>> import scanpy.external as sce; >>> adata = anndata.read_h5ad(""data.h5ad""); >>> sce.pp.hashsolo(adata, [""Hash1"", ""Hash2"", ""Hash3""]); >>> adata.obs.head(). previous; scanpy.external.pp.scanorama_integrate. next; scanpy.external.pp.dca. Contents; . hashsolo(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:11621,Security,hash,hashsolo,11621,"spond to cells and columns to genes. cell_hashing_columns Sequence[str].obs columns that contain cell hashing counts. priors tuple[float, float, float] (default: (0.01, 0.8, 0.19))Prior probabilities of each hypothesis, in; the order [negative, singlet, doublet]. The default is set to; [0.01, 0.8, 0.19] assuming barcode counts are from cells that; have passed QC in the transcriptome space, e.g. UMI counts, pct; mito reads, etc. pre_existing_clusters str | None (default: None)The column in .obs containing pre-existing cluster assignments; (e.g. Leiden clusters or cell types, but not batch assignments).; If provided, demultiplexing will be performed separately for each; cluster. number_of_noise_barcodes int | None (default: None)The number of barcodes used to create the noise distribution.; Defaults to len(cell_hashing_columns) - 2. inplace bool (default: True)Whether to update adata in-place or return a copy. Return type:; AnnData | None. Returns:; A copy of the input adata if inplace=False, otherwise the input; adata. The following fields are added:. .obs[""most_likely_hypothesis""]Index of the most likely hypothesis, where 0 corresponds to negative,; 1 to singlet, and 2 to doublet. .obs[""cluster_feature""]The cluster assignments used for demultiplexing. .obs[""negative_hypothesis_probability""]Probability of the negative hypothesis. .obs[""singlet_hypothesis_probability""]Probability of the singlet hypothesis. .obs[""doublet_hypothesis_probability""]Probability of the doublet hypothesis. .obs[""Classification""]:Classification of the cell, one of the barcodes in cell_hashing_columns,; ""Negative"", or ""Doublet"". Examples; >>> import anndata; >>> import scanpy.external as sce; >>> adata = anndata.read_h5ad(""data.h5ad""); >>> sce.pp.hashsolo(adata, [""Hash1"", ""Hash2"", ""Hash3""]); >>> adata.obs.head(). previous; scanpy.external.pp.scanorama_integrate. next; scanpy.external.pp.dca. Contents; . hashsolo(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:7449,Testability,log,logfile,7449,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:7488,Testability,log,logpath,7488,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:7794,Testability,log,logging,7794,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html:7823,Testability,log,logging,7823, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.hashsolo.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.hashsolo.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:9656,Availability,recover,recover,9656,"ies; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.magic. Contents . magic(). scanpy.external.pp.magic#. scanpy.external.pp.magic(adata, name_list=None, *, knn=5, decay=1, knn_max=None, t=3, n_pca=100, solver='exact', knn_dist='euclidean', random_state=None, n_jobs=None, verbose=False, copy=None, **kwargs)[source]#; Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018].; MAGIC is an algorithm for denoising and transcript recover of single cells; applied to single-cell sequencing data. MAGIC builds a graph from the data; and uses diffusion to smooth out noise and recover the data manifold.; The algorithm implemented here has changed primarily in two ways; compared to the algorithm described in van Dijk et al. [2018]. Firstly, we use; the adaptive kernel described in Moon et al. [2019] for; improved stability. Secondly, data diffusion is applied; in the PCA space, rather than the data space, for speed and; memory improvements.; More information and bug reports; here. For help, visit; <https://krishnaswamylab.org/get-help>. Parameters:. adata AnnDataAn anndata file with .raw attribute representing raw counts. name_list Union[Literal['all_genes', 'pca_only'], Sequence[str], None] (default: None)Denoised genes to return. The default 'all_genes'/None; may require a large amount of memory if the input data is sparse.; Another possibility is 'pca_only'. knn int (default: 5)number of nearest neighbors on which to bui",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:9800,Availability,recover,recover,9800,"nal.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.magic. Contents . magic(). scanpy.external.pp.magic#. scanpy.external.pp.magic(adata, name_list=None, *, knn=5, decay=1, knn_max=None, t=3, n_pca=100, solver='exact', knn_dist='euclidean', random_state=None, n_jobs=None, verbose=False, copy=None, **kwargs)[source]#; Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018].; MAGIC is an algorithm for denoising and transcript recover of single cells; applied to single-cell sequencing data. MAGIC builds a graph from the data; and uses diffusion to smooth out noise and recover the data manifold.; The algorithm implemented here has changed primarily in two ways; compared to the algorithm described in van Dijk et al. [2018]. Firstly, we use; the adaptive kernel described in Moon et al. [2019] for; improved stability. Secondly, data diffusion is applied; in the PCA space, rather than the data space, for speed and; memory improvements.; More information and bug reports; here. For help, visit; <https://krishnaswamylab.org/get-help>. Parameters:. adata AnnDataAn anndata file with .raw attribute representing raw counts. name_list Union[Literal['all_genes', 'pca_only'], Sequence[str], None] (default: None)Denoised genes to return. The default 'all_genes'/None; may require a large amount of memory if the input data is sparse.; Another possibility is 'pca_only'. knn int (default: 5)number of nearest neighbors on which to build kernel. decay float | None (default: 1)sets decay rate of kernel tails.; If None, alpha decaying kernel is n",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:8102,Deployability,toggle,toggleswitch,8102,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:9186,Deployability,release,release,9186,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.magic. Contents . magic(). scanpy.external.pp.magic#. scanpy.external.pp.magic(adata, name_list=None, *, knn=5, decay=1, knn_max=None, t=3, n_pca=100, solver='exact', knn_dist='euclidean', random_state=None, n_jobs=None, verbose=False, copy=None, **kwargs)[source]#; Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018].; MAGIC is an algorithm for denoising and transcript recover of single cells; applied to single-cell sequencing data. MAGIC builds a graph from the data; and uses diffusion to smooth out noise and recover the data manifold.; The algorithm implemented here has changed primarily in two ways; compared to the algorithm described in van Dijk et al. [2018]. Firstly, we use; the adaptive kernel described in Moon et al. [2019] for; improved stability. Secondly, data diffusion is applied; in the PCA space, rather than th",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:9978,Energy Efficiency,adapt,adaptive,9978,"ting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.magic. Contents . magic(). scanpy.external.pp.magic#. scanpy.external.pp.magic(adata, name_list=None, *, knn=5, decay=1, knn_max=None, t=3, n_pca=100, solver='exact', knn_dist='euclidean', random_state=None, n_jobs=None, verbose=False, copy=None, **kwargs)[source]#; Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018].; MAGIC is an algorithm for denoising and transcript recover of single cells; applied to single-cell sequencing data. MAGIC builds a graph from the data; and uses diffusion to smooth out noise and recover the data manifold.; The algorithm implemented here has changed primarily in two ways; compared to the algorithm described in van Dijk et al. [2018]. Firstly, we use; the adaptive kernel described in Moon et al. [2019] for; improved stability. Secondly, data diffusion is applied; in the PCA space, rather than the data space, for speed and; memory improvements.; More information and bug reports; here. For help, visit; <https://krishnaswamylab.org/get-help>. Parameters:. adata AnnDataAn anndata file with .raw attribute representing raw counts. name_list Union[Literal['all_genes', 'pca_only'], Sequence[str], None] (default: None)Denoised genes to return. The default 'all_genes'/None; may require a large amount of memory if the input data is sparse.; Another possibility is 'pca_only'. knn int (default: 5)number of nearest neighbors on which to build kernel. decay float | None (default: 1)sets decay rate of kernel tails.; If None, alpha decaying kernel is not used. knn_max int | None (default: None)maximum number of nearest neighbors with nonzero connection.; If None, will be set to 3 * knn. t Union[Literal['auto'], int] (default: 3)power to which the diffusion opera",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:10953,Energy Efficiency,power,power,10953," Firstly, we use; the adaptive kernel described in Moon et al. [2019] for; improved stability. Secondly, data diffusion is applied; in the PCA space, rather than the data space, for speed and; memory improvements.; More information and bug reports; here. For help, visit; <https://krishnaswamylab.org/get-help>. Parameters:. adata AnnDataAn anndata file with .raw attribute representing raw counts. name_list Union[Literal['all_genes', 'pca_only'], Sequence[str], None] (default: None)Denoised genes to return. The default 'all_genes'/None; may require a large amount of memory if the input data is sparse.; Another possibility is 'pca_only'. knn int (default: 5)number of nearest neighbors on which to build kernel. decay float | None (default: 1)sets decay rate of kernel tails.; If None, alpha decaying kernel is not used. knn_max int | None (default: None)maximum number of nearest neighbors with nonzero connection.; If None, will be set to 3 * knn. t Union[Literal['auto'], int] (default: 3)power to which the diffusion operator is powered.; This sets the level of diffusion. If ‘auto’, t is selected; according to the Procrustes disparity of the diffused data. n_pca int | None (default: 100)Number of principal components to use for calculating; neighborhoods. For extremely large datasets, using; n_pca < 20 allows neighborhoods to be calculated in; roughly log(n_samples) time. If None, no PCA is performed. solver Literal['exact', 'approximate'] (default: 'exact')Which solver to use. “exact” uses the implementation described; in van Dijk et al. [2018]. “approximate” uses a faster; implementation that performs imputation in the PCA space and then; projects back to the gene space. Note, the “approximate” solver may; return negative values. knn_dist str (default: 'euclidean')recommended values: ‘euclidean’, ‘cosine’, ‘precomputed’; Any metric from scipy.spatial.distance can be used; distance metric for building kNN graph. If ‘precomputed’,; data should be an n_samples x n_samples d",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:10994,Energy Efficiency,power,powered,10994," Firstly, we use; the adaptive kernel described in Moon et al. [2019] for; improved stability. Secondly, data diffusion is applied; in the PCA space, rather than the data space, for speed and; memory improvements.; More information and bug reports; here. For help, visit; <https://krishnaswamylab.org/get-help>. Parameters:. adata AnnDataAn anndata file with .raw attribute representing raw counts. name_list Union[Literal['all_genes', 'pca_only'], Sequence[str], None] (default: None)Denoised genes to return. The default 'all_genes'/None; may require a large amount of memory if the input data is sparse.; Another possibility is 'pca_only'. knn int (default: 5)number of nearest neighbors on which to build kernel. decay float | None (default: 1)sets decay rate of kernel tails.; If None, alpha decaying kernel is not used. knn_max int | None (default: None)maximum number of nearest neighbors with nonzero connection.; If None, will be set to 3 * knn. t Union[Literal['auto'], int] (default: 3)power to which the diffusion operator is powered.; This sets the level of diffusion. If ‘auto’, t is selected; according to the Procrustes disparity of the diffused data. n_pca int | None (default: 100)Number of principal components to use for calculating; neighborhoods. For extremely large datasets, using; n_pca < 20 allows neighborhoods to be calculated in; roughly log(n_samples) time. If None, no PCA is performed. solver Literal['exact', 'approximate'] (default: 'exact')Which solver to use. “exact” uses the implementation described; in van Dijk et al. [2018]. “approximate” uses a faster; implementation that performs imputation in the PCA space and then; projects back to the gene space. Note, the “approximate” solver may; return negative values. knn_dist str (default: 'euclidean')recommended values: ‘euclidean’, ‘cosine’, ‘precomputed’; Any metric from scipy.spatial.distance can be used; distance metric for building kNN graph. If ‘precomputed’,; data should be an n_samples x n_samples d",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:12282,Integrability,message,messages,12282,"ts, using; n_pca < 20 allows neighborhoods to be calculated in; roughly log(n_samples) time. If None, no PCA is performed. solver Literal['exact', 'approximate'] (default: 'exact')Which solver to use. “exact” uses the implementation described; in van Dijk et al. [2018]. “approximate” uses a faster; implementation that performs imputation in the PCA space and then; projects back to the gene space. Note, the “approximate” solver may; return negative values. knn_dist str (default: 'euclidean')recommended values: ‘euclidean’, ‘cosine’, ‘precomputed’; Any metric from scipy.spatial.distance can be used; distance metric for building kNN graph. If ‘precomputed’,; data should be an n_samples x n_samples distance or; affinity matrix. random_state Union[int, RandomState, None] (default: None)Random seed. Defaults to the global numpy random number generator. n_jobs int | None (default: None)Number of threads to use in training. All cores are used by default. verbose bool (default: False)If True or an integer >= 2, print status messages.; If None, sc.settings.verbosity is used. copy bool | None (default: None)If true, a copy of anndata is returned. If None, copy is True if; genes is not 'all_genes' or 'pca_only'. copy may only be False; if genes is 'all_genes' or 'pca_only', as the resultant data; will otherwise have different column names from the input data. kwargsAdditional arguments to magic.MAGIC. Return type:; AnnData | None. Returns:; If copy is True, AnnData object is returned.; If subset_genes is not all_genes, PCA on MAGIC values of cells are; stored in adata.obsm['X_magic'] and adata.X is not modified.; The raw counts are stored in .raw attribute of AnnData object. Examples; >>> import scanpy as sc; >>> import scanpy.external as sce; >>> adata = sc.datasets.paul15(); >>> sc.pp.normalize_per_cell(adata); >>> sc.pp.sqrt(adata) # or sc.pp.log1p(adata); >>> adata_magic = sce.pp.magic(adata, name_list=['Mpo', 'Klf1', 'Ifitm1'], knn=5); >>> adata_magic.shape; (2730, 3); >>>",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:9978,Modifiability,adapt,adaptive,9978,"ting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.magic. Contents . magic(). scanpy.external.pp.magic#. scanpy.external.pp.magic(adata, name_list=None, *, knn=5, decay=1, knn_max=None, t=3, n_pca=100, solver='exact', knn_dist='euclidean', random_state=None, n_jobs=None, verbose=False, copy=None, **kwargs)[source]#; Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018].; MAGIC is an algorithm for denoising and transcript recover of single cells; applied to single-cell sequencing data. MAGIC builds a graph from the data; and uses diffusion to smooth out noise and recover the data manifold.; The algorithm implemented here has changed primarily in two ways; compared to the algorithm described in van Dijk et al. [2018]. Firstly, we use; the adaptive kernel described in Moon et al. [2019] for; improved stability. Secondly, data diffusion is applied; in the PCA space, rather than the data space, for speed and; memory improvements.; More information and bug reports; here. For help, visit; <https://krishnaswamylab.org/get-help>. Parameters:. adata AnnDataAn anndata file with .raw attribute representing raw counts. name_list Union[Literal['all_genes', 'pca_only'], Sequence[str], None] (default: None)Denoised genes to return. The default 'all_genes'/None; may require a large amount of memory if the input data is sparse.; Another possibility is 'pca_only'. knn int (default: 5)number of nearest neighbors on which to build kernel. decay float | None (default: 1)sets decay rate of kernel tails.; If None, alpha decaying kernel is not used. knn_max int | None (default: None)maximum number of nearest neighbors with nonzero connection.; If None, will be set to 3 * knn. t Union[Literal['auto'], int] (default: 3)power to which the diffusion opera",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:7178,Performance,cache,cachedir,7178,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:11363,Performance,perform,performed,11363,"e_list Union[Literal['all_genes', 'pca_only'], Sequence[str], None] (default: None)Denoised genes to return. The default 'all_genes'/None; may require a large amount of memory if the input data is sparse.; Another possibility is 'pca_only'. knn int (default: 5)number of nearest neighbors on which to build kernel. decay float | None (default: 1)sets decay rate of kernel tails.; If None, alpha decaying kernel is not used. knn_max int | None (default: None)maximum number of nearest neighbors with nonzero connection.; If None, will be set to 3 * knn. t Union[Literal['auto'], int] (default: 3)power to which the diffusion operator is powered.; This sets the level of diffusion. If ‘auto’, t is selected; according to the Procrustes disparity of the diffused data. n_pca int | None (default: 100)Number of principal components to use for calculating; neighborhoods. For extremely large datasets, using; n_pca < 20 allows neighborhoods to be calculated in; roughly log(n_samples) time. If None, no PCA is performed. solver Literal['exact', 'approximate'] (default: 'exact')Which solver to use. “exact” uses the implementation described; in van Dijk et al. [2018]. “approximate” uses a faster; implementation that performs imputation in the PCA space and then; projects back to the gene space. Note, the “approximate” solver may; return negative values. knn_dist str (default: 'euclidean')recommended values: ‘euclidean’, ‘cosine’, ‘precomputed’; Any metric from scipy.spatial.distance can be used; distance metric for building kNN graph. If ‘precomputed’,; data should be an n_samples x n_samples distance or; affinity matrix. random_state Union[int, RandomState, None] (default: None)Random seed. Defaults to the global numpy random number generator. n_jobs int | None (default: None)Number of threads to use in training. All cores are used by default. verbose bool (default: False)If True or an integer >= 2, print status messages.; If None, sc.settings.verbosity is used. copy bool | None (default",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:11571,Performance,perform,performs,11571,"s 'pca_only'. knn int (default: 5)number of nearest neighbors on which to build kernel. decay float | None (default: 1)sets decay rate of kernel tails.; If None, alpha decaying kernel is not used. knn_max int | None (default: None)maximum number of nearest neighbors with nonzero connection.; If None, will be set to 3 * knn. t Union[Literal['auto'], int] (default: 3)power to which the diffusion operator is powered.; This sets the level of diffusion. If ‘auto’, t is selected; according to the Procrustes disparity of the diffused data. n_pca int | None (default: 100)Number of principal components to use for calculating; neighborhoods. For extremely large datasets, using; n_pca < 20 allows neighborhoods to be calculated in; roughly log(n_samples) time. If None, no PCA is performed. solver Literal['exact', 'approximate'] (default: 'exact')Which solver to use. “exact” uses the implementation described; in van Dijk et al. [2018]. “approximate” uses a faster; implementation that performs imputation in the PCA space and then; projects back to the gene space. Note, the “approximate” solver may; return negative values. knn_dist str (default: 'euclidean')recommended values: ‘euclidean’, ‘cosine’, ‘precomputed’; Any metric from scipy.spatial.distance can be used; distance metric for building kNN graph. If ‘precomputed’,; data should be an n_samples x n_samples distance or; affinity matrix. random_state Union[int, RandomState, None] (default: None)Random seed. Defaults to the global numpy random number generator. n_jobs int | None (default: None)Number of threads to use in training. All cores are used by default. verbose bool (default: False)If True or an integer >= 2, print status messages.; If None, sc.settings.verbosity is used. copy bool | None (default: None)If true, a copy of anndata is returned. If None, copy is True if; genes is not 'all_genes' or 'pca_only'. copy may only be False; if genes is 'all_genes' or 'pca_only', as the resultant data; will otherwise have different",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:9656,Safety,recover,recover,9656,"ies; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.magic. Contents . magic(). scanpy.external.pp.magic#. scanpy.external.pp.magic(adata, name_list=None, *, knn=5, decay=1, knn_max=None, t=3, n_pca=100, solver='exact', knn_dist='euclidean', random_state=None, n_jobs=None, verbose=False, copy=None, **kwargs)[source]#; Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018].; MAGIC is an algorithm for denoising and transcript recover of single cells; applied to single-cell sequencing data. MAGIC builds a graph from the data; and uses diffusion to smooth out noise and recover the data manifold.; The algorithm implemented here has changed primarily in two ways; compared to the algorithm described in van Dijk et al. [2018]. Firstly, we use; the adaptive kernel described in Moon et al. [2019] for; improved stability. Secondly, data diffusion is applied; in the PCA space, rather than the data space, for speed and; memory improvements.; More information and bug reports; here. For help, visit; <https://krishnaswamylab.org/get-help>. Parameters:. adata AnnDataAn anndata file with .raw attribute representing raw counts. name_list Union[Literal['all_genes', 'pca_only'], Sequence[str], None] (default: None)Denoised genes to return. The default 'all_genes'/None; may require a large amount of memory if the input data is sparse.; Another possibility is 'pca_only'. knn int (default: 5)number of nearest neighbors on which to bui",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:9800,Safety,recover,recover,9800,"nal.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.magic. Contents . magic(). scanpy.external.pp.magic#. scanpy.external.pp.magic(adata, name_list=None, *, knn=5, decay=1, knn_max=None, t=3, n_pca=100, solver='exact', knn_dist='euclidean', random_state=None, n_jobs=None, verbose=False, copy=None, **kwargs)[source]#; Markov Affinity-based Graph Imputation of Cells (MAGIC) API [van Dijk et al., 2018].; MAGIC is an algorithm for denoising and transcript recover of single cells; applied to single-cell sequencing data. MAGIC builds a graph from the data; and uses diffusion to smooth out noise and recover the data manifold.; The algorithm implemented here has changed primarily in two ways; compared to the algorithm described in van Dijk et al. [2018]. Firstly, we use; the adaptive kernel described in Moon et al. [2019] for; improved stability. Secondly, data diffusion is applied; in the PCA space, rather than the data space, for speed and; memory improvements.; More information and bug reports; here. For help, visit; <https://krishnaswamylab.org/get-help>. Parameters:. adata AnnDataAn anndata file with .raw attribute representing raw counts. name_list Union[Literal['all_genes', 'pca_only'], Sequence[str], None] (default: None)Denoised genes to return. The default 'all_genes'/None; may require a large amount of memory if the input data is sparse.; Another possibility is 'pca_only'. knn int (default: 5)number of nearest neighbors on which to build kernel. decay float | None (default: 1)sets decay rate of kernel tails.; If None, alpha decaying kernel is n",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:8419,Security,hash,hashsolo,8419,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.magic. Contents . magic(). scanpy.external.pp.magic#. scanpy.external.pp.magic(adata, name_list=None, *, knn=5, decay=1, knn_max=None, t=3, n_pca=100, solver='exact', knn_dist=",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:7446,Testability,log,logfile,7446,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:7485,Testability,log,logpath,7485,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:7791,Testability,log,logging,7791,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:7820,Testability,log,logging,7820, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html:11323,Testability,log,log,11323,"ata AnnDataAn anndata file with .raw attribute representing raw counts. name_list Union[Literal['all_genes', 'pca_only'], Sequence[str], None] (default: None)Denoised genes to return. The default 'all_genes'/None; may require a large amount of memory if the input data is sparse.; Another possibility is 'pca_only'. knn int (default: 5)number of nearest neighbors on which to build kernel. decay float | None (default: 1)sets decay rate of kernel tails.; If None, alpha decaying kernel is not used. knn_max int | None (default: None)maximum number of nearest neighbors with nonzero connection.; If None, will be set to 3 * knn. t Union[Literal['auto'], int] (default: 3)power to which the diffusion operator is powered.; This sets the level of diffusion. If ‘auto’, t is selected; according to the Procrustes disparity of the diffused data. n_pca int | None (default: 100)Number of principal components to use for calculating; neighborhoods. For extremely large datasets, using; n_pca < 20 allows neighborhoods to be calculated in; roughly log(n_samples) time. If None, no PCA is performed. solver Literal['exact', 'approximate'] (default: 'exact')Which solver to use. “exact” uses the implementation described; in van Dijk et al. [2018]. “approximate” uses a faster; implementation that performs imputation in the PCA space and then; projects back to the gene space. Note, the “approximate” solver may; return negative values. knn_dist str (default: 'euclidean')recommended values: ‘euclidean’, ‘cosine’, ‘precomputed’; Any metric from scipy.spatial.distance can be used; distance metric for building kNN graph. If ‘precomputed’,; data should be an n_samples x n_samples distance or; affinity matrix. random_state Union[int, RandomState, None] (default: None)Random seed. Defaults to the global numpy random number generator. n_jobs int | None (default: None)Number of threads to use in training. All cores are used by default. verbose bool (default: False)If True or an integer >= 2, print status me",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.magic.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.magic.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:8108,Deployability,toggle,toggleswitch,8108,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:9192,Deployability,release,release,9192,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.mnn_correct. Contents . mnn_correct(). scanpy.external.pp.mnn_correct#. scanpy.external.pp.mnn_correct(*datas, var_index=None, var_subset=None, batch_key='batch', index_unique='-', batch_categories=None, k=20, sigma=1.0, cos_norm_in=True, cos_norm_out=True, svd_dim=None, var_adj=True, compute_angle=False, mnn_order=None, svd_mode='rsvd', do_concatenate=True, save_raw=False, n_jobs=None, **kwargs)[source]#; Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018].; This uses the implementation of mnnpy [Kang, 2018].; Depending on do_concatenate, returns matrices or AnnData objects in the; original order containing corrected expression values or a concatenated; matrix or AnnData object.; Be reminded that it is not advised to use the corrected data matrices for; differential expression testing.; More information and bug",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:13194,Integrability,depend,depending,13194," normalization should be performed prior to computing corrected expression values. svd_dim int | None (default: None)The number of dimensions to use for summarizing biological substructure; within each batch. If None, biological components will not be removed; from the correction vectors. var_adj bool (default: True)Whether to adjust variance of the correction vectors. Note this step; takes most computing time. compute_angle bool (default: False)Whether to compute the angle between each cell’s correction vector and; the biological subspace of the reference batch. mnn_order Sequence[int] | None (default: None)The order in which batches are to be corrected. When set to None, datas; are corrected sequentially. svd_mode Literal['svd', 'rsvd', 'irlb'] (default: 'rsvd')'svd' computes SVD using a non-randomized SVD-via-ID algorithm,; while 'rsvd' uses a randomized version. 'irlb' perfores; truncated SVD by implicitly restarted Lanczos bidiagonalization; (forked from airysen/irlbpy). do_concatenate bool (default: True)Whether to concatenate the corrected matrices or AnnData objects. Default is True. save_raw bool (default: False)Whether to save the original expression data in the; raw attribute. n_jobs int | None (default: None)The number of jobs. When set to None, automatically uses; scanpy._settings.ScanpyConfig.n_jobs. kwargsoptional keyword arguments for irlb. Return type:; tuple[ndarray | AnnData, list[DataFrame], list[tuple[float | None, int]] | None]. Returns:. datasndarray | AnnDataCorrected matrix/matrices or AnnData object/objects, depending on the; input type and do_concatenate. mnn_listlist[DataFrame]A list containing MNN pairing information as DataFrames in each iteration step. angle_listlist[tuple[float | None, int]] | NoneA list containing angles of each batch. previous; scanpy.external.pp.harmony_integrate. next; scanpy.external.pp.scanorama_integrate. Contents; . mnn_correct(). By Scanpy development team. ; © Copyright 2024, the Scanpy development team.; . ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:10365,Modifiability,variab,variables,10365,"p.mnn_correct(*datas, var_index=None, var_subset=None, batch_key='batch', index_unique='-', batch_categories=None, k=20, sigma=1.0, cos_norm_in=True, cos_norm_out=True, svd_dim=None, var_adj=True, compute_angle=False, mnn_order=None, svd_mode='rsvd', do_concatenate=True, save_raw=False, n_jobs=None, **kwargs)[source]#; Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018].; This uses the implementation of mnnpy [Kang, 2018].; Depending on do_concatenate, returns matrices or AnnData objects in the; original order containing corrected expression values or a concatenated; matrix or AnnData object.; Be reminded that it is not advised to use the corrected data matrices for; differential expression testing.; More information and bug reports here. Parameters:. datas AnnData | ndarrayExpression matrices or AnnData objects. Matrices should be shaped like; n_obs × n_vars (n_cell × n_gene) and have consistent number of columns.; AnnData objects should have same number of variables. var_index Collection[str] | None (default: None)The index (list of str) of vars (genes). Necessary when using only a; subset of vars to perform MNN correction, and should be supplied with; var_subset. When datas are AnnData objects, var_index is ignored. var_subset Collection[str] | None (default: None)The subset of vars (list of str) to be used when performing MNN; correction. Typically, a list of highly variable genes (HVGs).; When set to None, uses all vars. batch_key str (default: 'batch')The batch_key for concatenate().; Only valid when do_concatenate and supplying AnnData objects. index_unique str (default: '-')The index_unique for concatenate().; Only valid when do_concatenate and supplying AnnData objects. batch_categories Collection[Any] | None (default: None)The batch_categories for concatenate().; Only valid when do_concatenate and supplying AnnData objects. k int (default: 20)Number of mutual nearest neighbors. sigma float (default: 1.0)The bandw",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:10785,Modifiability,variab,variable,10785,"implementation of mnnpy [Kang, 2018].; Depending on do_concatenate, returns matrices or AnnData objects in the; original order containing corrected expression values or a concatenated; matrix or AnnData object.; Be reminded that it is not advised to use the corrected data matrices for; differential expression testing.; More information and bug reports here. Parameters:. datas AnnData | ndarrayExpression matrices or AnnData objects. Matrices should be shaped like; n_obs × n_vars (n_cell × n_gene) and have consistent number of columns.; AnnData objects should have same number of variables. var_index Collection[str] | None (default: None)The index (list of str) of vars (genes). Necessary when using only a; subset of vars to perform MNN correction, and should be supplied with; var_subset. When datas are AnnData objects, var_index is ignored. var_subset Collection[str] | None (default: None)The subset of vars (list of str) to be used when performing MNN; correction. Typically, a list of highly variable genes (HVGs).; When set to None, uses all vars. batch_key str (default: 'batch')The batch_key for concatenate().; Only valid when do_concatenate and supplying AnnData objects. index_unique str (default: '-')The index_unique for concatenate().; Only valid when do_concatenate and supplying AnnData objects. batch_categories Collection[Any] | None (default: None)The batch_categories for concatenate().; Only valid when do_concatenate and supplying AnnData objects. k int (default: 20)Number of mutual nearest neighbors. sigma float (default: 1.0)The bandwidth of the Gaussian smoothing kernel used to compute the; correction vectors. Default is 1. cos_norm_in bool (default: True)Whether cosine normalization should be performed on the input data prior; to calculating distances between cells. cos_norm_out bool (default: True)Whether cosine normalization should be performed prior to computing corrected expression values. svd_dim int | None (default: None)The number of dimensions to use",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:7184,Performance,cache,cachedir,7184,; scanpy.queries.enrich. Metrics; scanpy.metrics.confusion_matrix; scanpy.metrics.gearys_c; scanpy.metrics.morans_i. Experimental; scanpy.experimental.pp.normalize_pearson_residuals; scanpy.experimental.pp.normalize_pearson_residuals_pca; scanpy.experimental.pp.highly_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_gene,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:10512,Performance,perform,perform,10512,"dim=None, var_adj=True, compute_angle=False, mnn_order=None, svd_mode='rsvd', do_concatenate=True, save_raw=False, n_jobs=None, **kwargs)[source]#; Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018].; This uses the implementation of mnnpy [Kang, 2018].; Depending on do_concatenate, returns matrices or AnnData objects in the; original order containing corrected expression values or a concatenated; matrix or AnnData object.; Be reminded that it is not advised to use the corrected data matrices for; differential expression testing.; More information and bug reports here. Parameters:. datas AnnData | ndarrayExpression matrices or AnnData objects. Matrices should be shaped like; n_obs × n_vars (n_cell × n_gene) and have consistent number of columns.; AnnData objects should have same number of variables. var_index Collection[str] | None (default: None)The index (list of str) of vars (genes). Necessary when using only a; subset of vars to perform MNN correction, and should be supplied with; var_subset. When datas are AnnData objects, var_index is ignored. var_subset Collection[str] | None (default: None)The subset of vars (list of str) to be used when performing MNN; correction. Typically, a list of highly variable genes (HVGs).; When set to None, uses all vars. batch_key str (default: 'batch')The batch_key for concatenate().; Only valid when do_concatenate and supplying AnnData objects. index_unique str (default: '-')The index_unique for concatenate().; Only valid when do_concatenate and supplying AnnData objects. batch_categories Collection[Any] | None (default: None)The batch_categories for concatenate().; Only valid when do_concatenate and supplying AnnData objects. k int (default: 20)Number of mutual nearest neighbors. sigma float (default: 1.0)The bandwidth of the Gaussian smoothing kernel used to compute the; correction vectors. Default is 1. cos_norm_in bool (default: True)Whether cosine normalization should be performe",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:10729,Performance,perform,performing,10729,"matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018].; This uses the implementation of mnnpy [Kang, 2018].; Depending on do_concatenate, returns matrices or AnnData objects in the; original order containing corrected expression values or a concatenated; matrix or AnnData object.; Be reminded that it is not advised to use the corrected data matrices for; differential expression testing.; More information and bug reports here. Parameters:. datas AnnData | ndarrayExpression matrices or AnnData objects. Matrices should be shaped like; n_obs × n_vars (n_cell × n_gene) and have consistent number of columns.; AnnData objects should have same number of variables. var_index Collection[str] | None (default: None)The index (list of str) of vars (genes). Necessary when using only a; subset of vars to perform MNN correction, and should be supplied with; var_subset. When datas are AnnData objects, var_index is ignored. var_subset Collection[str] | None (default: None)The subset of vars (list of str) to be used when performing MNN; correction. Typically, a list of highly variable genes (HVGs).; When set to None, uses all vars. batch_key str (default: 'batch')The batch_key for concatenate().; Only valid when do_concatenate and supplying AnnData objects. index_unique str (default: '-')The index_unique for concatenate().; Only valid when do_concatenate and supplying AnnData objects. batch_categories Collection[Any] | None (default: None)The batch_categories for concatenate().; Only valid when do_concatenate and supplying AnnData objects. k int (default: 20)Number of mutual nearest neighbors. sigma float (default: 1.0)The bandwidth of the Gaussian smoothing kernel used to compute the; correction vectors. Default is 1. cos_norm_in bool (default: True)Whether cosine normalization should be performed on the input data prior; to calculating distances between cells. cos_norm_out bool (default: True)Whether cosine normalization should be performed prior to computing corre",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:11512,Performance,perform,performed,11512,"erform MNN correction, and should be supplied with; var_subset. When datas are AnnData objects, var_index is ignored. var_subset Collection[str] | None (default: None)The subset of vars (list of str) to be used when performing MNN; correction. Typically, a list of highly variable genes (HVGs).; When set to None, uses all vars. batch_key str (default: 'batch')The batch_key for concatenate().; Only valid when do_concatenate and supplying AnnData objects. index_unique str (default: '-')The index_unique for concatenate().; Only valid when do_concatenate and supplying AnnData objects. batch_categories Collection[Any] | None (default: None)The batch_categories for concatenate().; Only valid when do_concatenate and supplying AnnData objects. k int (default: 20)Number of mutual nearest neighbors. sigma float (default: 1.0)The bandwidth of the Gaussian smoothing kernel used to compute the; correction vectors. Default is 1. cos_norm_in bool (default: True)Whether cosine normalization should be performed on the input data prior; to calculating distances between cells. cos_norm_out bool (default: True)Whether cosine normalization should be performed prior to computing corrected expression values. svd_dim int | None (default: None)The number of dimensions to use for summarizing biological substructure; within each batch. If None, biological components will not be removed; from the correction vectors. var_adj bool (default: True)Whether to adjust variance of the correction vectors. Note this step; takes most computing time. compute_angle bool (default: False)Whether to compute the angle between each cell’s correction vector and; the biological subspace of the reference batch. mnn_order Sequence[int] | None (default: None)The order in which batches are to be corrected. When set to None, datas; are corrected sequentially. svd_mode Literal['svd', 'rsvd', 'irlb'] (default: 'rsvd')'svd' computes SVD using a non-randomized SVD-via-ID algorithm,; while 'rsvd' uses a randomized version. ",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:11659,Performance,perform,performed,11659,"n[str] | None (default: None)The subset of vars (list of str) to be used when performing MNN; correction. Typically, a list of highly variable genes (HVGs).; When set to None, uses all vars. batch_key str (default: 'batch')The batch_key for concatenate().; Only valid when do_concatenate and supplying AnnData objects. index_unique str (default: '-')The index_unique for concatenate().; Only valid when do_concatenate and supplying AnnData objects. batch_categories Collection[Any] | None (default: None)The batch_categories for concatenate().; Only valid when do_concatenate and supplying AnnData objects. k int (default: 20)Number of mutual nearest neighbors. sigma float (default: 1.0)The bandwidth of the Gaussian smoothing kernel used to compute the; correction vectors. Default is 1. cos_norm_in bool (default: True)Whether cosine normalization should be performed on the input data prior; to calculating distances between cells. cos_norm_out bool (default: True)Whether cosine normalization should be performed prior to computing corrected expression values. svd_dim int | None (default: None)The number of dimensions to use for summarizing biological substructure; within each batch. If None, biological components will not be removed; from the correction vectors. var_adj bool (default: True)Whether to adjust variance of the correction vectors. Note this step; takes most computing time. compute_angle bool (default: False)Whether to compute the angle between each cell’s correction vector and; the biological subspace of the reference batch. mnn_order Sequence[int] | None (default: None)The order in which batches are to be corrected. When set to None, datas; are corrected sequentially. svd_mode Literal['svd', 'rsvd', 'irlb'] (default: 'rsvd')'svd' computes SVD using a non-randomized SVD-via-ID algorithm,; while 'rsvd' uses a randomized version. 'irlb' perfores; truncated SVD by implicitly restarted Lanczos bidiagonalization; (forked from airysen/irlbpy). do_concatenate bool (defau",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:8425,Security,hash,hashsolo,8425,"tings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.mnn_correct. Contents . mnn_correct(). scanpy.external.pp.mnn_correct#. scanpy.external.pp.mnn_correct(*datas, var_index=None, var_subset=None, batch_key='batch', index_unique=",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:7452,Testability,log,logfile,7452,_variable_genes; scanpy.experimental.pp.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; s,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:7491,Testability,log,logpath,7491,.recipe_pearson_residuals. Classes; scanpy.Neighbors; scanpy.Neighbors.connectivities; scanpy.Neighbors.distances; scanpy.Neighbors.distances_dpt; scanpy.Neighbors.eigen_basis; scanpy.Neighbors.eigen_values; scanpy.Neighbors.rp_forest; scanpy.Neighbors.transitions; scanpy.Neighbors.transitions_sym; scanpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; sca,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:7797,Testability,log,logging,7797,anpy.Neighbors.compute_eigen; scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:7826,Testability,log,logging,7826, scanpy.Neighbors.compute_neighbors; scanpy.Neighbors.compute_transitions; scanpy.Neighbors.getdoc; scanpy.Neighbors.to_igraph. Settings; scanpy.set_figure_params; scanpy._settings.ScanpyConfig; scanpy._settings.ScanpyConfig.autosave; scanpy._settings.ScanpyConfig.autoshow; scanpy._settings.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plottin,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html:10092,Testability,test,testing,10092,"rowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.mnn_correct. Contents . mnn_correct(). scanpy.external.pp.mnn_correct#. scanpy.external.pp.mnn_correct(*datas, var_index=None, var_subset=None, batch_key='batch', index_unique='-', batch_categories=None, k=20, sigma=1.0, cos_norm_in=True, cos_norm_out=True, svd_dim=None, var_adj=True, compute_angle=False, mnn_order=None, svd_mode='rsvd', do_concatenate=True, save_raw=False, n_jobs=None, **kwargs)[source]#; Correct batch effects by matching mutual nearest neighbors [Haghverdi et al., 2018] [Kang, 2018].; This uses the implementation of mnnpy [Kang, 2018].; Depending on do_concatenate, returns matrices or AnnData objects in the; original order containing corrected expression values or a concatenated; matrix or AnnData object.; Be reminded that it is not advised to use the corrected data matrices for; differential expression testing.; More information and bug reports here. Parameters:. datas AnnData | ndarrayExpression matrices or AnnData objects. Matrices should be shaped like; n_obs × n_vars (n_cell × n_gene) and have consistent number of columns.; AnnData objects should have same number of variables. var_index Collection[str] | None (default: None)The index (list of str) of vars (genes). Necessary when using only a; subset of vars to perform MNN correction, and should be supplied with; var_subset. When datas are AnnData objects, var_index is ignored. var_subset Collection[str] | None (default: None)The subset of vars (list of str) to be used when performing MNN; correction. Typically, a list of highly variable genes (HVGs).; When set to None, uses all vars. batch_key str (default: 'batch')The batch_key for concatenate().; Only valid when do_concatenate and supplying AnnData objects. index_unique str (default: '-')The index_unique for concatenate().; Only val",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.mnn_correct.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.mnn_correct.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.scanorama_integrate.html:10990,Availability,avail,available,10990,"a matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. Cells from the same batch must be; contiguously stored in adata. basis str (default: 'X_pca')The name of the field in adata.obsm where the PCA table is; stored. Defaults to 'X_pca', which is the default for; sc.pp.pca(). adjusted_basis str (default: 'X_scanorama')The name of the field in adata.obsm where the integrated; embeddings will be stored after running this function. Defaults; to X_scanorama. knn int (default: 20)Number of nearest neighbors to use for matching. sigma float (default: 15)Correction smoothing parameter on Gaussian kernel. approx bool (default: True)Use approximate nearest neighbors with Python annoy;; greatly speeds up matching runtime. alpha float (default: 0.1)Alignment score minimum cutoff. batch_size int (default: 5000)The batch size used in the alignment vector computation. Useful; when integrating very large (>100k samples) datasets. Set to; large value that runs within available memory. kwargsAny additional arguments will be passed to; scanorama.assemble(). Return type:; None. Returns:; Updates adata with the field adata.obsm[adjusted_basis],; containing Scanorama embeddings such that different experiments; are integrated. Example; First, load libraries and example dataset, and preprocess.; >>> import scanpy as sc; >>> import scanpy.external as sce; >>> adata = sc.datasets.pbmc3k(); >>> sc.pp.recipe_zheng17(adata); >>> sc.pp.pca(adata). We now arbitrarily assign a batch metadata variable to each cell; for the sake of example, but during real usage there would already; be a column in adata.obs giving the experiment each cell came; from.; >>> adata.obs['batch'] = 1350*['a'] + 1350*['b']. Finally, run Scanorama. Afterwards, there will be a new table in; adata.obsm containing the Scanorama embeddings.; >>> sce.pp.scanorama_integrate(adata, 'batch', verbose=1); Processing datasets a <=> b; >>> 'X_scanorama' in adata.obsm; True. previous; scanpy.",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.scanorama_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.scanorama_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.scanorama_integrate.html:8116,Deployability,toggle,toggleswitch,8116,ngs.ScanpyConfig.cache_compression; scanpy._settings.ScanpyConfig.cachedir; scanpy._settings.ScanpyConfig.categories_to_ignore; scanpy._settings.ScanpyConfig.datasetdir; scanpy._settings.ScanpyConfig.figdir; scanpy._settings.ScanpyConfig.file_format_data; scanpy._settings.ScanpyConfig.file_format_figs; scanpy._settings.ScanpyConfig.logfile; scanpy._settings.ScanpyConfig.logpath; scanpy._settings.ScanpyConfig.max_memory; scanpy._settings.ScanpyConfig.n_jobs; scanpy._settings.ScanpyConfig.plot_suffix; scanpy._settings.ScanpyConfig.verbosity; scanpy._settings.ScanpyConfig.writedir; scanpy._settings.ScanpyConfig.N_PCS; scanpy._settings.ScanpyConfig.set_figure_params. scanpy.logging.print_header; scanpy.logging.print_versions. Datasets; scanpy.datasets.blobs; scanpy.datasets.ebi_expression_atlas; scanpy.datasets.krumsiek11; scanpy.datasets.moignard15; scanpy.datasets.pbmc3k; scanpy.datasets.pbmc3k_processed; scanpy.datasets.pbmc68k_reduced; scanpy.datasets.paul15; scanpy.datasets.toggleswitch; scanpy.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contribut,MatchSource.WIKI,en/stable/generated/scanpy.external.pp.scanorama_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.scanorama_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.scanorama_integrate.html:9200,Deployability,release,release,9200,"py.datasets.visium_sge. Deprecated functions; scanpy.pp.filter_genes_dispersion; scanpy.pp.normalize_per_cell. External API; Preprocessing: PP; scanpy.external.pp.bbknn; scanpy.external.pp.harmony_integrate; scanpy.external.pp.mnn_correct; scanpy.external.pp.scanorama_integrate; scanpy.external.pp.hashsolo; scanpy.external.pp.dca; scanpy.external.pp.magic. Tools: TL; scanpy.external.tl.phate; scanpy.external.tl.palantir; scanpy.external.tl.trimap; scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.scanorama_integrate. Contents . scanorama_integrate(). scanpy.external.pp.scanorama_integrate#. scanpy.external.pp.scanorama_integrate(adata, key, *, basis='X_pca', adjusted_basis='X_scanorama', knn=20, sigma=15, approx=True, alpha=0.1, batch_size=5000, **kwargs)[source]#; Use Scanorama [Hie et al., 2019] to integrate different experiments.; Scanorama [Hie et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments stored in an AnnData object. This; function should be run after performing PCA but before computing; the neighbor graph, as illustrated in the example below.; This uses the implementation of scanorama [Hie et al., 2019]. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. Cells from the same batch must be; contiguously stored",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.scanorama_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.scanorama_integrate.html
https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.scanorama_integrate.html:9576,Deployability,integrat,integrate,9576,"scanpy.external.tl.sam; scanpy.external.tl.phenograph; scanpy.external.tl.harmony_timeseries; scanpy.external.tl.wishbone; scanpy.external.tl.palantir; scanpy.external.tl.palantir_results; scanpy.external.tl.sandbag; scanpy.external.tl.cyclone. Plotting: PL; scanpy.external.pl.phate; scanpy.external.pl.trimap; scanpy.external.pl.sam; scanpy.external.pl.wishbone_marker_trajectory. Exporting; scanpy.external.exporting.spring_project; scanpy.external.exporting.cellbrowser. Ecosystem; Release notes; Community; News; Contributing; Contributing code; Getting set up; Tests; Documentation; CI; Versioning; Making a release. Contributors; References. .rst. .pdf. scanpy.external.pp.scanorama_integrate. Contents . scanorama_integrate(). scanpy.external.pp.scanorama_integrate#. scanpy.external.pp.scanorama_integrate(adata, key, *, basis='X_pca', adjusted_basis='X_scanorama', knn=20, sigma=15, approx=True, alpha=0.1, batch_size=5000, **kwargs)[source]#; Use Scanorama [Hie et al., 2019] to integrate different experiments.; Scanorama [Hie et al., 2019] is an algorithm for integrating single-cell; data from multiple experiments stored in an AnnData object. This; function should be run after performing PCA but before computing; the neighbor graph, as illustrated in the example below.; This uses the implementation of scanorama [Hie et al., 2019]. Parameters:. adata AnnDataThe annotated data matrix. key strThe name of the column in adata.obs that differentiates; among experiments/batches. Cells from the same batch must be; contiguously stored in adata. basis str (default: 'X_pca')The name of the field in adata.obsm where the PCA table is; stored. Defaults to 'X_pca', which is the default for; sc.pp.pca(). adjusted_basis str (default: 'X_scanorama')The name of the field in adata.obsm where the integrated; embeddings will be stored after running this function. Defaults; to X_scanorama. knn int (default: 20)Number of nearest neighbors to use for matching. sigma float (default: 15)Correctio",MatchSource.WIKI,en/stable/generated/scanpy.external.pp.scanorama_integrate.html,scverse,scanpy,1.10.2,https://scanpy.readthedocs.io,https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.scanorama_integrate.html
