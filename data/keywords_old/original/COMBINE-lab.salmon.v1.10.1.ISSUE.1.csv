id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/COMBINE-lab/salmon/issues/289:635,Deployability,install,installed,635,"**Describe the bug**; I am trying to quantify long reads mapped using minimap2 and I am getting a large number of the following messages:. ```; [2018-09-10 12:42:32.972] [jointLog] [warning] CIGAR = 106c16M1D7M1D8M1D26M1D55M3D8M1D32M2I14M1I8M1I52M1D14M1I2M1I19M1I1M1I7M11D28M1D5M3I40M1D5M1I5M1I6M1I13M147c; [2018-09-10 12:42:32.972] [jointLog] [warning] (in update()) CIGAR string for read [e6b69e2f-1bf2-4fd5-bace-d4d213164026] seems inconsistent. It refers to non-existant positions in the read!. ```. **To Reproduce**; * Which version of salmon was used?; salmon version: salmon 0.11.3, minimap2 version: 2.9-r720; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; * Which reference (e.g. transcriptome) was used?; Ensembl [cDNA collection](http://ftp.ensembl.org/pub/release-93/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz).; * Which read files were used?; Nanopore reads.; * Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l SF -a {input.bam} -o {output.tsv_dir}. **Desktop (please complete the following information):**; Ubuntu 14.04.5 LTS. **Additional context**; I am wondering whether the issue is caused by the fact that minimap2 does not include sequences in the secondary alignments. The errors disappear if I filter for primary alignments only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289
https://github.com/COMBINE-lab/salmon/issues/289:699,Deployability,Install,Installed,699,"**Describe the bug**; I am trying to quantify long reads mapped using minimap2 and I am getting a large number of the following messages:. ```; [2018-09-10 12:42:32.972] [jointLog] [warning] CIGAR = 106c16M1D7M1D8M1D26M1D55M3D8M1D32M2I14M1I8M1I52M1D14M1I2M1I19M1I1M1I7M11D28M1D5M3I40M1D5M1I5M1I6M1I13M147c; [2018-09-10 12:42:32.972] [jointLog] [warning] (in update()) CIGAR string for read [e6b69e2f-1bf2-4fd5-bace-d4d213164026] seems inconsistent. It refers to non-existant positions in the read!. ```. **To Reproduce**; * Which version of salmon was used?; salmon version: salmon 0.11.3, minimap2 version: 2.9-r720; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; * Which reference (e.g. transcriptome) was used?; Ensembl [cDNA collection](http://ftp.ensembl.org/pub/release-93/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz).; * Which read files were used?; Nanopore reads.; * Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l SF -a {input.bam} -o {output.tsv_dir}. **Desktop (please complete the following information):**; Ubuntu 14.04.5 LTS. **Additional context**; I am wondering whether the issue is caused by the fact that minimap2 does not include sequences in the secondary alignments. The errors disappear if I filter for primary alignments only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289
https://github.com/COMBINE-lab/salmon/issues/289:831,Deployability,release,release-,831,"**Describe the bug**; I am trying to quantify long reads mapped using minimap2 and I am getting a large number of the following messages:. ```; [2018-09-10 12:42:32.972] [jointLog] [warning] CIGAR = 106c16M1D7M1D8M1D26M1D55M3D8M1D32M2I14M1I8M1I52M1D14M1I2M1I19M1I1M1I7M11D28M1D5M3I40M1D5M1I5M1I6M1I13M147c; [2018-09-10 12:42:32.972] [jointLog] [warning] (in update()) CIGAR string for read [e6b69e2f-1bf2-4fd5-bace-d4d213164026] seems inconsistent. It refers to non-existant positions in the read!. ```. **To Reproduce**; * Which version of salmon was used?; salmon version: salmon 0.11.3, minimap2 version: 2.9-r720; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; * Which reference (e.g. transcriptome) was used?; Ensembl [cDNA collection](http://ftp.ensembl.org/pub/release-93/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz).; * Which read files were used?; Nanopore reads.; * Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l SF -a {input.bam} -o {output.tsv_dir}. **Desktop (please complete the following information):**; Ubuntu 14.04.5 LTS. **Additional context**; I am wondering whether the issue is caused by the fact that minimap2 does not include sequences in the secondary alignments. The errors disappear if I filter for primary alignments only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289
https://github.com/COMBINE-lab/salmon/issues/289:128,Integrability,message,messages,128,"**Describe the bug**; I am trying to quantify long reads mapped using minimap2 and I am getting a large number of the following messages:. ```; [2018-09-10 12:42:32.972] [jointLog] [warning] CIGAR = 106c16M1D7M1D8M1D26M1D55M3D8M1D32M2I14M1I8M1I52M1D14M1I2M1I19M1I1M1I7M11D28M1D5M3I40M1D5M1I5M1I6M1I13M147c; [2018-09-10 12:42:32.972] [jointLog] [warning] (in update()) CIGAR string for read [e6b69e2f-1bf2-4fd5-bace-d4d213164026] seems inconsistent. It refers to non-existant positions in the read!. ```. **To Reproduce**; * Which version of salmon was used?; salmon version: salmon 0.11.3, minimap2 version: 2.9-r720; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; * Which reference (e.g. transcriptome) was used?; Ensembl [cDNA collection](http://ftp.ensembl.org/pub/release-93/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz).; * Which read files were used?; Nanopore reads.; * Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l SF -a {input.bam} -o {output.tsv_dir}. **Desktop (please complete the following information):**; Ubuntu 14.04.5 LTS. **Additional context**; I am wondering whether the issue is caused by the fact that minimap2 does not include sequences in the secondary alignments. The errors disappear if I filter for primary alignments only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289
https://github.com/COMBINE-lab/salmon/issues/290:115,Availability,down,downloaded,115,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)? Salmon. **Describe the bug**; I downloaded salmon-0.11.3-linux_x86_64.tar.gz file and extracted it. There is no makefile or install.sh files, just the bin. lib, sample_data. Therefore no any installation steps. The bin and lib were put in environment paths PATH and LD_LIBRARY_PATH.; When I run trinity command i get following error:. Trinity version: Trinity-v2.6.6; -ERROR: couldn't run the network check to confirm latest Trinity software version. Tuesday, September 11, 2018: 14:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:410,Availability,error,error,410,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)? Salmon. **Describe the bug**; I downloaded salmon-0.11.3-linux_x86_64.tar.gz file and extracted it. There is no makefile or install.sh files, just the bin. lib, sample_data. Therefore no any installation steps. The bin and lib were put in environment paths PATH and LD_LIBRARY_PATH.; When I run trinity command i get following error:. Trinity version: Trinity-v2.6.6; -ERROR: couldn't run the network check to confirm latest Trinity software version. Tuesday, September 11, 2018: 14:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:452,Availability,ERROR,ERROR,452,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)? Salmon. **Describe the bug**; I downloaded salmon-0.11.3-linux_x86_64.tar.gz file and extracted it. There is no makefile or install.sh files, just the bin. lib, sample_data. Therefore no any installation steps. The bin and lib were put in environment paths PATH and LD_LIBRARY_PATH.; When I run trinity command i get following error:. Trinity version: Trinity-v2.6.6; -ERROR: couldn't run the network check to confirm latest Trinity software version. Tuesday, September 11, 2018: 14:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:688,Availability,Error,Error,688,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)? Salmon. **Describe the bug**; I downloaded salmon-0.11.3-linux_x86_64.tar.gz file and extracted it. There is no makefile or install.sh files, just the bin. lib, sample_data. Therefore no any installation steps. The bin and lib were put in environment paths PATH and LD_LIBRARY_PATH.; When I run trinity command i get following error:. Trinity version: Trinity-v2.6.6; -ERROR: couldn't run the network check to confirm latest Trinity software version. Tuesday, September 11, 2018: 14:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:698,Availability,failure,failure,698,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)? Salmon. **Describe the bug**; I downloaded salmon-0.11.3-linux_x86_64.tar.gz file and extracted it. There is no makefile or install.sh files, just the bin. lib, sample_data. Therefore no any installation steps. The bin and lib were put in environment paths PATH and LD_LIBRARY_PATH.; When I run trinity command i get following error:. Trinity version: Trinity-v2.6.6; -ERROR: couldn't run the network check to confirm latest Trinity software version. Tuesday, September 11, 2018: 14:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:719,Availability,Error,Error,719,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)? Salmon. **Describe the bug**; I downloaded salmon-0.11.3-linux_x86_64.tar.gz file and extracted it. There is no makefile or install.sh files, just the bin. lib, sample_data. Therefore no any installation steps. The bin and lib were put in environment paths PATH and LD_LIBRARY_PATH.; When I run trinity command i get following error:. Trinity version: Trinity-v2.6.6; -ERROR: couldn't run the network check to confirm latest Trinity software version. Tuesday, September 11, 2018: 14:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:954,Availability,Error,Error,954,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)? Salmon. **Describe the bug**; I downloaded salmon-0.11.3-linux_x86_64.tar.gz file and extracted it. There is no makefile or install.sh files, just the bin. lib, sample_data. Therefore no any installation steps. The bin and lib were put in environment paths PATH and LD_LIBRARY_PATH.; When I run trinity command i get following error:. Trinity version: Trinity-v2.6.6; -ERROR: couldn't run the network check to confirm latest Trinity software version. Tuesday, September 11, 2018: 14:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:1542,Availability,error,error,1542,"4:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:1603,Availability,Error,Error,1603,"rt_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:1613,Availability,failure,failure,1613,"rt_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:1634,Availability,Error,Error,1634,"rt_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:2116,Availability,down,downloaded,2116,"/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:2158,Availability,down,downloaded,2158,"/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:207,Deployability,install,install,207,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)? Salmon. **Describe the bug**; I downloaded salmon-0.11.3-linux_x86_64.tar.gz file and extracted it. There is no makefile or install.sh files, just the bin. lib, sample_data. Therefore no any installation steps. The bin and lib were put in environment paths PATH and LD_LIBRARY_PATH.; When I run trinity command i get following error:. Trinity version: Trinity-v2.6.6; -ERROR: couldn't run the network check to confirm latest Trinity software version. Tuesday, September 11, 2018: 14:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:274,Deployability,install,installation,274,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)? Salmon. **Describe the bug**; I downloaded salmon-0.11.3-linux_x86_64.tar.gz file and extracted it. There is no makefile or install.sh files, just the bin. lib, sample_data. Therefore no any installation steps. The bin and lib were put in environment paths PATH and LD_LIBRARY_PATH.; When I run trinity command i get following error:. Trinity version: Trinity-v2.6.6; -ERROR: couldn't run the network check to confirm latest Trinity software version. Tuesday, September 11, 2018: 14:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:2095,Deployability,install,installed,2095,"/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:1662,Testability,test,testing,1662,"rt_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:1742,Testability,test,testing,1742,"/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`].",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/290:2359,Usability,clear,clear,2359,"/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290
https://github.com/COMBINE-lab/salmon/issues/291:2124,Integrability,protocol,protocol,2124,"1:HH577BCX2:1:1101:1900:1954; GAGACTTTCTAGTCGATCTACTGCCC; +; GGGGGIIIIIGGGGIGIIIIIIIIII; ```. example of r2.fq:. ```; @D00323:881:HH577BCX2:1:1101:1815:1951; AGGTTGCAGTGAGCTGAGATCGTGCCACTGCACTCTAGCCACCACACCTGGCTAATTTTTGTATTTTTAAGTAGAGACAGAGTTTCGCTATGTTGGCCAG; +; AAA<GGGGA<G.GAGAGA.GGAGAGG.G.GGAAGGG.<.<GGGGGGIIGGGGAGGAGGAGGIIA.AAGAGGIGGAG.<AG.AGGGGAAGGGGGIIGGAG.; @D00323:881:HH577BCX2:1:1101:1963:1952; TAATACCGCTTTAGCTACATCTCAGATCTGGGTAAGTCATGTCTGCATTTTCAATAATTTCATTTTTTAAACTTCTACCTTAATTCTGATGTTTACTCAT; +; GAGGAGGGGAGGIGGGGGGGGIIGGGGGIIGIIGGGGGGGGGGGGGGGGIIIIGIIGGIIGGAGIIIIIGGGGIGGAGAGIIIGGGGGGGIIIIGGGIII; @D00323:881:HH577BCX2:1:1101:1900:1954; GCTTCATATAGTCTTACCTTTCTGAGGACCAATTTGGCTGAATTCTCTGCTTTCTAATCTGACTCCTTATGGGGGATCCCTGCTATAGAGATGTAGACCA; +; GGAGAGGGGAGGIIIGGGIGIIIIIIGIGIIGGGIIIIIIIGGGGGGGIGGGGGGGGGGGGGGIIGIGGGGIGGGAGGIGIGIGGGGGGIGGGIIGGIGG; ```. example of `known_cb.txt`:. ```; GGATAGGGTCATAGCT; GGATAGGGTTAGAGAT; GGATAGGGTTGCCTGG; GGATAGGGTACGCAAG; GGATAGGGTAACGGAC; GGATAGGGTCAACAGG; GGATAGGGTAACGGCA; GGATAGGGTTTGTCTT; GGATAGGGTGCTAGTT; GGATAGGGTACGACCC; ```. According to the documentation, `dumpfq` will output the reads to `stdout`, and here is the content of `alevin_out/corrected_r2.fq`:. ```; Version Info: This is the most recent version of Salmon.; Sequence-Size 17greater than specified 16.; Please report the issue on Github.; ```. In addition, we have some protocol under development, where CBs/UMIs are not in the read1.fq and read2.fq. They are rather in the index reads from illumina (i5 and i7). After calling `bcl2fastq`, we normally get 4 fastqs for each sample:. ```; R1.fastq; R2.fastq; I1.fastq; I2.fastq; ```. Both `R1.fastq` and `R2.fastq` contain important gene/genome information, it is the combination of the sequence in `I1.fastq` and `I2.fastq` that define cells. Is this something that `alevin` might support in future. In this case, if I know exact the sequence of I1 and I2, what the `whitelist.txt` file should look like?. Thank you!. Regards,; Xi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/291
https://github.com/COMBINE-lab/salmon/pull/292:11,Modifiability,refactor,refactoring,11,"Hi,. I did refactoring for `.travis.yml`.; This pull-request is for develop branch. * Aligned with 2 spaces indent.; * Removed tailing space.; * Removed old commended out lines on bottom area.; We can check past modification with `git log -p .travis.yml`.; So, I think we can remove the comment lines.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/292
https://github.com/COMBINE-lab/salmon/pull/292:235,Testability,log,log,235,"Hi,. I did refactoring for `.travis.yml`.; This pull-request is for develop branch. * Aligned with 2 spaces indent.; * Removed tailing space.; * Removed old commended out lines on bottom area.; We can check past modification with `git log -p .travis.yml`.; So, I think we can remove the comment lines.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/292
https://github.com/COMBINE-lab/salmon/pull/293:154,Deployability,install,install,154,"This PR is related to https://github.com/COMBINE-lab/salmon/pull/276#issue-210022241 . It is to add lintcheck for cmake files. ## How to use. ```; $ pip3 install cmakelint. $ which cmakelint; /path/to/cmakelint. $ ./scripts/lint.sh; ```. Every CMakeLists.txt or *.cmake file in this repository is target for the check.; Right now I only modified `./CMakeLists.txt` to show for the example, and changed the permission of the executable bit file. Maybe the executable bit is not necessary.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/293
https://github.com/COMBINE-lab/salmon/issues/294:1073,Availability,down,downloaded,1073," attempting to run Alevin on [https://support.10xgenomics.com/single-cell-gene-expression/datasets/1.1.0/cd14_monocytes](url), with the 10x v1 wrapper, the initialization seems to go smoothly then Alevin produces the following:. ```; [2018-09-13 11:41:47.586] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-13 11:41:47.586] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-13 11:41:47.593] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-13 11:41:47.593] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-13 11:41:47.593] [jointLog] [info] Mapping rate = 0%; ```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:; A downloaded binary Salmon v0.11.2 was executed using the v1 wrapper script compiled locally in a Salmon specific Conda environment. The GRCh38.p12 reference was used. Dataset is linked above in bug description. . Full command used:; `~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; `; Full terminal output:. ```; (Salmonenv) @compute-1-16: ~/Documents/PBMCStem/cd14/fastqs/flowcell1 $ ~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; TEMPDIR is /tmp/tmp.fyLlOm2tjU; Running command [salmon alevin -l ISR ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:12815,Deployability,release,release,12815,"2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-11 16:34:30.116] [jointLog] [info] Mapping rate = 0%. [2018-09-11 16:34:30.116] [jointLog] [info] finished quantifyLibrary(); [2018-09-11 16:34:30.156] [alevinLog] [info] Starting optimizer; ```. **Desktop (please complete the following information):**; - OS: CentOS; - x86_64 x86_64 x86_64 GNU/Linux; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.9 (Final); Release:	6.9; Codename:	Final",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:12836,Deployability,Release,Release,12836,"2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-11 16:34:30.116] [jointLog] [info] Mapping rate = 0%. [2018-09-11 16:34:30.116] [jointLog] [info] finished quantifyLibrary(); [2018-09-11 16:34:30.156] [alevinLog] [info] Starting optimizer; ```. **Desktop (please complete the following information):**; - OS: CentOS; - x86_64 x86_64 x86_64 GNU/Linux; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.9 (Final); Release:	6.9; Codename:	Final",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:195,Integrability,wrap,wrapper,195,"Alevin in Salmon v0.11.2. **Describe the bug**; When attempting to run Alevin on [https://support.10xgenomics.com/single-cell-gene-expression/datasets/1.1.0/cd14_monocytes](url), with the 10x v1 wrapper, the initialization seems to go smoothly then Alevin produces the following:. ```; [2018-09-13 11:41:47.586] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-13 11:41:47.586] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-13 11:41:47.593] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-13 11:41:47.593] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-13 11:41:47.593] [jointLog] [info] Mapping rate = 0%; ```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:; A downloaded binary Salmon v0.11.2 was executed using the v1 wrapper script compiled locally in a Salmon specific Conda environment. The GRCh38.p12 reference was used. Dataset is linked above in bug description. . Full command used:; `~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; `; Full terminal output:. ```; (Salmonenv) @compute-1-16: ~/Documents/PBMCStem/cd14/fastqs/flowcell1 $ ~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; TEMPDIR is /tmp/tm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:1132,Integrability,wrap,wrapper,1132,"1.0/cd14_monocytes](url), with the 10x v1 wrapper, the initialization seems to go smoothly then Alevin produces the following:. ```; [2018-09-13 11:41:47.586] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-13 11:41:47.586] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-13 11:41:47.593] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-13 11:41:47.593] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-13 11:41:47.593] [jointLog] [info] Mapping rate = 0%; ```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:; A downloaded binary Salmon v0.11.2 was executed using the v1 wrapper script compiled locally in a Salmon specific Conda environment. The GRCh38.p12 reference was used. Dataset is linked above in bug description. . Full command used:; `~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; `; Full terminal output:. ```; (Salmonenv) @compute-1-16: ~/Documents/PBMCStem/cd14/fastqs/flowcell1 $ ~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; TEMPDIR is /tmp/tmp.fyLlOm2tjU; Running command [salmon alevin -l ISR -1 read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz re",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:5488,Integrability,protocol,protocol,5488,"ngth 5 --barcodeLength 14 -1 /tmp/tmp.fyLlOm2tjU/p1.fa -2 /tmp/tmp.fyLlOm2tjU/p2.fa -r read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz; read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz; read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of Salmon.; [2018-09-11 16:28:53.145] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ../../alevin_15_pc/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:10976,Performance,Load,Loading,10976,16:33:55.869] [alevinLog] [info] Knee found left boundary at 11740 ; [2018-09-11 16:33:59.242] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-09-11 16:33:59.242] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-09-11 16:33:59.242] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-09-11 16:33:59.358] [alevinLog] [info] Done True Barcode Sampling; [2018-09-11 16:33:59.891] [alevinLog] [info] Done populating Z matrix; [2018-09-11 16:33:59.972] [alevinLog] [info] Done indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were map,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:11041,Performance,Load,Loading,11041,"[2018-09-11 16:33:59.242] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-09-11 16:33:59.242] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-09-11 16:33:59.242] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-09-11 16:33:59.358] [alevinLog] [info] Done True Barcode Sampling; [2018-09-11 16:33:59.891] [alevinLog] [info] Done populating Z matrix; [2018-09-11 16:33:59.972] [alevinLog] [info] Done indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The ef",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:11114,Performance,Load,Loading,11114,"at 4345 ; [2018-09-11 16:33:59.242] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-09-11 16:33:59.242] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-09-11 16:33:59.358] [alevinLog] [info] Done True Barcode Sampling; [2018-09-11 16:33:59.891] [alevinLog] [info] Done populating Z matrix; [2018-09-11 16:33:59.972] [alevinLog] [info] Done indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:11182,Performance,Load,Loading,11182,": 713.683 normfactor: 1183.93; [2018-09-11 16:33:59.242] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-09-11 16:33:59.358] [alevinLog] [info] Done True Barcode Sampling; [2018-09-11 16:33:59.891] [alevinLog] [info] Done populating Z matrix; [2018-09-11 16:33:59.972] [alevinLog] [info] Done indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong w",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:11253,Performance,Load,Loading,11253,"] Total 5344(has 999 low confidence) barcodes; [2018-09-11 16:33:59.358] [alevinLog] [info] Done True Barcode Sampling; [2018-09-11 16:33:59.891] [alevinLog] [info] Done populating Z matrix; [2018-09-11 16:33:59.972] [alevinLog] [info] Done indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wro",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:11511,Performance,load,loading,11511," indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-11 16:34:30.116] [jointLog] [info] Mapping rate = 0%. [2018-09-11 16:34:30.116] [jointLog] [info] finished quantifyLibrary(); [2018-09-11 16:34:30.156] [alevinLog] [info] Starting optimizer; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:11575,Performance,load,loading,11575,"Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-11 16:34:30.116] [jointLog] [info] Mapping rate = 0%. [2018-09-11 16:34:30.116] [jointLog] [info] finished quantifyLibrary(); [2018-09-11 16:34:30.156] [alevinLog] [info] Starting optimizer; ```. **Desktop (please complete the following information):**; - OS: CentO",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:12494,Performance,optimiz,optimizer,12494,"2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-11 16:34:30.116] [jointLog] [info] Mapping rate = 0%. [2018-09-11 16:34:30.116] [jointLog] [info] finished quantifyLibrary(); [2018-09-11 16:34:30.156] [alevinLog] [info] Starting optimizer; ```. **Desktop (please complete the following information):**; - OS: CentOS; - x86_64 x86_64 x86_64 GNU/Linux; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.9 (Final); Release:	6.9; Codename:	Final",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:11519,Security,hash,hash,11519," indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-11 16:34:30.116] [jointLog] [info] Mapping rate = 0%. [2018-09-11 16:34:30.116] [jointLog] [info] finished quantifyLibrary(); [2018-09-11 16:34:30.156] [alevinLog] [info] Starting optimizer; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:5594,Testability,Log,Logs,5594,"TCACT_lane-001-chunk-001.fastq.gz; read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz; read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of Salmon.; [2018-09-11 16:28:53.145] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ../../alevin_15_pc/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz }; ### [ mates2 ] => { read-RA_si-ACTTCACT_lane-001",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:5637,Testability,log,logs,5637,"-ACTTCACT_lane-002-chunk-000.fastq.gz; read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of Salmon.; [2018-09-11 16:28:53.145] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ../../alevin_15_pc/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz }; ### [ mates2 ] => { read-RA_si-ACTTCACT_lane-001-chunk-001.fastq.gz read-RA_si-ACTTCACT_lane",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/294:10179,Usability,Learn,Learned,10179,i-TTCGTGAA_lane-001-chunk-001.fastq.gz read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz }. [2018-09-11 16:28:53.158] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-09-11 16:28:53.158] [jointLog] [warning] You seem to have passed in both un-paired reads and paired-end reads. It is not currently possible to quantify hybrid library types in salmon.; [2018-09-11 16:28:53.164] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 535 Million barcodes. [2018-09-11 16:33:49.759] [alevinLog] [info] Done barcode density calculation.; [2018-09-11 16:33:49.759] [alevinLog] [info] # Barcodes Used: 534903498 / 535096394.; [2018-09-11 16:33:55.869] [alevinLog] [info] Knee found left boundary at 11740 ; [2018-09-11 16:33:59.242] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-09-11 16:33:59.242] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-09-11 16:33:59.242] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-09-11 16:33:59.358] [alevinLog] [info] Done True Barcode Sampling; [2018-09-11 16:33:59.891] [alevinLog] [info] Done populating Z matrix; [2018-09-11 16:33:59.972] [alevinLog] [info] Done indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [i,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294
https://github.com/COMBINE-lab/salmon/issues/295:64,Availability,fault,fault,64,"Hello,. I am having a problem with an inconsistent segmentation fault: 11. Please see below. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I've only worked in salmon mode. **Describe the bug**; Following the tutorial procedure exactly, I'm experiencing seemingly random segmentation fault: 11 warnings on some alignments but not others. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. Salmon was installed yesterday through the getting started tutorial using the conda install method. The sample data downloaded fine using the provided scripts, and the index creation seemed normal. When I went to run the program (with the options given in the tutorial), 10 of the 16 alignments failed with a segmentation fault: 11 warning. Attached is a screen shot of the warning on one of the failed alignments. the quant.sf files of the successful alignments seem normal, and the files do not exist in the faulted samples. . To test repeatability, I deleted all of the quant files, and ran the program again. Again, most samples failed, and the samples that did not we different from the first run. **Expected behavior**; I expected all of the tutorial samples to produce quant.sf files successfully. **Desktop (please complete the following information):**; - OSX 10.13.3. Thank you,; Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295
https://github.com/COMBINE-lab/salmon/issues/295:323,Availability,fault,fault,323,"Hello,. I am having a problem with an inconsistent segmentation fault: 11. Please see below. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I've only worked in salmon mode. **Describe the bug**; Following the tutorial procedure exactly, I'm experiencing seemingly random segmentation fault: 11 warnings on some alignments but not others. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. Salmon was installed yesterday through the getting started tutorial using the conda install method. The sample data downloaded fine using the provided scripts, and the index creation seemed normal. When I went to run the program (with the options given in the tutorial), 10 of the 16 alignments failed with a segmentation fault: 11 warning. Attached is a screen shot of the warning on one of the failed alignments. the quant.sf files of the successful alignments seem normal, and the files do not exist in the faulted samples. . To test repeatability, I deleted all of the quant files, and ran the program again. Again, most samples failed, and the samples that did not we different from the first run. **Expected behavior**; I expected all of the tutorial samples to produce quant.sf files successfully. **Desktop (please complete the following information):**; - OSX 10.13.3. Thank you,; Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295
https://github.com/COMBINE-lab/salmon/issues/295:620,Availability,down,downloaded,620,"Hello,. I am having a problem with an inconsistent segmentation fault: 11. Please see below. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I've only worked in salmon mode. **Describe the bug**; Following the tutorial procedure exactly, I'm experiencing seemingly random segmentation fault: 11 warnings on some alignments but not others. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. Salmon was installed yesterday through the getting started tutorial using the conda install method. The sample data downloaded fine using the provided scripts, and the index creation seemed normal. When I went to run the program (with the options given in the tutorial), 10 of the 16 alignments failed with a segmentation fault: 11 warning. Attached is a screen shot of the warning on one of the failed alignments. the quant.sf files of the successful alignments seem normal, and the files do not exist in the faulted samples. . To test repeatability, I deleted all of the quant files, and ran the program again. Again, most samples failed, and the samples that did not we different from the first run. **Expected behavior**; I expected all of the tutorial samples to produce quant.sf files successfully. **Desktop (please complete the following information):**; - OSX 10.13.3. Thank you,; Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295
https://github.com/COMBINE-lab/salmon/issues/295:826,Availability,fault,fault,826,"Hello,. I am having a problem with an inconsistent segmentation fault: 11. Please see below. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I've only worked in salmon mode. **Describe the bug**; Following the tutorial procedure exactly, I'm experiencing seemingly random segmentation fault: 11 warnings on some alignments but not others. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. Salmon was installed yesterday through the getting started tutorial using the conda install method. The sample data downloaded fine using the provided scripts, and the index creation seemed normal. When I went to run the program (with the options given in the tutorial), 10 of the 16 alignments failed with a segmentation fault: 11 warning. Attached is a screen shot of the warning on one of the failed alignments. the quant.sf files of the successful alignments seem normal, and the files do not exist in the faulted samples. . To test repeatability, I deleted all of the quant files, and ran the program again. Again, most samples failed, and the samples that did not we different from the first run. **Expected behavior**; I expected all of the tutorial samples to produce quant.sf files successfully. **Desktop (please complete the following information):**; - OSX 10.13.3. Thank you,; Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295
https://github.com/COMBINE-lab/salmon/issues/295:1014,Availability,fault,faulted,1014,"Hello,. I am having a problem with an inconsistent segmentation fault: 11. Please see below. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I've only worked in salmon mode. **Describe the bug**; Following the tutorial procedure exactly, I'm experiencing seemingly random segmentation fault: 11 warnings on some alignments but not others. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. Salmon was installed yesterday through the getting started tutorial using the conda install method. The sample data downloaded fine using the provided scripts, and the index creation seemed normal. When I went to run the program (with the options given in the tutorial), 10 of the 16 alignments failed with a segmentation fault: 11 warning. Attached is a screen shot of the warning on one of the failed alignments. the quant.sf files of the successful alignments seem normal, and the files do not exist in the faulted samples. . To test repeatability, I deleted all of the quant files, and ran the program again. Again, most samples failed, and the samples that did not we different from the first run. **Expected behavior**; I expected all of the tutorial samples to produce quant.sf files successfully. **Desktop (please complete the following information):**; - OSX 10.13.3. Thank you,; Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295
https://github.com/COMBINE-lab/salmon/issues/295:515,Deployability,install,installed,515,"Hello,. I am having a problem with an inconsistent segmentation fault: 11. Please see below. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I've only worked in salmon mode. **Describe the bug**; Following the tutorial procedure exactly, I'm experiencing seemingly random segmentation fault: 11 warnings on some alignments but not others. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. Salmon was installed yesterday through the getting started tutorial using the conda install method. The sample data downloaded fine using the provided scripts, and the index creation seemed normal. When I went to run the program (with the options given in the tutorial), 10 of the 16 alignments failed with a segmentation fault: 11 warning. Attached is a screen shot of the warning on one of the failed alignments. the quant.sf files of the successful alignments seem normal, and the files do not exist in the faulted samples. . To test repeatability, I deleted all of the quant files, and ran the program again. Again, most samples failed, and the samples that did not we different from the first run. **Expected behavior**; I expected all of the tutorial samples to produce quant.sf files successfully. **Desktop (please complete the following information):**; - OSX 10.13.3. Thank you,; Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295
https://github.com/COMBINE-lab/salmon/issues/295:588,Deployability,install,install,588,"Hello,. I am having a problem with an inconsistent segmentation fault: 11. Please see below. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I've only worked in salmon mode. **Describe the bug**; Following the tutorial procedure exactly, I'm experiencing seemingly random segmentation fault: 11 warnings on some alignments but not others. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. Salmon was installed yesterday through the getting started tutorial using the conda install method. The sample data downloaded fine using the provided scripts, and the index creation seemed normal. When I went to run the program (with the options given in the tutorial), 10 of the 16 alignments failed with a segmentation fault: 11 warning. Attached is a screen shot of the warning on one of the failed alignments. the quant.sf files of the successful alignments seem normal, and the files do not exist in the faulted samples. . To test repeatability, I deleted all of the quant files, and ran the program again. Again, most samples failed, and the samples that did not we different from the first run. **Expected behavior**; I expected all of the tutorial samples to produce quant.sf files successfully. **Desktop (please complete the following information):**; - OSX 10.13.3. Thank you,; Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295
https://github.com/COMBINE-lab/salmon/issues/295:1036,Testability,test,test,1036,"Hello,. I am having a problem with an inconsistent segmentation fault: 11. Please see below. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I've only worked in salmon mode. **Describe the bug**; Following the tutorial procedure exactly, I'm experiencing seemingly random segmentation fault: 11 warnings on some alignments but not others. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. Salmon was installed yesterday through the getting started tutorial using the conda install method. The sample data downloaded fine using the provided scripts, and the index creation seemed normal. When I went to run the program (with the options given in the tutorial), 10 of the 16 alignments failed with a segmentation fault: 11 warning. Attached is a screen shot of the warning on one of the failed alignments. the quant.sf files of the successful alignments seem normal, and the files do not exist in the faulted samples. . To test repeatability, I deleted all of the quant files, and ran the program again. Again, most samples failed, and the samples that did not we different from the first run. **Expected behavior**; I expected all of the tutorial samples to produce quant.sf files successfully. **Desktop (please complete the following information):**; - OSX 10.13.3. Thank you,; Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295
https://github.com/COMBINE-lab/salmon/issues/296:566,Availability,error,error,566,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Running make inside build after doing ""cmake"" against the source directory. . **Describe the bug**; A clear and concise description of what the bug is.; Unable to compile this file with gcc-4.9.2 and cmake 3.11.1; **To Reproduce**; Steps and data to reproduce the behavior:; Following steps as specified in guide. Assigning prefix to point to different installation directory and have tried passing in boost location and telling cmake to fetch boost but both result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalcul",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:1261,Availability,error,error,1261," data to reproduce the behavior:; Following steps as specified in guide. Assigning prefix to point to different installation directory and have tried passing in boost location and telling cmake to fetch boost but both result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:1496,Availability,error,error,1496," result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:1618,Availability,error,error,1618,"ect src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2011:38: error: overloaded function wit",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:2219,Availability,error,error,2219,"o’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2011:38: error: overloaded function with no contextual type information; rapmap::utils::writeSAMHeader(*index, salmonOpts.qmLog);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2014:25: error: ‘parserPtr’ was not declared in this scope; processReadsQuasi(parserPtr.get(), readExp, rl, structureVec[i],; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In instantiation of ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:2389,Availability,error,error,2389,"mon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2011:38: error: overloaded function with no contextual type information; rapmap::utils::writeSAMHeader(*index, salmonOpts.qmLog);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2014:25: error: ‘parserPtr’ was not declared in this scope; processReadsQuasi(parserPtr.get(), readExp, rl, structureVec[i],; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In instantiation of ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vect",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:2636,Availability,error,error,2636,"/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2011:38: error: overloaded function with no contextual type information; rapmap::utils::writeSAMHeader(*index, salmonOpts.qmLog);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2014:25: error: ‘parserPtr’ was not declared in this scope; processReadsQuasi(parserPtr.get(), readExp, rl, structureVec[i],; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In instantiation of ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]’:; /nfs/sw/src/rescomp-6993/salmon/src",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:2902,Availability,error,error,2902,"ong unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2011:38: error: overloaded function with no contextual type information; rapmap::utils::writeSAMHeader(*index, salmonOpts.qmLog);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2014:25: error: ‘parserPtr’ was not declared in this scope; processReadsQuasi(parserPtr.get(), readExp, rl, structureVec[i],; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In instantiation of ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2290:71: required from ‘quantifyLibrary(ReadExperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:4704,Availability,error,error,4704,"apmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2074:97: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadPair>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >*)’; if (isPairedEnd) {processFunctor(i, pairedParserPtr, sidx->quasiIndexPerfectHash64());}; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:7152,Availability,error,error,7152,"gned int]::__lambda34; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2075:102: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >*)’; else if (isSingleEnd) {processFunctor(i, singleParserPtr, sidx->quasiIndexPerfectHash64());}; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Trans",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:9603,Availability,error,error,9603,"auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2077:86: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadPair>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >*)’; if (isPairedEnd) {processFunctor(i, pairedParserPtr, sidx->quasiIndex64());}; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: proces",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:12207,Availability,error,error,12207,"to* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2078:91: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >*)’; else if (isSingleEnd) {processFunctor(i, singleParserPtr, sidx->quasiIndex64());}; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: proc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:14815,Availability,error,error,14815,"ng unsigned int]::__lambda34; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2082:98: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadPair>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >*)’; if (isPairedEnd) { processFunctor(i, pairedParserPtr, sidx->quasiIndexPerfectHash32()); }; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:17255,Availability,error,error,17255,"unsigned int]::__lambda34; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2083:103: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >*)’; else if (isSingleEnd) { processFunctor(i, singleParserPtr, sidx->quasiIndexPerfectHash32()); }; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcrip",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:19698,Availability,error,error,19698,"erPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2085:87: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadPair>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >*)’; if (isPairedEnd) { processFunctor(i, pairedParserPtr, sidx->quasiIndex32()); }; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: processReadLi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:22289,Availability,error,error,22289,"Ptr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2086:92: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >*)’; else if (isSingleEnd) { processFunctor(i, singleParserPtr, sidx->quasiIndex32()); }; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: processRead",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:27386,Availability,error,error,27386,"xperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /usr/include/c++/4.8.2/bits/unique_ptr.h:184:16: error: no match for call to ‘(std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadPair>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>::deleter_type {aka processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadPair>*&)’; get_deleter()(__ptr);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::ato",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:32211,Availability,error,error,32211,"ExperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /usr/include/c++/4.8.2/bits/unique_ptr.h:184:16: error: no match for call to ‘(std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>::deleter_type {aka processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__ptr);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atom",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:37155,Availability,error,error,37155,"ExperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /usr/include/c++/4.8.2/bits/unique_ptr.h:262:16: error: no match for call to ‘(std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadPair>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>::deleter_type {aka processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadPair>*&)’; get_deleter()(__p);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atom",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:42097,Availability,error,error,42097,"dExperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /usr/include/c++/4.8.2/bits/unique_ptr.h:262:16: error: no match for call to ‘(std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>::deleter_type {aka processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:44415,Availability,Error,Error,44415,"n/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; [root@fsutil02 build]#; [root@fsutil02 build]# vim salmon^C; [root@fsutil02 build]# cd ..; [root@fsutil02 salmon]# vim salmon.build.error; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; In file included from /usr/include/c++/4.8.2/memory:81:0,; from /usr/include/c++/4.8.2/thread:40,; from /opt/build/salmon/src/SalmonQuantify.cpp:35:; /usr/include/c++/4.8.2/bits/unique_ptr.h: In instantiation of ‘void std::unique_ptr<_Tp, _Dp>::reset(std::unique_ptr<_Tp, _Dp>::pointer) [with _Tp = fastx_parser::FastxParser<fastx_parser::ReadSeq>; _Dp = processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:44469,Availability,Error,Error,44469,"ts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; [root@fsutil02 build]#; [root@fsutil02 build]# vim salmon^C; [root@fsutil02 build]# cd ..; [root@fsutil02 salmon]# vim salmon.build.error; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; In file included from /usr/include/c++/4.8.2/memory:81:0,; from /usr/include/c++/4.8.2/thread:40,; from /opt/build/salmon/src/SalmonQuantify.cpp:35:; /usr/include/c++/4.8.2/bits/unique_ptr.h: In instantiation of ‘void std::unique_ptr<_Tp, _Dp>::reset(std::unique_ptr<_Tp, _Dp>::pointer) [with _Tp = fastx_parser::FastxParser<fastx_parser::ReadSeq>; _Dp = processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::uti",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:44494,Availability,Error,Error,44494,"ts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; [root@fsutil02 build]#; [root@fsutil02 build]# vim salmon^C; [root@fsutil02 build]# cd ..; [root@fsutil02 salmon]# vim salmon.build.error; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; In file included from /usr/include/c++/4.8.2/memory:81:0,; from /usr/include/c++/4.8.2/thread:40,; from /opt/build/salmon/src/SalmonQuantify.cpp:35:; /usr/include/c++/4.8.2/bits/unique_ptr.h: In instantiation of ‘void std::unique_ptr<_Tp, _Dp>::reset(std::unique_ptr<_Tp, _Dp>::pointer) [with _Tp = fastx_parser::FastxParser<fastx_parser::ReadSeq>; _Dp = processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::uti",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:44635,Availability,error,error,44635," ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; [root@fsutil02 build]#; [root@fsutil02 build]# vim salmon^C; [root@fsutil02 build]# cd ..; [root@fsutil02 salmon]# vim salmon.build.error; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; In file included from /usr/include/c++/4.8.2/memory:81:0,; from /usr/include/c++/4.8.2/thread:40,; from /opt/build/salmon/src/SalmonQuantify.cpp:35:; /usr/include/c++/4.8.2/bits/unique_ptr.h: In instantiation of ‘void std::unique_ptr<_Tp, _Dp>::reset(std::unique_ptr<_Tp, _Dp>::pointer) [with _Tp = fastx_parser::FastxParser<fastx_parser::ReadSeq>; _Dp = processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; std",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:47344,Availability,error,error,47344,"d quantifyLibrary(ReadExperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /opt/build/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /usr/include/c++/4.8.2/bits/unique_ptr.h:262:16: error: no match for call to ‘(std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>::deleter_type {aka processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:49620,Availability,Error,Error,49620,"nt; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2`. * Which version of salmon was used?; Salmon 0.3.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Cloned from git as latest source and attempted to cmake + make && make install . **Expected behavior**; A clear and concise description of what you expected to happen.; Expecting the makefile to use c++14 correctly to process the ""auto p"" variable the way it is intended within the template functions. See SalmonQuantify.cpp:1964 with errors regarding ""p was not declared in this scope"". . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Centos 7 ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:49674,Availability,Error,Error,49674,"nt; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2`. * Which version of salmon was used?; Salmon 0.3.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Cloned from git as latest source and attempted to cmake + make && make install . **Expected behavior**; A clear and concise description of what you expected to happen.; Expecting the makefile to use c++14 correctly to process the ""auto p"" variable the way it is intended within the template functions. See SalmonQuantify.cpp:1964 with errors regarding ""p was not declared in this scope"". . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Centos 7 ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:49699,Availability,Error,Error,49699,"nt; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2`. * Which version of salmon was used?; Salmon 0.3.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Cloned from git as latest source and attempted to cmake + make && make install . **Expected behavior**; A clear and concise description of what you expected to happen.; Expecting the makefile to use c++14 correctly to process the ""auto p"" variable the way it is intended within the template functions. See SalmonQuantify.cpp:1964 with errors regarding ""p was not declared in this scope"". . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Centos 7 ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:49798,Availability,down,downloaded,49798,"nt; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2`. * Which version of salmon was used?; Salmon 0.3.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Cloned from git as latest source and attempted to cmake + make && make install . **Expected behavior**; A clear and concise description of what you expected to happen.; Expecting the makefile to use c++14 correctly to process the ""auto p"" variable the way it is intended within the template functions. See SalmonQuantify.cpp:1964 with errors regarding ""p was not declared in this scope"". . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Centos 7 ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:50176,Availability,error,errors,50176,"nt; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2`. * Which version of salmon was used?; Salmon 0.3.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Cloned from git as latest source and attempted to cmake + make && make install . **Expected behavior**; A clear and concise description of what you expected to happen.; Expecting the makefile to use c++14 correctly to process the ""auto p"" variable the way it is intended within the template functions. See SalmonQuantify.cpp:1964 with errors regarding ""p was not declared in this scope"". . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Centos 7 ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:439,Deployability,install,installation,439,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Running make inside build after doing ""cmake"" against the source directory. . **Describe the bug**; A clear and concise description of what the bug is.; Unable to compile this file with gcc-4.9.2 and cmake 3.11.1; **To Reproduce**; Steps and data to reproduce the behavior:; Following steps as specified in guide. Assigning prefix to point to different installation directory and have tried passing in boost location and telling cmake to fetch boost but both result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalcul",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:49777,Deployability,install,installed,49777,"nt; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2`. * Which version of salmon was used?; Salmon 0.3.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Cloned from git as latest source and attempted to cmake + make && make install . **Expected behavior**; A clear and concise description of what you expected to happen.; Expecting the makefile to use c++14 correctly to process the ""auto p"" variable the way it is intended within the template functions. See SalmonQuantify.cpp:1964 with errors regarding ""p was not declared in this scope"". . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Centos 7 ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:49912,Deployability,install,install,49912,"nt; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2`. * Which version of salmon was used?; Salmon 0.3.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Cloned from git as latest source and attempted to cmake + make && make install . **Expected behavior**; A clear and concise description of what you expected to happen.; Expecting the makefile to use c++14 correctly to process the ""auto p"" variable the way it is intended within the template functions. See SalmonQuantify.cpp:1964 with errors regarding ""p was not declared in this scope"". . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Centos 7 ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:50080,Modifiability,variab,variable,50080,"nt; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2`. * Which version of salmon was used?; Salmon 0.3.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Cloned from git as latest source and attempted to cmake + make && make install . **Expected behavior**; A clear and concise description of what you expected to happen.; Expecting the makefile to use c++14 correctly to process the ""auto p"" variable the way it is intended within the template functions. See SalmonQuantify.cpp:1964 with errors regarding ""p was not declared in this scope"". . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Centos 7 ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:188,Usability,clear,clear,188,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Running make inside build after doing ""cmake"" against the source directory. . **Describe the bug**; A clear and concise description of what the bug is.; Unable to compile this file with gcc-4.9.2 and cmake 3.11.1; **To Reproduce**; Steps and data to reproduce the behavior:; Following steps as specified in guide. Assigning prefix to point to different installation directory and have tried passing in boost location and telling cmake to fetch boost but both result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalcul",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:393,Usability,guid,guide,393,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Running make inside build after doing ""cmake"" against the source directory. . **Describe the bug**; A clear and concise description of what the bug is.; Unable to compile this file with gcc-4.9.2 and cmake 3.11.1; **To Reproduce**; Steps and data to reproduce the behavior:; Following steps as specified in guide. Assigning prefix to point to different installation directory and have tried passing in boost location and telling cmake to fetch boost but both result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalcul",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/296:49947,Usability,clear,clear,49947,"nt; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2`. * Which version of salmon was used?; Salmon 0.3.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Cloned from git as latest source and attempted to cmake + make && make install . **Expected behavior**; A clear and concise description of what you expected to happen.; Expecting the makefile to use c++14 correctly to process the ""auto p"" variable the way it is intended within the template functions. See SalmonQuantify.cpp:1964 with errors regarding ""p was not declared in this scope"". . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Centos 7 ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296
https://github.com/COMBINE-lab/salmon/issues/302:306,Availability,echo,echo,306,"Hello, . While running the quantifications of my samples while quasi-mapping, the resulting created quant folders remain empty following the shell script is done running. An example of this would be from the ""Getting Started"" tab: . #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 -o quants/${samp}_quant; done . Once this is done, the created folders are empty, whereas I would expect them to continue to quant files. Of note, I do sometimes get complete quantification of one or two samples (again, referring to the A.thaliana example used in the ""Getting Started"" tab. My, albeit limited, experience might suggest that my case might be a matter of number of threads used/made available. I would appreciate any feed back/confirmation on this. As a reference, I was initially running this on a quad core (3.1 GHz Intel Core i7) MacBook Pro. Thank you for taking the time to consider this, most likely, simple issue",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/302
https://github.com/COMBINE-lab/salmon/issues/302:841,Availability,avail,available,841,"Hello, . While running the quantifications of my samples while quasi-mapping, the resulting created quant folders remain empty following the shell script is done running. An example of this would be from the ""Getting Started"" tab: . #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 -o quants/${samp}_quant; done . Once this is done, the created folders are empty, whereas I would expect them to continue to quant files. Of note, I do sometimes get complete quantification of one or two samples (again, referring to the A.thaliana example used in the ""Getting Started"" tab. My, albeit limited, experience might suggest that my case might be a matter of number of threads used/made available. I would appreciate any feed back/confirmation on this. As a reference, I was initially running this on a quad core (3.1 GHz Intel Core i7) MacBook Pro. Thank you for taking the time to consider this, most likely, simple issue",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/302
https://github.com/COMBINE-lab/salmon/issues/302:1065,Usability,simpl,simple,1065,"Hello, . While running the quantifications of my samples while quasi-mapping, the resulting created quant folders remain empty following the shell script is done running. An example of this would be from the ""Getting Started"" tab: . #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 -o quants/${samp}_quant; done . Once this is done, the created folders are empty, whereas I would expect them to continue to quant files. Of note, I do sometimes get complete quantification of one or two samples (again, referring to the A.thaliana example used in the ""Getting Started"" tab. My, albeit limited, experience might suggest that my case might be a matter of number of threads used/made available. I would appreciate any feed back/confirmation on this. As a reference, I was initially running this on a quad core (3.1 GHz Intel Core i7) MacBook Pro. Thank you for taking the time to consider this, most likely, simple issue",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/302
https://github.com/COMBINE-lab/salmon/issues/303:433,Availability,fault,fault,433,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; A clear and concise description of what the bug is. I had an older version of salmon that works (v0.8.2) that I believe was not compiled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:443,Availability,error,error,443,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; A clear and concise description of what the bug is. I had an older version of salmon that works (v0.8.2) that I believe was not compiled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:739,Availability,down,downloaded,739,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; A clear and concise description of what the bug is. I had an older version of salmon that works (v0.8.2) that I believe was not compiled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:1160,Availability,Down,Downloads,1160," and concise description of what the bug is. I had an older version of salmon that works (v0.8.2) that I believe was not compiled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:1600,Availability,Down,Downloads,1600,"s would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Com",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:2822,Availability,fault,fault,2822,"/salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS X; ProductVersion:	10.11.3; BuildVersion:	15D21. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:718,Deployability,install,installed,718,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; A clear and concise description of what the bug is. I had an older version of salmon that works (v0.8.2) that I believe was not compiled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:1259,Deployability,upgrade,upgrade,1259,"piled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:1311,Deployability,upgrade,upgrades,1311,"a and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:2067,Performance,Load,Loading,2067," quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:2134,Performance,Load,Loading,2134,"181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS X; ProductVersion:	10.11.3; BuildVersion:	15D21. **Additional conte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:2199,Performance,Load,Loading,2199,"/salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS X; ProductVersion:	10.11.3; BuildVersion:	15D21. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:2272,Performance,Load,Loading,2272,"/salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS X; ProductVersion:	10.11.3; BuildVersion:	15D21. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:2343,Performance,Load,Loading,2343,"/salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS X; ProductVersion:	10.11.3; BuildVersion:	15D21. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:2603,Performance,load,loading,2603,"/salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS X; ProductVersion:	10.11.3; BuildVersion:	15D21. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:2667,Performance,load,loading,2667,"/salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS X; ProductVersion:	10.11.3; BuildVersion:	15D21. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:2611,Security,hash,hash,2611,"/salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS X; ProductVersion:	10.11.3; BuildVersion:	15D21. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:1689,Testability,Log,Logs,1689,"s used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:1745,Testability,log,logs,1745,"loaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/303:118,Usability,clear,clear,118,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; A clear and concise description of what the bug is. I had an older version of salmon that works (v0.8.2) that I believe was not compiled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303
https://github.com/COMBINE-lab/salmon/issues/304:1884,Availability,down,downloaded,1884,"ed more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:1927,Availability,down,downloaded,1927,"ed more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:1863,Deployability,install,installed,1863,"ed more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:207,Integrability,message,message,207,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No; **Describe the bug**; Running salmon 0.11.3, quasi mode, with 192M of ram.; Salmon quasi mode aborted with following message:; processed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:934,Performance,Load,Loading,934,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No; **Describe the bug**; Running salmon 0.11.3, quasi mode, with 192M of ram.; Salmon quasi mode aborted with following message:; processed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:999,Performance,Load,Loading,999," primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No; **Describe the bug**; Running salmon 0.11.3, quasi mode, with 192M of ram.; Salmon quasi mode aborted with following message:; processed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Whi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:1072,Performance,Load,Loading,1072,"?**; No; **Describe the bug**; Running salmon 0.11.3, quasi mode, with 192M of ram.; Salmon quasi mode aborted with following message:; processed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; Al",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:1139,Performance,Load,Loading,1139,"h 192M of ram.; Salmon quasi mode aborted with following message:; processed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:1209,Performance,Load,Loading,1209,"sed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screens",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:1469,Performance,load,loading,1469,"sing a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `un",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:1660,Performance,load,loading,1660,"ed more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:184,Safety,abort,aborted,184,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No; **Describe the bug**; Running salmon 0.11.3, quasi mode, with 192M of ram.; Salmon quasi mode aborted with following message:; processed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:275,Safety,detect,detected,275,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No; **Describe the bug**; Running salmon 0.11.3, quasi mode, with 192M of ram.; Salmon quasi mode aborted with following message:; processed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:1477,Security,hash,hash,1477,"sing a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `un",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/304:2118,Usability,clear,clear,2118,"ed more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304
https://github.com/COMBINE-lab/salmon/issues/305:661,Availability,down,downstream,661,"Dear salmon team and @k3yavi,. I am an happy user of alevin on scRNAseq data (10x). In some circumstances, I have to compare samples from very uneven sequencing depth (less than 100k reads per cell vs 1M reads per cell,), which naturally produces a huge ""batch effect"", some transcripts being impossible to detect at a lower sequencing depth. For 10x datasets, cellranger offers to compensate this kind of difference across datasets by subsampling, and I should tell it works very well. I tried this strategy before running alevin, by the use of python scripts subsampling the fastq files prior any alevin quasi-mapping. However, all my attempts failed, as all downstream analyses shown that this strategy didn't correct the batch effect at all with alevin (visualization on dimension reduction/UMAP show a huge difference between batches, while the cellranger subsampling method clearly corrects it). An important point is by default, the cellranger method corrects according to the amount of mapped reads between samples. So ideally, I should have to evaluate the difference in term of mapped reads to compute a subsampling coefficient (fraction of reads to keep). What correct alevin metrics should I use to estimate such a coefficient?. Considering the probalistic approach of alevin's transcript quantification, I am wondering if it could be any better way to normalize the samples to account for this kind of issue? Also, any option to subsample the reads (take a read into account under a certain probability) during alevin quantification would be of great help in my case. Thank you for your work and your time,; Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305
https://github.com/COMBINE-lab/salmon/issues/305:307,Safety,detect,detect,307,"Dear salmon team and @k3yavi,. I am an happy user of alevin on scRNAseq data (10x). In some circumstances, I have to compare samples from very uneven sequencing depth (less than 100k reads per cell vs 1M reads per cell,), which naturally produces a huge ""batch effect"", some transcripts being impossible to detect at a lower sequencing depth. For 10x datasets, cellranger offers to compensate this kind of difference across datasets by subsampling, and I should tell it works very well. I tried this strategy before running alevin, by the use of python scripts subsampling the fastq files prior any alevin quasi-mapping. However, all my attempts failed, as all downstream analyses shown that this strategy didn't correct the batch effect at all with alevin (visualization on dimension reduction/UMAP show a huge difference between batches, while the cellranger subsampling method clearly corrects it). An important point is by default, the cellranger method corrects according to the amount of mapped reads between samples. So ideally, I should have to evaluate the difference in term of mapped reads to compute a subsampling coefficient (fraction of reads to keep). What correct alevin metrics should I use to estimate such a coefficient?. Considering the probalistic approach of alevin's transcript quantification, I am wondering if it could be any better way to normalize the samples to account for this kind of issue? Also, any option to subsample the reads (take a read into account under a certain probability) during alevin quantification would be of great help in my case. Thank you for your work and your time,; Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305
https://github.com/COMBINE-lab/salmon/issues/305:880,Usability,clear,clearly,880,"Dear salmon team and @k3yavi,. I am an happy user of alevin on scRNAseq data (10x). In some circumstances, I have to compare samples from very uneven sequencing depth (less than 100k reads per cell vs 1M reads per cell,), which naturally produces a huge ""batch effect"", some transcripts being impossible to detect at a lower sequencing depth. For 10x datasets, cellranger offers to compensate this kind of difference across datasets by subsampling, and I should tell it works very well. I tried this strategy before running alevin, by the use of python scripts subsampling the fastq files prior any alevin quasi-mapping. However, all my attempts failed, as all downstream analyses shown that this strategy didn't correct the batch effect at all with alevin (visualization on dimension reduction/UMAP show a huge difference between batches, while the cellranger subsampling method clearly corrects it). An important point is by default, the cellranger method corrects according to the amount of mapped reads between samples. So ideally, I should have to evaluate the difference in term of mapped reads to compute a subsampling coefficient (fraction of reads to keep). What correct alevin metrics should I use to estimate such a coefficient?. Considering the probalistic approach of alevin's transcript quantification, I am wondering if it could be any better way to normalize the samples to account for this kind of issue? Also, any option to subsample the reads (take a read into account under a certain probability) during alevin quantification would be of great help in my case. Thank you for your work and your time,; Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305
https://github.com/COMBINE-lab/salmon/issues/306:1749,Availability,avail,available,1749,"**tl;dr**: 3-tag sequencing methods for bulk RNA samples contain known sample indices and UMIs and thus resembles sc-RNA-seq read formats. Do you have a recommendation on how to use Salmon and / or Alevin to quantify gene expression for this data type?. Congratulations on the recent [alevin preprint](https://www.biorxiv.org/content/early/2018/10/24/335000)! The new algorithm to deduplicate UMIs looks awesome. I am wondering if you had a recommendation on how to leverage it for 3' tag sequencing of bulk samples. There are a number of protocols that focus on the 3' ends of transcripts to allow for cheap quantification of gene expression, e.g. - [BRB-seq](https://www.biorxiv.org/content/early/2018/01/30/256594); - [Drug-seq](https://www.nature.com/articles/s41467-018-06500-x); - [Quant-seq](https://www.lexogen.com/quantseq-3mrna-sequencing/). These methods combine conventional (known) sample-indices to label samples (or wells) with unique molecular identifiers (UMIs). (I found [one question on this topic](https://github.com/COMBINE-lab/salmon/issues/108) in the salmon issue tracker from back in 2016). Here is the Drug-seq approach, for example:. ![Drug-seq](https://media.springernature.com/lw900/springer-static/image/art%3A10.1038%2Fs41467-018-06500-x/MediaObjects/41467_2018_6500_Fig1_HTML.png). The resulting read data resembles that of single-cell approaches and requires deduplication of UMIs and quantification based on reads with a strong 3' bias. It seems analysis of this data could benefit a lot from the algorithms implemented in Alevin. Can this data be analyzed with Salmon and / or Alevin? Are there any pitfalls that I should be aware off?. Many thanks for any feedback - and thanks again for making these great tools available to the community.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306
https://github.com/COMBINE-lab/salmon/issues/306:539,Integrability,protocol,protocols,539,"**tl;dr**: 3-tag sequencing methods for bulk RNA samples contain known sample indices and UMIs and thus resembles sc-RNA-seq read formats. Do you have a recommendation on how to use Salmon and / or Alevin to quantify gene expression for this data type?. Congratulations on the recent [alevin preprint](https://www.biorxiv.org/content/early/2018/10/24/335000)! The new algorithm to deduplicate UMIs looks awesome. I am wondering if you had a recommendation on how to leverage it for 3' tag sequencing of bulk samples. There are a number of protocols that focus on the 3' ends of transcripts to allow for cheap quantification of gene expression, e.g. - [BRB-seq](https://www.biorxiv.org/content/early/2018/01/30/256594); - [Drug-seq](https://www.nature.com/articles/s41467-018-06500-x); - [Quant-seq](https://www.lexogen.com/quantseq-3mrna-sequencing/). These methods combine conventional (known) sample-indices to label samples (or wells) with unique molecular identifiers (UMIs). (I found [one question on this topic](https://github.com/COMBINE-lab/salmon/issues/108) in the salmon issue tracker from back in 2016). Here is the Drug-seq approach, for example:. ![Drug-seq](https://media.springernature.com/lw900/springer-static/image/art%3A10.1038%2Fs41467-018-06500-x/MediaObjects/41467_2018_6500_Fig1_HTML.png). The resulting read data resembles that of single-cell approaches and requires deduplication of UMIs and quantification based on reads with a strong 3' bias. It seems analysis of this data could benefit a lot from the algorithms implemented in Alevin. Can this data be analyzed with Salmon and / or Alevin? Are there any pitfalls that I should be aware off?. Many thanks for any feedback - and thanks again for making these great tools available to the community.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306
https://github.com/COMBINE-lab/salmon/issues/306:1692,Usability,feedback,feedback,1692,"**tl;dr**: 3-tag sequencing methods for bulk RNA samples contain known sample indices and UMIs and thus resembles sc-RNA-seq read formats. Do you have a recommendation on how to use Salmon and / or Alevin to quantify gene expression for this data type?. Congratulations on the recent [alevin preprint](https://www.biorxiv.org/content/early/2018/10/24/335000)! The new algorithm to deduplicate UMIs looks awesome. I am wondering if you had a recommendation on how to leverage it for 3' tag sequencing of bulk samples. There are a number of protocols that focus on the 3' ends of transcripts to allow for cheap quantification of gene expression, e.g. - [BRB-seq](https://www.biorxiv.org/content/early/2018/01/30/256594); - [Drug-seq](https://www.nature.com/articles/s41467-018-06500-x); - [Quant-seq](https://www.lexogen.com/quantseq-3mrna-sequencing/). These methods combine conventional (known) sample-indices to label samples (or wells) with unique molecular identifiers (UMIs). (I found [one question on this topic](https://github.com/COMBINE-lab/salmon/issues/108) in the salmon issue tracker from back in 2016). Here is the Drug-seq approach, for example:. ![Drug-seq](https://media.springernature.com/lw900/springer-static/image/art%3A10.1038%2Fs41467-018-06500-x/MediaObjects/41467_2018_6500_Fig1_HTML.png). The resulting read data resembles that of single-cell approaches and requires deduplication of UMIs and quantification based on reads with a strong 3' bias. It seems analysis of this data could benefit a lot from the algorithms implemented in Alevin. Can this data be analyzed with Salmon and / or Alevin? Are there any pitfalls that I should be aware off?. Many thanks for any feedback - and thanks again for making these great tools available to the community.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306
https://github.com/COMBINE-lab/salmon/issues/307:528,Availability,avail,available,528,"I saw there was an earlier issue that discussed PCR duplicate removal (https://github.com/COMBINE-lab/salmon/issues/136). I am specifically curious about this response:. > We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags. I am wondering if the functionality was ever added. I am not interested in removing duplicates, but it would be nice to see their estimated levels as a QC measure. Is this information available somewhere? If not, maybe there is some other related metric?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/307
https://github.com/COMBINE-lab/salmon/issues/307:291,Modifiability,extend,extended,291,"I saw there was an earlier issue that discussed PCR duplicate removal (https://github.com/COMBINE-lab/salmon/issues/136). I am specifically curious about this response:. > We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags. I am wondering if the functionality was ever added. I am not interested in removing duplicates, but it would be nice to see their estimated levels as a QC measure. Is this information available somewhere? If not, maybe there is some other related metric?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/307
https://github.com/COMBINE-lab/salmon/issues/308:1034,Availability,avail,available,1034,"`bioconda` but ... ```; $ conda search salmon; Loading channels: done; # Name Version Build Channel; salmon 0.5.1 0 bioconda; salmon 0.6.0 0 bioconda; salmon 0.6.0 1 bioconda; salmon 0.6.0 boost1.60_1 bioconda; salmon 0.6.0 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_3 bioconda; salmon 0.7.2 boost1.61_3 bioconda; salmon 0.8.0 boost1.60_0 bioconda; salmon 0.8.0 boost1.61_0 bioconda; salmon 0.8.1 0 bioconda; salmon 0.8.2 0 bioconda; salmon 0.8.2 1 bioconda; salmon 0.9.0 0 bioconda; salmon 0.9.1 0 bioconda; salmon 0.9.1 1 bioconda; salmon 0.10.0 1 bioconda; salmon 0.10.1 1 bioconda; salmon 0.10.2 1 bioconda; salmon 0.11.0 h445c947_0 bioconda; salmon 0.11.1 h445c947_0 bioconda; salmon 0.11.2 h445c947_0 bioconda; salmon 0.11.3 h86b0361_1 bioconda; salmon 0.11.3 h86b0361_2 bioconda; ```. When I try to install, I get `PackageNotFoundError`.; ```; $ conda create -n salmon salmon=0.11.3; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon=0.11.3; - jemalloc[version='>=5.1.0']; - salmon=0.11.3; - libcxx. Current channels:. - https://conda.anaconda.org/bioconda/linux-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/linux-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/linux-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/linux-64; - https://repo.anaconda.com/pkgs/pro/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. It is weird because I am installing on `linux64`.; ```; $ lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-n",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308
https://github.com/COMBINE-lab/salmon/issues/308:866,Deployability,install,install,866,"`salmon` is found from `bioconda` but ... ```; $ conda search salmon; Loading channels: done; # Name Version Build Channel; salmon 0.5.1 0 bioconda; salmon 0.6.0 0 bioconda; salmon 0.6.0 1 bioconda; salmon 0.6.0 boost1.60_1 bioconda; salmon 0.6.0 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_3 bioconda; salmon 0.7.2 boost1.61_3 bioconda; salmon 0.8.0 boost1.60_0 bioconda; salmon 0.8.0 boost1.61_0 bioconda; salmon 0.8.1 0 bioconda; salmon 0.8.2 0 bioconda; salmon 0.8.2 1 bioconda; salmon 0.9.0 0 bioconda; salmon 0.9.1 0 bioconda; salmon 0.9.1 1 bioconda; salmon 0.10.0 1 bioconda; salmon 0.10.1 1 bioconda; salmon 0.10.2 1 bioconda; salmon 0.11.0 h445c947_0 bioconda; salmon 0.11.1 h445c947_0 bioconda; salmon 0.11.2 h445c947_0 bioconda; salmon 0.11.3 h86b0361_1 bioconda; salmon 0.11.3 h86b0361_2 bioconda; ```. When I try to install, I get `PackageNotFoundError`.; ```; $ conda create -n salmon salmon=0.11.3; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon=0.11.3; - jemalloc[version='>=5.1.0']; - salmon=0.11.3; - libcxx. Current channels:. - https://conda.anaconda.org/bioconda/linux-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/linux-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/linux-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/linux-64; - https://repo.anaconda.com/pkgs/pro/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. It is weird because I am installing on `linux64`.; ```; $ lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308
https://github.com/COMBINE-lab/salmon/issues/308:1826,Deployability,install,installing,1826,"nda; salmon 0.6.0 1 bioconda; salmon 0.6.0 boost1.60_1 bioconda; salmon 0.6.0 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_3 bioconda; salmon 0.7.2 boost1.61_3 bioconda; salmon 0.8.0 boost1.60_0 bioconda; salmon 0.8.0 boost1.61_0 bioconda; salmon 0.8.1 0 bioconda; salmon 0.8.2 0 bioconda; salmon 0.8.2 1 bioconda; salmon 0.9.0 0 bioconda; salmon 0.9.1 0 bioconda; salmon 0.9.1 1 bioconda; salmon 0.10.0 1 bioconda; salmon 0.10.1 1 bioconda; salmon 0.10.2 1 bioconda; salmon 0.11.0 h445c947_0 bioconda; salmon 0.11.1 h445c947_0 bioconda; salmon 0.11.2 h445c947_0 bioconda; salmon 0.11.3 h86b0361_1 bioconda; salmon 0.11.3 h86b0361_2 bioconda; ```. When I try to install, I get `PackageNotFoundError`.; ```; $ conda create -n salmon salmon=0.11.3; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon=0.11.3; - jemalloc[version='>=5.1.0']; - salmon=0.11.3; - libcxx. Current channels:. - https://conda.anaconda.org/bioconda/linux-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/linux-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/linux-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/linux-64; - https://repo.anaconda.com/pkgs/pro/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. It is weird because I am installing on `linux64`.; ```; $ lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.5 (Final); Release:	6.5; Codename:	Final; ```; Any help would be greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308
https://github.com/COMBINE-lab/salmon/issues/308:2074,Deployability,release,release,2074,"nda; salmon 0.6.0 1 bioconda; salmon 0.6.0 boost1.60_1 bioconda; salmon 0.6.0 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_3 bioconda; salmon 0.7.2 boost1.61_3 bioconda; salmon 0.8.0 boost1.60_0 bioconda; salmon 0.8.0 boost1.61_0 bioconda; salmon 0.8.1 0 bioconda; salmon 0.8.2 0 bioconda; salmon 0.8.2 1 bioconda; salmon 0.9.0 0 bioconda; salmon 0.9.1 0 bioconda; salmon 0.9.1 1 bioconda; salmon 0.10.0 1 bioconda; salmon 0.10.1 1 bioconda; salmon 0.10.2 1 bioconda; salmon 0.11.0 h445c947_0 bioconda; salmon 0.11.1 h445c947_0 bioconda; salmon 0.11.2 h445c947_0 bioconda; salmon 0.11.3 h86b0361_1 bioconda; salmon 0.11.3 h86b0361_2 bioconda; ```. When I try to install, I get `PackageNotFoundError`.; ```; $ conda create -n salmon salmon=0.11.3; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon=0.11.3; - jemalloc[version='>=5.1.0']; - salmon=0.11.3; - libcxx. Current channels:. - https://conda.anaconda.org/bioconda/linux-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/linux-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/linux-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/linux-64; - https://repo.anaconda.com/pkgs/pro/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. It is weird because I am installing on `linux64`.; ```; $ lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.5 (Final); Release:	6.5; Codename:	Final; ```; Any help would be greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308
https://github.com/COMBINE-lab/salmon/issues/308:2095,Deployability,Release,Release,2095,"nda; salmon 0.6.0 1 bioconda; salmon 0.6.0 boost1.60_1 bioconda; salmon 0.6.0 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_3 bioconda; salmon 0.7.2 boost1.61_3 bioconda; salmon 0.8.0 boost1.60_0 bioconda; salmon 0.8.0 boost1.61_0 bioconda; salmon 0.8.1 0 bioconda; salmon 0.8.2 0 bioconda; salmon 0.8.2 1 bioconda; salmon 0.9.0 0 bioconda; salmon 0.9.1 0 bioconda; salmon 0.9.1 1 bioconda; salmon 0.10.0 1 bioconda; salmon 0.10.1 1 bioconda; salmon 0.10.2 1 bioconda; salmon 0.11.0 h445c947_0 bioconda; salmon 0.11.1 h445c947_0 bioconda; salmon 0.11.2 h445c947_0 bioconda; salmon 0.11.3 h86b0361_1 bioconda; salmon 0.11.3 h86b0361_2 bioconda; ```. When I try to install, I get `PackageNotFoundError`.; ```; $ conda create -n salmon salmon=0.11.3; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon=0.11.3; - jemalloc[version='>=5.1.0']; - salmon=0.11.3; - libcxx. Current channels:. - https://conda.anaconda.org/bioconda/linux-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/linux-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/linux-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/linux-64; - https://repo.anaconda.com/pkgs/pro/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. It is weird because I am installing on `linux64`.; ```; $ lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.5 (Final); Release:	6.5; Codename:	Final; ```; Any help would be greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308
https://github.com/COMBINE-lab/salmon/issues/308:70,Performance,Load,Loading,70,"`salmon` is found from `bioconda` but ... ```; $ conda search salmon; Loading channels: done; # Name Version Build Channel; salmon 0.5.1 0 bioconda; salmon 0.6.0 0 bioconda; salmon 0.6.0 1 bioconda; salmon 0.6.0 boost1.60_1 bioconda; salmon 0.6.0 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_3 bioconda; salmon 0.7.2 boost1.61_3 bioconda; salmon 0.8.0 boost1.60_0 bioconda; salmon 0.8.0 boost1.61_0 bioconda; salmon 0.8.1 0 bioconda; salmon 0.8.2 0 bioconda; salmon 0.8.2 1 bioconda; salmon 0.9.0 0 bioconda; salmon 0.9.1 0 bioconda; salmon 0.9.1 1 bioconda; salmon 0.10.0 1 bioconda; salmon 0.10.1 1 bioconda; salmon 0.10.2 1 bioconda; salmon 0.11.0 h445c947_0 bioconda; salmon 0.11.1 h445c947_0 bioconda; salmon 0.11.2 h445c947_0 bioconda; salmon 0.11.3 h86b0361_1 bioconda; salmon 0.11.3 h86b0361_2 bioconda; ```. When I try to install, I get `PackageNotFoundError`.; ```; $ conda create -n salmon salmon=0.11.3; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon=0.11.3; - jemalloc[version='>=5.1.0']; - salmon=0.11.3; - libcxx. Current channels:. - https://conda.anaconda.org/bioconda/linux-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/linux-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/linux-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/linux-64; - https://repo.anaconda.com/pkgs/pro/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. It is weird because I am installing on `linux64`.; ```; $ lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308
https://github.com/COMBINE-lab/salmon/issues/309:97,Availability,error,error,97,"Hello, I am trying to install this Salmon 0.11.3 from source but I am running into the following error when running make:. [ 80%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd2c): warning: the use of `tempnam' is dangerous, better use `mkstemp'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::conflicting_options(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x5318): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x53b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309
https://github.com/COMBINE-lab/salmon/issues/309:2151,Availability,error,error,2151,"ndefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. I have the following environment variables set:. INCLUDE=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; C_INDLUE_PATH=/opt/boost-1.67.0/include; LD_LIBRARY_PATH=/opt/boost-1.67.0/lib:/opt/gcc-8.2.0/lib64:/opt/gcc-8.2.0/lib/gcc/x86_64-pc-linux-gnu/8.2.0; CPLUS_INCLUDE_PATH=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; CXX=/opt/gcc-8.2.0/bin/g++; CC=/opt/gcc-8.2.0/bin/gcc. My cmake command was simply cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/salmon ../. Thanks!. -Nate",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309
https://github.com/COMBINE-lab/salmon/issues/309:2214,Availability,Error,Error,2214,"ndefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. I have the following environment variables set:. INCLUDE=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; C_INDLUE_PATH=/opt/boost-1.67.0/include; LD_LIBRARY_PATH=/opt/boost-1.67.0/lib:/opt/gcc-8.2.0/lib64:/opt/gcc-8.2.0/lib/gcc/x86_64-pc-linux-gnu/8.2.0; CPLUS_INCLUDE_PATH=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; CXX=/opt/gcc-8.2.0/bin/g++; CC=/opt/gcc-8.2.0/bin/gcc. My cmake command was simply cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/salmon ../. Thanks!. -Nate",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309
https://github.com/COMBINE-lab/salmon/issues/309:2271,Availability,Error,Error,2271,"ndefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. I have the following environment variables set:. INCLUDE=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; C_INDLUE_PATH=/opt/boost-1.67.0/include; LD_LIBRARY_PATH=/opt/boost-1.67.0/lib:/opt/gcc-8.2.0/lib64:/opt/gcc-8.2.0/lib/gcc/x86_64-pc-linux-gnu/8.2.0; CPLUS_INCLUDE_PATH=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; CXX=/opt/gcc-8.2.0/bin/g++; CC=/opt/gcc-8.2.0/bin/gcc. My cmake command was simply cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/salmon ../. Thanks!. -Nate",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309
https://github.com/COMBINE-lab/salmon/issues/309:2296,Availability,Error,Error,2296,"ndefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. I have the following environment variables set:. INCLUDE=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; C_INDLUE_PATH=/opt/boost-1.67.0/include; LD_LIBRARY_PATH=/opt/boost-1.67.0/lib:/opt/gcc-8.2.0/lib64:/opt/gcc-8.2.0/lib/gcc/x86_64-pc-linux-gnu/8.2.0; CPLUS_INCLUDE_PATH=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; CXX=/opt/gcc-8.2.0/bin/g++; CC=/opt/gcc-8.2.0/bin/gcc. My cmake command was simply cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/salmon ../. Thanks!. -Nate",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309
https://github.com/COMBINE-lab/salmon/issues/309:22,Deployability,install,install,22,"Hello, I am trying to install this Salmon 0.11.3 from source but I am running into the following error when running make:. [ 80%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd2c): warning: the use of `tempnam' is dangerous, better use `mkstemp'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::conflicting_options(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x5318): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x53b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309
https://github.com/COMBINE-lab/salmon/issues/309:179,Deployability,install,install,179,"Hello, I am trying to install this Salmon 0.11.3 from source but I am running into the following error when running make:. [ 80%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd2c): warning: the use of `tempnam' is dangerous, better use `mkstemp'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::conflicting_options(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x5318): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x53b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309
https://github.com/COMBINE-lab/salmon/issues/309:2338,Modifiability,variab,variables,2338,"ndefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. I have the following environment variables set:. INCLUDE=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; C_INDLUE_PATH=/opt/boost-1.67.0/include; LD_LIBRARY_PATH=/opt/boost-1.67.0/lib:/opt/gcc-8.2.0/lib64:/opt/gcc-8.2.0/lib/gcc/x86_64-pc-linux-gnu/8.2.0; CPLUS_INCLUDE_PATH=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; CXX=/opt/gcc-8.2.0/bin/g++; CC=/opt/gcc-8.2.0/bin/gcc. My cmake command was simply cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/salmon ../. Thanks!. -Nate",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309
https://github.com/COMBINE-lab/salmon/issues/309:2707,Usability,simpl,simply,2707,"ndefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. I have the following environment variables set:. INCLUDE=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; C_INDLUE_PATH=/opt/boost-1.67.0/include; LD_LIBRARY_PATH=/opt/boost-1.67.0/lib:/opt/gcc-8.2.0/lib64:/opt/gcc-8.2.0/lib/gcc/x86_64-pc-linux-gnu/8.2.0; CPLUS_INCLUDE_PATH=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; CXX=/opt/gcc-8.2.0/bin/g++; CC=/opt/gcc-8.2.0/bin/gcc. My cmake command was simply cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/salmon ../. Thanks!. -Nate",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309
https://github.com/COMBINE-lab/salmon/issues/310:1345,Deployability,pipeline,pipeline,1345,"annotate them in the duplicate_clusters.tsv file, so I indexed my reference with the flag --keepDuplicates.; The duplicate_clusters.tsv file is still produced but i don't mind since all the transcripts seem to be in the quant.sf file. If I've understood well from this issue https://github.com/COMBINE-lab/salmon/issues/255, the duplicate transcripts (that belongs to the same cluster obviously) should have the same expression level, am I wrong?; Unfortunately, I see some differences.; Here I'm reporting couples of genes that belong to the same cluster:; ` ENST00000434122.2	613	416.835	163.866448	3639.758`; ` ENST00000439602.6	613	416.835	163.500291	3631.625 `. ` ENST00000409379.7	4502	4305.622	0.143089	32.829 `; ` ENST00000647028.1	4502	4305.622	0.000000	0.000 `. In both cases the differences are minimal, but I wanted to be sure if it is normal to see differences.; I used tximport to calculare the ""per-gene"" expression.; I tried the same pipeline with and without the --keepDuplicates flag, and the tximport output was very different, so I checked the quant.sf file and it was different too, for one transcript without the flag i had 818.439918, the same transcript with the flag was 163.866448, since 818 is more or less 5 times 163 i presume that, by default, the total TPM has been divided by the number of duplicate transcripts (i checked in the duplicate_clusters.tsv file and in total there are 5 transcript in that cluster), am I right? does salmon work like this?; Does it explain the little differences I see in the transcript quantification?; Correct me if I'm wrong, salmon tries to assign the reads as equally as possible to every duplicate transcript, but of course if we have for example 21 reads and 4 transcript, they will have respectively 5,5,5 and 6 reads, which can explain the small differences I see. ; Is it correct?; (anyway, in this way i can explain the first two genes which have respectively a read count of 3639 and 3631, but for the last two genes a differenc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/310
https://github.com/COMBINE-lab/salmon/issues/310:2677,Deployability,pipeline,pipeline,2677,"s (i checked in the duplicate_clusters.tsv file and in total there are 5 transcript in that cluster), am I right? does salmon work like this?; Does it explain the little differences I see in the transcript quantification?; Correct me if I'm wrong, salmon tries to assign the reads as equally as possible to every duplicate transcript, but of course if we have for example 21 reads and 4 transcript, they will have respectively 5,5,5 and 6 reads, which can explain the small differences I see. ; Is it correct?; (anyway, in this way i can explain the first two genes which have respectively a read count of 3639 and 3631, but for the last two genes a difference of 32 reads sounds too big to me) . This can be a problem for me, since I belive that the issue of the duplicate transcripts derives from haplotypic genes, such as RPS18 which has more than one ENSG ID (i.e. ENSG00000226225 and ENSG00000231500). ENSG00000231500 is absent in the pipeline without the flag, while in the pipeline with the flag the expression level is ""splitted"" between the two genes (which are actually only one gene). both the results I obtain don't represent the ""reality"".; I'm afraid I will have to remove all the ""ambigous"" genes from the reference, keeping only the ones with the ""canonical"" ENSG ID; since I'm doing a ""pan-genes"" analysis, and the number of duplicate transcript is ~11,000, this can be painful...; Has anyone ever encountered a problem like this? Is someone using a reference transcriptome that is already ""clean"" from haplotypic genes? also, do the 11k duplicate genes derive only from haplytipic genes, or there are other strange biological things that I am not considering?. Last question (which is not about duplicate transcript but about tximport...tell me if it is off topic and i will ask elsewhere); For the gene ENSG00000231500.6, tximport reports an expression of 164.677488, while the sum of the TPM of the transcript of that gene is 163.659568 (a very small difference, but still a differ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/310
https://github.com/COMBINE-lab/salmon/issues/310:2717,Deployability,pipeline,pipeline,2717,"s (i checked in the duplicate_clusters.tsv file and in total there are 5 transcript in that cluster), am I right? does salmon work like this?; Does it explain the little differences I see in the transcript quantification?; Correct me if I'm wrong, salmon tries to assign the reads as equally as possible to every duplicate transcript, but of course if we have for example 21 reads and 4 transcript, they will have respectively 5,5,5 and 6 reads, which can explain the small differences I see. ; Is it correct?; (anyway, in this way i can explain the first two genes which have respectively a read count of 3639 and 3631, but for the last two genes a difference of 32 reads sounds too big to me) . This can be a problem for me, since I belive that the issue of the duplicate transcripts derives from haplotypic genes, such as RPS18 which has more than one ENSG ID (i.e. ENSG00000226225 and ENSG00000231500). ENSG00000231500 is absent in the pipeline without the flag, while in the pipeline with the flag the expression level is ""splitted"" between the two genes (which are actually only one gene). both the results I obtain don't represent the ""reality"".; I'm afraid I will have to remove all the ""ambigous"" genes from the reference, keeping only the ones with the ""canonical"" ENSG ID; since I'm doing a ""pan-genes"" analysis, and the number of duplicate transcript is ~11,000, this can be painful...; Has anyone ever encountered a problem like this? Is someone using a reference transcriptome that is already ""clean"" from haplotypic genes? also, do the 11k duplicate genes derive only from haplytipic genes, or there are other strange biological things that I am not considering?. Last question (which is not about duplicate transcript but about tximport...tell me if it is off topic and i will ask elsewhere); For the gene ENSG00000231500.6, tximport reports an expression of 164.677488, while the sum of the TPM of the transcript of that gene is 163.659568 (a very small difference, but still a differ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/310
https://github.com/COMBINE-lab/salmon/issues/310:3914,Usability,clear,clear,3914,"lmon tries to assign the reads as equally as possible to every duplicate transcript, but of course if we have for example 21 reads and 4 transcript, they will have respectively 5,5,5 and 6 reads, which can explain the small differences I see. ; Is it correct?; (anyway, in this way i can explain the first two genes which have respectively a read count of 3639 and 3631, but for the last two genes a difference of 32 reads sounds too big to me) . This can be a problem for me, since I belive that the issue of the duplicate transcripts derives from haplotypic genes, such as RPS18 which has more than one ENSG ID (i.e. ENSG00000226225 and ENSG00000231500). ENSG00000231500 is absent in the pipeline without the flag, while in the pipeline with the flag the expression level is ""splitted"" between the two genes (which are actually only one gene). both the results I obtain don't represent the ""reality"".; I'm afraid I will have to remove all the ""ambigous"" genes from the reference, keeping only the ones with the ""canonical"" ENSG ID; since I'm doing a ""pan-genes"" analysis, and the number of duplicate transcript is ~11,000, this can be painful...; Has anyone ever encountered a problem like this? Is someone using a reference transcriptome that is already ""clean"" from haplotypic genes? also, do the 11k duplicate genes derive only from haplytipic genes, or there are other strange biological things that I am not considering?. Last question (which is not about duplicate transcript but about tximport...tell me if it is off topic and i will ask elsewhere); For the gene ENSG00000231500.6, tximport reports an expression of 164.677488, while the sum of the TPM of the transcript of that gene is 163.659568 (a very small difference, but still a difference); I checked the tx2gene ""dictionary"" I used in tximport and it seems ok (i.e. there aren't other transcripts belonging to that gene).; Is this normal?. Hope everything is clear.; Thank you very much in advance, and sorry for the very long post.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/310
https://github.com/COMBINE-lab/salmon/issues/313:326,Integrability,depend,depend,326,"I was wondering: when using options --seqBias, --gcBias, and/or --posBias with several fastq files generated from different flowcells (but same sample and library, i.e. technical replicates), is it better (in terms of the different model assumptions) to process the fastq files independently (because the estimated parameters depend on the flowcell) or to use the space-separated ""trick"" (because there is more data to estimate the parameters from)?; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/313
https://github.com/COMBINE-lab/salmon/pull/314:157,Availability,down,down,157,"Hello,. I noticed a small typo in the documentation for one of the command line options. I haven't used .rst files before, but I believe I was able to track down the source of the typo. Thanks for your work on salmon. Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/314
https://github.com/COMBINE-lab/salmon/issues/315:678,Availability,Error,Errors,678,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:770,Availability,Error,Error,770,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:11,Deployability,install,installed,11,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:112,Deployability,install,install,112,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:153,Testability,test,test,153,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:295,Testability,test,tests,295,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:305,Testability,Test,Test,305,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:383,Testability,Test,Test,383,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:483,Testability,Test,Test,483,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:548,Testability,test,tests,548,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:564,Testability,test,tests,564,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:593,Testability,Test,Test,593,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:636,Testability,test,tests,636,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:739,Testability,test,test,739,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:764,Testability,test,test,764,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/315:881,Testability,test,test,881,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315
https://github.com/COMBINE-lab/salmon/issues/317:155,Availability,fault,fault,155,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. **To Reproduce**. * Which version of salmon was used?. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. * How was salmon installed (compiled, downloaded executable, through bioconda)?. bioconda. * Which reference (e.g. transcriptome) was used?. To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. * Which read files were used?. See above. * Which which program options were used?. I used the bash script from ; https://combine-lab.github.io/salmon/getting_started/. **Expected behavior**. I expected an output indicating successful quantification. **Screenshots**. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:399,Availability,down,downloaded,399,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. **To Reproduce**. * Which version of salmon was used?. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. * How was salmon installed (compiled, downloaded executable, through bioconda)?. bioconda. * Which reference (e.g. transcriptome) was used?. To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. * Which read files were used?. See above. * Which which program options were used?. I used the bash script from ; https://combine-lab.github.io/salmon/getting_started/. **Expected behavior**. I expected an output indicating successful quantification. **Screenshots**. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:2613,Availability,fault,fault,2613,"6125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:378,Deployability,install,installed,378,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. **To Reproduce**. * Which version of salmon was used?. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. * How was salmon installed (compiled, downloaded executable, through bioconda)?. bioconda. * Which reference (e.g. transcriptome) was used?. To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. * Which read files were used?. See above. * Which which program options were used?. I used the bash script from ; https://combine-lab.github.io/salmon/getting_started/. **Expected behavior**. I expected an output indicating successful quantification. **Screenshots**. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:1196,Deployability,upgrade,upgrade,1196," salmon tutorial on the provided arabidopsis data set. **To Reproduce**. * Which version of salmon was used?. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. * How was salmon installed (compiled, downloaded executable, through bioconda)?. bioconda. * Which reference (e.g. transcriptome) was used?. To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. * Which read files were used?. See above. * Which which program options were used?. I used the bash script from ; https://combine-lab.github.io/salmon/getting_started/. **Expected behavior**. I expected an output indicating successful quantification. **Screenshots**. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:1248,Deployability,upgrade,upgrades,1248,"h version of salmon was used?. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. * How was salmon installed (compiled, downloaded executable, through bioconda)?. bioconda. * Which reference (e.g. transcriptome) was used?. To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. * Which read files were used?. See above. * Which which program options were used?. I used the bash script from ; https://combine-lab.github.io/salmon/getting_started/. **Expected behavior**. I expected an output indicating successful quantification. **Screenshots**. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:2016,Performance,Load,Loading,2016,"s the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should ha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:2081,Performance,Load,Loading,2081,"torial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are prec",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:2154,Performance,Load,Loading,2154,"6125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:2222,Performance,Load,Loading,2222,"6125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:2293,Performance,Load,Loading,2293,"6125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:2552,Performance,load,loading,2552,"6125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:2560,Security,hash,hash,2560,"6125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:1648,Testability,Log,Logs,1648,"es where the data come from and how I invoked salmon. * Which read files were used?. See above. * Which which program options were used?. I used the bash script from ; https://combine-lab.github.io/salmon/getting_started/. **Expected behavior**. I expected an output indicating successful quantification. **Screenshots**. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/317:1695,Testability,log,logs,1695,"es where the data come from and how I invoked salmon. * Which read files were used?. See above. * Which which program options were used?. I used the bash script from ; https://combine-lab.github.io/salmon/getting_started/. **Expected behavior**. I expected an output indicating successful quantification. **Screenshots**. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317
https://github.com/COMBINE-lab/salmon/issues/318:222,Availability,fault,fault,222,"Apologies for the previous empty post. I think I know how to do this now!. Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?. salmon. Describe the bug; I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. To Reproduce. Which version of salmon was used?; salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda. Which reference (e.g. transcriptome) was used?; To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. Which read files were used?; See above. Which which program options were used?; I used the bash script from; https://combine-lab.github.io/salmon/getting_started/. Expected behavior. I expected an output indicating successful quantification. Screenshots. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.87",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:458,Availability,down,downloaded,458,"Apologies for the previous empty post. I think I know how to do this now!. Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?. salmon. Describe the bug; I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. To Reproduce. Which version of salmon was used?; salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda. Which reference (e.g. transcriptome) was used?; To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. Which read files were used?; See above. Which which program options were used?; I used the bash script from; https://combine-lab.github.io/salmon/getting_started/. Expected behavior. I expected an output indicating successful quantification. Screenshots. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.87",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:2617,Availability,fault,fault,2617,"sh quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. Desktop (please complete the following information):. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. Additional context; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:437,Deployability,install,installed,437,"Apologies for the previous empty post. I think I know how to do this now!. Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?. salmon. Describe the bug; I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. To Reproduce. Which version of salmon was used?; salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda. Which reference (e.g. transcriptome) was used?; To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. Which read files were used?; See above. Which which program options were used?; I used the bash script from; https://combine-lab.github.io/salmon/getting_started/. Expected behavior. I expected an output indicating successful quantification. Screenshots. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.87",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:1240,Deployability,upgrade,upgrade,1240," 11 when running on the salmon tutorial on the provided arabidopsis data set. To Reproduce. Which version of salmon was used?; salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda. Which reference (e.g. transcriptome) was used?; To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. Which read files were used?; See above. Which which program options were used?; I used the bash script from; https://combine-lab.github.io/salmon/getting_started/. Expected behavior. I expected an output indicating successful quantification. Screenshots. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] L",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:1292,Deployability,upgrade,upgrades,1292,"o Reproduce. Which version of salmon was used?; salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda. Which reference (e.g. transcriptome) was used?; To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. Which read files were used?; See above. Which which program options were used?; I used the bash script from; https://combine-lab.github.io/salmon/getting_started/. Expected behavior. I expected an output indicating successful quantification. Screenshots. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Ra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:2022,Performance,Load,Loading,2022,"ut how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. Desktop (please complete the following information):. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. Additional context; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:2087,Performance,Load,Loading,2087,"ow.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. Desktop (please complete the following information):. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. Additional context; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:2160,Performance,Load,Loading,2160,"sh quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. Desktop (please complete the following information):. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. Additional context; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:2227,Performance,Load,Loading,2227,"sh quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. Desktop (please complete the following information):. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. Additional context; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:2297,Performance,Load,Loading,2297,"sh quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. Desktop (please complete the following information):. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. Additional context; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:2556,Performance,load,loading,2556,"sh quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. Desktop (please complete the following information):. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. Additional context; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:2564,Security,hash,hash,2564,"sh quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. Desktop (please complete the following information):. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. Additional context; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:1654,Testability,Log,Logs,1654,"github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. Which read files were used?; See above. Which which program options were used?; I used the bash script from; https://combine-lab.github.io/salmon/getting_started/. Expected behavior. I expected an output indicating successful quantification. Screenshots. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/318:1701,Testability,log,logs,1701,"github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. Which read files were used?; See above. Which which program options were used?; I used the bash script from; https://combine-lab.github.io/salmon/getting_started/. Expected behavior. I expected an output indicating successful quantification. Screenshots. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318
https://github.com/COMBINE-lab/salmon/issues/319:430,Availability,down,downloaded,430,"Hello everybody, . I've checked the google group, but it seems pretty deserted. I'm new to Salmon, but I do need to process a lot of experiments on my cluster, and it keeps overwhelming the I/O (and if I don't, the process would take much longer than I can wait - order of years). . So, I've had two questions: ; - can Salmon use SRA files directly? I.e. in hisat2 they implemented NGS sdk from NCBI and if you have your SRA file downloaded, you can read it same as you'd read fastq or fastq.gz. ; - can Salmon batch-process RNA-seq experiments? The goal is to not read the index every time - e.g. you've loaded the human transcriptome index into memory once, and then processed 100 files or so. . Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/319
https://github.com/COMBINE-lab/salmon/issues/319:605,Performance,load,loaded,605,"Hello everybody, . I've checked the google group, but it seems pretty deserted. I'm new to Salmon, but I do need to process a lot of experiments on my cluster, and it keeps overwhelming the I/O (and if I don't, the process would take much longer than I can wait - order of years). . So, I've had two questions: ; - can Salmon use SRA files directly? I.e. in hisat2 they implemented NGS sdk from NCBI and if you have your SRA file downloaded, you can read it same as you'd read fastq or fastq.gz. ; - can Salmon batch-process RNA-seq experiments? The goal is to not read the index every time - e.g. you've loaded the human transcriptome index into memory once, and then processed 100 files or so. . Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/319
https://github.com/COMBINE-lab/salmon/issues/320:362,Availability,down,downloaded,362,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320
https://github.com/COMBINE-lab/salmon/issues/320:341,Deployability,install,installed,341,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320
https://github.com/COMBINE-lab/salmon/issues/320:110,Usability,clear,clear,110,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320
https://github.com/COMBINE-lab/salmon/issues/320:553,Usability,clear,clear,553,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320
https://github.com/COMBINE-lab/salmon/issues/321:47,Availability,ERROR,ERROR,47,"Seeing lots of these - any ideas? v0.9.1. ```; ERROR [processor_job: 399381] [pipeline_applied: SALMON] [no_retry: False] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/MUS_MUSCULUS/short }; ### [ mates1 ] => { /home/user/data_store/processor_job_399381/ERR1680104_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_399381/ERR1680104_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_399381/ERR1680104_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_399381/ERR1680104_output/logs; [2018-11-28 17:08:09.121] [jointLog] [info] parsing read library format; [2018-11-28 17:08:09.121] [jointLog] [info] There is 1 library.; [2018-11-28 17:08:09.165] [stderrLog] [info] Loading Suffix Array; [2018-11-28 17:08:09.165] [jointLog] [info] Loading Quasi index; [2018-11-28 17:08:09.165] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.]: Processor job failed!; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321
https://github.com/COMBINE-lab/salmon/issues/321:1045,Performance,Load,Loading,1045,"Seeing lots of these - any ideas? v0.9.1. ```; ERROR [processor_job: 399381] [pipeline_applied: SALMON] [no_retry: False] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/MUS_MUSCULUS/short }; ### [ mates1 ] => { /home/user/data_store/processor_job_399381/ERR1680104_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_399381/ERR1680104_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_399381/ERR1680104_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_399381/ERR1680104_output/logs; [2018-11-28 17:08:09.121] [jointLog] [info] parsing read library format; [2018-11-28 17:08:09.121] [jointLog] [info] There is 1 library.; [2018-11-28 17:08:09.165] [stderrLog] [info] Loading Suffix Array; [2018-11-28 17:08:09.165] [jointLog] [info] Loading Quasi index; [2018-11-28 17:08:09.165] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.]: Processor job failed!; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321
https://github.com/COMBINE-lab/salmon/issues/321:1111,Performance,Load,Loading,1111,"Seeing lots of these - any ideas? v0.9.1. ```; ERROR [processor_job: 399381] [pipeline_applied: SALMON] [no_retry: False] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/MUS_MUSCULUS/short }; ### [ mates1 ] => { /home/user/data_store/processor_job_399381/ERR1680104_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_399381/ERR1680104_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_399381/ERR1680104_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_399381/ERR1680104_output/logs; [2018-11-28 17:08:09.121] [jointLog] [info] parsing read library format; [2018-11-28 17:08:09.121] [jointLog] [info] There is 1 library.; [2018-11-28 17:08:09.165] [stderrLog] [info] Loading Suffix Array; [2018-11-28 17:08:09.165] [jointLog] [info] Loading Quasi index; [2018-11-28 17:08:09.165] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.]: Processor job failed!; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321
https://github.com/COMBINE-lab/salmon/issues/321:1176,Performance,Load,Loading,1176,"Seeing lots of these - any ideas? v0.9.1. ```; ERROR [processor_job: 399381] [pipeline_applied: SALMON] [no_retry: False] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/MUS_MUSCULUS/short }; ### [ mates1 ] => { /home/user/data_store/processor_job_399381/ERR1680104_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_399381/ERR1680104_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_399381/ERR1680104_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_399381/ERR1680104_output/logs; [2018-11-28 17:08:09.121] [jointLog] [info] parsing read library format; [2018-11-28 17:08:09.121] [jointLog] [info] There is 1 library.; [2018-11-28 17:08:09.165] [stderrLog] [info] Loading Suffix Array; [2018-11-28 17:08:09.165] [jointLog] [info] Loading Quasi index; [2018-11-28 17:08:09.165] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.]: Processor job failed!; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321
https://github.com/COMBINE-lab/salmon/issues/321:771,Testability,Log,Logs,771,"Seeing lots of these - any ideas? v0.9.1. ```; ERROR [processor_job: 399381] [pipeline_applied: SALMON] [no_retry: False] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/MUS_MUSCULUS/short }; ### [ mates1 ] => { /home/user/data_store/processor_job_399381/ERR1680104_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_399381/ERR1680104_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_399381/ERR1680104_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_399381/ERR1680104_output/logs; [2018-11-28 17:08:09.121] [jointLog] [info] parsing read library format; [2018-11-28 17:08:09.121] [jointLog] [info] There is 1 library.; [2018-11-28 17:08:09.165] [stderrLog] [info] Loading Suffix Array; [2018-11-28 17:08:09.165] [jointLog] [info] Loading Quasi index; [2018-11-28 17:08:09.165] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.]: Processor job failed!; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321
https://github.com/COMBINE-lab/salmon/issues/321:856,Testability,log,logs,856,"Seeing lots of these - any ideas? v0.9.1. ```; ERROR [processor_job: 399381] [pipeline_applied: SALMON] [no_retry: False] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/MUS_MUSCULUS/short }; ### [ mates1 ] => { /home/user/data_store/processor_job_399381/ERR1680104_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_399381/ERR1680104_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_399381/ERR1680104_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_399381/ERR1680104_output/logs; [2018-11-28 17:08:09.121] [jointLog] [info] parsing read library format; [2018-11-28 17:08:09.121] [jointLog] [info] There is 1 library.; [2018-11-28 17:08:09.165] [stderrLog] [info] Loading Suffix Array; [2018-11-28 17:08:09.165] [jointLog] [info] Loading Quasi index; [2018-11-28 17:08:09.165] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.]: Processor job failed!; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321
https://github.com/COMBINE-lab/salmon/issues/322:102,Availability,ERROR,ERROR,102,"Salmon 0.9.1. ```; 2018-11-28 17:07:26,833 i-0656458112d739fa6 data_refinery_workers.processors.utils ERROR [failure_reason: Shell call to salmon failed because: ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_408895/SRR4051017_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_408895/SRR4051017_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_408895/SRR4051017_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_408895/SRR4051017_output/logs; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Is this a ""working"" sample that just fails because of a problem with the logger?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322
https://github.com/COMBINE-lab/salmon/issues/322:910,Availability,failure,failure,910,"Salmon 0.9.1. ```; 2018-11-28 17:07:26,833 i-0656458112d739fa6 data_refinery_workers.processors.utils ERROR [failure_reason: Shell call to salmon failed because: ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_408895/SRR4051017_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_408895/SRR4051017_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_408895/SRR4051017_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_408895/SRR4051017_output/logs; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Is this a ""working"" sample that just fails because of a problem with the logger?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322
https://github.com/COMBINE-lab/salmon/issues/322:777,Testability,Log,Logs,777,"Salmon 0.9.1. ```; 2018-11-28 17:07:26,833 i-0656458112d739fa6 data_refinery_workers.processors.utils ERROR [failure_reason: Shell call to salmon failed because: ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_408895/SRR4051017_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_408895/SRR4051017_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_408895/SRR4051017_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_408895/SRR4051017_output/logs; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Is this a ""working"" sample that just fails because of a problem with the logger?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322
https://github.com/COMBINE-lab/salmon/issues/322:862,Testability,log,logs,862,"Salmon 0.9.1. ```; 2018-11-28 17:07:26,833 i-0656458112d739fa6 data_refinery_workers.processors.utils ERROR [failure_reason: Shell call to salmon failed because: ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_408895/SRR4051017_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_408895/SRR4051017_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_408895/SRR4051017_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_408895/SRR4051017_output/logs; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Is this a ""working"" sample that just fails because of a problem with the logger?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322
https://github.com/COMBINE-lab/salmon/issues/322:900,Testability,assert,assertion,900,"Salmon 0.9.1. ```; 2018-11-28 17:07:26,833 i-0656458112d739fa6 data_refinery_workers.processors.utils ERROR [failure_reason: Shell call to salmon failed because: ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_408895/SRR4051017_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_408895/SRR4051017_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_408895/SRR4051017_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_408895/SRR4051017_output/logs; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Is this a ""working"" sample that just fails because of a problem with the logger?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322
https://github.com/COMBINE-lab/salmon/issues/322:1106,Testability,log,logger,1106,"Salmon 0.9.1. ```; 2018-11-28 17:07:26,833 i-0656458112d739fa6 data_refinery_workers.processors.utils ERROR [failure_reason: Shell call to salmon failed because: ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_408895/SRR4051017_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_408895/SRR4051017_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_408895/SRR4051017_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_408895/SRR4051017_output/logs; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Is this a ""working"" sample that just fails because of a problem with the logger?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322
https://github.com/COMBINE-lab/salmon/issues/323:327,Availability,fault,fault,327,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. I am using a version that was compiled in Trinity; module load conda/trinity-2.8.4; source activate trinity-2.8.4; salmon --version salmon 0.11.3. **Describe the bug**. @RG lines are at odds with binary encoded reference data ; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. salmon quant -t Cp_cds.fa -l ISR -a SB1.bam -o salmon_SB1. **Summary** ; I mapped the reads to a de novo transcriptome assembly using BWA-mem. I then use Salmon to get counts for RNAseq analysis using the alignment based mode. This has worked well for the nine previous samples, but the last 3 samples throw the error above (different species and reference transcriptome assembly). Maybe a problem with the bam file? If no not sure how the read groups etc, could be a problem unless there is a problem with the fastq files. But they came from the same run/machine/lane (Illumina NextSeq 500) as six other samples that have not caused problems.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323
https://github.com/COMBINE-lab/salmon/issues/323:707,Availability,error,error,707,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. I am using a version that was compiled in Trinity; module load conda/trinity-2.8.4; source activate trinity-2.8.4; salmon --version salmon 0.11.3. **Describe the bug**. @RG lines are at odds with binary encoded reference data ; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. salmon quant -t Cp_cds.fa -l ISR -a SB1.bam -o salmon_SB1. **Summary** ; I mapped the reads to a de novo transcriptome assembly using BWA-mem. I then use Salmon to get counts for RNAseq analysis using the alignment based mode. This has worked well for the nine previous samples, but the last 3 samples throw the error above (different species and reference transcriptome assembly). Maybe a problem with the bam file? If no not sure how the read groups etc, could be a problem unless there is a problem with the fastq files. But they came from the same run/machine/lane (Illumina NextSeq 500) as six other samples that have not caused problems.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323
https://github.com/COMBINE-lab/salmon/issues/323:144,Performance,load,load,144,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. I am using a version that was compiled in Trinity; module load conda/trinity-2.8.4; source activate trinity-2.8.4; salmon --version salmon 0.11.3. **Describe the bug**. @RG lines are at odds with binary encoded reference data ; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. salmon quant -t Cp_cds.fa -l ISR -a SB1.bam -o salmon_SB1. **Summary** ; I mapped the reads to a de novo transcriptome assembly using BWA-mem. I then use Salmon to get counts for RNAseq analysis using the alignment based mode. This has worked well for the nine previous samples, but the last 3 samples throw the error above (different species and reference transcriptome assembly). Maybe a problem with the bam file? If no not sure how the read groups etc, could be a problem unless there is a problem with the fastq files. But they came from the same run/machine/lane (Illumina NextSeq 500) as six other samples that have not caused problems.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323
https://github.com/COMBINE-lab/salmon/issues/324:3584,Availability,failure,failure,3584,"ary format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Starting optimizer. Analyzed 12346 cells (100% of all).; Skipped Barcodes are from High Confidence Region; Should not happen%. **Desktop (please complete the following information):**; - OS: macOS; - Version: 10.14.1. **Additional context**; This failure comes when analyzing data from the new 10X v3 chemistry. Initially, I thought that was the issue, but our analysis worked when using the 'neuron_1k' dataset (the read sequences that makes the program fail come from the 'neuron_10k' dataset), which was also produced with similar v3 chemistry but quasi-maps correctly. I can attach screenshots for either dataset for anyone still trying to figure out the problem.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/324:282,Deployability,install,installed,282,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin. **Describe the bug**; Some datasets are incompatible with Alevin processing from deduplication onwards, failing immediately after initial analysis. **To Reproduce**; Using salmon v0.11.3, installed via conda; Reference index obtained from GENCODE mm10 assembly. Steps and data to reproduce the behavior:; salmon alevin -l ISR -1 neuron_10k_v3_S1_L001_R1_001.fastq.gz neuron_10k_v3_S1_L002_R1_001.fastq.gz -2 neuron_10k_v3_S1_L001_R2_001.fastq.gz neuron_10k_v3_S1_L002_R2_001.fastq.gz --chromium -i map_index -p 8 -o output_10 --tgMap txp2gene.tsv --dumpCsvCounts. **Shell output** ; [2018-11-29 22:24:41.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-29 22:24:41.283] [alevinLog] [info] Processing barcodes files (if Present). processed 178 Million barcodes. [2018-11-29 22:28:03.040] [alevinLog] [info] Done barcode density calculation.; [2018-11-29 22:28:03.040] [alevinLog] [info] # Barcodes Used: 178139795 / 178174830.; [2018-11-29 22:28:08.333] [alevinLog] [info] Knee found left boundary at 11347; [2018-11-29 22:28:16.264] [alevinLog] [warning] Gauss Prediction 11502 Too far from knee prediction skipping it; [2018-11-29 22:28:16.264] [alevinLog] [info] Learned InvCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/324:2125,Performance,Load,Loading,2125,"fo] Knee found left boundary at 11347; [2018-11-29 22:28:16.264] [alevinLog] [warning] Gauss Prediction 11502 Too far from knee prediction skipping it; [2018-11-29 22:28:16.264] [alevinLog] [info] Learned InvCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equiv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/324:2190,Performance,Load,Loading,2190,"vinLog] [warning] Gauss Prediction 11502 Too far from knee prediction skipping it; [2018-11-29 22:28:16.264] [alevinLog] [info] Learned InvCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/324:2263,Performance,Load,Loading,2263," skipping it; [2018-11-29 22:28:16.264] [alevinLog] [info] Learned InvCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/324:2330,Performance,Load,Loading,2330,"vCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Star",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/324:2400,Performance,Load,Loading,2400,"[info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Starting optimizer. Analyzed 12346 cells (100% of all).; Skipped Barcodes are",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/324:2659,Performance,load,loading,2659," Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Starting optimizer. Analyzed 12346 cells (100% of all).; Skipped Barcodes are from High Confidence Region; Should not happen%. **Desktop (please complete the following information):**; - OS: macOS; - Version: 10.14.1. **Additional context**; This failure comes when analyzing data from the new 10X v3 chemistry. Initial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/324:2723,Performance,load,loading,2723,"otal Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Starting optimizer. Analyzed 12346 cells (100% of all).; Skipped Barcodes are from High Confidence Region; Should not happen%. **Desktop (please complete the following information):**; - OS: macOS; - Version: 10.14.1. **Additional context**; This failure comes when analyzing data from the new 10X v3 chemistry. Initially, I thought that was the issue, but our analysis worked when using th",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/324:3346,Performance,optimiz,optimizer,3346,"ary format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Starting optimizer. Analyzed 12346 cells (100% of all).; Skipped Barcodes are from High Confidence Region; Should not happen%. **Desktop (please complete the following information):**; - OS: macOS; - Version: 10.14.1. **Additional context**; This failure comes when analyzing data from the new 10X v3 chemistry. Initially, I thought that was the issue, but our analysis worked when using the 'neuron_1k' dataset (the read sequences that makes the program fail come from the 'neuron_10k' dataset), which was also produced with similar v3 chemistry but quasi-maps correctly. I can attach screenshots for either dataset for anyone still trying to figure out the problem.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/324:1227,Safety,Predict,Prediction,1227,"roduce**; Using salmon v0.11.3, installed via conda; Reference index obtained from GENCODE mm10 assembly. Steps and data to reproduce the behavior:; salmon alevin -l ISR -1 neuron_10k_v3_S1_L001_R1_001.fastq.gz neuron_10k_v3_S1_L002_R1_001.fastq.gz -2 neuron_10k_v3_S1_L001_R2_001.fastq.gz neuron_10k_v3_S1_L002_R2_001.fastq.gz --chromium -i map_index -p 8 -o output_10 --tgMap txp2gene.tsv --dumpCsvCounts. **Shell output** ; [2018-11-29 22:24:41.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-29 22:24:41.283] [alevinLog] [info] Processing barcodes files (if Present). processed 178 Million barcodes. [2018-11-29 22:28:03.040] [alevinLog] [info] Done barcode density calculation.; [2018-11-29 22:28:03.040] [alevinLog] [info] # Barcodes Used: 178139795 / 178174830.; [2018-11-29 22:28:08.333] [alevinLog] [info] Knee found left boundary at 11347; [2018-11-29 22:28:16.264] [alevinLog] [warning] Gauss Prediction 11502 Too far from knee prediction skipping it; [2018-11-29 22:28:16.264] [alevinLog] [info] Learned InvCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/324:1262,Safety,predict,prediction,1262,"roduce**; Using salmon v0.11.3, installed via conda; Reference index obtained from GENCODE mm10 assembly. Steps and data to reproduce the behavior:; salmon alevin -l ISR -1 neuron_10k_v3_S1_L001_R1_001.fastq.gz neuron_10k_v3_S1_L002_R1_001.fastq.gz -2 neuron_10k_v3_S1_L001_R2_001.fastq.gz neuron_10k_v3_S1_L002_R2_001.fastq.gz --chromium -i map_index -p 8 -o output_10 --tgMap txp2gene.tsv --dumpCsvCounts. **Shell output** ; [2018-11-29 22:24:41.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-29 22:24:41.283] [alevinLog] [info] Processing barcodes files (if Present). processed 178 Million barcodes. [2018-11-29 22:28:03.040] [alevinLog] [info] Done barcode density calculation.; [2018-11-29 22:28:03.040] [alevinLog] [info] # Barcodes Used: 178139795 / 178174830.; [2018-11-29 22:28:08.333] [alevinLog] [info] Knee found left boundary at 11347; [2018-11-29 22:28:16.264] [alevinLog] [warning] Gauss Prediction 11502 Too far from knee prediction skipping it; [2018-11-29 22:28:16.264] [alevinLog] [info] Learned InvCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/324:2667,Security,hash,hash,2667," Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Starting optimizer. Analyzed 12346 cells (100% of all).; Skipped Barcodes are from High Confidence Region; Should not happen%. **Desktop (please complete the following information):**; - OS: macOS; - Version: 10.14.1. **Additional context**; This failure comes when analyzing data from the new 10X v3 chemistry. Initial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/324:1331,Usability,Learn,Learned,1331,rom GENCODE mm10 assembly. Steps and data to reproduce the behavior:; salmon alevin -l ISR -1 neuron_10k_v3_S1_L001_R1_001.fastq.gz neuron_10k_v3_S1_L002_R1_001.fastq.gz -2 neuron_10k_v3_S1_L001_R2_001.fastq.gz neuron_10k_v3_S1_L002_R2_001.fastq.gz --chromium -i map_index -p 8 -o output_10 --tgMap txp2gene.tsv --dumpCsvCounts. **Shell output** ; [2018-11-29 22:24:41.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-29 22:24:41.283] [alevinLog] [info] Processing barcodes files (if Present). processed 178 Million barcodes. [2018-11-29 22:28:03.040] [alevinLog] [info] Done barcode density calculation.; [2018-11-29 22:28:03.040] [alevinLog] [info] # Barcodes Used: 178139795 / 178174830.; [2018-11-29 22:28:08.333] [alevinLog] [info] Knee found left boundary at 11347; [2018-11-29 22:28:16.264] [alevinLog] [warning] Gauss Prediction 11502 Too far from knee prediction skipping it; [2018-11-29 22:28:16.264] [alevinLog] [info] Learned InvCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324
https://github.com/COMBINE-lab/salmon/issues/325:694,Deployability,Release,Release,694,"Alevin (single-cell mode):. After compiling from source, --celseq2 is still not recognized as a valid flag. . * salmon v0.11.3; * compiled from source ; * reference: gencode.v28.transcripts.fa ; * Default Mode. **Expected behavior**; Following compiling from source, the --celseq2 flag should work (see https://github.com/COMBINE-lab/salmon/issues/311) . - Ubuntu Linux; - Version: `uname -a`; Linux yaellab-rina 4.15.0-39-generic #42-Ubuntu SMP Tue Oct 23 15:48:01 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; `lsb_release -a`; LSB Version:	core-9.20170808ubuntu1-noarch:printing-9.20170808ubuntu1-noarch:security-9.20170808ubuntu1-noarch; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.1 LTS; Release:	18.04; Codename:	bionic",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325
https://github.com/COMBINE-lab/salmon/issues/325:602,Security,secur,security-,602,"Alevin (single-cell mode):. After compiling from source, --celseq2 is still not recognized as a valid flag. . * salmon v0.11.3; * compiled from source ; * reference: gencode.v28.transcripts.fa ; * Default Mode. **Expected behavior**; Following compiling from source, the --celseq2 flag should work (see https://github.com/COMBINE-lab/salmon/issues/311) . - Ubuntu Linux; - Version: `uname -a`; Linux yaellab-rina 4.15.0-39-generic #42-Ubuntu SMP Tue Oct 23 15:48:01 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; `lsb_release -a`; LSB Version:	core-9.20170808ubuntu1-noarch:printing-9.20170808ubuntu1-noarch:security-9.20170808ubuntu1-noarch; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.1 LTS; Release:	18.04; Codename:	bionic",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325
https://github.com/COMBINE-lab/salmon/issues/326:73,Availability,ERROR,ERROR,73,"alevin (single-cell mode). **Describe the bug**; I receive the following ERROR: Txp to Gene Map not found for 102926 transcripts. **To Reproduce**; /usr/local/bin/salmon alevin -lISR -1 cells_CTTGTA_L001_R1_001.fastq.gz -2 cells_CTTGTA_L001_R2_001.fastq.gz --celseq2 -i AlevinIndex/ -p 8 -o alevin_output --tgMap gencode.primary_assembly.tsv. Specifically, please provide at least the following information:. * v0.12.0, compiled ; * FASTA file labeled ""Transcript sequences"" from https://www.gencodegenes.org/human/ ; * GTF file labeled ""Comprehensive gene annotation - PRI"" from https://www.gencodegenes.org/human/. **Expected behavior**; To receive the following files in the output dir; quants_mat.gz – Compressed count matrix.; quants_mat_cols.txt – Column Header (Gene-ids) of the matrix.; quants_mat_rows.txt – Row Index (CB-ids) of the matrix. [alevin.log](https://github.com/COMBINE-lab/salmon/files/2638932/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2638934/salmon_quant.log). The tgMap was created using `tximport` in R; ```; library(tximport); gtf <- paste0(local_path, ""/gencode.v29.annotation.gtf""); txdb <- makeTxDbFromGFF(gtf); txdf <- select(txdb, keys(txdb, ""GENEID""), ""TXNAME"", ""GENEID"") . txdf_switch <- data.frame(txdf$TXNAME, txdf$GENEID) #in order to switch the order TXNAME and GENEID apppear. write_tsv(txdf_switch, paste0(local_path, ""/gencode_annot/gencode.primary_assembly.v29.tsv""), col_names = FALSE). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326
https://github.com/COMBINE-lab/salmon/issues/326:859,Testability,log,log,859,"alevin (single-cell mode). **Describe the bug**; I receive the following ERROR: Txp to Gene Map not found for 102926 transcripts. **To Reproduce**; /usr/local/bin/salmon alevin -lISR -1 cells_CTTGTA_L001_R1_001.fastq.gz -2 cells_CTTGTA_L001_R2_001.fastq.gz --celseq2 -i AlevinIndex/ -p 8 -o alevin_output --tgMap gencode.primary_assembly.tsv. Specifically, please provide at least the following information:. * v0.12.0, compiled ; * FASTA file labeled ""Transcript sequences"" from https://www.gencodegenes.org/human/ ; * GTF file labeled ""Comprehensive gene annotation - PRI"" from https://www.gencodegenes.org/human/. **Expected behavior**; To receive the following files in the output dir; quants_mat.gz – Compressed count matrix.; quants_mat_cols.txt – Column Header (Gene-ids) of the matrix.; quants_mat_rows.txt – Row Index (CB-ids) of the matrix. [alevin.log](https://github.com/COMBINE-lab/salmon/files/2638932/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2638934/salmon_quant.log). The tgMap was created using `tximport` in R; ```; library(tximport); gtf <- paste0(local_path, ""/gencode.v29.annotation.gtf""); txdb <- makeTxDbFromGFF(gtf); txdf <- select(txdb, keys(txdb, ""GENEID""), ""TXNAME"", ""GENEID"") . txdf_switch <- data.frame(txdf$TXNAME, txdf$GENEID) #in order to switch the order TXNAME and GENEID apppear. write_tsv(txdf_switch, paste0(local_path, ""/gencode_annot/gencode.primary_assembly.v29.tsv""), col_names = FALSE). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326
https://github.com/COMBINE-lab/salmon/issues/326:923,Testability,log,log,923,"alevin (single-cell mode). **Describe the bug**; I receive the following ERROR: Txp to Gene Map not found for 102926 transcripts. **To Reproduce**; /usr/local/bin/salmon alevin -lISR -1 cells_CTTGTA_L001_R1_001.fastq.gz -2 cells_CTTGTA_L001_R2_001.fastq.gz --celseq2 -i AlevinIndex/ -p 8 -o alevin_output --tgMap gencode.primary_assembly.tsv. Specifically, please provide at least the following information:. * v0.12.0, compiled ; * FASTA file labeled ""Transcript sequences"" from https://www.gencodegenes.org/human/ ; * GTF file labeled ""Comprehensive gene annotation - PRI"" from https://www.gencodegenes.org/human/. **Expected behavior**; To receive the following files in the output dir; quants_mat.gz – Compressed count matrix.; quants_mat_cols.txt – Column Header (Gene-ids) of the matrix.; quants_mat_rows.txt – Row Index (CB-ids) of the matrix. [alevin.log](https://github.com/COMBINE-lab/salmon/files/2638932/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2638934/salmon_quant.log). The tgMap was created using `tximport` in R; ```; library(tximport); gtf <- paste0(local_path, ""/gencode.v29.annotation.gtf""); txdb <- makeTxDbFromGFF(gtf); txdf <- select(txdb, keys(txdb, ""GENEID""), ""TXNAME"", ""GENEID"") . txdf_switch <- data.frame(txdf$TXNAME, txdf$GENEID) #in order to switch the order TXNAME and GENEID apppear. write_tsv(txdf_switch, paste0(local_path, ""/gencode_annot/gencode.primary_assembly.v29.tsv""), col_names = FALSE). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326
https://github.com/COMBINE-lab/salmon/issues/326:943,Testability,log,log,943,"alevin (single-cell mode). **Describe the bug**; I receive the following ERROR: Txp to Gene Map not found for 102926 transcripts. **To Reproduce**; /usr/local/bin/salmon alevin -lISR -1 cells_CTTGTA_L001_R1_001.fastq.gz -2 cells_CTTGTA_L001_R2_001.fastq.gz --celseq2 -i AlevinIndex/ -p 8 -o alevin_output --tgMap gencode.primary_assembly.tsv. Specifically, please provide at least the following information:. * v0.12.0, compiled ; * FASTA file labeled ""Transcript sequences"" from https://www.gencodegenes.org/human/ ; * GTF file labeled ""Comprehensive gene annotation - PRI"" from https://www.gencodegenes.org/human/. **Expected behavior**; To receive the following files in the output dir; quants_mat.gz – Compressed count matrix.; quants_mat_cols.txt – Column Header (Gene-ids) of the matrix.; quants_mat_rows.txt – Row Index (CB-ids) of the matrix. [alevin.log](https://github.com/COMBINE-lab/salmon/files/2638932/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2638934/salmon_quant.log). The tgMap was created using `tximport` in R; ```; library(tximport); gtf <- paste0(local_path, ""/gencode.v29.annotation.gtf""); txdb <- makeTxDbFromGFF(gtf); txdf <- select(txdb, keys(txdb, ""GENEID""), ""TXNAME"", ""GENEID"") . txdf_switch <- data.frame(txdf$TXNAME, txdf$GENEID) #in order to switch the order TXNAME and GENEID apppear. write_tsv(txdf_switch, paste0(local_path, ""/gencode_annot/gencode.primary_assembly.v29.tsv""), col_names = FALSE). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326
https://github.com/COMBINE-lab/salmon/issues/326:1013,Testability,log,log,1013,"alevin (single-cell mode). **Describe the bug**; I receive the following ERROR: Txp to Gene Map not found for 102926 transcripts. **To Reproduce**; /usr/local/bin/salmon alevin -lISR -1 cells_CTTGTA_L001_R1_001.fastq.gz -2 cells_CTTGTA_L001_R2_001.fastq.gz --celseq2 -i AlevinIndex/ -p 8 -o alevin_output --tgMap gencode.primary_assembly.tsv. Specifically, please provide at least the following information:. * v0.12.0, compiled ; * FASTA file labeled ""Transcript sequences"" from https://www.gencodegenes.org/human/ ; * GTF file labeled ""Comprehensive gene annotation - PRI"" from https://www.gencodegenes.org/human/. **Expected behavior**; To receive the following files in the output dir; quants_mat.gz – Compressed count matrix.; quants_mat_cols.txt – Column Header (Gene-ids) of the matrix.; quants_mat_rows.txt – Row Index (CB-ids) of the matrix. [alevin.log](https://github.com/COMBINE-lab/salmon/files/2638932/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2638934/salmon_quant.log). The tgMap was created using `tximport` in R; ```; library(tximport); gtf <- paste0(local_path, ""/gencode.v29.annotation.gtf""); txdb <- makeTxDbFromGFF(gtf); txdf <- select(txdb, keys(txdb, ""GENEID""), ""TXNAME"", ""GENEID"") . txdf_switch <- data.frame(txdf$TXNAME, txdf$GENEID) #in order to switch the order TXNAME and GENEID apppear. write_tsv(txdf_switch, paste0(local_path, ""/gencode_annot/gencode.primary_assembly.v29.tsv""), col_names = FALSE). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326
https://github.com/COMBINE-lab/salmon/issues/328:202,Availability,error,error,202,"Hi and thank you for helping,. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Running alevin on 10x v1 data results in the following error:; > [alevinLog] [info] Starting Import of the gene count matrix.; > Exception : [std::bad_alloc]; > alevin was invoked improperly. **To Reproduce**. * Salmon version: Release v0.11.3; * Installed from: Compiled. I also followed the instructions from the [alevin tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) to compile the `scripts/v1_10x/wrapper.cpp` file; * Reference transcriptome: [Homo_sapiens.GRCh37.cdna.all.fa](ftp://ftp.ensembl.org/pub/grch37/release-83/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh37.cdna.all.fa.gz); * Which read files were used? Either the [CD14+ Monocytes from the 10x v1 paper](http://s3-us-west-2.amazonaws.com/10x.files/samples/cell-exp/1.1.0/cd14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:14986,Availability,error,error,14986,"rgets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:57:31.421] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 16:57:35.529] [alevinLog] [info] Starting optimizer. Analyzed 3856 cells (100% of all).; [2018-12-05 17:04:51.878] [alevinLog] [info] Total 47125847 UMI after deduplicating.; [2018-12-05 17:04:51.928] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 17:05:04.064] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **Desktop (please complete the following information):**; Ubuntu 14.04 LTS; 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty. **Additional context**; If I include only a subset of the fastq files, the command completes with no error. I have succeeded in running up to 3 of the files (3 *I1*, 3 *I2* and 3 *RA* files), but got the above-mentioned error when running it on 4 or more fastq files. I read that std::bad_alloc was usually caused by memory issues. The system I am using has 128Gb of RAM available. Thank you for your help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:15105,Availability,error,error,15105,"rgets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:57:31.421] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 16:57:35.529] [alevinLog] [info] Starting optimizer. Analyzed 3856 cells (100% of all).; [2018-12-05 17:04:51.878] [alevinLog] [info] Total 47125847 UMI after deduplicating.; [2018-12-05 17:04:51.928] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 17:05:04.064] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **Desktop (please complete the following information):**; Ubuntu 14.04 LTS; 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty. **Additional context**; If I include only a subset of the fastq files, the command completes with no error. I have succeeded in running up to 3 of the files (3 *I1*, 3 *I2* and 3 *RA* files), but got the above-mentioned error when running it on 4 or more fastq files. I read that std::bad_alloc was usually caused by memory issues. The system I am using has 128Gb of RAM available. Thank you for your help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:15256,Availability,avail,available,15256,"rgets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:57:31.421] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 16:57:35.529] [alevinLog] [info] Starting optimizer. Analyzed 3856 cells (100% of all).; [2018-12-05 17:04:51.878] [alevinLog] [info] Total 47125847 UMI after deduplicating.; [2018-12-05 17:04:51.928] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 17:05:04.064] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **Desktop (please complete the following information):**; Ubuntu 14.04 LTS; 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty. **Additional context**; If I include only a subset of the fastq files, the command completes with no error. I have succeeded in running up to 3 of the files (3 *I1*, 3 *I2* and 3 *RA* files), but got the above-mentioned error when running it on 4 or more fastq files. I read that std::bad_alloc was usually caused by memory issues. The system I am using has 128Gb of RAM available. Thank you for your help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:375,Deployability,Release,Release,375,"Hi and thank you for helping,. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Running alevin on 10x v1 data results in the following error:; > [alevinLog] [info] Starting Import of the gene count matrix.; > Exception : [std::bad_alloc]; > alevin was invoked improperly. **To Reproduce**. * Salmon version: Release v0.11.3; * Installed from: Compiled. I also followed the instructions from the [alevin tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) to compile the `scripts/v1_10x/wrapper.cpp` file; * Reference transcriptome: [Homo_sapiens.GRCh37.cdna.all.fa](ftp://ftp.ensembl.org/pub/grch37/release-83/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh37.cdna.all.fa.gz); * Which read files were used? Either the [CD14+ Monocytes from the 10x v1 paper](http://s3-us-west-2.amazonaws.com/10x.files/samples/cell-exp/1.1.0/cd14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:394,Deployability,Install,Installed,394,"Hi and thank you for helping,. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Running alevin on 10x v1 data results in the following error:; > [alevinLog] [info] Starting Import of the gene count matrix.; > Exception : [std::bad_alloc]; > alevin was invoked improperly. **To Reproduce**. * Salmon version: Release v0.11.3; * Installed from: Compiled. I also followed the instructions from the [alevin tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) to compile the `scripts/v1_10x/wrapper.cpp` file; * Reference transcriptome: [Homo_sapiens.GRCh37.cdna.all.fa](ftp://ftp.ensembl.org/pub/grch37/release-83/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh37.cdna.all.fa.gz); * Which read files were used? Either the [CD14+ Monocytes from the 10x v1 paper](http://s3-us-west-2.amazonaws.com/10x.files/samples/cell-exp/1.1.0/cd14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:692,Deployability,release,release-,692,"Hi and thank you for helping,. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Running alevin on 10x v1 data results in the following error:; > [alevinLog] [info] Starting Import of the gene count matrix.; > Exception : [std::bad_alloc]; > alevin was invoked improperly. **To Reproduce**. * Salmon version: Release v0.11.3; * Installed from: Compiled. I also followed the instructions from the [alevin tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) to compile the `scripts/v1_10x/wrapper.cpp` file; * Reference transcriptome: [Homo_sapiens.GRCh37.cdna.all.fa](ftp://ftp.ensembl.org/pub/grch37/release-83/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh37.cdna.all.fa.gz); * Which read files were used? Either the [CD14+ Monocytes from the 10x v1 paper](http://s3-us-west-2.amazonaws.com/10x.files/samples/cell-exp/1.1.0/cd14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:3452,Deployability,upgrade,upgrade,3452,"000.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-12-05 15:10:07.252] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ../hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ dumpFeatures ] => { }; ### [ mates1 ] => { /tmp/tmp.lLLibfwH4G/p1.fa }; ### [ mates2 ] => { /tmp/tmp.lLLibfwH4G/p2.fa }; ### [ unmatedReads ] => { ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-ACT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:3504,Deployability,upgrade,upgrades,3504,"nk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-12-05 15:10:07.252] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ../hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ dumpFeatures ] => { }; ### [ mates1 ] => { /tmp/tmp.lLLibfwH4G/p1.fa }; ### [ mates2 ] => { /tmp/tmp.lLLibfwH4G/p2.fa }; ### [ unmatedReads ] => { ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-A",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:9843,Deployability,upgrade,upgrade,9843,elp; Exiting.; ```. PBMC 3k shell log:; ```; ~/software/salmon/scripts/v1_10x/run.sh salmon alevin -lISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv. TEMPDIR is /tmp/tmp.WnzMm7GQBO; Running command [salmon alevin -lISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv -1 /tmp/tmp.WnzMm7GQBO/p1.fa -2 /tmp/tmp.WnzMm7GQBO/p2.fa -r pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; Logs will be written to alevin_output/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { ../hg_transcriptome/tx2gene.tsv }; ### [ mates1 ] => { /tmp/tmp.WnzMm7GQBO/p1.fa }; ### [ mates2 ] => { /tmp/tmp.WnzMm7GQBO/p2.fa }; ### [ unmatedReads ] => { pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-TA,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:9895,Deployability,upgrade,upgrades,9895,ripts/v1_10x/run.sh salmon alevin -lISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv. TEMPDIR is /tmp/tmp.WnzMm7GQBO; Running command [salmon alevin -lISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv -1 /tmp/tmp.WnzMm7GQBO/p1.fa -2 /tmp/tmp.WnzMm7GQBO/p2.fa -r pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; Logs will be written to alevin_output/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { ../hg_transcriptome/tx2gene.tsv }; ### [ mates1 ] => { /tmp/tmp.WnzMm7GQBO/p1.fa }; ### [ mates2 ] => { /tmp/tmp.WnzMm7GQBO/p2.fa }; ### [ unmatedReads ] => { pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-TAAAT,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:14851,Deployability,Release,Release,14851,"rgets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:57:31.421] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 16:57:35.529] [alevinLog] [info] Starting optimizer. Analyzed 3856 cells (100% of all).; [2018-12-05 17:04:51.878] [alevinLog] [info] Total 47125847 UMI after deduplicating.; [2018-12-05 17:04:51.928] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 17:05:04.064] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **Desktop (please complete the following information):**; Ubuntu 14.04 LTS; 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty. **Additional context**; If I include only a subset of the fastq files, the command completes with no error. I have succeeded in running up to 3 of the files (3 *I1*, 3 *I2* and 3 *RA* files), but got the above-mentioned error when running it on 4 or more fastq files. I read that std::bad_alloc was usually caused by memory issues. The system I am using has 128Gb of RAM available. Thank you for your help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:579,Integrability,wrap,wrapper,579,"Hi and thank you for helping,. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Running alevin on 10x v1 data results in the following error:; > [alevinLog] [info] Starting Import of the gene count matrix.; > Exception : [std::bad_alloc]; > alevin was invoked improperly. **To Reproduce**. * Salmon version: Release v0.11.3; * Installed from: Compiled. I also followed the instructions from the [alevin tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) to compile the `scripts/v1_10x/wrapper.cpp` file; * Reference transcriptome: [Homo_sapiens.GRCh37.cdna.all.fa](ftp://ftp.ensembl.org/pub/grch37/release-83/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh37.cdna.all.fa.gz); * Which read files were used? Either the [CD14+ Monocytes from the 10x v1 paper](http://s3-us-west-2.amazonaws.com/10x.files/samples/cell-exp/1.1.0/cd14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:3617,Integrability,protocol,protocol,3617,"CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-12-05 15:10:07.252] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ../hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ dumpFeatures ] => { }; ### [ mates1 ] => { /tmp/tmp.lLLibfwH4G/p1.fa }; ### [ mates2 ] => { /tmp/tmp.lLLibfwH4G/p2.fa }; ### [ unmatedReads ] => { ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz ./fastqs/fl",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:6806,Performance,Load,Loading,6806,"s files (if Present) . ; processed 267 Million barcodes. [2018-12-05 15:12:18.914] [alevinLog] [info] Done barcode density calculation.; [2018-12-05 15:12:18.914] [alevinLog] [info] # Barcodes Used: 267451749 / 267548197.; [2018-12-05 15:12:25.126] [alevinLog] [info] Knee found left boundary at 11954 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-12-05 15:12:27.371] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-05 15:12:27.494] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 15:12:27.880] [alevinLog] [info] Done populating Z matrix; [2018-12-05 15:12:27.952] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:6941,Performance,Load,Loading,6941,".; [2018-12-05 15:12:18.914] [alevinLog] [info] # Barcodes Used: 267451749 / 267548197.; [2018-12-05 15:12:25.126] [alevinLog] [info] Knee found left boundary at 11954 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-12-05 15:12:27.371] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-05 15:12:27.494] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 15:12:27.880] [alevinLog] [info] Done populating Z matrix; [2018-12-05 15:12:27.952] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for fu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:7006,Performance,Load,Loading,7006,"51749 / 267548197.; [2018-12-05 15:12:25.126] [alevinLog] [info] Knee found left boundary at 11954 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-12-05 15:12:27.371] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-05 15:12:27.494] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 15:12:27.880] [alevinLog] [info] Done populating Z matrix; [2018-12-05 15:12:27.952] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:7248,Performance,Load,Loading,7248,": 713.683 normfactor: 1183.93; [2018-12-05 15:12:27.371] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-05 15:12:27.494] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 15:12:27.880] [alevinLog] [info] Done populating Z matrix; [2018-12-05 15:12:27.952] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:7319,Performance,Load,Loading,7319,"] Total 5344(has 999 low confidence) barcodes; [2018-12-05 15:12:27.494] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 15:12:27.880] [alevinLog] [info] Done populating Z matrix; [2018-12-05 15:12:27.952] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:7579,Performance,load,loading,7579,"ndexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:46.199] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 15:45:47.617] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-05 15:47:14.597] [alevinLog] [info] Total 1870793 UMI after deduplicating.; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:7643,Performance,load,loading,7643,"ique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:46.199] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 15:45:47.617] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-05 15:47:14.597] [alevinLog] [info] Total 1870793 UMI after deduplicating.; [2018-12-05 15:47:14.693] [alevinLog] [info] Clearing EqMap; Might take so",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:8441,Performance,optimiz,optimizer,8441," bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:46.199] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 15:45:47.617] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-05 15:47:14.597] [alevinLog] [info] Total 1870793 UMI after deduplicating.; [2018-12-05 15:47:14.693] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 15:47:18.921] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. PBMC 3k shell log:; ```; ~/software/salmon/scripts/v1_10x/run.sh salmon alevin -lISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv. TEMPDIR is /tmp/tmp.WnzMm7GQBO; Running command [salmon alevin -lISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv -1 /tmp/tmp.WnzMm7GQBO/p1.fa -2 /tmp/tmp.WnzMm7GQBO/p2.fa -r pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:12554,Performance,Load,Loading,12554,"-05 16:31:47.863] [alevinLog] [info] Knee found left boundary at 2926 ; [2018-12-05 16:31:50.571] [alevinLog] [info] Gauss Corrected Boundary at 2858 ; [2018-12-05 16:31:50.571] [alevinLog] [info] Learned InvCov: 166.8 normfactor: 2759.5; [2018-12-05 16:31:50.571] [alevinLog] [info] Total 3856(has 998 low confidence) barcodes; [2018-12-05 16:31:50.638] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 16:31:50.935] [alevinLog] [info] Done populating Z matrix; [2018-12-05 16:31:51.000] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:12619,Performance,Load,Loading,12619," ; [2018-12-05 16:31:50.571] [alevinLog] [info] Gauss Corrected Boundary at 2858 ; [2018-12-05 16:31:50.571] [alevinLog] [info] Learned InvCov: 166.8 normfactor: 2759.5; [2018-12-05 16:31:50.571] [alevinLog] [info] Total 3856(has 998 low confidence) barcodes; [2018-12-05 16:31:50.638] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 16:31:50.935] [alevinLog] [info] Done populating Z matrix; [2018-12-05 16:31:51.000] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:12692,Performance,Load,Loading,12692,"ry at 2858 ; [2018-12-05 16:31:50.571] [alevinLog] [info] Learned InvCov: 166.8 normfactor: 2759.5; [2018-12-05 16:31:50.571] [alevinLog] [info] Total 3856(has 998 low confidence) barcodes; [2018-12-05 16:31:50.638] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 16:31:50.935] [alevinLog] [info] Done populating Z matrix; [2018-12-05 16:31:51.000] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:12760,Performance,Load,Loading,12760,"Cov: 166.8 normfactor: 2759.5; [2018-12-05 16:31:50.571] [alevinLog] [info] Total 3856(has 998 low confidence) barcodes; [2018-12-05 16:31:50.638] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 16:31:50.935] [alevinLog] [info] Done populating Z matrix; [2018-12-05 16:31:51.000] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:12831,Performance,Load,Loading,12831,"] Total 3856(has 998 low confidence) barcodes; [2018-12-05 16:31:50.638] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 16:31:50.935] [alevinLog] [info] Done populating Z matrix; [2018-12-05 16:31:51.000] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:13091,Performance,load,loading,13091,"ndexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:13155,Performance,load,loading,13155,"ique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:57:31.421] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 16:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:14198,Performance,optimiz,optimizer,14198,"1:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:57:31.421] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 16:57:35.529] [alevinLog] [info] Starting optimizer. Analyzed 3856 cells (100% of all).; [2018-12-05 17:04:51.878] [alevinLog] [info] Total 47125847 UMI after deduplicating.; [2018-12-05 17:04:51.928] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 17:05:04.064] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **Desktop (please complete the following information):**; Ubuntu 14.04 LTS; 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty. **Additional context**; If I include only a subset of the fastq files, the command completes with no error. I have succeeded in running up to 3 of the files (3 *I1*, 3 *I2* and 3 *RA* files), but got the above-mentioned error when running it on 4 or more fastq files. I read that std::bad_alloc was usu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:7587,Security,hash,hash,7587,"ndexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:46.199] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 15:45:47.617] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-05 15:47:14.597] [alevinLog] [info] Total 1870793 UMI after deduplicating.; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:13099,Security,hash,hash,13099,"ndexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:1341,Testability,test,test,1341,eproduce**. * Salmon version: Release v0.11.3; * Installed from: Compiled. I also followed the instructions from the [alevin tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) to compile the `scripts/v1_10x/wrapper.cpp` file; * Reference transcriptome: [Homo_sapiens.GRCh37.cdna.all.fa](ftp://ftp.ensembl.org/pub/grch37/release-83/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh37.cdna.all.fa.gz); * Which read files were used? Either the [CD14+ Monocytes from the 10x v1 paper](http://s3-us-west-2.amazonaws.com/10x.files/samples/cell-exp/1.1.0/cd14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures. TEMPDIR is /tmp/tmp.lLLibfwH4G; Running command [salmon alevin -l ISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures -1 /tmp/tmp.lLLibfwH4G/p1.fa -2 /tmp/tmp.lLLibfwH4G/p2.fa -r ./fastqs/flowc,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:1758,Testability,log,log,1758,); * Which read files were used? Either the [CD14+ Monocytes from the 10x v1 paper](http://s3-us-west-2.amazonaws.com/10x.files/samples/cell-exp/1.1.0/cd14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures. TEMPDIR is /tmp/tmp.lLLibfwH4G; Running command [salmon alevin -l ISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures -1 /tmp/tmp.lLLibfwH4G/p1.fa -2 /tmp/tmp.lLLibfwH4G/p2.fa -r ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/rea,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:1909,Testability,test,test,1909,d14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures. TEMPDIR is /tmp/tmp.lLLibfwH4G; Running command [salmon alevin -l ISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures -1 /tmp/tmp.lLLibfwH4G/p1.fa -2 /tmp/tmp.lLLibfwH4G/p2.fa -r ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:2154,Testability,test,test,2154,set:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures. TEMPDIR is /tmp/tmp.lLLibfwH4G; Running command [salmon alevin -l ISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts --dumpFeatures -1 /tmp/tmp.lLLibfwH4G/p1.fa -2 /tmp/tmp.lLLibfwH4G/p2.fa -r ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/fl,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:3723,Testability,Log,Logs,3723,".gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-12-05 15:10:07.252] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ../hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ dumpFeatures ] => { }; ### [ mates1 ] => { /tmp/tmp.lLLibfwH4G/p1.fa }; ### [ mates2 ] => { /tmp/tmp.lLLibfwH4G/p2.fa }; ### [ unmatedReads ] => { ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-00",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:3755,Testability,test,test,3755,"lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-12-05 15:10:07.252] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ../hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ dumpFeatures ] => { }; ### [ mates1 ] => { /tmp/tmp.lLLibfwH4G/p1.fa }; ### [ mates2 ] => { /tmp/tmp.lLLibfwH4G/p2.fa }; ### [ unmatedReads ] => { ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/rea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:3760,Testability,log,logs,3760,"lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-12-05 15:10:07.252] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ../hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ dumpFeatures ] => { }; ### [ mates1 ] => { /tmp/tmp.lLLibfwH4G/p1.fa }; ### [ mates2 ] => { /tmp/tmp.lLLibfwH4G/p2.fa }; ### [ unmatedReads ] => { ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/rea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:4027,Testability,test,test,4027,"si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-12-05 15:10:07.252] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ../hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ dumpFeatures ] => { }; ### [ mates1 ] => { /tmp/tmp.lLLibfwH4G/p1.fa }; ### [ mates2 ] => { /tmp/tmp.lLLibfwH4G/p2.fa }; ### [ unmatedReads ] => { ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz ./fastqs/flowc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:8878,Testability,log,log,8878,"] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:46.199] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 15:45:47.617] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-05 15:47:14.597] [alevinLog] [info] Total 1870793 UMI after deduplicating.; [2018-12-05 15:47:14.693] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 15:47:18.921] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. PBMC 3k shell log:; ```; ~/software/salmon/scripts/v1_10x/run.sh salmon alevin -lISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv. TEMPDIR is /tmp/tmp.WnzMm7GQBO; Running command [salmon alevin -lISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv -1 /tmp/tmp.WnzMm7GQBO/p1.fa -2 /tmp/tmp.WnzMm7GQBO/p2.fa -r pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:9954,Testability,Log,Logs,9954,pts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv. TEMPDIR is /tmp/tmp.WnzMm7GQBO; Running command [salmon alevin -lISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv -1 /tmp/tmp.WnzMm7GQBO/p1.fa -2 /tmp/tmp.WnzMm7GQBO/p2.fa -r pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; Logs will be written to alevin_output/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { ../hg_transcriptome/tx2gene.tsv }; ### [ mates1 ] => { /tmp/tmp.WnzMm7GQBO/p1.fa }; ### [ mates2 ] => { /tmp/tmp.WnzMm7GQBO/p2.fa }; ### [ unmatedReads ] => { pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz }. [2018-12-05 16:30:15.406] [jointLog] [info] Fra,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:9992,Testability,log,logs,9992,pts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv. TEMPDIR is /tmp/tmp.WnzMm7GQBO; Running command [salmon alevin -lISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv -1 /tmp/tmp.WnzMm7GQBO/p1.fa -2 /tmp/tmp.WnzMm7GQBO/p2.fa -r pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; Logs will be written to alevin_output/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { ../hg_transcriptome/tx2gene.tsv }; ### [ mates1 ] => { /tmp/tmp.WnzMm7GQBO/p1.fa }; ### [ mates2 ] => { /tmp/tmp.WnzMm7GQBO/p2.fa }; ### [ unmatedReads ] => { pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz }. [2018-12-05 16:30:15.406] [jointLog] [info] Fra,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:6245,Usability,Learn,Learned,6245,/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz }. [2018-12-05 15:10:07.288] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-12-05 15:10:07.288] [jointLog] [warning] You seem to have passed in both un-paired reads and paired-end reads. It is not currently possible to quantify hybrid library types in salmon.; [2018-12-05 15:10:07.298] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 267 Million barcodes. [2018-12-05 15:12:18.914] [alevinLog] [info] Done barcode density calculation.; [2018-12-05 15:12:18.914] [alevinLog] [info] # Barcodes Used: 267451749 / 267548197.; [2018-12-05 15:12:25.126] [alevinLog] [info] Knee found left boundary at 11954 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-12-05 15:12:27.371] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-05 15:12:27.494] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 15:12:27.880] [alevinLog] [info] Done populating Z matrix; [2018-12-05 15:12:27.952] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [i,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:8618,Usability,Clear,Clearing,8618,"rrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:46.199] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 15:45:47.617] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-05 15:47:14.597] [alevinLog] [info] Total 1870793 UMI after deduplicating.; [2018-12-05 15:47:14.693] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 15:47:18.921] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. PBMC 3k shell log:; ```; ~/software/salmon/scripts/v1_10x/run.sh salmon alevin -lISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv. TEMPDIR is /tmp/tmp.WnzMm7GQBO; Running command [salmon alevin -lISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv -1 /tmp/tmp.WnzMm7GQBO/p1.fa -2 /tmp/tmp.WnzMm7GQBO/p2.fa -r pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz; pbmc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:11760,Usability,Learn,Learned,11760,mc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz }. [2018-12-05 16:30:15.406] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-12-05 16:30:15.406] [jointLog] [warning] You seem to have passed in both un-paired reads and paired-end reads. It is not currently possible to quantify hybrid library types in salmon.; [2018-12-05 16:30:15.416] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 185 Million barcodes. [2018-12-05 16:31:41.387] [alevinLog] [info] Done barcode density calculation.; [2018-12-05 16:31:41.387] [alevinLog] [info] # Barcodes Used: 185898660 / 185980783.; [2018-12-05 16:31:47.863] [alevinLog] [info] Knee found left boundary at 2926 ; [2018-12-05 16:31:50.571] [alevinLog] [info] Gauss Corrected Boundary at 2858 ; [2018-12-05 16:31:50.571] [alevinLog] [info] Learned InvCov: 166.8 normfactor: 2759.5; [2018-12-05 16:31:50.571] [alevinLog] [info] Total 3856(has 998 low confidence) barcodes; [2018-12-05 16:31:50.638] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 16:31:50.935] [alevinLog] [info] Done populating Z matrix; [2018-12-05 16:31:51.000] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/328:14376,Usability,Clear,Clearing,14376,"rgets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:57:31.421] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 16:57:35.529] [alevinLog] [info] Starting optimizer. Analyzed 3856 cells (100% of all).; [2018-12-05 17:04:51.878] [alevinLog] [info] Total 47125847 UMI after deduplicating.; [2018-12-05 17:04:51.928] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 17:05:04.064] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **Desktop (please complete the following information):**; Ubuntu 14.04 LTS; 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty. **Additional context**; If I include only a subset of the fastq files, the command completes with no error. I have succeeded in running up to 3 of the files (3 *I1*, 3 *I2* and 3 *RA* files), but got the above-mentioned error when running it on 4 or more fastq files. I read that std::bad_alloc was usually caused by memory issues. The system I am using has 128Gb of RAM available. Thank you for your help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328
https://github.com/COMBINE-lab/salmon/issues/329:302,Availability,error,error,302,"alevin (single-cell mode). I am trying to run alevin using a space separated list of (20) files as input. The fastq files we received from sequencing, were separated arbitrarily to keep them at about ~200 MB a file, but they are all the same sample and I wish to treat them as one library. There is no error produced, but it has been running for ~15 hours, and the log files are blank. As a side note, running each ""pair"" works just fine. . v0.12.1; compiled from source ; OS - Ubuntu Linux, x86_64 x86_64 x86_64 GNU/Linux. Alevin is supposed to be able to run with multiple read files, as specified here: https://github.com/COMBINE-lab/salmon/blob/master/doc/source/salmon.rst#providing-multiple-read-files-to-salmon. ```; Logs will be written to /alevin_outputSingleLibrary/quantSC/logs; ### alevin (dscRNA-seq quantification) v0.12.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { AlevinIndex/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { 12_CTTGTA_L001_R1_001.fastq.gz 12_CTTGTA_L001_R1_002.fastq.gz 12_CTTGTA_L001_R1_003.fastq.gz 12_CTTGTA_L001_R1_004.fastq.gz 12_CTTGTA_L001_R1_005.fastq.gz 12_CTTGTA_L001_R1_006.fastq.gz 12_CTTGTA_L001_R1_007.fastq.gz 12_CTTGTA_L001_R1_008.fastq.gz 12_CTTGTA_L001_R1_009.fastq.gz 12_CTTGTA_L001_R1_010.fastq.gz 12_CTTGTA_L002_R1_001.fastq.gz 12_CTTGTA_L002_R1_002.fastq.gz 12_CTTGTA_L002_R1_003.fastq.gz 12_CTTGTA_L002_R1_004.fastq.gz 12_CTTGTA_L002_R1_005.fastq.gz 12_CTTGTA_L002_R1_006.fastq.gz 12_CTTGTA_L002_R1_007.fastq.gz 12_CTTGTA_L002_R1_008.fastq.gz 12_CTTGTA_L002_R1_009.fastq.gz 12_CTTGTA_L002_R1_010.fastq.gz }; ### [ mates2 ] => { 12_CTTGTA_L001_R2_001.fastq.gz 12_CTTGTA_L001_R2_002.fastq.gz 12_CTTGTA_L001_R2_003.fastq.gz 12_CTTGTA_L001_R2_004.fastq.gz 12_CTTGTA_L001_R2_005.fastq.gz 12_CTTGTA_L001_R2_006.fastq.gz 12_CTTGTA_L001_R2_007.fastq.gz 12_CTTGTA_L001_R2_008.fastq.gz 12_CTTGTA_L001_R2_009.fastq.gz 12_CTTGTA_L001_R2_010.fastq.gz 12_CTTGTA_L002_R2_001.fastq.gz 12_CTTGTA_L002_R2_002.fastq.gz 12_CTTGTA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329
https://github.com/COMBINE-lab/salmon/issues/329:2703,Security,validat,validateMappings,2703,"fastq.gz 12_CTTGTA_L002_R1_004.fastq.gz 12_CTTGTA_L002_R1_005.fastq.gz 12_CTTGTA_L002_R1_006.fastq.gz 12_CTTGTA_L002_R1_007.fastq.gz 12_CTTGTA_L002_R1_008.fastq.gz 12_CTTGTA_L002_R1_009.fastq.gz 12_CTTGTA_L002_R1_010.fastq.gz }; ### [ mates2 ] => { 12_CTTGTA_L001_R2_001.fastq.gz 12_CTTGTA_L001_R2_002.fastq.gz 12_CTTGTA_L001_R2_003.fastq.gz 12_CTTGTA_L001_R2_004.fastq.gz 12_CTTGTA_L001_R2_005.fastq.gz 12_CTTGTA_L001_R2_006.fastq.gz 12_CTTGTA_L001_R2_007.fastq.gz 12_CTTGTA_L001_R2_008.fastq.gz 12_CTTGTA_L001_R2_009.fastq.gz 12_CTTGTA_L001_R2_010.fastq.gz 12_CTTGTA_L002_R2_001.fastq.gz 12_CTTGTA_L002_R2_002.fastq.gz 12_CTTGTA_L002_R2_003.fastq.gz 12_CTTGTA_L002_R2_004.fastq.gz 12_CTTGTA_L002_R2_005.fastq.gz 12_CTTGTA_L002_R2_006.fastq.gz 12_CTTGTA_L002_R2_007.fastq.gz 12_CTTGTA_L002_R2_008.fastq.gz 12_CTTGTA_L002_R2_009.fastq.gz 12_CTTGTA_L002_R2_010.fastq.gz }; ### [ threads ] => { 8 }; ### [ celseq2 ] => { }; ### [ numCellBootstraps ] => { 100 }; ### [ dumpCsvCounts ] => { }; ### [ output ] => { alevin_outputSingleLibrary/quantSC }; ### [ tgMap ] => { gencode.primary_assembly.v29.tsv }; ### [ whitelist ] => { my_barcode.tsv }. [2018-12-11 10:23:56.120] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-12-11 10:23:56.120] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2018-12-11 10:23:56.120] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-12-11 10:23:56.120] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2018-12-11 10:23:56.120] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2018-12-11 10:23:56.126] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 32 Million barcodes; ```. any help or advice would be appreciated :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329
https://github.com/COMBINE-lab/salmon/issues/329:2865,Security,validat,validateMappings,2865,"fastq.gz 12_CTTGTA_L002_R1_004.fastq.gz 12_CTTGTA_L002_R1_005.fastq.gz 12_CTTGTA_L002_R1_006.fastq.gz 12_CTTGTA_L002_R1_007.fastq.gz 12_CTTGTA_L002_R1_008.fastq.gz 12_CTTGTA_L002_R1_009.fastq.gz 12_CTTGTA_L002_R1_010.fastq.gz }; ### [ mates2 ] => { 12_CTTGTA_L001_R2_001.fastq.gz 12_CTTGTA_L001_R2_002.fastq.gz 12_CTTGTA_L001_R2_003.fastq.gz 12_CTTGTA_L001_R2_004.fastq.gz 12_CTTGTA_L001_R2_005.fastq.gz 12_CTTGTA_L001_R2_006.fastq.gz 12_CTTGTA_L001_R2_007.fastq.gz 12_CTTGTA_L001_R2_008.fastq.gz 12_CTTGTA_L001_R2_009.fastq.gz 12_CTTGTA_L001_R2_010.fastq.gz 12_CTTGTA_L002_R2_001.fastq.gz 12_CTTGTA_L002_R2_002.fastq.gz 12_CTTGTA_L002_R2_003.fastq.gz 12_CTTGTA_L002_R2_004.fastq.gz 12_CTTGTA_L002_R2_005.fastq.gz 12_CTTGTA_L002_R2_006.fastq.gz 12_CTTGTA_L002_R2_007.fastq.gz 12_CTTGTA_L002_R2_008.fastq.gz 12_CTTGTA_L002_R2_009.fastq.gz 12_CTTGTA_L002_R2_010.fastq.gz }; ### [ threads ] => { 8 }; ### [ celseq2 ] => { }; ### [ numCellBootstraps ] => { 100 }; ### [ dumpCsvCounts ] => { }; ### [ output ] => { alevin_outputSingleLibrary/quantSC }; ### [ tgMap ] => { gencode.primary_assembly.v29.tsv }; ### [ whitelist ] => { my_barcode.tsv }. [2018-12-11 10:23:56.120] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-12-11 10:23:56.120] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2018-12-11 10:23:56.120] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-12-11 10:23:56.120] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2018-12-11 10:23:56.120] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2018-12-11 10:23:56.126] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 32 Million barcodes; ```. any help or advice would be appreciated :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329
https://github.com/COMBINE-lab/salmon/issues/329:3015,Security,validat,validateMappings,3015,"fastq.gz 12_CTTGTA_L002_R1_004.fastq.gz 12_CTTGTA_L002_R1_005.fastq.gz 12_CTTGTA_L002_R1_006.fastq.gz 12_CTTGTA_L002_R1_007.fastq.gz 12_CTTGTA_L002_R1_008.fastq.gz 12_CTTGTA_L002_R1_009.fastq.gz 12_CTTGTA_L002_R1_010.fastq.gz }; ### [ mates2 ] => { 12_CTTGTA_L001_R2_001.fastq.gz 12_CTTGTA_L001_R2_002.fastq.gz 12_CTTGTA_L001_R2_003.fastq.gz 12_CTTGTA_L001_R2_004.fastq.gz 12_CTTGTA_L001_R2_005.fastq.gz 12_CTTGTA_L001_R2_006.fastq.gz 12_CTTGTA_L001_R2_007.fastq.gz 12_CTTGTA_L001_R2_008.fastq.gz 12_CTTGTA_L001_R2_009.fastq.gz 12_CTTGTA_L001_R2_010.fastq.gz 12_CTTGTA_L002_R2_001.fastq.gz 12_CTTGTA_L002_R2_002.fastq.gz 12_CTTGTA_L002_R2_003.fastq.gz 12_CTTGTA_L002_R2_004.fastq.gz 12_CTTGTA_L002_R2_005.fastq.gz 12_CTTGTA_L002_R2_006.fastq.gz 12_CTTGTA_L002_R2_007.fastq.gz 12_CTTGTA_L002_R2_008.fastq.gz 12_CTTGTA_L002_R2_009.fastq.gz 12_CTTGTA_L002_R2_010.fastq.gz }; ### [ threads ] => { 8 }; ### [ celseq2 ] => { }; ### [ numCellBootstraps ] => { 100 }; ### [ dumpCsvCounts ] => { }; ### [ output ] => { alevin_outputSingleLibrary/quantSC }; ### [ tgMap ] => { gencode.primary_assembly.v29.tsv }; ### [ whitelist ] => { my_barcode.tsv }. [2018-12-11 10:23:56.120] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-12-11 10:23:56.120] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2018-12-11 10:23:56.120] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-12-11 10:23:56.120] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2018-12-11 10:23:56.120] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2018-12-11 10:23:56.126] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 32 Million barcodes; ```. any help or advice would be appreciated :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329
https://github.com/COMBINE-lab/salmon/issues/329:365,Testability,log,log,365,"alevin (single-cell mode). I am trying to run alevin using a space separated list of (20) files as input. The fastq files we received from sequencing, were separated arbitrarily to keep them at about ~200 MB a file, but they are all the same sample and I wish to treat them as one library. There is no error produced, but it has been running for ~15 hours, and the log files are blank. As a side note, running each ""pair"" works just fine. . v0.12.1; compiled from source ; OS - Ubuntu Linux, x86_64 x86_64 x86_64 GNU/Linux. Alevin is supposed to be able to run with multiple read files, as specified here: https://github.com/COMBINE-lab/salmon/blob/master/doc/source/salmon.rst#providing-multiple-read-files-to-salmon. ```; Logs will be written to /alevin_outputSingleLibrary/quantSC/logs; ### alevin (dscRNA-seq quantification) v0.12.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { AlevinIndex/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { 12_CTTGTA_L001_R1_001.fastq.gz 12_CTTGTA_L001_R1_002.fastq.gz 12_CTTGTA_L001_R1_003.fastq.gz 12_CTTGTA_L001_R1_004.fastq.gz 12_CTTGTA_L001_R1_005.fastq.gz 12_CTTGTA_L001_R1_006.fastq.gz 12_CTTGTA_L001_R1_007.fastq.gz 12_CTTGTA_L001_R1_008.fastq.gz 12_CTTGTA_L001_R1_009.fastq.gz 12_CTTGTA_L001_R1_010.fastq.gz 12_CTTGTA_L002_R1_001.fastq.gz 12_CTTGTA_L002_R1_002.fastq.gz 12_CTTGTA_L002_R1_003.fastq.gz 12_CTTGTA_L002_R1_004.fastq.gz 12_CTTGTA_L002_R1_005.fastq.gz 12_CTTGTA_L002_R1_006.fastq.gz 12_CTTGTA_L002_R1_007.fastq.gz 12_CTTGTA_L002_R1_008.fastq.gz 12_CTTGTA_L002_R1_009.fastq.gz 12_CTTGTA_L002_R1_010.fastq.gz }; ### [ mates2 ] => { 12_CTTGTA_L001_R2_001.fastq.gz 12_CTTGTA_L001_R2_002.fastq.gz 12_CTTGTA_L001_R2_003.fastq.gz 12_CTTGTA_L001_R2_004.fastq.gz 12_CTTGTA_L001_R2_005.fastq.gz 12_CTTGTA_L001_R2_006.fastq.gz 12_CTTGTA_L001_R2_007.fastq.gz 12_CTTGTA_L001_R2_008.fastq.gz 12_CTTGTA_L001_R2_009.fastq.gz 12_CTTGTA_L001_R2_010.fastq.gz 12_CTTGTA_L002_R2_001.fastq.gz 12_CTTGTA_L002_R2_002.fastq.gz 12_CTTGTA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329
https://github.com/COMBINE-lab/salmon/issues/329:724,Testability,Log,Logs,724,"alevin (single-cell mode). I am trying to run alevin using a space separated list of (20) files as input. The fastq files we received from sequencing, were separated arbitrarily to keep them at about ~200 MB a file, but they are all the same sample and I wish to treat them as one library. There is no error produced, but it has been running for ~15 hours, and the log files are blank. As a side note, running each ""pair"" works just fine. . v0.12.1; compiled from source ; OS - Ubuntu Linux, x86_64 x86_64 x86_64 GNU/Linux. Alevin is supposed to be able to run with multiple read files, as specified here: https://github.com/COMBINE-lab/salmon/blob/master/doc/source/salmon.rst#providing-multiple-read-files-to-salmon. ```; Logs will be written to /alevin_outputSingleLibrary/quantSC/logs; ### alevin (dscRNA-seq quantification) v0.12.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { AlevinIndex/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { 12_CTTGTA_L001_R1_001.fastq.gz 12_CTTGTA_L001_R1_002.fastq.gz 12_CTTGTA_L001_R1_003.fastq.gz 12_CTTGTA_L001_R1_004.fastq.gz 12_CTTGTA_L001_R1_005.fastq.gz 12_CTTGTA_L001_R1_006.fastq.gz 12_CTTGTA_L001_R1_007.fastq.gz 12_CTTGTA_L001_R1_008.fastq.gz 12_CTTGTA_L001_R1_009.fastq.gz 12_CTTGTA_L001_R1_010.fastq.gz 12_CTTGTA_L002_R1_001.fastq.gz 12_CTTGTA_L002_R1_002.fastq.gz 12_CTTGTA_L002_R1_003.fastq.gz 12_CTTGTA_L002_R1_004.fastq.gz 12_CTTGTA_L002_R1_005.fastq.gz 12_CTTGTA_L002_R1_006.fastq.gz 12_CTTGTA_L002_R1_007.fastq.gz 12_CTTGTA_L002_R1_008.fastq.gz 12_CTTGTA_L002_R1_009.fastq.gz 12_CTTGTA_L002_R1_010.fastq.gz }; ### [ mates2 ] => { 12_CTTGTA_L001_R2_001.fastq.gz 12_CTTGTA_L001_R2_002.fastq.gz 12_CTTGTA_L001_R2_003.fastq.gz 12_CTTGTA_L001_R2_004.fastq.gz 12_CTTGTA_L001_R2_005.fastq.gz 12_CTTGTA_L001_R2_006.fastq.gz 12_CTTGTA_L001_R2_007.fastq.gz 12_CTTGTA_L001_R2_008.fastq.gz 12_CTTGTA_L001_R2_009.fastq.gz 12_CTTGTA_L001_R2_010.fastq.gz 12_CTTGTA_L002_R2_001.fastq.gz 12_CTTGTA_L002_R2_002.fastq.gz 12_CTTGTA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329
https://github.com/COMBINE-lab/salmon/issues/329:784,Testability,log,logs,784,"alevin (single-cell mode). I am trying to run alevin using a space separated list of (20) files as input. The fastq files we received from sequencing, were separated arbitrarily to keep them at about ~200 MB a file, but they are all the same sample and I wish to treat them as one library. There is no error produced, but it has been running for ~15 hours, and the log files are blank. As a side note, running each ""pair"" works just fine. . v0.12.1; compiled from source ; OS - Ubuntu Linux, x86_64 x86_64 x86_64 GNU/Linux. Alevin is supposed to be able to run with multiple read files, as specified here: https://github.com/COMBINE-lab/salmon/blob/master/doc/source/salmon.rst#providing-multiple-read-files-to-salmon. ```; Logs will be written to /alevin_outputSingleLibrary/quantSC/logs; ### alevin (dscRNA-seq quantification) v0.12.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { AlevinIndex/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { 12_CTTGTA_L001_R1_001.fastq.gz 12_CTTGTA_L001_R1_002.fastq.gz 12_CTTGTA_L001_R1_003.fastq.gz 12_CTTGTA_L001_R1_004.fastq.gz 12_CTTGTA_L001_R1_005.fastq.gz 12_CTTGTA_L001_R1_006.fastq.gz 12_CTTGTA_L001_R1_007.fastq.gz 12_CTTGTA_L001_R1_008.fastq.gz 12_CTTGTA_L001_R1_009.fastq.gz 12_CTTGTA_L001_R1_010.fastq.gz 12_CTTGTA_L002_R1_001.fastq.gz 12_CTTGTA_L002_R1_002.fastq.gz 12_CTTGTA_L002_R1_003.fastq.gz 12_CTTGTA_L002_R1_004.fastq.gz 12_CTTGTA_L002_R1_005.fastq.gz 12_CTTGTA_L002_R1_006.fastq.gz 12_CTTGTA_L002_R1_007.fastq.gz 12_CTTGTA_L002_R1_008.fastq.gz 12_CTTGTA_L002_R1_009.fastq.gz 12_CTTGTA_L002_R1_010.fastq.gz }; ### [ mates2 ] => { 12_CTTGTA_L001_R2_001.fastq.gz 12_CTTGTA_L001_R2_002.fastq.gz 12_CTTGTA_L001_R2_003.fastq.gz 12_CTTGTA_L001_R2_004.fastq.gz 12_CTTGTA_L001_R2_005.fastq.gz 12_CTTGTA_L001_R2_006.fastq.gz 12_CTTGTA_L001_R2_007.fastq.gz 12_CTTGTA_L001_R2_008.fastq.gz 12_CTTGTA_L001_R2_009.fastq.gz 12_CTTGTA_L001_R2_010.fastq.gz 12_CTTGTA_L002_R2_001.fastq.gz 12_CTTGTA_L002_R2_002.fastq.gz 12_CTTGTA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329
https://github.com/COMBINE-lab/salmon/issues/330:383,Performance,load,load,383,"I'm planning on using your wonderful Salmon tool v0.12.0 for generating TPM counts with a view to quantifying relative abundance of certain bacterial antibiotic resistance genes in my shotgun (human gut) metagenomes. So as to ensure strict mappings to the genes of interest, I would like to set the value of the flag '--minScoreFraction' to 0.90. Since its a metagenome with a truck-load of genes from several microbes, I plan to quantify only those genes that show >=90% identity at the nucleotide-level to the known antibiotic resistance genes (of interest). My question here really is whether setting the flag minScoreFraction to 0.90 achieves anything close to what I've in mind? Below is the full command line I used for Salmon-based quantification of the tetracycline resistance gene tetW. salmon quant --meta -i amr_indices/tetW_index -l A -1 Corr_clean_phiclean_10_8_L001_R1_001.fastq.gz -2 Corr_clean_phiclean_10_8_L001_R2_001.fastq.gz -o 10_tetW_test_quant --mimicStrictBT2 --validateMappings --minScoreFraction=0.90. I would highly appreciate any feedback from you in this regard. Many thanks in advance for your time.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/330
https://github.com/COMBINE-lab/salmon/issues/330:986,Security,validat,validateMappings,986,"I'm planning on using your wonderful Salmon tool v0.12.0 for generating TPM counts with a view to quantifying relative abundance of certain bacterial antibiotic resistance genes in my shotgun (human gut) metagenomes. So as to ensure strict mappings to the genes of interest, I would like to set the value of the flag '--minScoreFraction' to 0.90. Since its a metagenome with a truck-load of genes from several microbes, I plan to quantify only those genes that show >=90% identity at the nucleotide-level to the known antibiotic resistance genes (of interest). My question here really is whether setting the flag minScoreFraction to 0.90 achieves anything close to what I've in mind? Below is the full command line I used for Salmon-based quantification of the tetracycline resistance gene tetW. salmon quant --meta -i amr_indices/tetW_index -l A -1 Corr_clean_phiclean_10_8_L001_R1_001.fastq.gz -2 Corr_clean_phiclean_10_8_L001_R2_001.fastq.gz -o 10_tetW_test_quant --mimicStrictBT2 --validateMappings --minScoreFraction=0.90. I would highly appreciate any feedback from you in this regard. Many thanks in advance for your time.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/330
https://github.com/COMBINE-lab/salmon/issues/330:1058,Usability,feedback,feedback,1058,"I'm planning on using your wonderful Salmon tool v0.12.0 for generating TPM counts with a view to quantifying relative abundance of certain bacterial antibiotic resistance genes in my shotgun (human gut) metagenomes. So as to ensure strict mappings to the genes of interest, I would like to set the value of the flag '--minScoreFraction' to 0.90. Since its a metagenome with a truck-load of genes from several microbes, I plan to quantify only those genes that show >=90% identity at the nucleotide-level to the known antibiotic resistance genes (of interest). My question here really is whether setting the flag minScoreFraction to 0.90 achieves anything close to what I've in mind? Below is the full command line I used for Salmon-based quantification of the tetracycline resistance gene tetW. salmon quant --meta -i amr_indices/tetW_index -l A -1 Corr_clean_phiclean_10_8_L001_R1_001.fastq.gz -2 Corr_clean_phiclean_10_8_L001_R2_001.fastq.gz -o 10_tetW_test_quant --mimicStrictBT2 --validateMappings --minScoreFraction=0.90. I would highly appreciate any feedback from you in this regard. Many thanks in advance for your time.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/330
https://github.com/COMBINE-lab/salmon/issues/331:409,Availability,Error,Error,409,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331
https://github.com/COMBINE-lab/salmon/issues/331:547,Availability,error,errors,547,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331
https://github.com/COMBINE-lab/salmon/issues/331:48,Deployability,install,install,48,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331
https://github.com/COMBINE-lab/salmon/issues/331:192,Deployability,Release,Release,192,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331
https://github.com/COMBINE-lab/salmon/issues/331:173,Integrability,message,message,173,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331
https://github.com/COMBINE-lab/salmon/issues/331:438,Integrability,message,message,438,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331
https://github.com/COMBINE-lab/salmon/issues/331:523,Modifiability,Config,Configuring,523,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331
https://github.com/COMBINE-lab/salmon/issues/331:641,Testability,log,log,641,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331
https://github.com/COMBINE-lab/salmon/issues/331:723,Testability,log,log,723,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331
https://github.com/COMBINE-lab/salmon/issues/333:782,Availability,error,error,782,"I'm trying to process the 10X 1.3 Million Brain Cells from E18 Mice dataset using Alevin with compiled salmon version 0.12.0 using the gencode.vM19.pc_transcripts.fa.gz as reference (https://support.10xgenomics.com/single-cell-gene-expression/datasets/1.3.0/1M_neurons). The chemistry used is the 10x-v2. I have divided the fastqs into the 133 libraries and I'm trying to run Alevin per library fastqs (~140 r1 fastqs per library). The dataset has been processed with the longranger demux program, which outputs one fastq with both the UMI+barcode and read-sequence. I have divided the fastqs so that it corresponds to the input of Alevin (i.e. the UMI+barcode in one fastq and the read-sequence in the other). However it seems that Alevin gets stuck on processing the barcodes, no error code is produced it just doesn't seem to do anything anymore with just ""processed X Million barcodes"" printed on the screen. Are you aware of such a problem with many fastq files or is there something that I'm not taking into account? Is there a limit how many files can be used as an input? I tested Alevin with 60 fastqs (120 in total r1+r2 fastqs) and it ran through but with more than 60 fastqs it seems to get stuck on processing the barcodes. If it is not possible to run all the library related fastqs, do you recommend running them in smaller batches and then combining the resulting count matrices?. Command used: salmon alevin -l ISR -1 R1_fastqs -2 R2_fastqs --chromium -i index -p 20 -o alevin_output --tgMap txp2gene_mouse.tsv --dumpCsvCounts --whitelist barcode_whitelist.txt --minScoreFraction 0.7. The barcode whitelist was gotten from the HDF5 file which has the original data in a filtered matrix format (it has been run through the cellranger).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/333
https://github.com/COMBINE-lab/salmon/issues/333:1082,Testability,test,tested,1082,"I'm trying to process the 10X 1.3 Million Brain Cells from E18 Mice dataset using Alevin with compiled salmon version 0.12.0 using the gencode.vM19.pc_transcripts.fa.gz as reference (https://support.10xgenomics.com/single-cell-gene-expression/datasets/1.3.0/1M_neurons). The chemistry used is the 10x-v2. I have divided the fastqs into the 133 libraries and I'm trying to run Alevin per library fastqs (~140 r1 fastqs per library). The dataset has been processed with the longranger demux program, which outputs one fastq with both the UMI+barcode and read-sequence. I have divided the fastqs so that it corresponds to the input of Alevin (i.e. the UMI+barcode in one fastq and the read-sequence in the other). However it seems that Alevin gets stuck on processing the barcodes, no error code is produced it just doesn't seem to do anything anymore with just ""processed X Million barcodes"" printed on the screen. Are you aware of such a problem with many fastq files or is there something that I'm not taking into account? Is there a limit how many files can be used as an input? I tested Alevin with 60 fastqs (120 in total r1+r2 fastqs) and it ran through but with more than 60 fastqs it seems to get stuck on processing the barcodes. If it is not possible to run all the library related fastqs, do you recommend running them in smaller batches and then combining the resulting count matrices?. Command used: salmon alevin -l ISR -1 R1_fastqs -2 R2_fastqs --chromium -i index -p 20 -o alevin_output --tgMap txp2gene_mouse.tsv --dumpCsvCounts --whitelist barcode_whitelist.txt --minScoreFraction 0.7. The barcode whitelist was gotten from the HDF5 file which has the original data in a filtered matrix format (it has been run through the cellranger).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/333
https://github.com/COMBINE-lab/salmon/issues/334:187,Availability,error,error,187,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin. **Describe the bug**; `Wrong barcode-end parameters`; `[2019-01-17 15:50:10.269] [jointLog] [error] wrong barcode-end parameters.; Please report this bug on Github`. **To Reproduce**; Steps and data to reproduce the behavior:; `./Software/salmon-0.12.0_linux_x86_64/bin/salmon alevin -l ISR ; -1 Data/Fastq/PBMC6_PolyTTrimmed.R2.fq.gz; -2 Data/Fastq/PBMC6_PolyTTrimmed.R1.fq.gz; --chromiumV3; --barcodeLength 11; --umiLength 12; --end 3; --debug; --validateMapping; --minScoreFraction 0.8; -p 10; -i Reference/GENCODE_v29_Human_SalmonIndex_0_12_0/; --tgMap Reference/GENCODE_v29_Human.genemap.txt; -o Quantifications/pbmc6_alevin_onecell_UMI12_3Prime/`. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.12.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloadable executable; * Which reference (e.g. transcriptome) was used? GENCODE V29; * Which read files were used? in house from 1CellBio data ; * Which which program options were used? see above command, but I suspect it's the `--end 3` causing issues. **Expected behavior**; No error to be thrown. **Screenshots**; NA. **Desktop (please complete the following information):**; - OS: RHEL ; - Version 7.3. **Additional context**; NA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/334
https://github.com/COMBINE-lab/salmon/issues/334:896,Availability,down,downloaded,896,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin. **Describe the bug**; `Wrong barcode-end parameters`; `[2019-01-17 15:50:10.269] [jointLog] [error] wrong barcode-end parameters.; Please report this bug on Github`. **To Reproduce**; Steps and data to reproduce the behavior:; `./Software/salmon-0.12.0_linux_x86_64/bin/salmon alevin -l ISR ; -1 Data/Fastq/PBMC6_PolyTTrimmed.R2.fq.gz; -2 Data/Fastq/PBMC6_PolyTTrimmed.R1.fq.gz; --chromiumV3; --barcodeLength 11; --umiLength 12; --end 3; --debug; --validateMapping; --minScoreFraction 0.8; -p 10; -i Reference/GENCODE_v29_Human_SalmonIndex_0_12_0/; --tgMap Reference/GENCODE_v29_Human.genemap.txt; -o Quantifications/pbmc6_alevin_onecell_UMI12_3Prime/`. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.12.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloadable executable; * Which reference (e.g. transcriptome) was used? GENCODE V29; * Which read files were used? in house from 1CellBio data ; * Which which program options were used? see above command, but I suspect it's the `--end 3` causing issues. **Expected behavior**; No error to be thrown. **Screenshots**; NA. **Desktop (please complete the following information):**; - OS: RHEL ; - Version 7.3. **Additional context**; NA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/334
https://github.com/COMBINE-lab/salmon/issues/334:938,Availability,down,downloadable,938,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin. **Describe the bug**; `Wrong barcode-end parameters`; `[2019-01-17 15:50:10.269] [jointLog] [error] wrong barcode-end parameters.; Please report this bug on Github`. **To Reproduce**; Steps and data to reproduce the behavior:; `./Software/salmon-0.12.0_linux_x86_64/bin/salmon alevin -l ISR ; -1 Data/Fastq/PBMC6_PolyTTrimmed.R2.fq.gz; -2 Data/Fastq/PBMC6_PolyTTrimmed.R1.fq.gz; --chromiumV3; --barcodeLength 11; --umiLength 12; --end 3; --debug; --validateMapping; --minScoreFraction 0.8; -p 10; -i Reference/GENCODE_v29_Human_SalmonIndex_0_12_0/; --tgMap Reference/GENCODE_v29_Human.genemap.txt; -o Quantifications/pbmc6_alevin_onecell_UMI12_3Prime/`. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.12.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloadable executable; * Which reference (e.g. transcriptome) was used? GENCODE V29; * Which read files were used? in house from 1CellBio data ; * Which which program options were used? see above command, but I suspect it's the `--end 3` causing issues. **Expected behavior**; No error to be thrown. **Screenshots**; NA. **Desktop (please complete the following information):**; - OS: RHEL ; - Version 7.3. **Additional context**; NA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/334
https://github.com/COMBINE-lab/salmon/issues/334:1220,Availability,error,error,1220,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin. **Describe the bug**; `Wrong barcode-end parameters`; `[2019-01-17 15:50:10.269] [jointLog] [error] wrong barcode-end parameters.; Please report this bug on Github`. **To Reproduce**; Steps and data to reproduce the behavior:; `./Software/salmon-0.12.0_linux_x86_64/bin/salmon alevin -l ISR ; -1 Data/Fastq/PBMC6_PolyTTrimmed.R2.fq.gz; -2 Data/Fastq/PBMC6_PolyTTrimmed.R1.fq.gz; --chromiumV3; --barcodeLength 11; --umiLength 12; --end 3; --debug; --validateMapping; --minScoreFraction 0.8; -p 10; -i Reference/GENCODE_v29_Human_SalmonIndex_0_12_0/; --tgMap Reference/GENCODE_v29_Human.genemap.txt; -o Quantifications/pbmc6_alevin_onecell_UMI12_3Prime/`. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.12.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloadable executable; * Which reference (e.g. transcriptome) was used? GENCODE V29; * Which read files were used? in house from 1CellBio data ; * Which which program options were used? see above command, but I suspect it's the `--end 3` causing issues. **Expected behavior**; No error to be thrown. **Screenshots**; NA. **Desktop (please complete the following information):**; - OS: RHEL ; - Version 7.3. **Additional context**; NA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/334
https://github.com/COMBINE-lab/salmon/issues/334:875,Deployability,install,installed,875,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin. **Describe the bug**; `Wrong barcode-end parameters`; `[2019-01-17 15:50:10.269] [jointLog] [error] wrong barcode-end parameters.; Please report this bug on Github`. **To Reproduce**; Steps and data to reproduce the behavior:; `./Software/salmon-0.12.0_linux_x86_64/bin/salmon alevin -l ISR ; -1 Data/Fastq/PBMC6_PolyTTrimmed.R2.fq.gz; -2 Data/Fastq/PBMC6_PolyTTrimmed.R1.fq.gz; --chromiumV3; --barcodeLength 11; --umiLength 12; --end 3; --debug; --validateMapping; --minScoreFraction 0.8; -p 10; -i Reference/GENCODE_v29_Human_SalmonIndex_0_12_0/; --tgMap Reference/GENCODE_v29_Human.genemap.txt; -o Quantifications/pbmc6_alevin_onecell_UMI12_3Prime/`. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.12.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloadable executable; * Which reference (e.g. transcriptome) was used? GENCODE V29; * Which read files were used? in house from 1CellBio data ; * Which which program options were used? see above command, but I suspect it's the `--end 3` causing issues. **Expected behavior**; No error to be thrown. **Screenshots**; NA. **Desktop (please complete the following information):**; - OS: RHEL ; - Version 7.3. **Additional context**; NA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/334
https://github.com/COMBINE-lab/salmon/issues/334:543,Security,validat,validateMapping,543,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin. **Describe the bug**; `Wrong barcode-end parameters`; `[2019-01-17 15:50:10.269] [jointLog] [error] wrong barcode-end parameters.; Please report this bug on Github`. **To Reproduce**; Steps and data to reproduce the behavior:; `./Software/salmon-0.12.0_linux_x86_64/bin/salmon alevin -l ISR ; -1 Data/Fastq/PBMC6_PolyTTrimmed.R2.fq.gz; -2 Data/Fastq/PBMC6_PolyTTrimmed.R1.fq.gz; --chromiumV3; --barcodeLength 11; --umiLength 12; --end 3; --debug; --validateMapping; --minScoreFraction 0.8; -p 10; -i Reference/GENCODE_v29_Human_SalmonIndex_0_12_0/; --tgMap Reference/GENCODE_v29_Human.genemap.txt; -o Quantifications/pbmc6_alevin_onecell_UMI12_3Prime/`. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.12.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloadable executable; * Which reference (e.g. transcriptome) was used? GENCODE V29; * Which read files were used? in house from 1CellBio data ; * Which which program options were used? see above command, but I suspect it's the `--end 3` causing issues. **Expected behavior**; No error to be thrown. **Screenshots**; NA. **Desktop (please complete the following information):**; - OS: RHEL ; - Version 7.3. **Additional context**; NA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/334
https://github.com/COMBINE-lab/salmon/issues/335:1938,Modifiability,portab,portable,1938,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Either. **Describe the bug**; This is really a feature request -- apologies if it shouldn't go here. Bowtie and similar tools (e.g. STAR) can use memory mapping or shared memory for the genome index. This has a nice benefit: in scenarios where N Bowtie processes simultaneously aligning to the same index on the same system, the index memory footprint is incurred once (not N times). I may soon be running many simultaneous `salmon quant` processes on the sam system, all quantifying with respect to the same (human) transcriptome index. The memory footprint is around 3GB, which adds up when there are many `salmon quants`s. I don't expect to have lots of free RAM on this system, since other simultaneously-running processes will be aligning and incurring a much larger footprint (but using shared memory). If salmon used memory mapping or shared memory for the index, I basically wouldn't have to worry about the peak memory footprint breaking the budget. Hence the request!. **To Reproduce**; Steps and data to reproduce the behavior:. * I looked in the issues and in the documentation for Salmon 0.11.3 and couldn't find any indication this is supported.; * I ran a bunch of simultaneous `salmon quant`s w/r/t the same index on a Linux system. Running `top` showed a very low number in the `SHR` column for those processes (with a high number, ~3GB, in the `RES` column), consistent with their not using shared memory or memory mapping. **Expected behavior**; A good way to test if it's working is to run simultaneous processes w/ same index and check the `SHR` column in `top`. If it's working, that should should be some large size. **Screenshots**; N/A. **Desktop (please complete the following information):**; I'm mainly interested in seeing this feature for Linux, but it's great if it works elsewhere too. Some of these mechanisms are more portable than others. **Additional context**; N/A",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/335
https://github.com/COMBINE-lab/salmon/issues/335:1565,Testability,test,test,1565,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Either. **Describe the bug**; This is really a feature request -- apologies if it shouldn't go here. Bowtie and similar tools (e.g. STAR) can use memory mapping or shared memory for the genome index. This has a nice benefit: in scenarios where N Bowtie processes simultaneously aligning to the same index on the same system, the index memory footprint is incurred once (not N times). I may soon be running many simultaneous `salmon quant` processes on the sam system, all quantifying with respect to the same (human) transcriptome index. The memory footprint is around 3GB, which adds up when there are many `salmon quants`s. I don't expect to have lots of free RAM on this system, since other simultaneously-running processes will be aligning and incurring a much larger footprint (but using shared memory). If salmon used memory mapping or shared memory for the index, I basically wouldn't have to worry about the peak memory footprint breaking the budget. Hence the request!. **To Reproduce**; Steps and data to reproduce the behavior:. * I looked in the issues and in the documentation for Salmon 0.11.3 and couldn't find any indication this is supported.; * I ran a bunch of simultaneous `salmon quant`s w/r/t the same index on a Linux system. Running `top` showed a very low number in the `SHR` column for those processes (with a high number, ~3GB, in the `RES` column), consistent with their not using shared memory or memory mapping. **Expected behavior**; A good way to test if it's working is to run simultaneous processes w/ same index and check the `SHR` column in `top`. If it's working, that should should be some large size. **Screenshots**; N/A. **Desktop (please complete the following information):**; I'm mainly interested in seeing this feature for Linux, but it's great if it works elsewhere too. Some of these mechanisms are more portable than others. **Additional context**; N/A",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/335
https://github.com/COMBINE-lab/salmon/issues/336:84,Deployability,pipeline,pipeline,84,"Hi all,. I'm working on setting up alevin as part of a single-cell RNA-seq analysis pipeline, and I'm running into problems with the gene-transcript mapping. . The issue is basically the same as in a previous thread [here](https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283473242), in which the Ensembl cDNA fasta file contains some noncoding transcripts that are not present in the corresponding GTF file. I am using Ensembl release 95 (ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz and ftp://ftp.ensembl.org/pub/release-95/gtf/homo_sapiens/Homo_sapiens.GRCh38.95.gtf.gz). In the case of Salmon it was suggested to just filter the gene-level quantification file after the fact; however, this isn't possible with Alevin, because it appears to enforce a complete mapping and to crash if it is incomplete. The only solution I can come up with is to manually identify which transcripts are not present in the GTF and filter them out of the fasta file before indexing, but this is really a pain and not a very reproducible solution (it would have to be re-done for every new version, etc.). I would suggest enabling the option to just not include transcripts that don't have a gene-level mapping; however, I'm also open to other suggestions. Thanks for your help and for working on such a great tool!; Sarah",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/336
https://github.com/COMBINE-lab/salmon/issues/336:441,Deployability,release,release,441,"Hi all,. I'm working on setting up alevin as part of a single-cell RNA-seq analysis pipeline, and I'm running into problems with the gene-transcript mapping. . The issue is basically the same as in a previous thread [here](https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283473242), in which the Ensembl cDNA fasta file contains some noncoding transcripts that are not present in the corresponding GTF file. I am using Ensembl release 95 (ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz and ftp://ftp.ensembl.org/pub/release-95/gtf/homo_sapiens/Homo_sapiens.GRCh38.95.gtf.gz). In the case of Salmon it was suggested to just filter the gene-level quantification file after the fact; however, this isn't possible with Alevin, because it appears to enforce a complete mapping and to crash if it is incomplete. The only solution I can come up with is to manually identify which transcripts are not present in the GTF and filter them out of the fasta file before indexing, but this is really a pain and not a very reproducible solution (it would have to be re-done for every new version, etc.). I would suggest enabling the option to just not include transcripts that don't have a gene-level mapping; however, I'm also open to other suggestions. Thanks for your help and for working on such a great tool!; Sarah",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/336
https://github.com/COMBINE-lab/salmon/issues/336:479,Deployability,release,release-,479,"Hi all,. I'm working on setting up alevin as part of a single-cell RNA-seq analysis pipeline, and I'm running into problems with the gene-transcript mapping. . The issue is basically the same as in a previous thread [here](https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283473242), in which the Ensembl cDNA fasta file contains some noncoding transcripts that are not present in the corresponding GTF file. I am using Ensembl release 95 (ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz and ftp://ftp.ensembl.org/pub/release-95/gtf/homo_sapiens/Homo_sapiens.GRCh38.95.gtf.gz). In the case of Salmon it was suggested to just filter the gene-level quantification file after the fact; however, this isn't possible with Alevin, because it appears to enforce a complete mapping and to crash if it is incomplete. The only solution I can come up with is to manually identify which transcripts are not present in the GTF and filter them out of the fasta file before indexing, but this is really a pain and not a very reproducible solution (it would have to be re-done for every new version, etc.). I would suggest enabling the option to just not include transcripts that don't have a gene-level mapping; however, I'm also open to other suggestions. Thanks for your help and for working on such a great tool!; Sarah",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/336
https://github.com/COMBINE-lab/salmon/issues/336:579,Deployability,release,release-,579,"Hi all,. I'm working on setting up alevin as part of a single-cell RNA-seq analysis pipeline, and I'm running into problems with the gene-transcript mapping. . The issue is basically the same as in a previous thread [here](https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283473242), in which the Ensembl cDNA fasta file contains some noncoding transcripts that are not present in the corresponding GTF file. I am using Ensembl release 95 (ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz and ftp://ftp.ensembl.org/pub/release-95/gtf/homo_sapiens/Homo_sapiens.GRCh38.95.gtf.gz). In the case of Salmon it was suggested to just filter the gene-level quantification file after the fact; however, this isn't possible with Alevin, because it appears to enforce a complete mapping and to crash if it is incomplete. The only solution I can come up with is to manually identify which transcripts are not present in the GTF and filter them out of the fasta file before indexing, but this is really a pain and not a very reproducible solution (it would have to be re-done for every new version, etc.). I would suggest enabling the option to just not include transcripts that don't have a gene-level mapping; however, I'm also open to other suggestions. Thanks for your help and for working on such a great tool!; Sarah",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/336
https://github.com/COMBINE-lab/salmon/issues/337:307,Availability,fault,fault,307,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337
https://github.com/COMBINE-lab/salmon/issues/337:1300,Availability,fault,fault,1300,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337
https://github.com/COMBINE-lab/salmon/issues/337:1361,Deployability,install,installed,1361,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337
https://github.com/COMBINE-lab/salmon/issues/337:1538,Deployability,install,installed,1538,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337
https://github.com/COMBINE-lab/salmon/issues/337:1602,Deployability,install,install,1602,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337
https://github.com/COMBINE-lab/salmon/issues/337:1397,Energy Efficiency,allocate,allocated,1397,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337
https://github.com/COMBINE-lab/salmon/issues/337:75,Testability,test,test,75,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337
https://github.com/COMBINE-lab/salmon/issues/337:861,Usability,Clear,Clearing,861,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337
https://github.com/COMBINE-lab/salmon/issues/339:1245,Availability,repair,repair,1245,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339
https://github.com/COMBINE-lab/salmon/issues/339:1022,Energy Efficiency,adapt,adapters,1022,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339
https://github.com/COMBINE-lab/salmon/issues/339:1264,Energy Efficiency,adapt,adapter,1264,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339
https://github.com/COMBINE-lab/salmon/issues/339:1331,Energy Efficiency,adapt,adapters,1331,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339
https://github.com/COMBINE-lab/salmon/issues/339:529,Integrability,protocol,protocol,529,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339
https://github.com/COMBINE-lab/salmon/issues/339:1022,Integrability,adapter,adapters,1022,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339
https://github.com/COMBINE-lab/salmon/issues/339:1264,Integrability,adapter,adapter,1264,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339
https://github.com/COMBINE-lab/salmon/issues/339:1331,Integrability,adapter,adapters,1331,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339
https://github.com/COMBINE-lab/salmon/issues/339:1022,Modifiability,adapt,adapters,1022,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339
https://github.com/COMBINE-lab/salmon/issues/339:1150,Modifiability,variab,variable,1150,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339
https://github.com/COMBINE-lab/salmon/issues/339:1264,Modifiability,adapt,adapter,1264,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339
https://github.com/COMBINE-lab/salmon/issues/339:1331,Modifiability,adapt,adapters,1331,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339
https://github.com/COMBINE-lab/salmon/issues/339:413,Testability,test,test,413,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339
https://github.com/COMBINE-lab/salmon/issues/340:5057,Availability,error,error,5057,"g; [2019-01-29 16:06:46.957] [alevinLog] [info] Finished optimizer; ```. ### no whitelist, expectCells 3000. ```; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:1238,Performance,Load,Loading,1238,"ells 3000; ```; [2019-01-29 15:49:33.693] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:49:33.693] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:49:35.112] [alevinLog] [info] Total 49.4292% reads will be thrown away because of noisy Cellular barcodes.; [2019-01-29 15:49:35.112] [alevinLog] [info] Total 4000(has 1000 low confidence) barcodes; [2019-01-29 15:49:35.251] [alevinLog] [info] Done True Barcode Sampling; [2019-01-29 15:49:35.896] [alevinLog] [info] Done populating Z matrix; [2019-01-29 15:49:35.994] [alevinLog] [info] Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.67",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:1369,Performance,Load,Loading,1369,"g] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:49:35.112] [alevinLog] [info] Total 49.4292% reads will be thrown away because of noisy Cellular barcodes.; [2019-01-29 15:49:35.112] [alevinLog] [info] Total 4000(has 1000 low confidence) barcodes; [2019-01-29 15:49:35.251] [alevinLog] [info] Done True Barcode Sampling; [2019-01-29 15:49:35.896] [alevinLog] [info] Done populating Z matrix; [2019-01-29 15:49:35.994] [alevinLog] [info] Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Foun",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:1434,Performance,Load,Loading,1434,"35.112] [alevinLog] [info] Total 49.4292% reads will be thrown away because of noisy Cellular barcodes.; [2019-01-29 15:49:35.112] [alevinLog] [info] Total 4000(has 1000 low confidence) barcodes; [2019-01-29 15:49:35.251] [alevinLog] [info] Done True Barcode Sampling; [2019-01-29 15:49:35.896] [alevinLog] [info] Done populating Z matrix; [2019-01-29 15:49:35.994] [alevinLog] [info] Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; P",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:1507,Performance,Load,Loading,1507,"ause of noisy Cellular barcodes.; [2019-01-29 15:49:35.112] [alevinLog] [info] Total 4000(has 1000 low confidence) barcodes; [2019-01-29 15:49:35.251] [alevinLog] [info] Done True Barcode Sampling; [2019-01-29 15:49:35.896] [alevinLog] [info] Done populating Z matrix; [2019-01-29 15:49:35.994] [alevinLog] [info] Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:1577,Performance,Load,Loading,1577,"info] Total 4000(has 1000 low confidence) barcodes; [2019-01-29 15:49:35.251] [alevinLog] [info] Done True Barcode Sampling; [2019-01-29 15:49:35.896] [alevinLog] [info] Done populating Z matrix; [2019-01-29 15:49:35.994] [alevinLog] [info] Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:46.678] [jointLog] [info] Mapping rate = 20.1566%. [2019-01-29 16:05:46.67",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:1836,Performance,load,loading,1836,"Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:46.678] [jointLog] [info] Mapping rate = 20.1566%. [2019-01-29 16:05:46.678] [jointLog] [info] finished quantifyLibrary(); [2019-01-29 16:05:51.316] [alevinLog] [info] Starting optimizer. **Analyzed 4000 cells (100% of all).**; [2019-01-29 16:06:27.447] [alevinLog] [info] Total 20167967.00 UMI after deduplicating.;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:1900,Performance,load,loading,1900,"tal Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:46.678] [jointLog] [info] Mapping rate = 20.1566%. [2019-01-29 16:05:46.678] [jointLog] [info] finished quantifyLibrary(); [2019-01-29 16:05:51.316] [alevinLog] [info] Starting optimizer. **Analyzed 4000 cells (100% of all).**; [2019-01-29 16:06:27.447] [alevinLog] [info] Total 20167967.00 UMI after deduplicating.; [2019-01-29 16:06:27.475] [alevinLog] [info] Clearing EqMap; Might tak",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:2694,Performance,optimiz,optimizer,2694," the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:46.678] [jointLog] [info] Mapping rate = 20.1566%. [2019-01-29 16:05:46.678] [jointLog] [info] finished quantifyLibrary(); [2019-01-29 16:05:51.316] [alevinLog] [info] Starting optimizer. **Analyzed 4000 cells (100% of all).**; [2019-01-29 16:06:27.447] [alevinLog] [info] Total 20167967.00 UMI after deduplicating.; [2019-01-29 16:06:27.475] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-29 16:06:39.341] [alevinLog] [info] Starting Import of the gene count matrix of size 4000x29574.; [2019-01-29 16:06:40.089] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-29 16:06:45.902] [alevinLog] [info] Done Importing gene count matrix for dimension 4000x29574; 0.00248159 1.3538e-06 0.000205983 221334; 0.00714905 1.09739e-06 0.000617623 71036.5; [2019-01-29 16:06:46.603] [alevinLog] [info] Starting white listing; [2019-01-29 16:06:46.615] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2019-01-29 16:06:46.615] [alevinLog] [info] Total 4000 barcodes found; [2019-01-29 16:06:46.615] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:4121,Performance,optimiz,optimizer,4121,"-01-29 16:06:45.902] [alevinLog] [info] Done Importing gene count matrix for dimension 4000x29574; 0.00248159 1.3538e-06 0.000205983 221334; 0.00714905 1.09739e-06 0.000617623 71036.5; [2019-01-29 16:06:46.603] [alevinLog] [info] Starting white listing; [2019-01-29 16:06:46.615] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2019-01-29 16:06:46.615] [alevinLog] [info] Total 4000 barcodes found; [2019-01-29 16:06:46.615] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [info] Starting to make feature Matrix; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making regular featues; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making feature Matrix; [2019-01-29 16:06:46.871] [alevinLog] [info] Finished white listing; [2019-01-29 16:06:46.957] [alevinLog] [info] Finished optimizer; ```. ### no whitelist, expectCells 3000. ```; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:6130,Performance,Load,Loading,6130,"hitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086 targets; [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [info] finished quantifyLibrary(). cat alevin/alevin.log; [2019-01-28 21:02:08.496] [alevinLog] [info] Processing barcodes files (if Present). [2019-01-28 21:07:56.106] [alevinLog] [info] Done barcode density calculation.; [2019-01-28 21:07:56.106] [alevinLog] [info] # Barcodes Used: 287883370 / 2879",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:6195,Performance,Load,Loading,6195,"the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086 targets; [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [info] finished quantifyLibrary(). cat alevin/alevin.log; [2019-01-28 21:02:08.496] [alevinLog] [info] Processing barcodes files (if Present). [2019-01-28 21:07:56.106] [alevinLog] [info] Done barcode density calculation.; [2019-01-28 21:07:56.106] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-28 21:07:57.808] [alevinLog] [info] Done importing ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:7969,Performance,optimiz,optimizer,7969,"odes files (if Present). [2019-01-28 21:07:56.106] [alevinLog] [info] Done barcode density calculation.; [2019-01-28 21:07:56.106] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-28 21:07:57.808] [alevinLog] [info] Done importing white-list Barcodes; [2019-01-28 21:07:58.273] [alevinLog] [warning] Skipping 290359 Barcodes with 0 reads; Assuming this is the required behavior.; [2019-01-28 21:07:58.517] [alevinLog] [info] Total 446921 white-listed Barcodes; [2019-01-28 21:09:02.029] [alevinLog] [info] Done populating Z matrix; [2019-01-28 21:09:02.331] [alevinLog] [info] Done indexing Barcodes; [2019-01-28 21:09:02.331] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-28 21:09:02.331] [alevinLog] [info] Used Barcodes except Whitelist: 168781; [2019-01-28 21:09:02.559] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-28 21:09:02.559] [alevinLog] [info] parsing read library format; [2019-01-28 21:40:44.514] [alevinLog] [info] Starting optimizer. [2019-01-28 22:05:50.958] [alevinLog] [info] Total 39006157.00 UMI after deduplicating.; [2019-01-28 22:05:50.960] [alevinLog] [warning] Skipped 160108 barcodes due to No mapped read; [2019-01-28 22:11:23.270] [alevinLog] [info] Finished optimizer. [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [info] finished quantifyLibrary(); [2019-01-28 21:40:44.514] [alevinLog] [info] Starting optimizer. Analyzed 446921 cells (100% of all).; [2019-01-28 22:05:50.958] [alevinLog] [info] Total 39006157.00 UMI after deduplicating.; [2019-01-28 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:8218,Performance,optimiz,optimizer,8218,"Barcodes Used: 287883370 / 287983348.; [2019-01-28 21:07:57.808] [alevinLog] [info] Done importing white-list Barcodes; [2019-01-28 21:07:58.273] [alevinLog] [warning] Skipping 290359 Barcodes with 0 reads; Assuming this is the required behavior.; [2019-01-28 21:07:58.517] [alevinLog] [info] Total 446921 white-listed Barcodes; [2019-01-28 21:09:02.029] [alevinLog] [info] Done populating Z matrix; [2019-01-28 21:09:02.331] [alevinLog] [info] Done indexing Barcodes; [2019-01-28 21:09:02.331] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-28 21:09:02.331] [alevinLog] [info] Used Barcodes except Whitelist: 168781; [2019-01-28 21:09:02.559] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-28 21:09:02.559] [alevinLog] [info] parsing read library format; [2019-01-28 21:40:44.514] [alevinLog] [info] Starting optimizer. [2019-01-28 22:05:50.958] [alevinLog] [info] Total 39006157.00 UMI after deduplicating.; [2019-01-28 22:05:50.960] [alevinLog] [warning] Skipped 160108 barcodes due to No mapped read; [2019-01-28 22:11:23.270] [alevinLog] [info] Finished optimizer. [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [info] finished quantifyLibrary(); [2019-01-28 21:40:44.514] [alevinLog] [info] Starting optimizer. Analyzed 446921 cells (100% of all).; [2019-01-28 22:05:50.958] [alevinLog] [info] Total 39006157.00 UMI after deduplicating.; [2019-01-28 22:05:50.960] [alevinLog] [warning] Skipped 160108 barcodes due to No mapped read; [2019-01-28 22:11:23.270] [alevinLog] [info] Finished optimizer. ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:8808,Performance,optimiz,optimizer,8808,"Barcodes Used: 287883370 / 287983348.; [2019-01-28 21:07:57.808] [alevinLog] [info] Done importing white-list Barcodes; [2019-01-28 21:07:58.273] [alevinLog] [warning] Skipping 290359 Barcodes with 0 reads; Assuming this is the required behavior.; [2019-01-28 21:07:58.517] [alevinLog] [info] Total 446921 white-listed Barcodes; [2019-01-28 21:09:02.029] [alevinLog] [info] Done populating Z matrix; [2019-01-28 21:09:02.331] [alevinLog] [info] Done indexing Barcodes; [2019-01-28 21:09:02.331] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-28 21:09:02.331] [alevinLog] [info] Used Barcodes except Whitelist: 168781; [2019-01-28 21:09:02.559] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-28 21:09:02.559] [alevinLog] [info] parsing read library format; [2019-01-28 21:40:44.514] [alevinLog] [info] Starting optimizer. [2019-01-28 22:05:50.958] [alevinLog] [info] Total 39006157.00 UMI after deduplicating.; [2019-01-28 22:05:50.960] [alevinLog] [warning] Skipped 160108 barcodes due to No mapped read; [2019-01-28 22:11:23.270] [alevinLog] [info] Finished optimizer. [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [info] finished quantifyLibrary(); [2019-01-28 21:40:44.514] [alevinLog] [info] Starting optimizer. Analyzed 446921 cells (100% of all).; [2019-01-28 22:05:50.958] [alevinLog] [info] Total 39006157.00 UMI after deduplicating.; [2019-01-28 22:05:50.960] [alevinLog] [warning] Skipped 160108 barcodes due to No mapped read; [2019-01-28 22:11:23.270] [alevinLog] [info] Finished optimizer. ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:9095,Performance,optimiz,optimizer,9095,"Barcodes Used: 287883370 / 287983348.; [2019-01-28 21:07:57.808] [alevinLog] [info] Done importing white-list Barcodes; [2019-01-28 21:07:58.273] [alevinLog] [warning] Skipping 290359 Barcodes with 0 reads; Assuming this is the required behavior.; [2019-01-28 21:07:58.517] [alevinLog] [info] Total 446921 white-listed Barcodes; [2019-01-28 21:09:02.029] [alevinLog] [info] Done populating Z matrix; [2019-01-28 21:09:02.331] [alevinLog] [info] Done indexing Barcodes; [2019-01-28 21:09:02.331] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-28 21:09:02.331] [alevinLog] [info] Used Barcodes except Whitelist: 168781; [2019-01-28 21:09:02.559] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-28 21:09:02.559] [alevinLog] [info] parsing read library format; [2019-01-28 21:40:44.514] [alevinLog] [info] Starting optimizer. [2019-01-28 22:05:50.958] [alevinLog] [info] Total 39006157.00 UMI after deduplicating.; [2019-01-28 22:05:50.960] [alevinLog] [warning] Skipped 160108 barcodes due to No mapped read; [2019-01-28 22:11:23.270] [alevinLog] [info] Finished optimizer. [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [info] finished quantifyLibrary(); [2019-01-28 21:40:44.514] [alevinLog] [info] Starting optimizer. Analyzed 446921 cells (100% of all).; [2019-01-28 22:05:50.958] [alevinLog] [info] Total 39006157.00 UMI after deduplicating.; [2019-01-28 22:05:50.960] [alevinLog] [warning] Skipped 160108 barcodes due to No mapped read; [2019-01-28 22:11:23.270] [alevinLog] [info] Finished optimizer. ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:1844,Security,hash,hash,1844,"Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:46.678] [jointLog] [info] Mapping rate = 20.1566%. [2019-01-29 16:05:46.678] [jointLog] [info] finished quantifyLibrary(); [2019-01-29 16:05:51.316] [alevinLog] [info] Starting optimizer. **Analyzed 4000 cells (100% of all).**; [2019-01-29 16:06:27.447] [alevinLog] [info] Total 20167967.00 UMI after deduplicating.;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:4233,Security,validat,validateMappings,4233,"5983 221334; 0.00714905 1.09739e-06 0.000617623 71036.5; [2019-01-29 16:06:46.603] [alevinLog] [info] Starting white listing; [2019-01-29 16:06:46.615] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2019-01-29 16:06:46.615] [alevinLog] [info] Total 4000 barcodes found; [2019-01-29 16:06:46.615] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [info] Starting to make feature Matrix; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making regular featues; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making feature Matrix; [2019-01-29 16:06:46.871] [alevinLog] [info] Finished white listing; [2019-01-29 16:06:46.957] [alevinLog] [info] Finished optimizer; ```. ### no whitelist, expectCells 3000. ```; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells se",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:4395,Security,validat,validateMappings,4395,"[info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2019-01-29 16:06:46.615] [alevinLog] [info] Total 4000 barcodes found; [2019-01-29 16:06:46.615] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [info] Starting to make feature Matrix; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making regular featues; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making feature Matrix; [2019-01-29 16:06:46.871] [alevinLog] [info] Finished white listing; [2019-01-29 16:06:46.957] [alevinLog] [info] Finished optimizer; ```. ### no whitelist, expectCells 3000. ```; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:4545,Security,validat,validateMappings,4545," 16:06:46.615] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [info] Starting to make feature Matrix; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making regular featues; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making feature Matrix; [2019-01-29 16:06:46.871] [alevinLog] [info] Finished white listing; [2019-01-29 16:06:46.957] [alevinLog] [info] Finished optimizer; ```. ### no whitelist, expectCells 3000. ```; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minSc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:5519,Security,validat,validateMappings,5519," [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086 targets; [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:5681,Security,validat,validateMappings,5681,"value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086 targets; [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please rep",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:5831,Security,validat,validateMappings,5831,"barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086 targets; [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:5308,Testability,log,logs,5308,"ed, it is being set to 0.65; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:5326,Testability,log,log,5326," [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:6892,Testability,log,log,6892,"Slack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086 targets; [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [info] finished quantifyLibrary(). cat alevin/alevin.log; [2019-01-28 21:02:08.496] [alevinLog] [info] Processing barcodes files (if Present). [2019-01-28 21:07:56.106] [alevinLog] [info] Done barcode density calculation.; [2019-01-28 21:07:56.106] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-28 21:07:57.808] [alevinLog] [info] Done importing white-list Barcodes; [2019-01-28 21:07:58.273] [alevinLog] [warning] Skipping 290359 Barcodes with 0 reads; Assuming this is the required behavior.; [2019-01-28 21:07:58.517] [alevinLog] [info] Total 446921 white-listed Barcodes; [2019-01-28 21:09:02.029] [alevinLog] [info] Done populating Z matrix; [2019-01-28 21:09:02.331] [alevinLog] [info] Done indexing Barcodes; [2019-01-28 21:09:02.331] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-28 21:09:02.331] [alevinLog] [info] Used Barcodes except Whitelist: 168781; [2019-01-28 21:09:02.559] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-28 21:09:02.559] [alevinLog] [info] parsing read librar",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/340:2879,Usability,Clear,Clearing,2879,"g] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:46.678] [jointLog] [info] Mapping rate = 20.1566%. [2019-01-29 16:05:46.678] [jointLog] [info] finished quantifyLibrary(); [2019-01-29 16:05:51.316] [alevinLog] [info] Starting optimizer. **Analyzed 4000 cells (100% of all).**; [2019-01-29 16:06:27.447] [alevinLog] [info] Total 20167967.00 UMI after deduplicating.; [2019-01-29 16:06:27.475] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-29 16:06:39.341] [alevinLog] [info] Starting Import of the gene count matrix of size 4000x29574.; [2019-01-29 16:06:40.089] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-29 16:06:45.902] [alevinLog] [info] Done Importing gene count matrix for dimension 4000x29574; 0.00248159 1.3538e-06 0.000205983 221334; 0.00714905 1.09739e-06 0.000617623 71036.5; [2019-01-29 16:06:46.603] [alevinLog] [info] Starting white listing; [2019-01-29 16:06:46.615] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2019-01-29 16:06:46.615] [alevinLog] [info] Total 4000 barcodes found; [2019-01-29 16:06:46.615] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [info] Starting to make feature Matrix; [2019-01-29 16:06:46.790] [alevinLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340
https://github.com/COMBINE-lab/salmon/issues/341:362,Availability,down,downloaded,362,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/341
https://github.com/COMBINE-lab/salmon/issues/341:341,Deployability,install,installed,341,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/341
https://github.com/COMBINE-lab/salmon/issues/341:110,Usability,clear,clear,110,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/341
https://github.com/COMBINE-lab/salmon/issues/341:553,Usability,clear,clear,553,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/341
https://github.com/COMBINE-lab/salmon/issues/343:1293,Availability,down,downloaded,1293,"BAM format file describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343
https://github.com/COMBINE-lab/salmon/issues/343:1336,Availability,down,downloaded,1336,"BAM format file describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343
https://github.com/COMBINE-lab/salmon/issues/343:1672,Availability,error,error,1672,"ile describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional context**; none",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343
https://github.com/COMBINE-lab/salmon/issues/343:1788,Availability,Error,Error,1788,"ile describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional context**; none",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343
https://github.com/COMBINE-lab/salmon/issues/343:2191,Availability,avail,available,2191,"ile describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional context**; none",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343
https://github.com/COMBINE-lab/salmon/issues/343:1272,Deployability,install,installed,1272,"BAM format file describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343
https://github.com/COMBINE-lab/salmon/issues/343:2260,Deployability,Release,Release,2260,"ile describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional context**; none",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343
https://github.com/COMBINE-lab/salmon/issues/343:1794,Integrability,message,messages,1794,"ile describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional context**; none",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343
https://github.com/COMBINE-lab/salmon/pull/344:11,Deployability,patch,patch,11,This small patch adds two options to quant merge:; - --genes to force use of quant.genes.sf instead of quant.sf ;; - --missing <arg> to change the default value in case of missing value.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/344
https://github.com/COMBINE-lab/salmon/issues/345:168,Availability,error,error,168,"## Describe the bug; When I run the following command:; ```; salmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345
https://github.com/COMBINE-lab/salmon/issues/345:546,Availability,Down,Download,546,"## Describe the bug; When I run the following command:; ```; salmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345
https://github.com/COMBINE-lab/salmon/issues/345:803,Availability,Down,Download,803,"## Describe the bug; When I run the following command:; ```; salmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345
https://github.com/COMBINE-lab/salmon/issues/345:1158,Availability,Down,Download,1158,"lmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something else. Any help would be much appreciated. ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345
https://github.com/COMBINE-lab/salmon/issues/345:1623,Availability,error,error,1623,"lmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something else. Any help would be much appreciated. ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345
https://github.com/COMBINE-lab/salmon/issues/345:527,Deployability,Install,Install,527,"## Describe the bug; When I run the following command:; ```; salmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345
https://github.com/COMBINE-lab/salmon/issues/345:1147,Deployability,install,installed,1147,"lmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something else. Any help would be much appreciated. ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345
https://github.com/COMBINE-lab/salmon/issues/345:1657,Deployability,pipeline,pipeline,1657,"lmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something else. Any help would be much appreciated. ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345
https://github.com/COMBINE-lab/salmon/issues/345:1891,Deployability,install,installation,1891,"lmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something else. Any help would be much appreciated. ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345
https://github.com/COMBINE-lab/salmon/issues/345:354,Performance,load,loading,354,"## Describe the bug; When I run the following command:; ```; salmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345
https://github.com/COMBINE-lab/salmon/issues/346:4381,Availability,down,downloaded,4381," -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13 Salmon/0.11.3-IGB-gcc-4.9.4; Salmon/0.9.1-IGB-gcc-4.9.4 Salmon/0.12.0-IGB-gcc-8.2.0 (D). * How was salmon installed (compiled, downloaded executable, through bioconda)?; through the biocluster in the University. * Which reference (e.g. transcriptome) was used?; converted the genomic fasta file to transcriptomic fasta file (described above); ; * Which read files were used?; the raw sequencing reads and the trimmed reads from the paired-end data. * Which which program options were used?; described above. **Expected behavior**; A clear and concise description of what you expected to happen. I've used the quassi mapping of Salmon using different versions several times and I expect to get different mapping rate per sample. I also expect to get different values of the parameters in the quant.sf parameters across all genes and across samples.; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ### For version 0.8. This is similar across all samples:; Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250 28.8836 527.392; LOC_Os01g01010.2 2218 250 1.84062 33.6083; LOC_Os01g01019.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:170,Deployability,pipeline,pipeline,170,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; related to salmon. **Describe the bug**; I've been using the Salmon-tximport-DESEq2 pipeline for quite a while now but it's the first time I got similar results from Salmon across samples. I've got 24 samples in total (4 rice genotypes, 2-time point for bacterial blight infection, and 3 replications). However, this from the raw sequencing data and even the trimmed reads that I used, I've got similar mapping rates across all samples. Similar length, TPM, and NumReads across all genes for all genes. Though the value for each gene differs in the abovementioned parameters. The EffectiveLength though is 250 for all genes across all samples. I've used all four different versions of Salmon as listed below but I'm still getting the same similar mapping rate and the parameters at quant.sf though the values differ a bit from each Salmon version. **To Reproduce**; ### Steps and data to reproduce the behavior: for version 0.8. **First I took the genome fasta file and the gff3 file and made a transcriptome fasta file using Salmon:**; module load Cufflinks/2.2.1; gffread all.gff3 -g all.chrs.fasta -w MSU7_transcript.fasta. **I then indexed the transcript fasta file.**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. salmon index -t ~/data/genome/MSU7_transcript.fasta -i ~/data/genome/MSU7_transcript.index --type quasi -k 31. **I then run transcript abundance estimate pipeline for the raw-reads and the trimmed reads as follows:**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:1593,Deployability,pipeline,pipeline,1593,"parameters. The EffectiveLength though is 250 for all genes across all samples. I've used all four different versions of Salmon as listed below but I'm still getting the same similar mapping rate and the parameters at quant.sf though the values differ a bit from each Salmon version. **To Reproduce**; ### Steps and data to reproduce the behavior: for version 0.8. **First I took the genome fasta file and the gff3 file and made a transcriptome fasta file using Salmon:**; module load Cufflinks/2.2.1; gffread all.gff3 -g all.chrs.fasta -w MSU7_transcript.fasta. **I then indexed the transcript fasta file.**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. salmon index -t ~/data/genome/MSU7_transcript.fasta -i ~/data/genome/MSU7_transcript.index --type quasi -k 31. **I then run transcript abundance estimate pipeline for the raw-reads and the trimmed reads as follows:**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_old/${line} --seqBias --gcBias. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:4360,Deployability,install,installed,4360," -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13 Salmon/0.11.3-IGB-gcc-4.9.4; Salmon/0.9.1-IGB-gcc-4.9.4 Salmon/0.12.0-IGB-gcc-8.2.0 (D). * How was salmon installed (compiled, downloaded executable, through bioconda)?; through the biocluster in the University. * Which reference (e.g. transcriptome) was used?; converted the genomic fasta file to transcriptomic fasta file (described above); ; * Which read files were used?; the raw sequencing reads and the trimmed reads from the paired-end data. * Which which program options were used?; described above. **Expected behavior**; A clear and concise description of what you expected to happen. I've used the quassi mapping of Salmon using different versions several times and I expect to get different mapping rate per sample. I also expect to get different values of the parameters in the quant.sf parameters across all genes and across samples.; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ### For version 0.8. This is similar across all samples:; Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250 28.8836 527.392; LOC_Os01g01010.2 2218 250 1.84062 33.6083; LOC_Os01g01019.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:1130,Performance,load,load,1130,")?**; related to salmon. **Describe the bug**; I've been using the Salmon-tximport-DESEq2 pipeline for quite a while now but it's the first time I got similar results from Salmon across samples. I've got 24 samples in total (4 rice genotypes, 2-time point for bacterial blight infection, and 3 replications). However, this from the raw sequencing data and even the trimmed reads that I used, I've got similar mapping rates across all samples. Similar length, TPM, and NumReads across all genes for all genes. Though the value for each gene differs in the abovementioned parameters. The EffectiveLength though is 250 for all genes across all samples. I've used all four different versions of Salmon as listed below but I'm still getting the same similar mapping rate and the parameters at quant.sf though the values differ a bit from each Salmon version. **To Reproduce**; ### Steps and data to reproduce the behavior: for version 0.8. **First I took the genome fasta file and the gff3 file and made a transcriptome fasta file using Salmon:**; module load Cufflinks/2.2.1; gffread all.gff3 -g all.chrs.fasta -w MSU7_transcript.fasta. **I then indexed the transcript fasta file.**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. salmon index -t ~/data/genome/MSU7_transcript.fasta -i ~/data/genome/MSU7_transcript.index --type quasi -k 31. **I then run transcript abundance estimate pipeline for the raw-reads and the trimmed reads as follows:**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:1392,Performance,load,load,1392,"r, this from the raw sequencing data and even the trimmed reads that I used, I've got similar mapping rates across all samples. Similar length, TPM, and NumReads across all genes for all genes. Though the value for each gene differs in the abovementioned parameters. The EffectiveLength though is 250 for all genes across all samples. I've used all four different versions of Salmon as listed below but I'm still getting the same similar mapping rate and the parameters at quant.sf though the values differ a bit from each Salmon version. **To Reproduce**; ### Steps and data to reproduce the behavior: for version 0.8. **First I took the genome fasta file and the gff3 file and made a transcriptome fasta file using Salmon:**; module load Cufflinks/2.2.1; gffread all.gff3 -g all.chrs.fasta -w MSU7_transcript.fasta. **I then indexed the transcript fasta file.**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. salmon index -t ~/data/genome/MSU7_transcript.fasta -i ~/data/genome/MSU7_transcript.index --type quasi -k 31. **I then run transcript abundance estimate pipeline for the raw-reads and the trimmed reads as follows:**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_old/${line} --seqBias --gcBias. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:1800,Performance,load,load,1800,"till getting the same similar mapping rate and the parameters at quant.sf though the values differ a bit from each Salmon version. **To Reproduce**; ### Steps and data to reproduce the behavior: for version 0.8. **First I took the genome fasta file and the gff3 file and made a transcriptome fasta file using Salmon:**; module load Cufflinks/2.2.1; gffread all.gff3 -g all.chrs.fasta -w MSU7_transcript.fasta. **I then indexed the transcript fasta file.**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. salmon index -t ~/data/genome/MSU7_transcript.fasta -i ~/data/genome/MSU7_transcript.index --type quasi -k 31. **I then run transcript abundance estimate pipeline for the raw-reads and the trimmed reads as follows:**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_old/${line} --seqBias --gcBias. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias. **Steps and data to reproduce the behavior: for version 0.12**; module load Cufflinks/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtran",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:2291,Performance,load,load,2291," -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. salmon index -t ~/data/genome/MSU7_transcript.fasta -i ~/data/genome/MSU7_transcript.index --type quasi -k 31. **I then run transcript abundance estimate pipeline for the raw-reads and the trimmed reads as follows:**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_old/${line} --seqBias --gcBias. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias. **Steps and data to reproduce the behavior: for version 0.12**; module load Cufflinks/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtranscript.fasta. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.12.0-IGB-gcc-8.2.0. salmon index -t ~/data/genome/MSU7_newtranscript.fasta -i ~/data/genome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:2726,Performance,load,load,2726,"ail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_old/${line} --seqBias --gcBias. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias. **Steps and data to reproduce the behavior: for version 0.12**; module load Cufflinks/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtranscript.fasta. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.12.0-IGB-gcc-8.2.0. salmon index -t ~/data/genome/MSU7_newtranscript.fasta -i ~/data/genome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:2949,Performance,load,load,2949,"ript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_old/${line} --seqBias --gcBias. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias. **Steps and data to reproduce the behavior: for version 0.12**; module load Cufflinks/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtranscript.fasta. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.12.0-IGB-gcc-8.2.0. salmon index -t ~/data/genome/MSU7_newtranscript.fasta -i ~/data/genome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:3243,Performance,load,load,3243,"; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias. **Steps and data to reproduce the behavior: for version 0.12**; module load Cufflinks/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtranscript.fasta. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.12.0-IGB-gcc-8.2.0. salmon index -t ~/data/genome/MSU7_newtranscript.fasta -i ~/data/genome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:3737,Performance,load,load,3737,"/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtranscript.fasta. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.12.0-IGB-gcc-8.2.0. salmon index -t ~/data/genome/MSU7_newtranscript.fasta -i ~/data/genome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13 Salmon/0.11.3-IGB-gcc-4.9.4; Salmon/0.9.1-IGB-gcc-4.9.4 Salmon/0.12.0-IGB-gcc-8.2.0 (D). * How was salmon installed (compiled, downloaded executable, through bioconda)?; through the biocluster in the University. * Which reference (e.g. transcriptome) was used?; converted the genomic fasta file to transcriptomic fasta file (described above); ; * Which read files were used?; the raw sequencing reads and the trimmed reads from the paired-end data. * Which which program options were us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:6011,Performance,Load,Loading,6011,"of the parameters in the quant.sf parameters across all genes and across samples.; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ### For version 0.8. This is similar across all samples:; Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250 28.8836 527.392; LOC_Os01g01010.2 2218 250 1.84062 33.6083; LOC_Os01g01019.1 1127 250 0.0547668 1; LOC_Os01g01030.1 2464 250 4.43611 81; LOC_Os01g01040.4 1524 250 0.941635 17.1935; LOC_Os01g01040.1 2508 250 11.5632 211.135; LOC_Os01g01040.2 2482 250 8.02081 146.454; LOC_Os01g01040.3 2583 250 8.55554 156.218; LOC_Os01g01050.1 2039 250 17.2333 314.667. ### The counted total reads, observed total fragments, and the mapping rate is similar for all samples for both the raw-dat and the trimmed reads.; [2019-03-03 06:29:53.168] [jointLog] [info] parsing read library format; [2019-03-03 06:29:53.168] [jointLog] [info] There is 1 library.; [2019-03-03 06:29:53.224] [jointLog] [info] Loading Quasi index; [2019-03-03 06:29:53.224] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 06:30:02.239] [jointLog] [info] done; [2019-03-03 06:30:02.239] [jointLog] [info] Index contained 66153 targets; [2019-03-03 06:30:03.414] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 06:31:37.523] [fileLog] [info]; At end of round 0; ==================; Observed 18861231 total fragments (18861231 in most recent round). [2019-03-03 06:31:37.522] [jointLog] [info] Computed 48502 rich equivalence classes for further processing; [2019-03-03 06:31:37.522] [jointLog] [info] Counted 17308442 total reads in the equivalence classes; [2019-03-03 06:31:37.528] [jointLog] [info] Mapping rate = 91.7673%. [2019-03-03 06:31:37.528] [jointLog] [info] finished quantifyLibrary(). ### For version 0.12. This is similar across all samples:. Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250.000 30.539503 527.399; LOC_Os01g01010.2 2218 250.000 1.714089 29.6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:6076,Performance,Load,Loading,6076,"oss samples.; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ### For version 0.8. This is similar across all samples:; Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250 28.8836 527.392; LOC_Os01g01010.2 2218 250 1.84062 33.6083; LOC_Os01g01019.1 1127 250 0.0547668 1; LOC_Os01g01030.1 2464 250 4.43611 81; LOC_Os01g01040.4 1524 250 0.941635 17.1935; LOC_Os01g01040.1 2508 250 11.5632 211.135; LOC_Os01g01040.2 2482 250 8.02081 146.454; LOC_Os01g01040.3 2583 250 8.55554 156.218; LOC_Os01g01050.1 2039 250 17.2333 314.667. ### The counted total reads, observed total fragments, and the mapping rate is similar for all samples for both the raw-dat and the trimmed reads.; [2019-03-03 06:29:53.168] [jointLog] [info] parsing read library format; [2019-03-03 06:29:53.168] [jointLog] [info] There is 1 library.; [2019-03-03 06:29:53.224] [jointLog] [info] Loading Quasi index; [2019-03-03 06:29:53.224] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 06:30:02.239] [jointLog] [info] done; [2019-03-03 06:30:02.239] [jointLog] [info] Index contained 66153 targets; [2019-03-03 06:30:03.414] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 06:31:37.523] [fileLog] [info]; At end of round 0; ==================; Observed 18861231 total fragments (18861231 in most recent round). [2019-03-03 06:31:37.522] [jointLog] [info] Computed 48502 rich equivalence classes for further processing; [2019-03-03 06:31:37.522] [jointLog] [info] Counted 17308442 total reads in the equivalence classes; [2019-03-03 06:31:37.528] [jointLog] [info] Mapping rate = 91.7673%. [2019-03-03 06:31:37.528] [jointLog] [info] finished quantifyLibrary(). ### For version 0.12. This is similar across all samples:. Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250.000 30.539503 527.399; LOC_Os01g01010.2 2218 250.000 1.714089 29.601; LOC_Os01g01019.1 1127 250.000 0.057906 1.000; LOC_Os01g01030.1 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:8128,Performance,Load,Loading,8128,"24 250.000 0.842494 14.549; LOC_Os01g01040.1 2508 250.000 12.017881 207.542; LOC_Os01g01040.2 2482 250.000 8.005651 138.253; LOC_Os01g01040.3 2583 250.000 9.187142 158.656; LOC_Os01g01050.1 2039 250.000 21.476314 370.883. [2019-03-03 07:14:59.272] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-03-03 07:14:59.272] [jointLog] [info] parsing read library format; [2019-03-03 07:14:59.272] [jointLog] [info] There is 1 library.; [2019-03-03 07:14:59.329] [jointLog] [info] Loading Quasi index; [2019-03-03 07:14:59.329] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 07:15:12.564] [jointLog] [info] done; [2019-03-03 07:15:12.564] [jointLog] [info] Index contained 66,004 targets; [2019-03-03 07:15:14.824] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 07:16:36.263] [jointLog] [info] Thread saw mini-batch with a maximum of 89.90% zero probability fragments; [2019-03-03 07:16:36.295] [jointLog] [info] Thread saw mini-batch with a maximum of 89.70% zero probability fragments; [2019-03-03 07:16:36.305] [jointLog] [info] Thread saw mini-batch with a maximum of 88.36% zero probability fragments; [2019-03-03 07:16:36.311] [jointLog] [info] Thread saw mini-batch with a maximum of 90.16% zero probability fragments; [2019-03-03 07:16:36.341] [jointLog] [info] Thread saw mini-batch with a maximum of 26.54% zero probability fragments; [2019-03-03 07:16:36.391] [jointLog] [info] Computed 58,867 rich equivalence classes for further ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:8193,Performance,Load,Loading,8193,"07.542; LOC_Os01g01040.2 2482 250.000 8.005651 138.253; LOC_Os01g01040.3 2583 250.000 9.187142 158.656; LOC_Os01g01050.1 2039 250.000 21.476314 370.883. [2019-03-03 07:14:59.272] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-03-03 07:14:59.272] [jointLog] [info] parsing read library format; [2019-03-03 07:14:59.272] [jointLog] [info] There is 1 library.; [2019-03-03 07:14:59.329] [jointLog] [info] Loading Quasi index; [2019-03-03 07:14:59.329] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 07:15:12.564] [jointLog] [info] done; [2019-03-03 07:15:12.564] [jointLog] [info] Index contained 66,004 targets; [2019-03-03 07:15:14.824] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 07:16:36.263] [jointLog] [info] Thread saw mini-batch with a maximum of 89.90% zero probability fragments; [2019-03-03 07:16:36.295] [jointLog] [info] Thread saw mini-batch with a maximum of 89.70% zero probability fragments; [2019-03-03 07:16:36.305] [jointLog] [info] Thread saw mini-batch with a maximum of 88.36% zero probability fragments; [2019-03-03 07:16:36.311] [jointLog] [info] Thread saw mini-batch with a maximum of 90.16% zero probability fragments; [2019-03-03 07:16:36.341] [jointLog] [info] Thread saw mini-batch with a maximum of 26.54% zero probability fragments; [2019-03-03 07:16:36.391] [jointLog] [info] Computed 58,867 rich equivalence classes for further processing; [2019-03-03 07:16:36.391] [jointLog] [info] Counted 16,8",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:6287,Safety,detect,detected,6287,"s; LOC_Os01g01010.1 3017 250 28.8836 527.392; LOC_Os01g01010.2 2218 250 1.84062 33.6083; LOC_Os01g01019.1 1127 250 0.0547668 1; LOC_Os01g01030.1 2464 250 4.43611 81; LOC_Os01g01040.4 1524 250 0.941635 17.1935; LOC_Os01g01040.1 2508 250 11.5632 211.135; LOC_Os01g01040.2 2482 250 8.02081 146.454; LOC_Os01g01040.3 2583 250 8.55554 156.218; LOC_Os01g01050.1 2039 250 17.2333 314.667. ### The counted total reads, observed total fragments, and the mapping rate is similar for all samples for both the raw-dat and the trimmed reads.; [2019-03-03 06:29:53.168] [jointLog] [info] parsing read library format; [2019-03-03 06:29:53.168] [jointLog] [info] There is 1 library.; [2019-03-03 06:29:53.224] [jointLog] [info] Loading Quasi index; [2019-03-03 06:29:53.224] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 06:30:02.239] [jointLog] [info] done; [2019-03-03 06:30:02.239] [jointLog] [info] Index contained 66153 targets; [2019-03-03 06:30:03.414] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 06:31:37.523] [fileLog] [info]; At end of round 0; ==================; Observed 18861231 total fragments (18861231 in most recent round). [2019-03-03 06:31:37.522] [jointLog] [info] Computed 48502 rich equivalence classes for further processing; [2019-03-03 06:31:37.522] [jointLog] [info] Counted 17308442 total reads in the equivalence classes; [2019-03-03 06:31:37.528] [jointLog] [info] Mapping rate = 91.7673%. [2019-03-03 06:31:37.528] [jointLog] [info] finished quantifyLibrary(). ### For version 0.12. This is similar across all samples:. Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250.000 30.539503 527.399; LOC_Os01g01010.2 2218 250.000 1.714089 29.601; LOC_Os01g01019.1 1127 250.000 0.057906 1.000; LOC_Os01g01030.1 2464 250.000 4.632473 80.000; LOC_Os01g01040.4 1524 250.000 0.842494 14.549; LOC_Os01g01040.1 2508 250.000 12.017881 207.542; LOC_Os01g01040.2 2482 250.000 8.005651 138.253; LOC_Os01g01040.3 2583 250.000 9.187142",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:8405,Safety,detect,detected,8405,"patibility prior below threshold. Incompatible fragments will be ignored.; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-03-03 07:14:59.272] [jointLog] [info] parsing read library format; [2019-03-03 07:14:59.272] [jointLog] [info] There is 1 library.; [2019-03-03 07:14:59.329] [jointLog] [info] Loading Quasi index; [2019-03-03 07:14:59.329] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 07:15:12.564] [jointLog] [info] done; [2019-03-03 07:15:12.564] [jointLog] [info] Index contained 66,004 targets; [2019-03-03 07:15:14.824] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 07:16:36.263] [jointLog] [info] Thread saw mini-batch with a maximum of 89.90% zero probability fragments; [2019-03-03 07:16:36.295] [jointLog] [info] Thread saw mini-batch with a maximum of 89.70% zero probability fragments; [2019-03-03 07:16:36.305] [jointLog] [info] Thread saw mini-batch with a maximum of 88.36% zero probability fragments; [2019-03-03 07:16:36.311] [jointLog] [info] Thread saw mini-batch with a maximum of 90.16% zero probability fragments; [2019-03-03 07:16:36.341] [jointLog] [info] Thread saw mini-batch with a maximum of 26.54% zero probability fragments; [2019-03-03 07:16:36.391] [jointLog] [info] Computed 58,867 rich equivalence classes for further processing; [2019-03-03 07:16:36.391] [jointLog] [info] Counted 16,837,807 total reads in the equivalence classes; [2019-03-03 07:16:36.402] [jointLog] [warning] 0.00371007% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, conside",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:3576,Security,validat,validateMappings,3576,"g/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias. **Steps and data to reproduce the behavior: for version 0.12**; module load Cufflinks/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtranscript.fasta. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.12.0-IGB-gcc-8.2.0. salmon index -t ~/data/genome/MSU7_newtranscript.fasta -i ~/data/genome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13 Salmon/0.11.3-IGB-gcc-4.9.4; Salmon/0.9.1-IGB-gcc-4.9.4 Salmon/0.12.0-IGB-gcc-8.2.0 (D). * How was salmon installed (compiled, downloaded executable, through bioconda)?; through the biocluster in the University. * Which reference (e.g. transcriptome) was used?; converted the genomic fa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:4092,Security,validat,validateMappings,4092,"ome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13 Salmon/0.11.3-IGB-gcc-4.9.4; Salmon/0.9.1-IGB-gcc-4.9.4 Salmon/0.12.0-IGB-gcc-8.2.0 (D). * How was salmon installed (compiled, downloaded executable, through bioconda)?; through the biocluster in the University. * Which reference (e.g. transcriptome) was used?; converted the genomic fasta file to transcriptomic fasta file (described above); ; * Which read files were used?; the raw sequencing reads and the trimmed reads from the paired-end data. * Which which program options were used?; described above. **Expected behavior**; A clear and concise description of what you expected to happen. I've used the quassi mapping of Salmon using different versions several times and I expect to get different mapping rate per sample. I also expect to get different values of the parameters in the quant.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:7547,Security,validat,validateMappings,7547,"classes for further processing; [2019-03-03 06:31:37.522] [jointLog] [info] Counted 17308442 total reads in the equivalence classes; [2019-03-03 06:31:37.528] [jointLog] [info] Mapping rate = 91.7673%. [2019-03-03 06:31:37.528] [jointLog] [info] finished quantifyLibrary(). ### For version 0.12. This is similar across all samples:. Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250.000 30.539503 527.399; LOC_Os01g01010.2 2218 250.000 1.714089 29.601; LOC_Os01g01019.1 1127 250.000 0.057906 1.000; LOC_Os01g01030.1 2464 250.000 4.632473 80.000; LOC_Os01g01040.4 1524 250.000 0.842494 14.549; LOC_Os01g01040.1 2508 250.000 12.017881 207.542; LOC_Os01g01040.2 2482 250.000 8.005651 138.253; LOC_Os01g01040.3 2583 250.000 9.187142 158.656; LOC_Os01g01050.1 2039 250.000 21.476314 370.883. [2019-03-03 07:14:59.272] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-03-03 07:14:59.272] [jointLog] [info] parsing read library format; [2019-03-03 07:14:59.272] [jointLog] [info] There is 1 library.; [2019-03-03 07:14:59.329] [jointLog] [info] Loading Quasi index; [2019-03-03 07:14:59.329] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 07:15:12.564] [jointLog] [info] done; [2019-03-03 07:15:12.564] [jointLog] [info] Index contained 66,004 targets; [2019-03-03 07:15:14.824] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 07:16:36.263] [jointLog] [info] Thread saw mini-batch with a maximum of 89.90% zero probability f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:7709,Security,validat,validateMappings,7709,"tLog] [info] Mapping rate = 91.7673%. [2019-03-03 06:31:37.528] [jointLog] [info] finished quantifyLibrary(). ### For version 0.12. This is similar across all samples:. Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250.000 30.539503 527.399; LOC_Os01g01010.2 2218 250.000 1.714089 29.601; LOC_Os01g01019.1 1127 250.000 0.057906 1.000; LOC_Os01g01030.1 2464 250.000 4.632473 80.000; LOC_Os01g01040.4 1524 250.000 0.842494 14.549; LOC_Os01g01040.1 2508 250.000 12.017881 207.542; LOC_Os01g01040.2 2482 250.000 8.005651 138.253; LOC_Os01g01040.3 2583 250.000 9.187142 158.656; LOC_Os01g01050.1 2039 250.000 21.476314 370.883. [2019-03-03 07:14:59.272] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-03-03 07:14:59.272] [jointLog] [info] parsing read library format; [2019-03-03 07:14:59.272] [jointLog] [info] There is 1 library.; [2019-03-03 07:14:59.329] [jointLog] [info] Loading Quasi index; [2019-03-03 07:14:59.329] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 07:15:12.564] [jointLog] [info] done; [2019-03-03 07:15:12.564] [jointLog] [info] Index contained 66,004 targets; [2019-03-03 07:15:14.824] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 07:16:36.263] [jointLog] [info] Thread saw mini-batch with a maximum of 89.90% zero probability fragments; [2019-03-03 07:16:36.295] [jointLog] [info] Thread saw mini-batch with a maximum of 89.70% zero probability fragments; [2019-03-03 07:16:36.305] [jointLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:7859,Security,validat,validateMappings,7859,"ss all samples:. Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250.000 30.539503 527.399; LOC_Os01g01010.2 2218 250.000 1.714089 29.601; LOC_Os01g01019.1 1127 250.000 0.057906 1.000; LOC_Os01g01030.1 2464 250.000 4.632473 80.000; LOC_Os01g01040.4 1524 250.000 0.842494 14.549; LOC_Os01g01040.1 2508 250.000 12.017881 207.542; LOC_Os01g01040.2 2482 250.000 8.005651 138.253; LOC_Os01g01040.3 2583 250.000 9.187142 158.656; LOC_Os01g01050.1 2039 250.000 21.476314 370.883. [2019-03-03 07:14:59.272] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-03-03 07:14:59.272] [jointLog] [info] parsing read library format; [2019-03-03 07:14:59.272] [jointLog] [info] There is 1 library.; [2019-03-03 07:14:59.329] [jointLog] [info] Loading Quasi index; [2019-03-03 07:14:59.329] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 07:15:12.564] [jointLog] [info] done; [2019-03-03 07:15:12.564] [jointLog] [info] Index contained 66,004 targets; [2019-03-03 07:15:14.824] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 07:16:36.263] [jointLog] [info] Thread saw mini-batch with a maximum of 89.90% zero probability fragments; [2019-03-03 07:16:36.295] [jointLog] [info] Thread saw mini-batch with a maximum of 89.70% zero probability fragments; [2019-03-03 07:16:36.305] [jointLog] [info] Thread saw mini-batch with a maximum of 88.36% zero probability fragments; [2019-03-03 07:16:36.311] [jointLog] [info] Thread saw mini-batch w",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/346:4787,Usability,clear,clear,4787,"SK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13 Salmon/0.11.3-IGB-gcc-4.9.4; Salmon/0.9.1-IGB-gcc-4.9.4 Salmon/0.12.0-IGB-gcc-8.2.0 (D). * How was salmon installed (compiled, downloaded executable, through bioconda)?; through the biocluster in the University. * Which reference (e.g. transcriptome) was used?; converted the genomic fasta file to transcriptomic fasta file (described above); ; * Which read files were used?; the raw sequencing reads and the trimmed reads from the paired-end data. * Which which program options were used?; described above. **Expected behavior**; A clear and concise description of what you expected to happen. I've used the quassi mapping of Salmon using different versions several times and I expect to get different mapping rate per sample. I also expect to get different values of the parameters in the quant.sf parameters across all genes and across samples.; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ### For version 0.8. This is similar across all samples:; Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250 28.8836 527.392; LOC_Os01g01010.2 2218 250 1.84062 33.6083; LOC_Os01g01019.1 1127 250 0.0547668 1; LOC_Os01g01030.1 2464 250 4.43611 81; LOC_Os01g01040.4 1524 250 0.941635 17.1935; LOC_Os01g01040.1 2508 250 11.5632 211.135; LOC_Os01g01040.2 2482 250 8.02081 146.454; LOC_Os01g01040.3 2583 250 8.55554 156.218; LOC_Os01g01050.1 2039 250 17.2333 314.667. ### The counted total reads, observed total fragments, and the mapping rate is similar for all samples for both the raw-dat ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346
https://github.com/COMBINE-lab/salmon/issues/347:256,Security,validat,validateMappings,256,"Dear Salmon team,. I am trying to quantify allele specific expression using salmon, so I would like to use the unique counts to estimate confidence itervals of the allele unbalance. However, I get no unique counts in the ambig_info.tsv file, disabling the validateMappings option fixed it. I'm using Salmon v 12 and I do expect unique counts, since I have some reads aligning to variants, as determined by featureCounts on the output sam by this same salmon run. . Is this the expected behavior when one enables validateMappings? ; Can I just go without validating them? I noticed the results are very close when disabling this option. Salmon was run as follows using a default k=31 quasi index.; salmon quant --writeMappings=Z --no-version-check -p10 (--validateMappings) --seqBias --posBias -i X -l IU -1 P.fq.gz -2 Qq.fq.gz -o Test",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/347
https://github.com/COMBINE-lab/salmon/issues/347:512,Security,validat,validateMappings,512,"Dear Salmon team,. I am trying to quantify allele specific expression using salmon, so I would like to use the unique counts to estimate confidence itervals of the allele unbalance. However, I get no unique counts in the ambig_info.tsv file, disabling the validateMappings option fixed it. I'm using Salmon v 12 and I do expect unique counts, since I have some reads aligning to variants, as determined by featureCounts on the output sam by this same salmon run. . Is this the expected behavior when one enables validateMappings? ; Can I just go without validating them? I noticed the results are very close when disabling this option. Salmon was run as follows using a default k=31 quasi index.; salmon quant --writeMappings=Z --no-version-check -p10 (--validateMappings) --seqBias --posBias -i X -l IU -1 P.fq.gz -2 Qq.fq.gz -o Test",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/347
https://github.com/COMBINE-lab/salmon/issues/347:554,Security,validat,validating,554,"Dear Salmon team,. I am trying to quantify allele specific expression using salmon, so I would like to use the unique counts to estimate confidence itervals of the allele unbalance. However, I get no unique counts in the ambig_info.tsv file, disabling the validateMappings option fixed it. I'm using Salmon v 12 and I do expect unique counts, since I have some reads aligning to variants, as determined by featureCounts on the output sam by this same salmon run. . Is this the expected behavior when one enables validateMappings? ; Can I just go without validating them? I noticed the results are very close when disabling this option. Salmon was run as follows using a default k=31 quasi index.; salmon quant --writeMappings=Z --no-version-check -p10 (--validateMappings) --seqBias --posBias -i X -l IU -1 P.fq.gz -2 Qq.fq.gz -o Test",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/347
https://github.com/COMBINE-lab/salmon/issues/347:755,Security,validat,validateMappings,755,"Dear Salmon team,. I am trying to quantify allele specific expression using salmon, so I would like to use the unique counts to estimate confidence itervals of the allele unbalance. However, I get no unique counts in the ambig_info.tsv file, disabling the validateMappings option fixed it. I'm using Salmon v 12 and I do expect unique counts, since I have some reads aligning to variants, as determined by featureCounts on the output sam by this same salmon run. . Is this the expected behavior when one enables validateMappings? ; Can I just go without validating them? I noticed the results are very close when disabling this option. Salmon was run as follows using a default k=31 quasi index.; salmon quant --writeMappings=Z --no-version-check -p10 (--validateMappings) --seqBias --posBias -i X -l IU -1 P.fq.gz -2 Qq.fq.gz -o Test",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/347
https://github.com/COMBINE-lab/salmon/issues/347:830,Testability,Test,Test,830,"Dear Salmon team,. I am trying to quantify allele specific expression using salmon, so I would like to use the unique counts to estimate confidence itervals of the allele unbalance. However, I get no unique counts in the ambig_info.tsv file, disabling the validateMappings option fixed it. I'm using Salmon v 12 and I do expect unique counts, since I have some reads aligning to variants, as determined by featureCounts on the output sam by this same salmon run. . Is this the expected behavior when one enables validateMappings? ; Can I just go without validating them? I noticed the results are very close when disabling this option. Salmon was run as follows using a default k=31 quasi index.; salmon quant --writeMappings=Z --no-version-check -p10 (--validateMappings) --seqBias --posBias -i X -l IU -1 P.fq.gz -2 Qq.fq.gz -o Test",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/347
https://github.com/COMBINE-lab/salmon/pull/348:190,Availability,error,errors,190,"There's been some issues with compiling salmon on macOS for some time now (see also https://github.com/brewsci/homebrew-bio/pull/528). In the current version, I was running into two compile errors on macOS:. 1) problems with staden & Clang; 2) problems with linking to boost static libraries. I could fix (1) by installing staden separately and then using that install in salmon. I've included the respective Find***.cmake files. (2) is an easy fix by modifying the `CMakeLists.txt`. Is there any particular preference for using static libraries? This is a rather small patch and could be done in a Homebrew formula, if you prefer static boost libraries. Otherwise, this PR are just suggestions. If you have changes that better conform to you style, that's fine by me. Thanks,; Gabriel",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348
https://github.com/COMBINE-lab/salmon/pull/348:312,Deployability,install,installing,312,"There's been some issues with compiling salmon on macOS for some time now (see also https://github.com/brewsci/homebrew-bio/pull/528). In the current version, I was running into two compile errors on macOS:. 1) problems with staden & Clang; 2) problems with linking to boost static libraries. I could fix (1) by installing staden separately and then using that install in salmon. I've included the respective Find***.cmake files. (2) is an easy fix by modifying the `CMakeLists.txt`. Is there any particular preference for using static libraries? This is a rather small patch and could be done in a Homebrew formula, if you prefer static boost libraries. Otherwise, this PR are just suggestions. If you have changes that better conform to you style, that's fine by me. Thanks,; Gabriel",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348
https://github.com/COMBINE-lab/salmon/pull/348:361,Deployability,install,install,361,"There's been some issues with compiling salmon on macOS for some time now (see also https://github.com/brewsci/homebrew-bio/pull/528). In the current version, I was running into two compile errors on macOS:. 1) problems with staden & Clang; 2) problems with linking to boost static libraries. I could fix (1) by installing staden separately and then using that install in salmon. I've included the respective Find***.cmake files. (2) is an easy fix by modifying the `CMakeLists.txt`. Is there any particular preference for using static libraries? This is a rather small patch and could be done in a Homebrew formula, if you prefer static boost libraries. Otherwise, this PR are just suggestions. If you have changes that better conform to you style, that's fine by me. Thanks,; Gabriel",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348
https://github.com/COMBINE-lab/salmon/pull/348:570,Deployability,patch,patch,570,"There's been some issues with compiling salmon on macOS for some time now (see also https://github.com/brewsci/homebrew-bio/pull/528). In the current version, I was running into two compile errors on macOS:. 1) problems with staden & Clang; 2) problems with linking to boost static libraries. I could fix (1) by installing staden separately and then using that install in salmon. I've included the respective Find***.cmake files. (2) is an easy fix by modifying the `CMakeLists.txt`. Is there any particular preference for using static libraries? This is a rather small patch and could be done in a Homebrew formula, if you prefer static boost libraries. Otherwise, this PR are just suggestions. If you have changes that better conform to you style, that's fine by me. Thanks,; Gabriel",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348
https://github.com/COMBINE-lab/salmon/issues/349:411,Deployability,pipeline,pipeline,411,"We were given some test data - ~400,000 150 PE on two samples from a MiSeq run on a mosquito. They wanted to know recommended sequencing depth and whether they needed 150 PE or if they could get away with 100 SE. There is a decent-ish genome and transcriptome for the species (https://www.ncbi.nlm.nih.gov/genome/?term=aedes+albopictus), so we ran the 150 PE and artificially created 100 SE from R1 through our pipeline, which includes STAR plus Salmon. The STAR results were expected: 100 SE had ~40% mulitmapping / ~48% unique in genes and 150 BP improved to ~30% multimapping / ~57% unique in genes. Surprisingly, Salmon showed the opposite: 100 SE had a ~70% mapping rate while 150 PE has only a ~57% mapping rate. . We thought at first that Salmon maybe wasn't counting fragments if both ends didn't map but the answer in issue #31 says Salmon should be counting single-end mapped towards quantification. The first line in the salmon_quant.log file says ""Fragment incompatibility prior below threshold. Incompatible fragments will be ignored."" I couldn't find much in salmon quant --help-reads about fragment priors and then I found it was in pretty much all salmon_quant.logs we have, so that may not be the problem. We also thought the trouble may have something to do with the small number of fragments, so we ran through some mouse 150 PE + artificial 100 SE, that had 40M reads and also subsampled to 400K reads, but the salmon mapping rates were pretty much the same (~75%) regardless of type/length of reads or sequencing depth. So what do you think could be going on? I am worried that Salmon's ""better"" mapping percentage of 100 SE is not accurately measuring expression. We didn't test 150 SE because that is not a sequencing option with NovaSeq, but we could try it if you think it would help to figure out what is going on. Thanks,; Jenny",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/349
https://github.com/COMBINE-lab/salmon/issues/349:19,Testability,test,test,19,"We were given some test data - ~400,000 150 PE on two samples from a MiSeq run on a mosquito. They wanted to know recommended sequencing depth and whether they needed 150 PE or if they could get away with 100 SE. There is a decent-ish genome and transcriptome for the species (https://www.ncbi.nlm.nih.gov/genome/?term=aedes+albopictus), so we ran the 150 PE and artificially created 100 SE from R1 through our pipeline, which includes STAR plus Salmon. The STAR results were expected: 100 SE had ~40% mulitmapping / ~48% unique in genes and 150 BP improved to ~30% multimapping / ~57% unique in genes. Surprisingly, Salmon showed the opposite: 100 SE had a ~70% mapping rate while 150 PE has only a ~57% mapping rate. . We thought at first that Salmon maybe wasn't counting fragments if both ends didn't map but the answer in issue #31 says Salmon should be counting single-end mapped towards quantification. The first line in the salmon_quant.log file says ""Fragment incompatibility prior below threshold. Incompatible fragments will be ignored."" I couldn't find much in salmon quant --help-reads about fragment priors and then I found it was in pretty much all salmon_quant.logs we have, so that may not be the problem. We also thought the trouble may have something to do with the small number of fragments, so we ran through some mouse 150 PE + artificial 100 SE, that had 40M reads and also subsampled to 400K reads, but the salmon mapping rates were pretty much the same (~75%) regardless of type/length of reads or sequencing depth. So what do you think could be going on? I am worried that Salmon's ""better"" mapping percentage of 100 SE is not accurately measuring expression. We didn't test 150 SE because that is not a sequencing option with NovaSeq, but we could try it if you think it would help to figure out what is going on. Thanks,; Jenny",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/349
https://github.com/COMBINE-lab/salmon/issues/349:945,Testability,log,log,945,"We were given some test data - ~400,000 150 PE on two samples from a MiSeq run on a mosquito. They wanted to know recommended sequencing depth and whether they needed 150 PE or if they could get away with 100 SE. There is a decent-ish genome and transcriptome for the species (https://www.ncbi.nlm.nih.gov/genome/?term=aedes+albopictus), so we ran the 150 PE and artificially created 100 SE from R1 through our pipeline, which includes STAR plus Salmon. The STAR results were expected: 100 SE had ~40% mulitmapping / ~48% unique in genes and 150 BP improved to ~30% multimapping / ~57% unique in genes. Surprisingly, Salmon showed the opposite: 100 SE had a ~70% mapping rate while 150 PE has only a ~57% mapping rate. . We thought at first that Salmon maybe wasn't counting fragments if both ends didn't map but the answer in issue #31 says Salmon should be counting single-end mapped towards quantification. The first line in the salmon_quant.log file says ""Fragment incompatibility prior below threshold. Incompatible fragments will be ignored."" I couldn't find much in salmon quant --help-reads about fragment priors and then I found it was in pretty much all salmon_quant.logs we have, so that may not be the problem. We also thought the trouble may have something to do with the small number of fragments, so we ran through some mouse 150 PE + artificial 100 SE, that had 40M reads and also subsampled to 400K reads, but the salmon mapping rates were pretty much the same (~75%) regardless of type/length of reads or sequencing depth. So what do you think could be going on? I am worried that Salmon's ""better"" mapping percentage of 100 SE is not accurately measuring expression. We didn't test 150 SE because that is not a sequencing option with NovaSeq, but we could try it if you think it would help to figure out what is going on. Thanks,; Jenny",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/349
https://github.com/COMBINE-lab/salmon/issues/349:1177,Testability,log,logs,1177,"We were given some test data - ~400,000 150 PE on two samples from a MiSeq run on a mosquito. They wanted to know recommended sequencing depth and whether they needed 150 PE or if they could get away with 100 SE. There is a decent-ish genome and transcriptome for the species (https://www.ncbi.nlm.nih.gov/genome/?term=aedes+albopictus), so we ran the 150 PE and artificially created 100 SE from R1 through our pipeline, which includes STAR plus Salmon. The STAR results were expected: 100 SE had ~40% mulitmapping / ~48% unique in genes and 150 BP improved to ~30% multimapping / ~57% unique in genes. Surprisingly, Salmon showed the opposite: 100 SE had a ~70% mapping rate while 150 PE has only a ~57% mapping rate. . We thought at first that Salmon maybe wasn't counting fragments if both ends didn't map but the answer in issue #31 says Salmon should be counting single-end mapped towards quantification. The first line in the salmon_quant.log file says ""Fragment incompatibility prior below threshold. Incompatible fragments will be ignored."" I couldn't find much in salmon quant --help-reads about fragment priors and then I found it was in pretty much all salmon_quant.logs we have, so that may not be the problem. We also thought the trouble may have something to do with the small number of fragments, so we ran through some mouse 150 PE + artificial 100 SE, that had 40M reads and also subsampled to 400K reads, but the salmon mapping rates were pretty much the same (~75%) regardless of type/length of reads or sequencing depth. So what do you think could be going on? I am worried that Salmon's ""better"" mapping percentage of 100 SE is not accurately measuring expression. We didn't test 150 SE because that is not a sequencing option with NovaSeq, but we could try it if you think it would help to figure out what is going on. Thanks,; Jenny",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/349
https://github.com/COMBINE-lab/salmon/issues/349:1696,Testability,test,test,1696,"We were given some test data - ~400,000 150 PE on two samples from a MiSeq run on a mosquito. They wanted to know recommended sequencing depth and whether they needed 150 PE or if they could get away with 100 SE. There is a decent-ish genome and transcriptome for the species (https://www.ncbi.nlm.nih.gov/genome/?term=aedes+albopictus), so we ran the 150 PE and artificially created 100 SE from R1 through our pipeline, which includes STAR plus Salmon. The STAR results were expected: 100 SE had ~40% mulitmapping / ~48% unique in genes and 150 BP improved to ~30% multimapping / ~57% unique in genes. Surprisingly, Salmon showed the opposite: 100 SE had a ~70% mapping rate while 150 PE has only a ~57% mapping rate. . We thought at first that Salmon maybe wasn't counting fragments if both ends didn't map but the answer in issue #31 says Salmon should be counting single-end mapped towards quantification. The first line in the salmon_quant.log file says ""Fragment incompatibility prior below threshold. Incompatible fragments will be ignored."" I couldn't find much in salmon quant --help-reads about fragment priors and then I found it was in pretty much all salmon_quant.logs we have, so that may not be the problem. We also thought the trouble may have something to do with the small number of fragments, so we ran through some mouse 150 PE + artificial 100 SE, that had 40M reads and also subsampled to 400K reads, but the salmon mapping rates were pretty much the same (~75%) regardless of type/length of reads or sequencing depth. So what do you think could be going on? I am worried that Salmon's ""better"" mapping percentage of 100 SE is not accurately measuring expression. We didn't test 150 SE because that is not a sequencing option with NovaSeq, but we could try it if you think it would help to figure out what is going on. Thanks,; Jenny",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/349
https://github.com/COMBINE-lab/salmon/issues/350:37,Integrability,message,message,37,"Dear Salmon Team, . Not sure if this message should go here or on the google group, sorry if it shouldn't go here. . I am trying to analyse meta-transcriptome RNAseq data to obtain genes expression from ""complex"" microbial samples (over a 100 strains of bacteria and fungi). I have over 500 millions reads so aligning these reads on references genomes would take forever... Salmon thus looks like a promising solution. . However, i am not sure Salmon is appropriate for meta-transcriptome data. Is there prerequisites if i want to use Salmon for that purpose ? What would be your recommended parameters ?. So far, since i have a reference genome (and thus the associated coding sequences) for all the strains i created a single Salmon Index (comprising all the strains cds) and ran the quantification tool on this index using these parameters: ; salmon quant -i index --libType A --validateMappings --seqBias --incompatPrior 0.0 -r input.fa -o output . I did not include gcbias correction so far because i am not sure it is appropriate in this case. Thanks for you help, . Nathan",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/350
https://github.com/COMBINE-lab/salmon/issues/350:882,Security,validat,validateMappings,882,"Dear Salmon Team, . Not sure if this message should go here or on the google group, sorry if it shouldn't go here. . I am trying to analyse meta-transcriptome RNAseq data to obtain genes expression from ""complex"" microbial samples (over a 100 strains of bacteria and fungi). I have over 500 millions reads so aligning these reads on references genomes would take forever... Salmon thus looks like a promising solution. . However, i am not sure Salmon is appropriate for meta-transcriptome data. Is there prerequisites if i want to use Salmon for that purpose ? What would be your recommended parameters ?. So far, since i have a reference genome (and thus the associated coding sequences) for all the strains i created a single Salmon Index (comprising all the strains cds) and ran the quantification tool on this index using these parameters: ; salmon quant -i index --libType A --validateMappings --seqBias --incompatPrior 0.0 -r input.fa -o output . I did not include gcbias correction so far because i am not sure it is appropriate in this case. Thanks for you help, . Nathan",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/350
https://github.com/COMBINE-lab/salmon/issues/352:19,Deployability,release,release,19,"From Salmon 0.13.1 release notes:. > This version adds the `--allowDovetail` flag which overrides the newly-default behavior of discarding dovetail mappings of paired-end reads. If passed this flag, salmon will not consider dovetailing mappings as discordant, and will consider them. I am trying to understand why the default behavior is to discard dovetail mappings. In my personal experience, most of the dovetail mappings are due to short fragments, so both mates of the pair end up completely overlapping. In that case, I would think that dovetailed reads should be retained. Are there are other factors that contribute to discarding dovetails by default?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/352
https://github.com/COMBINE-lab/salmon/issues/354:128,Performance,load,loading,128,"Hi, I have noticed that when following the instructions (https://combine-lab.github.io/alevin-tutorial/2018/output-format/) for loading binary data it can sometimes be very slow. I am using the command:; `alevin_df = parser.read_quants_bin('./salmon_folder')`. However loading the raw output of a normal run with ~120k barcodes takes upwards of an hour. Is there another way to load the binary output?. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/354
https://github.com/COMBINE-lab/salmon/issues/354:269,Performance,load,loading,269,"Hi, I have noticed that when following the instructions (https://combine-lab.github.io/alevin-tutorial/2018/output-format/) for loading binary data it can sometimes be very slow. I am using the command:; `alevin_df = parser.read_quants_bin('./salmon_folder')`. However loading the raw output of a normal run with ~120k barcodes takes upwards of an hour. Is there another way to load the binary output?. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/354
https://github.com/COMBINE-lab/salmon/issues/354:378,Performance,load,load,378,"Hi, I have noticed that when following the instructions (https://combine-lab.github.io/alevin-tutorial/2018/output-format/) for loading binary data it can sometimes be very slow. I am using the command:; `alevin_df = parser.read_quants_bin('./salmon_folder')`. However loading the raw output of a normal run with ~120k barcodes takes upwards of an hour. Is there another way to load the binary output?. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/354
https://github.com/COMBINE-lab/salmon/issues/355:835,Availability,down,downloaded,835,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Affects salmon (bulk mode) for sure. I don't know alevin. **Describe the bug**; totalCount_ is not initialized in Transcript constructors. In the vast majority of the cases it doesn't matter because the memory is initialized to 0 anyway, but for a very small fraction of the transcripts the totalCount gest initialized to some random value, which can lead to missed invocations of projectToPolytope in normalizeAlphas and writeAbundances. **To Reproduce**. Systematic. Effect might be more difficult to detect as you'd need a truth set. Dumping a trace of the totalCount_ might be easier. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.11.3 ans 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. N/A. compiled from scratch. * Which reference (e.g. transcriptome) was used?. * Which read files were used?. BAM input, generated by STAR, from proprietary data produced with Illumina instruments. * Which which program options were used?. --no-version-check --threads 1 --dumpEq --useEM --noErrorModel --noRichEqClasses --gcBias -l isr. **Expected behavior**. Accurate values for totalCount for all transcripts. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu 18.10, CentOs 7.5.1804. **Additional context**; Add any other context about the problem here. Attached patch for 0.13.1:. [Transcript.hpp.patch-0.13.1.txt](https://github.com/COMBINE-lab/salmon/files/3044728/Transcript.hpp.patch-0.13.1.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/355
https://github.com/COMBINE-lab/salmon/issues/355:814,Deployability,install,installed,814,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Affects salmon (bulk mode) for sure. I don't know alevin. **Describe the bug**; totalCount_ is not initialized in Transcript constructors. In the vast majority of the cases it doesn't matter because the memory is initialized to 0 anyway, but for a very small fraction of the transcripts the totalCount gest initialized to some random value, which can lead to missed invocations of projectToPolytope in normalizeAlphas and writeAbundances. **To Reproduce**. Systematic. Effect might be more difficult to detect as you'd need a truth set. Dumping a trace of the totalCount_ might be easier. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.11.3 ans 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. N/A. compiled from scratch. * Which reference (e.g. transcriptome) was used?. * Which read files were used?. BAM input, generated by STAR, from proprietary data produced with Illumina instruments. * Which which program options were used?. --no-version-check --threads 1 --dumpEq --useEM --noErrorModel --noRichEqClasses --gcBias -l isr. **Expected behavior**. Accurate values for totalCount for all transcripts. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu 18.10, CentOs 7.5.1804. **Additional context**; Add any other context about the problem here. Attached patch for 0.13.1:. [Transcript.hpp.patch-0.13.1.txt](https://github.com/COMBINE-lab/salmon/files/3044728/Transcript.hpp.patch-0.13.1.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/355
https://github.com/COMBINE-lab/salmon/issues/355:1561,Deployability,patch,patch,1561,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Affects salmon (bulk mode) for sure. I don't know alevin. **Describe the bug**; totalCount_ is not initialized in Transcript constructors. In the vast majority of the cases it doesn't matter because the memory is initialized to 0 anyway, but for a very small fraction of the transcripts the totalCount gest initialized to some random value, which can lead to missed invocations of projectToPolytope in normalizeAlphas and writeAbundances. **To Reproduce**. Systematic. Effect might be more difficult to detect as you'd need a truth set. Dumping a trace of the totalCount_ might be easier. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.11.3 ans 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. N/A. compiled from scratch. * Which reference (e.g. transcriptome) was used?. * Which read files were used?. BAM input, generated by STAR, from proprietary data produced with Illumina instruments. * Which which program options were used?. --no-version-check --threads 1 --dumpEq --useEM --noErrorModel --noRichEqClasses --gcBias -l isr. **Expected behavior**. Accurate values for totalCount for all transcripts. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu 18.10, CentOs 7.5.1804. **Additional context**; Add any other context about the problem here. Attached patch for 0.13.1:. [Transcript.hpp.patch-0.13.1.txt](https://github.com/COMBINE-lab/salmon/files/3044728/Transcript.hpp.patch-0.13.1.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/355
https://github.com/COMBINE-lab/salmon/issues/355:1596,Deployability,patch,patch-,1596,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Affects salmon (bulk mode) for sure. I don't know alevin. **Describe the bug**; totalCount_ is not initialized in Transcript constructors. In the vast majority of the cases it doesn't matter because the memory is initialized to 0 anyway, but for a very small fraction of the transcripts the totalCount gest initialized to some random value, which can lead to missed invocations of projectToPolytope in normalizeAlphas and writeAbundances. **To Reproduce**. Systematic. Effect might be more difficult to detect as you'd need a truth set. Dumping a trace of the totalCount_ might be easier. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.11.3 ans 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. N/A. compiled from scratch. * Which reference (e.g. transcriptome) was used?. * Which read files were used?. BAM input, generated by STAR, from proprietary data produced with Illumina instruments. * Which which program options were used?. --no-version-check --threads 1 --dumpEq --useEM --noErrorModel --noRichEqClasses --gcBias -l isr. **Expected behavior**. Accurate values for totalCount for all transcripts. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu 18.10, CentOs 7.5.1804. **Additional context**; Add any other context about the problem here. Attached patch for 0.13.1:. [Transcript.hpp.patch-0.13.1.txt](https://github.com/COMBINE-lab/salmon/files/3044728/Transcript.hpp.patch-0.13.1.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/355
https://github.com/COMBINE-lab/salmon/issues/355:1681,Deployability,patch,patch-,1681,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Affects salmon (bulk mode) for sure. I don't know alevin. **Describe the bug**; totalCount_ is not initialized in Transcript constructors. In the vast majority of the cases it doesn't matter because the memory is initialized to 0 anyway, but for a very small fraction of the transcripts the totalCount gest initialized to some random value, which can lead to missed invocations of projectToPolytope in normalizeAlphas and writeAbundances. **To Reproduce**. Systematic. Effect might be more difficult to detect as you'd need a truth set. Dumping a trace of the totalCount_ might be easier. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.11.3 ans 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. N/A. compiled from scratch. * Which reference (e.g. transcriptome) was used?. * Which read files were used?. BAM input, generated by STAR, from proprietary data produced with Illumina instruments. * Which which program options were used?. --no-version-check --threads 1 --dumpEq --useEM --noErrorModel --noRichEqClasses --gcBias -l isr. **Expected behavior**. Accurate values for totalCount for all transcripts. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu 18.10, CentOs 7.5.1804. **Additional context**; Add any other context about the problem here. Attached patch for 0.13.1:. [Transcript.hpp.patch-0.13.1.txt](https://github.com/COMBINE-lab/salmon/files/3044728/Transcript.hpp.patch-0.13.1.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/355
https://github.com/COMBINE-lab/salmon/issues/355:589,Safety,detect,detect,589,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Affects salmon (bulk mode) for sure. I don't know alevin. **Describe the bug**; totalCount_ is not initialized in Transcript constructors. In the vast majority of the cases it doesn't matter because the memory is initialized to 0 anyway, but for a very small fraction of the transcripts the totalCount gest initialized to some random value, which can lead to missed invocations of projectToPolytope in normalizeAlphas and writeAbundances. **To Reproduce**. Systematic. Effect might be more difficult to detect as you'd need a truth set. Dumping a trace of the totalCount_ might be easier. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.11.3 ans 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. N/A. compiled from scratch. * Which reference (e.g. transcriptome) was used?. * Which read files were used?. BAM input, generated by STAR, from proprietary data produced with Illumina instruments. * Which which program options were used?. --no-version-check --threads 1 --dumpEq --useEM --noErrorModel --noRichEqClasses --gcBias -l isr. **Expected behavior**. Accurate values for totalCount for all transcripts. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu 18.10, CentOs 7.5.1804. **Additional context**; Add any other context about the problem here. Attached patch for 0.13.1:. [Transcript.hpp.patch-0.13.1.txt](https://github.com/COMBINE-lab/salmon/files/3044728/Transcript.hpp.patch-0.13.1.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/355
https://github.com/COMBINE-lab/salmon/issues/356:413,Availability,failure,failure,413,"Salmon version: 0.13.1 (installed via pre-compiled binary). I used salmon to quantify some samples and wanted to use the `quantmerge` command to produce a combined table. However, the merged table I got as output only contained 17 lines (of 52228 in the quant.genes.sf files). I was able to identify that the problem was related somehow to the ""Name"" column itself, although I didn't find any obvious pattern for failure. For example, if I rename all the genes to simply ""1"", ""2"", ... and then `quantmerge`, I get a properly combined table with all samples/genes. Looking back at the ""original"" data with the gene names, I find that the truncated merged table consistently/always truncates immediately *after* processing some gene names. For example, the 16th gene name in my ""quant.genes.sf"" table happens to be ""Erdr1"". If this line is moved to the top of that file, then the merged table will truncate at 2 (the header counting for one of those, obviously). Unfortunately, it's not just ""Erdr1"". If that line is moved to the end of the file, or deleted entirely, there is another failure at gene ""Gm28674"", which happens to be the 19th gene. And so on for a very large number of names (I gave up after removing ~30 one at a time). I've now tested with a few different samples and with a number of randomly selected subsets of the original quant files and the behavior is consistent. I can't figure out what the pattern is, but ""Erdr1"", ""Gm28674"", and all the other genes I discovered with my ad-hoc process above, always cause `quantmerge` to truncate the output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/356
https://github.com/COMBINE-lab/salmon/issues/356:1083,Availability,failure,failure,1083,"Salmon version: 0.13.1 (installed via pre-compiled binary). I used salmon to quantify some samples and wanted to use the `quantmerge` command to produce a combined table. However, the merged table I got as output only contained 17 lines (of 52228 in the quant.genes.sf files). I was able to identify that the problem was related somehow to the ""Name"" column itself, although I didn't find any obvious pattern for failure. For example, if I rename all the genes to simply ""1"", ""2"", ... and then `quantmerge`, I get a properly combined table with all samples/genes. Looking back at the ""original"" data with the gene names, I find that the truncated merged table consistently/always truncates immediately *after* processing some gene names. For example, the 16th gene name in my ""quant.genes.sf"" table happens to be ""Erdr1"". If this line is moved to the top of that file, then the merged table will truncate at 2 (the header counting for one of those, obviously). Unfortunately, it's not just ""Erdr1"". If that line is moved to the end of the file, or deleted entirely, there is another failure at gene ""Gm28674"", which happens to be the 19th gene. And so on for a very large number of names (I gave up after removing ~30 one at a time). I've now tested with a few different samples and with a number of randomly selected subsets of the original quant files and the behavior is consistent. I can't figure out what the pattern is, but ""Erdr1"", ""Gm28674"", and all the other genes I discovered with my ad-hoc process above, always cause `quantmerge` to truncate the output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/356
https://github.com/COMBINE-lab/salmon/issues/356:24,Deployability,install,installed,24,"Salmon version: 0.13.1 (installed via pre-compiled binary). I used salmon to quantify some samples and wanted to use the `quantmerge` command to produce a combined table. However, the merged table I got as output only contained 17 lines (of 52228 in the quant.genes.sf files). I was able to identify that the problem was related somehow to the ""Name"" column itself, although I didn't find any obvious pattern for failure. For example, if I rename all the genes to simply ""1"", ""2"", ... and then `quantmerge`, I get a properly combined table with all samples/genes. Looking back at the ""original"" data with the gene names, I find that the truncated merged table consistently/always truncates immediately *after* processing some gene names. For example, the 16th gene name in my ""quant.genes.sf"" table happens to be ""Erdr1"". If this line is moved to the top of that file, then the merged table will truncate at 2 (the header counting for one of those, obviously). Unfortunately, it's not just ""Erdr1"". If that line is moved to the end of the file, or deleted entirely, there is another failure at gene ""Gm28674"", which happens to be the 19th gene. And so on for a very large number of names (I gave up after removing ~30 one at a time). I've now tested with a few different samples and with a number of randomly selected subsets of the original quant files and the behavior is consistent. I can't figure out what the pattern is, but ""Erdr1"", ""Gm28674"", and all the other genes I discovered with my ad-hoc process above, always cause `quantmerge` to truncate the output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/356
https://github.com/COMBINE-lab/salmon/issues/356:1243,Testability,test,tested,1243,"Salmon version: 0.13.1 (installed via pre-compiled binary). I used salmon to quantify some samples and wanted to use the `quantmerge` command to produce a combined table. However, the merged table I got as output only contained 17 lines (of 52228 in the quant.genes.sf files). I was able to identify that the problem was related somehow to the ""Name"" column itself, although I didn't find any obvious pattern for failure. For example, if I rename all the genes to simply ""1"", ""2"", ... and then `quantmerge`, I get a properly combined table with all samples/genes. Looking back at the ""original"" data with the gene names, I find that the truncated merged table consistently/always truncates immediately *after* processing some gene names. For example, the 16th gene name in my ""quant.genes.sf"" table happens to be ""Erdr1"". If this line is moved to the top of that file, then the merged table will truncate at 2 (the header counting for one of those, obviously). Unfortunately, it's not just ""Erdr1"". If that line is moved to the end of the file, or deleted entirely, there is another failure at gene ""Gm28674"", which happens to be the 19th gene. And so on for a very large number of names (I gave up after removing ~30 one at a time). I've now tested with a few different samples and with a number of randomly selected subsets of the original quant files and the behavior is consistent. I can't figure out what the pattern is, but ""Erdr1"", ""Gm28674"", and all the other genes I discovered with my ad-hoc process above, always cause `quantmerge` to truncate the output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/356
https://github.com/COMBINE-lab/salmon/issues/356:464,Usability,simpl,simply,464,"Salmon version: 0.13.1 (installed via pre-compiled binary). I used salmon to quantify some samples and wanted to use the `quantmerge` command to produce a combined table. However, the merged table I got as output only contained 17 lines (of 52228 in the quant.genes.sf files). I was able to identify that the problem was related somehow to the ""Name"" column itself, although I didn't find any obvious pattern for failure. For example, if I rename all the genes to simply ""1"", ""2"", ... and then `quantmerge`, I get a properly combined table with all samples/genes. Looking back at the ""original"" data with the gene names, I find that the truncated merged table consistently/always truncates immediately *after* processing some gene names. For example, the 16th gene name in my ""quant.genes.sf"" table happens to be ""Erdr1"". If this line is moved to the top of that file, then the merged table will truncate at 2 (the header counting for one of those, obviously). Unfortunately, it's not just ""Erdr1"". If that line is moved to the end of the file, or deleted entirely, there is another failure at gene ""Gm28674"", which happens to be the 19th gene. And so on for a very large number of names (I gave up after removing ~30 one at a time). I've now tested with a few different samples and with a number of randomly selected subsets of the original quant files and the behavior is consistent. I can't figure out what the pattern is, but ""Erdr1"", ""Gm28674"", and all the other genes I discovered with my ad-hoc process above, always cause `quantmerge` to truncate the output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/356
https://github.com/COMBINE-lab/salmon/issues/357:245,Availability,error,error,245,"I just cloned salmon from github repository. Everything was working good, I was able to perform cmake with the code: salmon/build cmake -DFETCH_BOOST=TRUE ..; but when I started to built with make, after several minutes it prompts the following error:. [ 7%] Built target libdivsufsort; [ 14%] Built target libtbb; [ 20%] Built target liblzma; [ 26%] Built target libjemalloc; [ 33%] Built target libcereal; [ 33%] Performing build step for 'libstadenio'; Making all in io_lib; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; compilation terminated.; Makefile:922: recipe for target 'libstaden_read_la-cram_io.lo' failed; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. I have looking for any solution but without success, Can anyone help me with this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357
https://github.com/COMBINE-lab/salmon/issues/357:687,Availability,error,error,687,"I just cloned salmon from github repository. Everything was working good, I was able to perform cmake with the code: salmon/build cmake -DFETCH_BOOST=TRUE ..; but when I started to built with make, after several minutes it prompts the following error:. [ 7%] Built target libdivsufsort; [ 14%] Built target libtbb; [ 20%] Built target liblzma; [ 26%] Built target libjemalloc; [ 33%] Built target libcereal; [ 33%] Performing build step for 'libstadenio'; Making all in io_lib; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; compilation terminated.; Makefile:922: recipe for target 'libstaden_read_la-cram_io.lo' failed; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. I have looking for any solution but without success, Can anyone help me with this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357
https://github.com/COMBINE-lab/salmon/issues/357:869,Availability,Error,Error,869,"I just cloned salmon from github repository. Everything was working good, I was able to perform cmake with the code: salmon/build cmake -DFETCH_BOOST=TRUE ..; but when I started to built with make, after several minutes it prompts the following error:. [ 7%] Built target libdivsufsort; [ 14%] Built target libtbb; [ 20%] Built target liblzma; [ 26%] Built target libjemalloc; [ 33%] Built target libcereal; [ 33%] Performing build step for 'libstadenio'; Making all in io_lib; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; compilation terminated.; Makefile:922: recipe for target 'libstaden_read_la-cram_io.lo' failed; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. I have looking for any solution but without success, Can anyone help me with this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357
https://github.com/COMBINE-lab/salmon/issues/357:963,Availability,Error,Error,963,"I just cloned salmon from github repository. Everything was working good, I was able to perform cmake with the code: salmon/build cmake -DFETCH_BOOST=TRUE ..; but when I started to built with make, after several minutes it prompts the following error:. [ 7%] Built target libdivsufsort; [ 14%] Built target libtbb; [ 20%] Built target liblzma; [ 26%] Built target libjemalloc; [ 33%] Built target libcereal; [ 33%] Performing build step for 'libstadenio'; Making all in io_lib; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; compilation terminated.; Makefile:922: recipe for target 'libstaden_read_la-cram_io.lo' failed; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. I have looking for any solution but without success, Can anyone help me with this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357
https://github.com/COMBINE-lab/salmon/issues/357:1037,Availability,Error,Error,1037,"I just cloned salmon from github repository. Everything was working good, I was able to perform cmake with the code: salmon/build cmake -DFETCH_BOOST=TRUE ..; but when I started to built with make, after several minutes it prompts the following error:. [ 7%] Built target libdivsufsort; [ 14%] Built target libtbb; [ 20%] Built target liblzma; [ 26%] Built target libjemalloc; [ 33%] Built target libcereal; [ 33%] Performing build step for 'libstadenio'; Making all in io_lib; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; compilation terminated.; Makefile:922: recipe for target 'libstaden_read_la-cram_io.lo' failed; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. I have looking for any solution but without success, Can anyone help me with this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357
https://github.com/COMBINE-lab/salmon/issues/357:1250,Availability,Error,Error,1250,"I just cloned salmon from github repository. Everything was working good, I was able to perform cmake with the code: salmon/build cmake -DFETCH_BOOST=TRUE ..; but when I started to built with make, after several minutes it prompts the following error:. [ 7%] Built target libdivsufsort; [ 14%] Built target libtbb; [ 20%] Built target liblzma; [ 26%] Built target libjemalloc; [ 33%] Built target libcereal; [ 33%] Performing build step for 'libstadenio'; Making all in io_lib; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; compilation terminated.; Makefile:922: recipe for target 'libstaden_read_la-cram_io.lo' failed; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. I have looking for any solution but without success, Can anyone help me with this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357
https://github.com/COMBINE-lab/salmon/issues/357:1390,Availability,Error,Error,1390,"I just cloned salmon from github repository. Everything was working good, I was able to perform cmake with the code: salmon/build cmake -DFETCH_BOOST=TRUE ..; but when I started to built with make, after several minutes it prompts the following error:. [ 7%] Built target libdivsufsort; [ 14%] Built target libtbb; [ 20%] Built target liblzma; [ 26%] Built target libjemalloc; [ 33%] Built target libcereal; [ 33%] Performing build step for 'libstadenio'; Making all in io_lib; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; compilation terminated.; Makefile:922: recipe for target 'libstaden_read_la-cram_io.lo' failed; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. I have looking for any solution but without success, Can anyone help me with this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357
https://github.com/COMBINE-lab/salmon/issues/357:1461,Availability,Error,Error,1461,"I just cloned salmon from github repository. Everything was working good, I was able to perform cmake with the code: salmon/build cmake -DFETCH_BOOST=TRUE ..; but when I started to built with make, after several minutes it prompts the following error:. [ 7%] Built target libdivsufsort; [ 14%] Built target libtbb; [ 20%] Built target liblzma; [ 26%] Built target libjemalloc; [ 33%] Built target libcereal; [ 33%] Performing build step for 'libstadenio'; Making all in io_lib; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; compilation terminated.; Makefile:922: recipe for target 'libstaden_read_la-cram_io.lo' failed; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. I have looking for any solution but without success, Can anyone help me with this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357
https://github.com/COMBINE-lab/salmon/issues/357:88,Performance,perform,perform,88,"I just cloned salmon from github repository. Everything was working good, I was able to perform cmake with the code: salmon/build cmake -DFETCH_BOOST=TRUE ..; but when I started to built with make, after several minutes it prompts the following error:. [ 7%] Built target libdivsufsort; [ 14%] Built target libtbb; [ 20%] Built target liblzma; [ 26%] Built target libjemalloc; [ 33%] Built target libcereal; [ 33%] Performing build step for 'libstadenio'; Making all in io_lib; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; compilation terminated.; Makefile:922: recipe for target 'libstaden_read_la-cram_io.lo' failed; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. I have looking for any solution but without success, Can anyone help me with this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357
https://github.com/COMBINE-lab/salmon/issues/357:415,Performance,Perform,Performing,415,"I just cloned salmon from github repository. Everything was working good, I was able to perform cmake with the code: salmon/build cmake -DFETCH_BOOST=TRUE ..; but when I started to built with make, after several minutes it prompts the following error:. [ 7%] Built target libdivsufsort; [ 14%] Built target libtbb; [ 20%] Built target liblzma; [ 26%] Built target libjemalloc; [ 33%] Built target libcereal; [ 33%] Performing build step for 'libstadenio'; Making all in io_lib; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; compilation terminated.; Makefile:922: recipe for target 'libstaden_read_la-cram_io.lo' failed; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. I have looking for any solution but without success, Can anyone help me with this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357
https://github.com/COMBINE-lab/salmon/issues/360:1279,Availability,down,downstream,1279,"Hi everyone,. Is there a way to feed pre-transformed files into Alevin? We've been using Valentine's nice umis repository https://github.com/vals/umis as our preprocessing step to put sample, cell and UMI barcodes into the read name. They end up with formats like this:. ```; @ST-K00126:314:HFYL2BBXX:7:1101:1631:1226:CELL_GGGCACTAGCTGATAA:UMI_GGGCCCAACG:SAMPLE_GTAATTGC; GNTGTGGCAGAGCAGCGACCCGCGGCGGGGCGGCATCCCCAGCTGGTTCGGGCCGGGACGGGGCGGCCAGCAGGGACGCGCCCCAGGGGGGCAGCTGT; +; A#-<<F7<AJF-FJ<JAAJJFJJ<AF-7AJF77<FJJJFFFJJ<JA-7-777<-F7<<F--7AA7AAAFF-AF<A-AFFA7J7F--7)-)7--7A<J-; ```; the nice thing about the way umis is doing it is you can specify how to do transformations via a JSON file that has regexes regarding where in the original FASTQ files the UMI/cell/sample barcodes are. For example, for 10x v2:; ```json; {; ""read1"": ""(?P<name>@.*) .*\\n(?P<CB>.{16})(?P<MB>.{10})(.*)\\n\\+(.*)\\n(.*)\\n"",; ""read2"": ""(@.*) .*\\n(?P<seq>.*)\\n\\+(.*)\\n(?P<qual>.*)\\n"",; ""read3"": ""(@.*)\\n(?P<SB>.*)\\n\\+(.*)\\n(.*)\\n""; }; ```; This makes it so end users can write their own transformations to handle arbitrary protocols. . I'd love to plug into Alevin after this step and use Alevin for everything else. Is there a description of what the reads need to look like to work with the downstream steps in Alevin?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/360
https://github.com/COMBINE-lab/salmon/issues/360:1109,Integrability,protocol,protocols,1109,"Hi everyone,. Is there a way to feed pre-transformed files into Alevin? We've been using Valentine's nice umis repository https://github.com/vals/umis as our preprocessing step to put sample, cell and UMI barcodes into the read name. They end up with formats like this:. ```; @ST-K00126:314:HFYL2BBXX:7:1101:1631:1226:CELL_GGGCACTAGCTGATAA:UMI_GGGCCCAACG:SAMPLE_GTAATTGC; GNTGTGGCAGAGCAGCGACCCGCGGCGGGGCGGCATCCCCAGCTGGTTCGGGCCGGGACGGGGCGGCCAGCAGGGACGCGCCCCAGGGGGGCAGCTGT; +; A#-<<F7<AJF-FJ<JAAJJFJJ<AF-7AJF77<FJJJFFFJJ<JA-7-777<-F7<<F--7AA7AAAFF-AF<A-AFFA7J7F--7)-)7--7A<J-; ```; the nice thing about the way umis is doing it is you can specify how to do transformations via a JSON file that has regexes regarding where in the original FASTQ files the UMI/cell/sample barcodes are. For example, for 10x v2:; ```json; {; ""read1"": ""(?P<name>@.*) .*\\n(?P<CB>.{16})(?P<MB>.{10})(.*)\\n\\+(.*)\\n(.*)\\n"",; ""read2"": ""(@.*) .*\\n(?P<seq>.*)\\n\\+(.*)\\n(?P<qual>.*)\\n"",; ""read3"": ""(@.*)\\n(?P<SB>.*)\\n\\+(.*)\\n(.*)\\n""; }; ```; This makes it so end users can write their own transformations to handle arbitrary protocols. . I'd love to plug into Alevin after this step and use Alevin for everything else. Is there a description of what the reads need to look like to work with the downstream steps in Alevin?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/360
https://github.com/COMBINE-lab/salmon/issues/361:1709,Availability,down,downloaded,1709,"oduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected behavior**; I expected a total of 18.5M counts in the quant matrix, where the sums per barcode fit those reported in the _MappedUmi.txt_ Is my assumption that the quant matrix should only contain integers correct?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; Ubuntu 18.04.1 LTS. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361
https://github.com/COMBINE-lab/salmon/issues/361:1752,Availability,down,downloaded,1752,"oduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected behavior**; I expected a total of 18.5M counts in the quant matrix, where the sums per barcode fit those reported in the _MappedUmi.txt_ Is my assumption that the quant matrix should only contain integers correct?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; Ubuntu 18.04.1 LTS. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361
https://github.com/COMBINE-lab/salmon/issues/361:1688,Deployability,install,installed,1688,"oduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected behavior**; I expected a total of 18.5M counts in the quant matrix, where the sums per barcode fit those reported in the _MappedUmi.txt_ Is my assumption that the quant matrix should only contain integers correct?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; Ubuntu 18.04.1 LTS. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361
https://github.com/COMBINE-lab/salmon/issues/361:127,Energy Efficiency,adapt,adapted,127,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; We have an adapted Celseq2 protocol, where read1 (42bp) is used as the sequencing read and read2 (also 42bp) contains (5' -> 3') the barcode (8bp), UMI (8bp), 26 remaining nt's. Alevin seems to run fine, but the quant matrix has a very low UMI count, which does not fit with the _MappedUMI.txt_ file or the reported alignment rate.; ; **To Reproduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361
https://github.com/COMBINE-lab/salmon/issues/361:1917,Energy Efficiency,adapt,adapted,1917,"oduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected behavior**; I expected a total of 18.5M counts in the quant matrix, where the sums per barcode fit those reported in the _MappedUmi.txt_ Is my assumption that the quant matrix should only contain integers correct?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; Ubuntu 18.04.1 LTS. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361
https://github.com/COMBINE-lab/salmon/issues/361:143,Integrability,protocol,protocol,143,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; We have an adapted Celseq2 protocol, where read1 (42bp) is used as the sequencing read and read2 (also 42bp) contains (5' -> 3') the barcode (8bp), UMI (8bp), 26 remaining nt's. Alevin seems to run fine, but the quant matrix has a very low UMI count, which does not fit with the _MappedUMI.txt_ file or the reported alignment rate.; ; **To Reproduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361
https://github.com/COMBINE-lab/salmon/issues/361:1933,Integrability,protocol,protocol,1933,"oduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected behavior**; I expected a total of 18.5M counts in the quant matrix, where the sums per barcode fit those reported in the _MappedUmi.txt_ Is my assumption that the quant matrix should only contain integers correct?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; Ubuntu 18.04.1 LTS. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361
https://github.com/COMBINE-lab/salmon/issues/361:127,Modifiability,adapt,adapted,127,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; We have an adapted Celseq2 protocol, where read1 (42bp) is used as the sequencing read and read2 (also 42bp) contains (5' -> 3') the barcode (8bp), UMI (8bp), 26 remaining nt's. Alevin seems to run fine, but the quant matrix has a very low UMI count, which does not fit with the _MappedUMI.txt_ file or the reported alignment rate.; ; **To Reproduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361
https://github.com/COMBINE-lab/salmon/issues/361:1917,Modifiability,adapt,adapted,1917,"oduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected behavior**; I expected a total of 18.5M counts in the quant matrix, where the sums per barcode fit those reported in the _MappedUmi.txt_ Is my assumption that the quant matrix should only contain integers correct?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; Ubuntu 18.04.1 LTS. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361
https://github.com/COMBINE-lab/salmon/issues/362:688,Availability,error,error,688,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Alevin. **Describe the bug**. Maybe more of a support request than a bug. . I've got some of what I suspect is lower-quality drop-seq data. Running Alevin with default parameters yields very low mapping rates, presumably because elbow-finding is failing. Here's the barcode rank plot, you can see why it's having trouble, you might see an elbow if you squint a bit. . ![Drop-seq](https://user-images.githubusercontent.com/5775915/57308423-3d006f00-70de-11e9-8c59-47e55d060035.png). I know from the source publication that we expect 278 cells in this case. . Supplying --expectCells yields the boundary error above. For this to work I need to break out the big guns and use --forceCells, yes? What I would really like is to try --expectCells first to allow Alevin to be a little bit intelligent, and if that fails to use --forceCells. Is that a sensible approach?. If so, could we a) have an informative error code on the boundary error above such that I can easily detect that error and re-submit with --forceCells, or b) if this is generically useful have a flag in Alevin to do it directly?. **To Reproduce**; Steps and data to reproduce the behavior:. - cDNA reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R2.fastq.gz; - barcode reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; #",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362
https://github.com/COMBINE-lab/salmon/issues/362:989,Availability,error,error,989,"single-cell mode)?**. Alevin. **Describe the bug**. Maybe more of a support request than a bug. . I've got some of what I suspect is lower-quality drop-seq data. Running Alevin with default parameters yields very low mapping rates, presumably because elbow-finding is failing. Here's the barcode rank plot, you can see why it's having trouble, you might see an elbow if you squint a bit. . ![Drop-seq](https://user-images.githubusercontent.com/5775915/57308423-3d006f00-70de-11e9-8c59-47e55d060035.png). I know from the source publication that we expect 278 cells in this case. . Supplying --expectCells yields the boundary error above. For this to work I need to break out the big guns and use --forceCells, yes? What I would really like is to try --expectCells first to allow Alevin to be a little bit intelligent, and if that fails to use --forceCells. Is that a sensible approach?. If so, could we a) have an informative error code on the boundary error above such that I can easily detect that error and re-submit with --forceCells, or b) if this is generically useful have a flag in Alevin to do it directly?. **To Reproduce**; Steps and data to reproduce the behavior:. - cDNA reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R2.fastq.gz; - barcode reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362
https://github.com/COMBINE-lab/salmon/issues/362:1016,Availability,error,error,1016,"single-cell mode)?**. Alevin. **Describe the bug**. Maybe more of a support request than a bug. . I've got some of what I suspect is lower-quality drop-seq data. Running Alevin with default parameters yields very low mapping rates, presumably because elbow-finding is failing. Here's the barcode rank plot, you can see why it's having trouble, you might see an elbow if you squint a bit. . ![Drop-seq](https://user-images.githubusercontent.com/5775915/57308423-3d006f00-70de-11e9-8c59-47e55d060035.png). I know from the source publication that we expect 278 cells in this case. . Supplying --expectCells yields the boundary error above. For this to work I need to break out the big guns and use --forceCells, yes? What I would really like is to try --expectCells first to allow Alevin to be a little bit intelligent, and if that fails to use --forceCells. Is that a sensible approach?. If so, could we a) have an informative error code on the boundary error above such that I can easily detect that error and re-submit with --forceCells, or b) if this is generically useful have a flag in Alevin to do it directly?. **To Reproduce**; Steps and data to reproduce the behavior:. - cDNA reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R2.fastq.gz; - barcode reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362
https://github.com/COMBINE-lab/salmon/issues/362:1063,Availability,error,error,1063,"single-cell mode)?**. Alevin. **Describe the bug**. Maybe more of a support request than a bug. . I've got some of what I suspect is lower-quality drop-seq data. Running Alevin with default parameters yields very low mapping rates, presumably because elbow-finding is failing. Here's the barcode rank plot, you can see why it's having trouble, you might see an elbow if you squint a bit. . ![Drop-seq](https://user-images.githubusercontent.com/5775915/57308423-3d006f00-70de-11e9-8c59-47e55d060035.png). I know from the source publication that we expect 278 cells in this case. . Supplying --expectCells yields the boundary error above. For this to work I need to break out the big guns and use --forceCells, yes? What I would really like is to try --expectCells first to allow Alevin to be a little bit intelligent, and if that fails to use --forceCells. Is that a sensible approach?. If so, could we a) have an informative error code on the boundary error above such that I can easily detect that error and re-submit with --forceCells, or b) if this is generically useful have a flag in Alevin to do it directly?. **To Reproduce**; Steps and data to reproduce the behavior:. - cDNA reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R2.fastq.gz; - barcode reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362
https://github.com/COMBINE-lab/salmon/issues/362:3711,Availability,error,error,3711,"500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14:40:36.500] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-05-07 14:40:36.511] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 8 Million barcodes; processed 17 Million barcodes; processed 25 Million barcodes; processed 34 Million barcodes; processed 42 Million barcodes; processed 51 Million barcodes; processed 59 Million barcodes; processed 67 Million barcodes; processed 76 Million barcodes; processed 84 Million barcodes; processed 93 Million barcodes; processed 101 Million barcodesdes; processed 109 Million barcodes; processed 118 Million barcodes; processed 126 Million barcodes; processed 134 Million barcodes; processed 143 Million barcodesodes; processed 148 Million barcodes. [2019-05-07 14:42:18.567] [alevinLog] [info] Done barcode density calculation.; [2019-05-07 14:42:18.567] [alevinLog] [info] # Barcodes Used: 147999216 / 148515763.; [2019-05-07 14:42:19.496] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version . Linux ebi6-054.ebi.ac.uk 3.10.0-514.16.1.el7.x86_64 #1 SMP Fri Mar 10 13:12:32 EST 2017 x86_64 x86_64 x86_64 GNU/Linux; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 7.3 (Maipo); Release:	7.3; Codename:	Maipo. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362
https://github.com/COMBINE-lab/salmon/issues/362:4268,Deployability,release,release,4268,"500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14:40:36.500] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-05-07 14:40:36.511] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 8 Million barcodes; processed 17 Million barcodes; processed 25 Million barcodes; processed 34 Million barcodes; processed 42 Million barcodes; processed 51 Million barcodes; processed 59 Million barcodes; processed 67 Million barcodes; processed 76 Million barcodes; processed 84 Million barcodes; processed 93 Million barcodes; processed 101 Million barcodesdes; processed 109 Million barcodes; processed 118 Million barcodes; processed 126 Million barcodes; processed 134 Million barcodes; processed 143 Million barcodesodes; processed 148 Million barcodes. [2019-05-07 14:42:18.567] [alevinLog] [info] Done barcode density calculation.; [2019-05-07 14:42:18.567] [alevinLog] [info] # Barcodes Used: 147999216 / 148515763.; [2019-05-07 14:42:19.496] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version . Linux ebi6-054.ebi.ac.uk 3.10.0-514.16.1.el7.x86_64 #1 SMP Fri Mar 10 13:12:32 EST 2017 x86_64 x86_64 x86_64 GNU/Linux; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 7.3 (Maipo); Release:	7.3; Codename:	Maipo. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362
https://github.com/COMBINE-lab/salmon/issues/362:4289,Deployability,Release,Release,4289,"500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14:40:36.500] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-05-07 14:40:36.511] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 8 Million barcodes; processed 17 Million barcodes; processed 25 Million barcodes; processed 34 Million barcodes; processed 42 Million barcodes; processed 51 Million barcodes; processed 59 Million barcodes; processed 67 Million barcodes; processed 76 Million barcodes; processed 84 Million barcodes; processed 93 Million barcodes; processed 101 Million barcodesdes; processed 109 Million barcodes; processed 118 Million barcodes; processed 126 Million barcodes; processed 134 Million barcodes; processed 143 Million barcodesodes; processed 148 Million barcodes. [2019-05-07 14:42:18.567] [alevinLog] [info] Done barcode density calculation.; [2019-05-07 14:42:18.567] [alevinLog] [info] # Barcodes Used: 147999216 / 148515763.; [2019-05-07 14:42:19.496] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version . Linux ebi6-054.ebi.ac.uk 3.10.0-514.16.1.el7.x86_64 #1 SMP Fri Mar 10 13:12:32 EST 2017 x86_64 x86_64 x86_64 GNU/Linux; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 7.3 (Maipo); Release:	7.3; Codename:	Maipo. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362
https://github.com/COMBINE-lab/salmon/issues/362:1051,Safety,detect,detect,1051,"single-cell mode)?**. Alevin. **Describe the bug**. Maybe more of a support request than a bug. . I've got some of what I suspect is lower-quality drop-seq data. Running Alevin with default parameters yields very low mapping rates, presumably because elbow-finding is failing. Here's the barcode rank plot, you can see why it's having trouble, you might see an elbow if you squint a bit. . ![Drop-seq](https://user-images.githubusercontent.com/5775915/57308423-3d006f00-70de-11e9-8c59-47e55d060035.png). I know from the source publication that we expect 278 cells in this case. . Supplying --expectCells yields the boundary error above. For this to work I need to break out the big guns and use --forceCells, yes? What I would really like is to try --expectCells first to allow Alevin to be a little bit intelligent, and if that fails to use --forceCells. Is that a sensible approach?. If so, could we a) have an informative error code on the boundary error above such that I can easily detect that error and re-submit with --forceCells, or b) if this is generically useful have a flag in Alevin to do it directly?. **To Reproduce**; Steps and data to reproduce the behavior:. - cDNA reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R2.fastq.gz; - barcode reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362
https://github.com/COMBINE-lab/salmon/issues/362:2261,Security,validat,validateMappings,2261,"bi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R2.fastq.gz; - barcode reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ### [ output ] => { ERR2744256_tmp }; ### [ tgMap ] => { transcript_to_gene.txt }; ### [ dumpFeatures ] => { }; ### [ expectCells ] => { 278 }. [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14:40:36.500] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-05-07 14:40:36.511] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 8 Million barcodes; processed 17 Million barcodes; processed 25 Million barcodes; processed 34 Million barcodes; processed 42 Million barcodes; processed 51 Million barcodes; processed 59 Million barcodes; processed 67 Million barcodes; processed 76 Million barcodes; processed 84 Million barcodes; processed 93 Million barc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362
https://github.com/COMBINE-lab/salmon/issues/362:2423,Security,validat,validateMappings,2423,"E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ### [ output ] => { ERR2744256_tmp }; ### [ tgMap ] => { transcript_to_gene.txt }; ### [ dumpFeatures ] => { }; ### [ expectCells ] => { 278 }. [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14:40:36.500] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-05-07 14:40:36.511] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 8 Million barcodes; processed 17 Million barcodes; processed 25 Million barcodes; processed 34 Million barcodes; processed 42 Million barcodes; processed 51 Million barcodes; processed 59 Million barcodes; processed 67 Million barcodes; processed 76 Million barcodes; processed 84 Million barcodes; processed 93 Million barcodes; processed 101 Million barcodesdes; processed 109 Million barcodes; processed 118 Million barcodes; processed 126 Million barcodes; processed 134 Million barcodes; proce",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362
https://github.com/COMBINE-lab/salmon/issues/362:2595,Security,validat,validateMappings,2595,"xt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ### [ output ] => { ERR2744256_tmp }; ### [ tgMap ] => { transcript_to_gene.txt }; ### [ dumpFeatures ] => { }; ### [ expectCells ] => { 278 }. [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14:40:36.500] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-05-07 14:40:36.511] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 8 Million barcodes; processed 17 Million barcodes; processed 25 Million barcodes; processed 34 Million barcodes; processed 42 Million barcodes; processed 51 Million barcodes; processed 59 Million barcodes; processed 67 Million barcodes; processed 76 Million barcodes; processed 84 Million barcodes; processed 93 Million barcodes; processed 101 Million barcodesdes; processed 109 Million barcodes; processed 118 Million barcodes; processed 126 Million barcodes; processed 134 Million barcodes; processed 143 Million barcodesodes; processed 148 Million barcodes. [2019-05-07 14:42:18.567] [alevinLog] [info] Done barcode density calculation.; [2019-05-07 14:42:18",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362
https://github.com/COMBINE-lab/salmon/issues/362:1682,Usability,clear,clear,1682,". For this to work I need to break out the big guns and use --forceCells, yes? What I would really like is to try --expectCells first to allow Alevin to be a little bit intelligent, and if that fails to use --forceCells. Is that a sensible approach?. If so, could we a) have an informative error code on the boundary error above such that I can easily detect that error and re-submit with --forceCells, or b) if this is generically useful have a flag in Alevin to do it directly?. **To Reproduce**; Steps and data to reproduce the behavior:. - cDNA reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R2.fastq.gz; - barcode reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ### [ output ] => { ERR2744256_tmp }; ### [ tgMap ] => { transcript_to_gene.txt }; ### [ dumpFeatures ] => { }; ### [ expectCells ] => { 278 }. [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362
https://github.com/COMBINE-lab/salmon/issues/363:723,Availability,down,downstream,723,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; When using the `--whitelist` flag the option `--dumpCsvCounts` does not seem to work. **To Reproduce**; Salmon version 0.13.1 from Bioconda. `salmon alevin -l ISR -i ../salmon/index/ -1 R1_file -2 R2_file -o out_dir/ --tgMap ../salmon/txp2gene.tsv -p 20 --chromium --whitelist whitelist.txt --dumpFeatures --dumpCsvCounts`. I have a very problematic sample where the knee autodetection fails (way too high cell number). So I created a whitelist of the 5000 most frequent entries of the filtered_cb_frequency.txt. It seems to work as expected, but the quants_mat.csv is not created, which I need for further downstream analysis (Seurat). The quant_mat.gz is created though, is there a way to manually create a .csv from this file (it seems to be binary).; Thanks. P.S.: The alevin logs seem to contain some non-standard characters when the number of ""Barcodes used"" should be printed (maybe because of the colour highlighting?). **Expected behavior**; quants_mat.csv of the whitelisted cells should be created. **Logs**; ```; [2019-05-17 07:28:11.279] [alevinLog] [info] Processing barcodes files (if Present) . ; [2019-05-17 07:39:15.712] [alevinLog] [info] Done barcode density calculation.; [2019-05-17 07:39:15.712] [alevinLog] [info] # Barcodes Used: [32m346967519[0m / [31m347069857[0m.; [2019-05-17 07:39:15.731] [alevinLog] [info] Done importing white-list Barcodes; [2019-05-17 07:39:15.732] [alevinLog] [info] Total 4000 white-listed Barcodes; [2019-05-17 07:39:16.050] [alevinLog] [info] Done populating Z matrix; [2019-05-17 07:39:16.112] [alevinLog] [info] Done indexing Barcodes; [2019-05-17 07:39:16.112] [alevinLog] [info] Total Unique barcodes found: 3968995; [2019-05-17 07:39:16.112] [alevinLog] [info] Used Barcodes except Whitelist: 80709; [2019-05-17 07:39:16.858] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-05-17 07:39:16.868] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/363
https://github.com/COMBINE-lab/salmon/issues/363:2103,Performance,optimiz,optimizer,2103,"oblematic sample where the knee autodetection fails (way too high cell number). So I created a whitelist of the 5000 most frequent entries of the filtered_cb_frequency.txt. It seems to work as expected, but the quants_mat.csv is not created, which I need for further downstream analysis (Seurat). The quant_mat.gz is created though, is there a way to manually create a .csv from this file (it seems to be binary).; Thanks. P.S.: The alevin logs seem to contain some non-standard characters when the number of ""Barcodes used"" should be printed (maybe because of the colour highlighting?). **Expected behavior**; quants_mat.csv of the whitelisted cells should be created. **Logs**; ```; [2019-05-17 07:28:11.279] [alevinLog] [info] Processing barcodes files (if Present) . ; [2019-05-17 07:39:15.712] [alevinLog] [info] Done barcode density calculation.; [2019-05-17 07:39:15.712] [alevinLog] [info] # Barcodes Used: [32m346967519[0m / [31m347069857[0m.; [2019-05-17 07:39:15.731] [alevinLog] [info] Done importing white-list Barcodes; [2019-05-17 07:39:15.732] [alevinLog] [info] Total 4000 white-listed Barcodes; [2019-05-17 07:39:16.050] [alevinLog] [info] Done populating Z matrix; [2019-05-17 07:39:16.112] [alevinLog] [info] Done indexing Barcodes; [2019-05-17 07:39:16.112] [alevinLog] [info] Total Unique barcodes found: 3968995; [2019-05-17 07:39:16.112] [alevinLog] [info] Used Barcodes except Whitelist: 80709; [2019-05-17 07:39:16.858] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-05-17 07:39:16.868] [alevinLog] [info] parsing read library format; [2019-05-17 08:05:24.319] [alevinLog] [info] Starting optimizer. [2019-05-17 08:06:06.627] [alevinLog] [info] Total 14429442.00 UMI after deduplicating.; [2019-05-17 08:06:06.627] [alevinLog] [info] Total 14027858 BiDirected Edges.; [2019-05-17 08:06:06.627] [alevinLog] [info] Total 794402 UniDirected Edges.; [2019-05-17 08:06:06.689] [alevinLog] [info] Finished optimizer; ```. **Desktop:**; - OS: Ubuntu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/363
https://github.com/COMBINE-lab/salmon/issues/363:2414,Performance,optimiz,optimizer,2414,"oblematic sample where the knee autodetection fails (way too high cell number). So I created a whitelist of the 5000 most frequent entries of the filtered_cb_frequency.txt. It seems to work as expected, but the quants_mat.csv is not created, which I need for further downstream analysis (Seurat). The quant_mat.gz is created though, is there a way to manually create a .csv from this file (it seems to be binary).; Thanks. P.S.: The alevin logs seem to contain some non-standard characters when the number of ""Barcodes used"" should be printed (maybe because of the colour highlighting?). **Expected behavior**; quants_mat.csv of the whitelisted cells should be created. **Logs**; ```; [2019-05-17 07:28:11.279] [alevinLog] [info] Processing barcodes files (if Present) . ; [2019-05-17 07:39:15.712] [alevinLog] [info] Done barcode density calculation.; [2019-05-17 07:39:15.712] [alevinLog] [info] # Barcodes Used: [32m346967519[0m / [31m347069857[0m.; [2019-05-17 07:39:15.731] [alevinLog] [info] Done importing white-list Barcodes; [2019-05-17 07:39:15.732] [alevinLog] [info] Total 4000 white-listed Barcodes; [2019-05-17 07:39:16.050] [alevinLog] [info] Done populating Z matrix; [2019-05-17 07:39:16.112] [alevinLog] [info] Done indexing Barcodes; [2019-05-17 07:39:16.112] [alevinLog] [info] Total Unique barcodes found: 3968995; [2019-05-17 07:39:16.112] [alevinLog] [info] Used Barcodes except Whitelist: 80709; [2019-05-17 07:39:16.858] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-05-17 07:39:16.868] [alevinLog] [info] parsing read library format; [2019-05-17 08:05:24.319] [alevinLog] [info] Starting optimizer. [2019-05-17 08:06:06.627] [alevinLog] [info] Total 14429442.00 UMI after deduplicating.; [2019-05-17 08:06:06.627] [alevinLog] [info] Total 14027858 BiDirected Edges.; [2019-05-17 08:06:06.627] [alevinLog] [info] Total 794402 UniDirected Edges.; [2019-05-17 08:06:06.689] [alevinLog] [info] Finished optimizer; ```. **Desktop:**; - OS: Ubuntu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/363
https://github.com/COMBINE-lab/salmon/issues/363:896,Testability,log,logs,896,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; When using the `--whitelist` flag the option `--dumpCsvCounts` does not seem to work. **To Reproduce**; Salmon version 0.13.1 from Bioconda. `salmon alevin -l ISR -i ../salmon/index/ -1 R1_file -2 R2_file -o out_dir/ --tgMap ../salmon/txp2gene.tsv -p 20 --chromium --whitelist whitelist.txt --dumpFeatures --dumpCsvCounts`. I have a very problematic sample where the knee autodetection fails (way too high cell number). So I created a whitelist of the 5000 most frequent entries of the filtered_cb_frequency.txt. It seems to work as expected, but the quants_mat.csv is not created, which I need for further downstream analysis (Seurat). The quant_mat.gz is created though, is there a way to manually create a .csv from this file (it seems to be binary).; Thanks. P.S.: The alevin logs seem to contain some non-standard characters when the number of ""Barcodes used"" should be printed (maybe because of the colour highlighting?). **Expected behavior**; quants_mat.csv of the whitelisted cells should be created. **Logs**; ```; [2019-05-17 07:28:11.279] [alevinLog] [info] Processing barcodes files (if Present) . ; [2019-05-17 07:39:15.712] [alevinLog] [info] Done barcode density calculation.; [2019-05-17 07:39:15.712] [alevinLog] [info] # Barcodes Used: [32m346967519[0m / [31m347069857[0m.; [2019-05-17 07:39:15.731] [alevinLog] [info] Done importing white-list Barcodes; [2019-05-17 07:39:15.732] [alevinLog] [info] Total 4000 white-listed Barcodes; [2019-05-17 07:39:16.050] [alevinLog] [info] Done populating Z matrix; [2019-05-17 07:39:16.112] [alevinLog] [info] Done indexing Barcodes; [2019-05-17 07:39:16.112] [alevinLog] [info] Total Unique barcodes found: 3968995; [2019-05-17 07:39:16.112] [alevinLog] [info] Used Barcodes except Whitelist: 80709; [2019-05-17 07:39:16.858] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-05-17 07:39:16.868] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/363
https://github.com/COMBINE-lab/salmon/issues/363:1128,Testability,Log,Logs,1128,"` flag the option `--dumpCsvCounts` does not seem to work. **To Reproduce**; Salmon version 0.13.1 from Bioconda. `salmon alevin -l ISR -i ../salmon/index/ -1 R1_file -2 R2_file -o out_dir/ --tgMap ../salmon/txp2gene.tsv -p 20 --chromium --whitelist whitelist.txt --dumpFeatures --dumpCsvCounts`. I have a very problematic sample where the knee autodetection fails (way too high cell number). So I created a whitelist of the 5000 most frequent entries of the filtered_cb_frequency.txt. It seems to work as expected, but the quants_mat.csv is not created, which I need for further downstream analysis (Seurat). The quant_mat.gz is created though, is there a way to manually create a .csv from this file (it seems to be binary).; Thanks. P.S.: The alevin logs seem to contain some non-standard characters when the number of ""Barcodes used"" should be printed (maybe because of the colour highlighting?). **Expected behavior**; quants_mat.csv of the whitelisted cells should be created. **Logs**; ```; [2019-05-17 07:28:11.279] [alevinLog] [info] Processing barcodes files (if Present) . ; [2019-05-17 07:39:15.712] [alevinLog] [info] Done barcode density calculation.; [2019-05-17 07:39:15.712] [alevinLog] [info] # Barcodes Used: [32m346967519[0m / [31m347069857[0m.; [2019-05-17 07:39:15.731] [alevinLog] [info] Done importing white-list Barcodes; [2019-05-17 07:39:15.732] [alevinLog] [info] Total 4000 white-listed Barcodes; [2019-05-17 07:39:16.050] [alevinLog] [info] Done populating Z matrix; [2019-05-17 07:39:16.112] [alevinLog] [info] Done indexing Barcodes; [2019-05-17 07:39:16.112] [alevinLog] [info] Total Unique barcodes found: 3968995; [2019-05-17 07:39:16.112] [alevinLog] [info] Used Barcodes except Whitelist: 80709; [2019-05-17 07:39:16.858] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-05-17 07:39:16.868] [alevinLog] [info] parsing read library format; [2019-05-17 08:05:24.319] [alevinLog] [info] Starting optimizer. [2019-05-17 08:06:06.627] [ale",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/363
https://github.com/COMBINE-lab/salmon/issues/364:219,Safety,detect,detect-chemistry,219,"It would be nice to not have to know/specify the 10X chemistry (`gemcode`, `chromium`, and `chromiumV3`). Cell Ranger [does this](https://kb.10xgenomics.com/hc/en-us/articles/115003764132-How-does-cellranger-count-auto-detect-chemistry-) by checking the fraction of barcodes that overlap the whitelist for each version. Another possibility could be by just checking the total length of the BC+UMI ([v3](https://assets.ctfassets.net/an68im79xiti/51xGuiJhVKOeIIceW88gsQ/1db2c9b5c9283d183ff4599fb489a720/CG000183_ChromiumSingleCell3__v3_UG_Rev-A.pdf) is 16+12, [v2](https://assets.ctfassets.net/an68im79xiti/UhAMGmlaEMmYMaA4A4Uwa/d65ff7b9bb5e88c2bb9e15e58f280e18/CG00052_SingleCell3_ReagentKitv2UserGuide_RevE.pdf) is 16+10, [v1](https://assets.ctfassets.net/an68im79xiti/4z5JA3C67KOyCE2ucacCM6/d05ce5fa3dc4282f3da5ae7296f2645b/CG00022_GenomeReagentKitUserGuide_RevC.pdf) is 16+?).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/364
https://github.com/COMBINE-lab/salmon/issues/365:996,Integrability,protocol,protocol,996,"Hi. I have a general question pertaining to quantifying QuantSeq data and comparing Salmon vs the alignment methods recommended by Lexogen (Star/Bowtie followed by htseq to get read counts per gene). Has anyone compared the 2 methods - would be very interested to know the findings. [I happen to see this issue which is still stated as ""Open""](https://github.com/COMBINE-lab/salmon/issues/108) - probably it should be marked as Closed?. . Based on the above issue and also [this issue](https://github.com/COMBINE-lab/salmon/issues/177), I assume using `--noLengthCorrection` would be the recommended way to use Salmon for quantifying QuantSeq data - is that right?. In general, I am planning to use Salmon this way:. 1. index the transcriptome; 2. `salmon quant -i {input.index} -l A -1 {input.R1} -2 {input.R2} -o {output} --noLengthCorrection --validateMappings --gcBias --seqBias --posBias`. While using Salmon for quantification, are there any subtleties to be aware of based on the QuantSeq protocol (FWD vs REV) ?. Please advise. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/365
https://github.com/COMBINE-lab/salmon/issues/365:847,Security,validat,validateMappings,847,"Hi. I have a general question pertaining to quantifying QuantSeq data and comparing Salmon vs the alignment methods recommended by Lexogen (Star/Bowtie followed by htseq to get read counts per gene). Has anyone compared the 2 methods - would be very interested to know the findings. [I happen to see this issue which is still stated as ""Open""](https://github.com/COMBINE-lab/salmon/issues/108) - probably it should be marked as Closed?. . Based on the above issue and also [this issue](https://github.com/COMBINE-lab/salmon/issues/177), I assume using `--noLengthCorrection` would be the recommended way to use Salmon for quantifying QuantSeq data - is that right?. In general, I am planning to use Salmon this way:. 1. index the transcriptome; 2. `salmon quant -i {input.index} -l A -1 {input.R1} -2 {input.R2} -o {output} --noLengthCorrection --validateMappings --gcBias --seqBias --posBias`. While using Salmon for quantification, are there any subtleties to be aware of based on the QuantSeq protocol (FWD vs REV) ?. Please advise. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/365
https://github.com/COMBINE-lab/salmon/issues/366:491,Availability,error,error,491,"This came up in #336. When building a gencode-based index with `salmon index` without the `--gencode` flag, the index that is generated won't work when subsequently running e.g. `salmon alevin`. This can be a pain to figure out the mistake (missing `--gencode` flag). Perhaps some sort of quick grep of the index file name for `'gencode'` or within the file for multiple `'|'`s (used for gencode field separator but not ensembl) should be done to check if it's gencode followed by a warning/error if the --gencode flag is missing? Another possibility could be to just auto-detect if the index is gencode using the above tests, removing the need for the `--gencode` flag. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/366
https://github.com/COMBINE-lab/salmon/issues/366:573,Safety,detect,detect,573,"This came up in #336. When building a gencode-based index with `salmon index` without the `--gencode` flag, the index that is generated won't work when subsequently running e.g. `salmon alevin`. This can be a pain to figure out the mistake (missing `--gencode` flag). Perhaps some sort of quick grep of the index file name for `'gencode'` or within the file for multiple `'|'`s (used for gencode field separator but not ensembl) should be done to check if it's gencode followed by a warning/error if the --gencode flag is missing? Another possibility could be to just auto-detect if the index is gencode using the above tests, removing the need for the `--gencode` flag. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/366
https://github.com/COMBINE-lab/salmon/issues/366:620,Testability,test,tests,620,"This came up in #336. When building a gencode-based index with `salmon index` without the `--gencode` flag, the index that is generated won't work when subsequently running e.g. `salmon alevin`. This can be a pain to figure out the mistake (missing `--gencode` flag). Perhaps some sort of quick grep of the index file name for `'gencode'` or within the file for multiple `'|'`s (used for gencode field separator but not ensembl) should be done to check if it's gencode followed by a warning/error if the --gencode flag is missing? Another possibility could be to just auto-detect if the index is gencode using the above tests, removing the need for the `--gencode` flag. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/366
https://github.com/COMBINE-lab/salmon/issues/367:482,Availability,down,down-regulated,482,"Thanks for the awesome tool!. Just wanted to confirm what the intended usage is as, for e.g. [scPipe](https://github.com/LuyiTian/scPipe) uses all mitochondrial genes in `calculate_QC_metrics` (whether from nuclear or mitchondrial DNA). I am guessing that since the model for alevin is using the fraction of mitochondrial reads, the `--mrna` file should include only mtDNA (from mitochondrial genome) genes. It seems to be the case that nuclear mitochondrial genes are both up- and down-regulated with damage (**C**: *mtDNA*, *Mitochondria up*, *Mitochondria down* in figure below):. May also be a good idea to clarify in `salmon alevin --help`. ![image](https://user-images.githubusercontent.com/15719520/58443291-f3d08900-80a5-11e9-82ef-0c7debd7ac2a.png); [source](https://www.ncbi.nlm.nih.gov/pubmed/26887813)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/367
https://github.com/COMBINE-lab/salmon/issues/367:559,Availability,down,down,559,"Thanks for the awesome tool!. Just wanted to confirm what the intended usage is as, for e.g. [scPipe](https://github.com/LuyiTian/scPipe) uses all mitochondrial genes in `calculate_QC_metrics` (whether from nuclear or mitchondrial DNA). I am guessing that since the model for alevin is using the fraction of mitochondrial reads, the `--mrna` file should include only mtDNA (from mitochondrial genome) genes. It seems to be the case that nuclear mitochondrial genes are both up- and down-regulated with damage (**C**: *mtDNA*, *Mitochondria up*, *Mitochondria down* in figure below):. May also be a good idea to clarify in `salmon alevin --help`. ![image](https://user-images.githubusercontent.com/15719520/58443291-f3d08900-80a5-11e9-82ef-0c7debd7ac2a.png); [source](https://www.ncbi.nlm.nih.gov/pubmed/26887813)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/367
https://github.com/COMBINE-lab/salmon/issues/368:1142,Deployability,pipeline,pipeline,1142,"Hi, . I am using **salmon (v0.13.1)** to quantity RNA-seq data from two biological replicates. After running some exploratory data analyses, I observed a large discrepancy between the two replicates regarding the gene-wise distribution of read counts. The scatterplot below shows the log-read counts from these two biological replicates:. ![salmon v0.13.1 - Scatterplot](https://user-images.githubusercontent.com/26856909/58559326-dcea7d80-81f0-11e9-851a-db28b96b981e.png). After looking at these results, I checked the salmon log output and saw that the number of uniquely mapped reads for the second replicate had several trailing zeros added to it:. <img width=""358"" alt=""salmon v0.13.1 - Output"" src=""https://user-images.githubusercontent.com/26856909/58560225-b1689280-81f2-11e9-9d69-513a93fa47c5.png"">. *I have reproduced this analysis with both versions of salmon v0.12.0 and v0.9.1 and got pretty much the same results*. I would not expect to see such a huge difference between these two biological replicates and the number of uniquely mapped reads being greater than the total number of reads seemed odd to me. I have used the same pipeline to process other RNA-seq data and never had any issues like this so far. Any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/368
https://github.com/COMBINE-lab/salmon/issues/368:284,Testability,log,log-read,284,"Hi, . I am using **salmon (v0.13.1)** to quantity RNA-seq data from two biological replicates. After running some exploratory data analyses, I observed a large discrepancy between the two replicates regarding the gene-wise distribution of read counts. The scatterplot below shows the log-read counts from these two biological replicates:. ![salmon v0.13.1 - Scatterplot](https://user-images.githubusercontent.com/26856909/58559326-dcea7d80-81f0-11e9-851a-db28b96b981e.png). After looking at these results, I checked the salmon log output and saw that the number of uniquely mapped reads for the second replicate had several trailing zeros added to it:. <img width=""358"" alt=""salmon v0.13.1 - Output"" src=""https://user-images.githubusercontent.com/26856909/58560225-b1689280-81f2-11e9-9d69-513a93fa47c5.png"">. *I have reproduced this analysis with both versions of salmon v0.12.0 and v0.9.1 and got pretty much the same results*. I would not expect to see such a huge difference between these two biological replicates and the number of uniquely mapped reads being greater than the total number of reads seemed odd to me. I have used the same pipeline to process other RNA-seq data and never had any issues like this so far. Any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/368
https://github.com/COMBINE-lab/salmon/issues/368:527,Testability,log,log,527,"Hi, . I am using **salmon (v0.13.1)** to quantity RNA-seq data from two biological replicates. After running some exploratory data analyses, I observed a large discrepancy between the two replicates regarding the gene-wise distribution of read counts. The scatterplot below shows the log-read counts from these two biological replicates:. ![salmon v0.13.1 - Scatterplot](https://user-images.githubusercontent.com/26856909/58559326-dcea7d80-81f0-11e9-851a-db28b96b981e.png). After looking at these results, I checked the salmon log output and saw that the number of uniquely mapped reads for the second replicate had several trailing zeros added to it:. <img width=""358"" alt=""salmon v0.13.1 - Output"" src=""https://user-images.githubusercontent.com/26856909/58560225-b1689280-81f2-11e9-9d69-513a93fa47c5.png"">. *I have reproduced this analysis with both versions of salmon v0.12.0 and v0.9.1 and got pretty much the same results*. I would not expect to see such a huge difference between these two biological replicates and the number of uniquely mapped reads being greater than the total number of reads seemed odd to me. I have used the same pipeline to process other RNA-seq data and never had any issues like this so far. Any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/368
https://github.com/COMBINE-lab/salmon/issues/369:6617,Availability,error,error,6617,"cessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:6729,Availability,error,error,6729,"cessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:2186,Performance,Load,Loading,2186," Done importing white-list Barcodes; [2019-06-04 15:58:27.583] [alevinLog] [warning] Skipping 50 Barcodes as no read was mapped; [2019-06-04 15:58:27.583] [alevinLog] [info] Total 0 white-listed Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [warning] Total 100% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 15:58:27.594] [alevinLog] [info] Done populating Z matrix; [2019-06-04 15:58:27.594] [alevinLog] [warning] 0 Whitelisted Barcodes with 0 frequency; [2019-06-04 15:58:27.594] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:2251,Performance,Load,Loading,2251,"nLog] [warning] Skipping 50 Barcodes as no read was mapped; [2019-06-04 15:58:27.583] [alevinLog] [info] Total 0 white-listed Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [warning] Total 100% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 15:58:27.594] [alevinLog] [info] Done populating Z matrix; [2019-06-04 15:58:27.594] [alevinLog] [warning] 0 Whitelisted Barcodes with 0 frequency; [2019-06-04 15:58:27.594] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:2324,Performance,Load,Loading,2324,"4 15:58:27.583] [alevinLog] [info] Total 0 white-listed Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [warning] Total 100% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 15:58:27.594] [alevinLog] [info] Done populating Z matrix; [2019-06-04 15:58:27.594] [alevinLog] [warning] 0 Whitelisted Barcodes with 0 frequency; [2019-06-04 15:58:27.594] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:2392,Performance,Load,Loading,2392,"19-06-04 15:58:27.594] [alevinLog] [warning] Total 100% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 15:58:27.594] [alevinLog] [info] Done populating Z matrix; [2019-06-04 15:58:27.594] [alevinLog] [warning] 0 Whitelisted Barcodes with 0 frequency; [2019-06-04 15:58:27.594] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:2463,Performance,Load,Loading,2463,"wn away because of noisy Cellular barcodes.; [2019-06-04 15:58:27.594] [alevinLog] [info] Done populating Z matrix; [2019-06-04 15:58:27.594] [alevinLog] [warning] 0 Whitelisted Barcodes with 0 frequency; [2019-06-04 15:58:27.594] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2019-06-04 15:58:42.487] [jointLog] [info] Counted 0 total reads in the equ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:2723,Performance,load,loading,2723," [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2019-06-04 15:58:42.487] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2019-06-04 15:58:42.487] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-04 15:58:42.508] [jointLog] [info] Mapping rate = 0%. [2019-06-04 15:58:42.508] [jointLog] [info]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:2914,Performance,load,loading,2914,"5:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2019-06-04 15:58:42.487] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2019-06-04 15:58:42.487] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-04 15:58:42.508] [jointLog] [info] Mapping rate = 0%. [2019-06-04 15:58:42.508] [jointLog] [info] finished quantifyLibrary(); [2019-06-04 15:58:42.519] [alevinLog] [info] Starting optimizer. [2019-06-04 15:58:43.232] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-06-04 15:58:43.232] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-06-04 15:58:43.237] [alevinLog] [info] Tota",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:3803,Performance,optimiz,optimizer,3803,"9-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2019-06-04 15:58:42.487] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2019-06-04 15:58:42.487] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-04 15:58:42.508] [jointLog] [info] Mapping rate = 0%. [2019-06-04 15:58:42.508] [jointLog] [info] finished quantifyLibrary(); [2019-06-04 15:58:42.519] [alevinLog] [info] Starting optimizer. [2019-06-04 15:58:43.232] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-06-04 15:58:43.232] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-06-04 15:58:43.237] [alevinLog] [info] Total 0.00 UMI after deduplicating.; [2019-06-04 15:58:43.237] [alevinLog] [info] Total 0 BiDirected Edges.; [2019-06-04 15:58:43.237] [alevinLog] [info] Total 0 UniDirected Edges.; [2019-06-04 15:58:43.259] [alevinLog] [info] Finished optimizer; Floating point exception (core dumped); ```. Alevin fails to read the barcode, or something like that, from the whitelist, and there are no reads to be processed. If instead of running the `--whitelist` command I run the `--expectCells 50` command, the results are these:. ```; [2019-06-04 16:33:41.634] [alevinLog] [info] Found all transcripts to gene mappings; [2019-06-04 16:33:41.650] [alevinLog] [info] Processing barcodes files (if Present) . ; process",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:4323,Performance,optimiz,optimizer,4323,"[info] Computed 0 rich equivalence classes for further processing; [2019-06-04 15:58:42.487] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2019-06-04 15:58:42.487] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-04 15:58:42.508] [jointLog] [info] Mapping rate = 0%. [2019-06-04 15:58:42.508] [jointLog] [info] finished quantifyLibrary(); [2019-06-04 15:58:42.519] [alevinLog] [info] Starting optimizer. [2019-06-04 15:58:43.232] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-06-04 15:58:43.232] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-06-04 15:58:43.237] [alevinLog] [info] Total 0.00 UMI after deduplicating.; [2019-06-04 15:58:43.237] [alevinLog] [info] Total 0 BiDirected Edges.; [2019-06-04 15:58:43.237] [alevinLog] [info] Total 0 UniDirected Edges.; [2019-06-04 15:58:43.259] [alevinLog] [info] Finished optimizer; Floating point exception (core dumped); ```. Alevin fails to read the barcode, or something like that, from the whitelist, and there are no reads to be processed. If instead of running the `--whitelist` command I run the `--expectCells 50` command, the results are these:. ```; [2019-06-04 16:33:41.634] [alevinLog] [info] Found all transcripts to gene mappings; [2019-06-04 16:33:41.650] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [201",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:5602,Performance,Load,Loading,5602,"[2019-06-04 16:33:41.634] [alevinLog] [info] Found all transcripts to gene mappings; [2019-06-04 16:33:41.650] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:5734,Performance,Load,Loading,5734,"rocessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:5799,Performance,Load,Loading,5799,"cessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:6041,Performance,Load,Loading,6041,"cessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:6112,Performance,Load,Loading,6112,"cessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:6372,Performance,load,loading,6372,"cessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:6436,Performance,load,loading,6436,"cessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:6687,Safety,avoid,avoid,6687,"cessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:2731,Security,hash,hash,2731," [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2019-06-04 15:58:42.487] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2019-06-04 15:58:42.487] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-04 15:58:42.508] [jointLog] [info] Mapping rate = 0%. [2019-06-04 15:58:42.508] [jointLog] [info]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/369:6380,Security,hash,hash,6380,"cessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369
https://github.com/COMBINE-lab/salmon/issues/371:591,Usability,clear,clear,591,"Hi everyone,. I have two questions. Some motiviation: I'm working on figuring out how to support hg38 with the alt alleles for using transcriptome alignments or the SA method. I'd prefer to just use the whole genome alignments since we generate those for QC purposes anyway. STAR doesn't work with the alt alleles so we can't use it for hg38 and have to use hisat2 for hg38 with alts, but hisat2 doesn't have the genome-to-transcriptome shifter built in. I'm reluctant to use the ubu sam-xlate tool to do genome to transcriptome mappings since that project looks abandoned and I'm not super clear on what Salmon is expecting the format to be for the shifted file. So my current plan is to use the SA method and provide decoys. I have two questions:. 1) Am I going to need to ignore the alt alleles when creating the decoys file? My version of the decoys for hg38 with the alt-alleles has about twice as many decoy regions as the one calculated on just the toplevel chromosomes. 2) What is the minimal format that Salmon is expecting the transcriptome mapped file to look like? Do I need to just report which transcript and which position for every transcript a read overlaps, or do I need to fix the CIGAR string too?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/371
https://github.com/COMBINE-lab/salmon/issues/376:110,Security,validat,validateMappings,110,"Hi,. I wanted to quantify reads sequenced with a Oxford Nanopore MinION using salmon 0.12.0. With activated --validateMappings option mapping rates were below 1% (mapping them to the human genome using minimap2 gave me ~95% mapping rates).; When I didn't set the --validateMappings flag I got ~8% and with activated --validateMappings and very low --minScoreFraction (0.01) I could achieve at most 18% mapping rates. --fldMean was set to 800 in each case (according to the mean read lenghts reported by NanoPlot).; Is there a possibility to improve the mapping rates on these noisy long reads?. Regards,; Markus",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/376
https://github.com/COMBINE-lab/salmon/issues/376:265,Security,validat,validateMappings,265,"Hi,. I wanted to quantify reads sequenced with a Oxford Nanopore MinION using salmon 0.12.0. With activated --validateMappings option mapping rates were below 1% (mapping them to the human genome using minimap2 gave me ~95% mapping rates).; When I didn't set the --validateMappings flag I got ~8% and with activated --validateMappings and very low --minScoreFraction (0.01) I could achieve at most 18% mapping rates. --fldMean was set to 800 in each case (according to the mean read lenghts reported by NanoPlot).; Is there a possibility to improve the mapping rates on these noisy long reads?. Regards,; Markus",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/376
https://github.com/COMBINE-lab/salmon/issues/376:318,Security,validat,validateMappings,318,"Hi,. I wanted to quantify reads sequenced with a Oxford Nanopore MinION using salmon 0.12.0. With activated --validateMappings option mapping rates were below 1% (mapping them to the human genome using minimap2 gave me ~95% mapping rates).; When I didn't set the --validateMappings flag I got ~8% and with activated --validateMappings and very low --minScoreFraction (0.01) I could achieve at most 18% mapping rates. --fldMean was set to 800 in each case (according to the mean read lenghts reported by NanoPlot).; Is there a possibility to improve the mapping rates on these noisy long reads?. Regards,; Markus",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/376
https://github.com/COMBINE-lab/salmon/issues/377:189,Performance,load,loads,189,"The use case is to allow using [SoupX](https://github.com/constantAmateur/SoupX) which removes ambient reads from cell lysis (the soup). Here is what SoupX does with cellranger output:. 1) loads the .mtx file in the `raw_gene_bc_matrices` directory output by cellranger as argument `tod` to `SoupX::SoupChannel`. . 2) Subsets this matrix to those in `barcodes.tsv` inside the `filtered_gene_bc_matrices` directory as the argument to `toc`. It looks like to use SoupX with alevin would require quantification for all barcodes, not just those that pass the initial alevin whitelist. I guess I would need alevin to perform the initial whitelisting (to get the `toc` argument to `SoupX::SoupChannel`), but then ignore it and quantify all barcodes so that the `tod` matrix can be provided. The approach I am currently using:. 1) Run `alevin --keepCBFraction 1 --maxNumBarcodes 4294967295` to get quants for all barcodes. 2) rerun alevin normally to get whitelisted cells (both from initial and final whitelisting). It would be nice not to have to run alevin twice in order to achieve this result. Perhaps an option so that alevin could proceed to quantify all barcodes but still output a whitelist. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/377
https://github.com/COMBINE-lab/salmon/issues/377:612,Performance,perform,perform,612,"The use case is to allow using [SoupX](https://github.com/constantAmateur/SoupX) which removes ambient reads from cell lysis (the soup). Here is what SoupX does with cellranger output:. 1) loads the .mtx file in the `raw_gene_bc_matrices` directory output by cellranger as argument `tod` to `SoupX::SoupChannel`. . 2) Subsets this matrix to those in `barcodes.tsv` inside the `filtered_gene_bc_matrices` directory as the argument to `toc`. It looks like to use SoupX with alevin would require quantification for all barcodes, not just those that pass the initial alevin whitelist. I guess I would need alevin to perform the initial whitelisting (to get the `toc` argument to `SoupX::SoupChannel`), but then ignore it and quantify all barcodes so that the `tod` matrix can be provided. The approach I am currently using:. 1) Run `alevin --keepCBFraction 1 --maxNumBarcodes 4294967295` to get quants for all barcodes. 2) rerun alevin normally to get whitelisted cells (both from initial and final whitelisting). It would be nice not to have to run alevin twice in order to achieve this result. Perhaps an option so that alevin could proceed to quantify all barcodes but still output a whitelist. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/377
https://github.com/COMBINE-lab/salmon/issues/378:634,Availability,down,downloaded,634,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Related to Salmon. **Describe the bug**; my transcript file has a total of 119032 records:. [gao@bio reference]$ grep -c "">"" GRCm38.vM11.transcripts.ercc.Tg.fa; 119032. However, my salmon output has 117509 records:; [gao@bio KM25_salmon_quant.originalData.k21]$ wc -l quant.sf; 117509 quant.sf. How should I explain this?; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? ; I used salmon 0.13.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed on HPC; * Which reference (e.g. transcriptome) was used?; Mouse transcriptome; * Which read files were used?; RNAseq files; * Which which program options were used?; command line:. salmon quant -p 8 -i /data/Re-analysis/SalmonRun/reference/GRCm38.vM11.transcripts.ercc.Tg.fa.k21.index -g /data/Re-analysis/Salmon-Run/reference/tx2gene.gencode.v27.tabbed.csv --seqBias --gcBias -l A -1 read1.fastq.gz -2 read2.fastq.gz -o /data/Re-analysis/Salmon-Run/quant-output-co; rrected/KM25_salmon_quant.originalData.k21. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; HPC computing cluster; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/378
https://github.com/COMBINE-lab/salmon/issues/378:613,Deployability,install,installed,613,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Related to Salmon. **Describe the bug**; my transcript file has a total of 119032 records:. [gao@bio reference]$ grep -c "">"" GRCm38.vM11.transcripts.ercc.Tg.fa; 119032. However, my salmon output has 117509 records:; [gao@bio KM25_salmon_quant.originalData.k21]$ wc -l quant.sf; 117509 quant.sf. How should I explain this?; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? ; I used salmon 0.13.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed on HPC; * Which reference (e.g. transcriptome) was used?; Mouse transcriptome; * Which read files were used?; RNAseq files; * Which which program options were used?; command line:. salmon quant -p 8 -i /data/Re-analysis/SalmonRun/reference/GRCm38.vM11.transcripts.ercc.Tg.fa.k21.index -g /data/Re-analysis/Salmon-Run/reference/tx2gene.gencode.v27.tabbed.csv --seqBias --gcBias -l A -1 read1.fastq.gz -2 read2.fastq.gz -o /data/Re-analysis/Salmon-Run/quant-output-co; rrected/KM25_salmon_quant.originalData.k21. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; HPC computing cluster; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/378
https://github.com/COMBINE-lab/salmon/issues/378:677,Deployability,Install,Installed,677,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Related to Salmon. **Describe the bug**; my transcript file has a total of 119032 records:. [gao@bio reference]$ grep -c "">"" GRCm38.vM11.transcripts.ercc.Tg.fa; 119032. However, my salmon output has 117509 records:; [gao@bio KM25_salmon_quant.originalData.k21]$ wc -l quant.sf; 117509 quant.sf. How should I explain this?; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? ; I used salmon 0.13.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed on HPC; * Which reference (e.g. transcriptome) was used?; Mouse transcriptome; * Which read files were used?; RNAseq files; * Which which program options were used?; command line:. salmon quant -p 8 -i /data/Re-analysis/SalmonRun/reference/GRCm38.vM11.transcripts.ercc.Tg.fa.k21.index -g /data/Re-analysis/Salmon-Run/reference/tx2gene.gencode.v27.tabbed.csv --seqBias --gcBias -l A -1 read1.fastq.gz -2 read2.fastq.gz -o /data/Re-analysis/Salmon-Run/quant-output-co; rrected/KM25_salmon_quant.originalData.k21. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; HPC computing cluster; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/378
https://github.com/COMBINE-lab/salmon/issues/378:1223,Usability,clear,clear,1223,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Related to Salmon. **Describe the bug**; my transcript file has a total of 119032 records:. [gao@bio reference]$ grep -c "">"" GRCm38.vM11.transcripts.ercc.Tg.fa; 119032. However, my salmon output has 117509 records:; [gao@bio KM25_salmon_quant.originalData.k21]$ wc -l quant.sf; 117509 quant.sf. How should I explain this?; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? ; I used salmon 0.13.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed on HPC; * Which reference (e.g. transcriptome) was used?; Mouse transcriptome; * Which read files were used?; RNAseq files; * Which which program options were used?; command line:. salmon quant -p 8 -i /data/Re-analysis/SalmonRun/reference/GRCm38.vM11.transcripts.ercc.Tg.fa.k21.index -g /data/Re-analysis/Salmon-Run/reference/tx2gene.gencode.v27.tabbed.csv --seqBias --gcBias -l A -1 read1.fastq.gz -2 read2.fastq.gz -o /data/Re-analysis/Salmon-Run/quant-output-co; rrected/KM25_salmon_quant.originalData.k21. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; HPC computing cluster; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/378
https://github.com/COMBINE-lab/salmon/issues/379:401,Availability,down,downloaded,401,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. alevin. **Describe the bug**; salmon alevin fails to output quants_mat.mtx.gz file when invoked with flags `-dumpMtx --keepCBFraction 1 --maxNumBarcodes 4294967295`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.14.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; human_GENCODEv29.tar.gz with decoys from README. **Expected behavior**. Save a quants_mat.mtx.gz file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/15719520/59559081-16730500-8fb5-11e9-8bbd-faf2b99a02e7.png). **Desktop (please complete the following information):**; - OS: Ubuntu 16.04; - Version; ```; uname -a; Linux desktop 4.15.0-51-generic #55~16.04.1-Ubuntu SMP Thu May 16 09:24:37 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; Distributor ID: Ubuntu; Description: Ubuntu 16.04.6 LTS; Release: 16.04; Codename: xenial. ```; Related to #377",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/379
https://github.com/COMBINE-lab/salmon/issues/379:444,Availability,down,downloaded,444,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. alevin. **Describe the bug**; salmon alevin fails to output quants_mat.mtx.gz file when invoked with flags `-dumpMtx --keepCBFraction 1 --maxNumBarcodes 4294967295`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.14.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; human_GENCODEv29.tar.gz with decoys from README. **Expected behavior**. Save a quants_mat.mtx.gz file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/15719520/59559081-16730500-8fb5-11e9-8bbd-faf2b99a02e7.png). **Desktop (please complete the following information):**; - OS: Ubuntu 16.04; - Version; ```; uname -a; Linux desktop 4.15.0-51-generic #55~16.04.1-Ubuntu SMP Thu May 16 09:24:37 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; Distributor ID: Ubuntu; Description: Ubuntu 16.04.6 LTS; Release: 16.04; Codename: xenial. ```; Related to #377",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/379
https://github.com/COMBINE-lab/salmon/issues/379:380,Deployability,install,installed,380,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. alevin. **Describe the bug**; salmon alevin fails to output quants_mat.mtx.gz file when invoked with flags `-dumpMtx --keepCBFraction 1 --maxNumBarcodes 4294967295`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.14.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; human_GENCODEv29.tar.gz with decoys from README. **Expected behavior**. Save a quants_mat.mtx.gz file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/15719520/59559081-16730500-8fb5-11e9-8bbd-faf2b99a02e7.png). **Desktop (please complete the following information):**; - OS: Ubuntu 16.04; - Version; ```; uname -a; Linux desktop 4.15.0-51-generic #55~16.04.1-Ubuntu SMP Thu May 16 09:24:37 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; Distributor ID: Ubuntu; Description: Ubuntu 16.04.6 LTS; Release: 16.04; Codename: xenial. ```; Related to #377",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/379
https://github.com/COMBINE-lab/salmon/issues/379:1123,Deployability,Release,Release,1123,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. alevin. **Describe the bug**; salmon alevin fails to output quants_mat.mtx.gz file when invoked with flags `-dumpMtx --keepCBFraction 1 --maxNumBarcodes 4294967295`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.14.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; human_GENCODEv29.tar.gz with decoys from README. **Expected behavior**. Save a quants_mat.mtx.gz file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/15719520/59559081-16730500-8fb5-11e9-8bbd-faf2b99a02e7.png). **Desktop (please complete the following information):**; - OS: Ubuntu 16.04; - Version; ```; uname -a; Linux desktop 4.15.0-51-generic #55~16.04.1-Ubuntu SMP Thu May 16 09:24:37 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; Distributor ID: Ubuntu; Description: Ubuntu 16.04.6 LTS; Release: 16.04; Codename: xenial. ```; Related to #377",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/379
https://github.com/COMBINE-lab/salmon/issues/380:253,Availability,error,error,253,"I ran salmon alevin 0.14.0 with a custom transcriptome reference and the following options: --chromium --dumpFeatures --dumpMtx --whitelist mylist.txt. Everything ran through OK. However, when I tried to load the .mtx file with readMM() in R, I got the error: ; ` Error: readMM(): column values 'j' are not in 1:nc `. When I tried to read directly the binary file into a matrix, there's a warning:; ```; counts <- readBin(quants_mat.gz, what = 'numeric', n = length(genes)*length(cells)); close.connection(quants_mat.gz); Warning message:; In matrix(data = counts, nrow = length(cells), ncol = length(genes), :; data length [391335] is not a sub-multiple or multiple of the number of rows [4942]; ```; It seems like there's issue with the dimensions; [out.zip](https://github.com/COMBINE-lab/salmon/files/3296080/out.zip); of the output matrix. I've attached my log file as well as my output files (both .mtx and binary). Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/380
https://github.com/COMBINE-lab/salmon/issues/380:264,Availability,Error,Error,264,"I ran salmon alevin 0.14.0 with a custom transcriptome reference and the following options: --chromium --dumpFeatures --dumpMtx --whitelist mylist.txt. Everything ran through OK. However, when I tried to load the .mtx file with readMM() in R, I got the error: ; ` Error: readMM(): column values 'j' are not in 1:nc `. When I tried to read directly the binary file into a matrix, there's a warning:; ```; counts <- readBin(quants_mat.gz, what = 'numeric', n = length(genes)*length(cells)); close.connection(quants_mat.gz); Warning message:; In matrix(data = counts, nrow = length(cells), ncol = length(genes), :; data length [391335] is not a sub-multiple or multiple of the number of rows [4942]; ```; It seems like there's issue with the dimensions; [out.zip](https://github.com/COMBINE-lab/salmon/files/3296080/out.zip); of the output matrix. I've attached my log file as well as my output files (both .mtx and binary). Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/380
https://github.com/COMBINE-lab/salmon/issues/380:530,Integrability,message,message,530,"I ran salmon alevin 0.14.0 with a custom transcriptome reference and the following options: --chromium --dumpFeatures --dumpMtx --whitelist mylist.txt. Everything ran through OK. However, when I tried to load the .mtx file with readMM() in R, I got the error: ; ` Error: readMM(): column values 'j' are not in 1:nc `. When I tried to read directly the binary file into a matrix, there's a warning:; ```; counts <- readBin(quants_mat.gz, what = 'numeric', n = length(genes)*length(cells)); close.connection(quants_mat.gz); Warning message:; In matrix(data = counts, nrow = length(cells), ncol = length(genes), :; data length [391335] is not a sub-multiple or multiple of the number of rows [4942]; ```; It seems like there's issue with the dimensions; [out.zip](https://github.com/COMBINE-lab/salmon/files/3296080/out.zip); of the output matrix. I've attached my log file as well as my output files (both .mtx and binary). Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/380
https://github.com/COMBINE-lab/salmon/issues/380:204,Performance,load,load,204,"I ran salmon alevin 0.14.0 with a custom transcriptome reference and the following options: --chromium --dumpFeatures --dumpMtx --whitelist mylist.txt. Everything ran through OK. However, when I tried to load the .mtx file with readMM() in R, I got the error: ; ` Error: readMM(): column values 'j' are not in 1:nc `. When I tried to read directly the binary file into a matrix, there's a warning:; ```; counts <- readBin(quants_mat.gz, what = 'numeric', n = length(genes)*length(cells)); close.connection(quants_mat.gz); Warning message:; In matrix(data = counts, nrow = length(cells), ncol = length(genes), :; data length [391335] is not a sub-multiple or multiple of the number of rows [4942]; ```; It seems like there's issue with the dimensions; [out.zip](https://github.com/COMBINE-lab/salmon/files/3296080/out.zip); of the output matrix. I've attached my log file as well as my output files (both .mtx and binary). Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/380
https://github.com/COMBINE-lab/salmon/issues/380:862,Testability,log,log,862,"I ran salmon alevin 0.14.0 with a custom transcriptome reference and the following options: --chromium --dumpFeatures --dumpMtx --whitelist mylist.txt. Everything ran through OK. However, when I tried to load the .mtx file with readMM() in R, I got the error: ; ` Error: readMM(): column values 'j' are not in 1:nc `. When I tried to read directly the binary file into a matrix, there's a warning:; ```; counts <- readBin(quants_mat.gz, what = 'numeric', n = length(genes)*length(cells)); close.connection(quants_mat.gz); Warning message:; In matrix(data = counts, nrow = length(cells), ncol = length(genes), :; data length [391335] is not a sub-multiple or multiple of the number of rows [4942]; ```; It seems like there's issue with the dimensions; [out.zip](https://github.com/COMBINE-lab/salmon/files/3296080/out.zip); of the output matrix. I've attached my log file as well as my output files (both .mtx and binary). Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/380
https://github.com/COMBINE-lab/salmon/issues/381:7,Usability,simpl,simple,7,"Really simple question: can Alevin deal with the additional feature tags possible from 10Xv3? If not, will it at some point?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/381
https://github.com/COMBINE-lab/salmon/issues/383:202,Availability,error,error,202,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Neither, it's related to compilation. **Describe the bug**. While trying to compile the project I get the following error:; ```; $ make; [ 6%] Built target libcereal; [ 12%] Built target libdivsufsort; [ 18%] Built target liblzma; [ 23%] Built target libbz2; [ 29%] Built target libgff; [ 29%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lm -lpthread -llzma -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xf03): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_huff':; compression.c:(.text+0xc0): undefined reference to `deflateInit2_'; compression.c:(.text+0x13b): undefined reference to `deflate'; compression.c:(.text+0x181): undefined reference to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libst",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:1377,Availability,error,error,1377,"e convert_trace.o ../io_lib/.libs/libstaden-read.a -lm -lpthread -llzma -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xf03): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_huff':; compression.c:(.text+0xc0): undefined reference to `deflateInit2_'; compression.c:(.text+0x13b): undefined reference to `deflate'; compression.c:(.text+0x181): undefined reference to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRU",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:1496,Availability,Error,Error,1496,"e convert_trace.o ../io_lib/.libs/libstaden-read.a -lm -lpthread -llzma -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xf03): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_huff':; compression.c:(.text+0xc0): undefined reference to `deflateInit2_'; compression.c:(.text+0x13b): undefined reference to `deflate'; compression.c:(.text+0x181): undefined reference to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRU",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:1590,Availability,Error,Error,1590,"e convert_trace.o ../io_lib/.libs/libstaden-read.a -lm -lpthread -llzma -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xf03): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_huff':; compression.c:(.text+0xc0): undefined reference to `deflateInit2_'; compression.c:(.text+0x13b): undefined reference to `deflate'; compression.c:(.text+0x181): undefined reference to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRU",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:1664,Availability,Error,Error,1664,"e convert_trace.o ../io_lib/.libs/libstaden-read.a -lm -lpthread -llzma -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xf03): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_huff':; compression.c:(.text+0xc0): undefined reference to `deflateInit2_'; compression.c:(.text+0x13b): undefined reference to `deflate'; compression.c:(.text+0x181): undefined reference to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRU",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:1877,Availability,Error,Error,1877,"ad_la-compression.o): In function `zlib_huff':; compression.c:(.text+0xc0): undefined reference to `deflateInit2_'; compression.c:(.text+0x13b): undefined reference to `deflate'; compression.c:(.text+0x181): undefined reference to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ub",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:2017,Availability,Error,Error,2017,"nce to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:2088,Availability,Error,Error,2088,"nce to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:2371,Availability,error,errors,2371,"collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""sal",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:2779,Availability,avail,available,2779,"adenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:3110,Availability,error,errors,3110,"h the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:3147,Availability,ERROR,ERROR,3147,"h the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:3161,Availability,Error,Error,3161,"h the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:3590,Availability,ERROR,ERROR,3590,"or**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:3609,Availability,down,download,3609,"or**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:4099,Availability,down,download,4099,"```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:4169,Availability,down,download,4169,"```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:4179,Availability,Error,Error,4179,"```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:4309,Availability,Error,Error,4309,"rget ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:4380,Availability,Error,Error,4380,"rget ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:4530,Availability,ERROR,ERROR,4530,nstall libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:1,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:4767,Availability,error,error,4767, --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstad,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:4986,Availability,Error,Error,4986,2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; -----------------------------------,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:5080,Availability,Error,Error,5080,2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; -----------------------------------,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:5154,Availability,Error,Error,5154,2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; -----------------------------------,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:5367,Availability,Error,Error,5367,kefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; ------------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:5507,Availability,Error,Error,5507,forge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; ------------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: lzma.h: No such file or directory; #include <lzma.h>; RESOLUTION:; sudo apt-get install -y liblzma-dev; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:5578,Availability,Error,Error,5578,forge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; ------------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: lzma.h: No such file or directory; #include <lzma.h>; RESOLUTION:; sudo apt-get install -y liblzma-dev; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:5687,Availability,ERROR,ERROR,5687,forge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; ------------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: lzma.h: No such file or directory; #include <lzma.h>; RESOLUTION:; sudo apt-get install -y liblzma-dev; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:5904,Availability,error,error,5904,forge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; ------------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: lzma.h: No such file or directory; #include <lzma.h>; RESOLUTION:; sudo apt-get install -y liblzma-dev; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:6111,Availability,ERROR,ERROR,6111,forge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; ------------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: lzma.h: No such file or directory; #include <lzma.h>; RESOLUTION:; sudo apt-get install -y liblzma-dev; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:6328,Availability,error,error,6328,forge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; ------------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: lzma.h: No such file or directory; #include <lzma.h>; RESOLUTION:; sudo apt-get install -y liblzma-dev; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:2848,Deployability,Release,Release,2848,"o-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:3524,Deployability,install,install,3524,"or**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:5609,Deployability,install,install,5609,forge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; ------------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: lzma.h: No such file or directory; #include <lzma.h>; RESOLUTION:; sudo apt-get install -y liblzma-dev; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:6029,Deployability,install,install,6029,forge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; ------------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: lzma.h: No such file or directory; #include <lzma.h>; RESOLUTION:; sudo apt-get install -y liblzma-dev; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:6415,Deployability,install,install,6415,forge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; ------------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: lzma.h: No such file or directory; #include <lzma.h>; RESOLUTION:; sudo apt-get install -y liblzma-dev; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:3182,Modifiability,variab,variables,3182,"h the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:380,Performance,Perform,Performing,380,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Neither, it's related to compilation. **Describe the bug**. While trying to compile the project I get the following error:; ```; $ make; [ 6%] Built target libcereal; [ 12%] Built target libdivsufsort; [ 18%] Built target liblzma; [ 23%] Built target libbz2; [ 29%] Built target libgff; [ 29%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lm -lpthread -llzma -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xf03): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_huff':; compression.c:(.text+0xc0): undefined reference to `deflateInit2_'; compression.c:(.text+0x13b): undefined reference to `deflate'; compression.c:(.text+0x181): undefined reference to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libst",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:3598,Performance,Perform,Performing,3598,"or**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:3921,Security,checksum,checksum,3921,"nebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-co",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:2632,Testability,test,test,2632,"r 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERRO",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/383:3295,Testability,test,tested,3295,"or**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383
https://github.com/COMBINE-lab/salmon/issues/386:1654,Integrability,protocol,protocol,1654,"GGCGTTCTTGCATTCCTGGAACCT; +D00585:40:CB7FUANXX:1:2113:18626:8045; BBBBBFFFFFFFFFFFF<FBFFFFFF; ``` . And an extract of the reads fastq:; ```; @D00585:41:CB64LANXX:1:1202:13646:88674; TCTGTTCATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCAT; +D00585:41:CB64LANXX:1:1202:13646:88674; BFFF<FFFBFFB<FFFB<FFFBF//FFFFB<FFFF<F///FFFB/BF<//F<7//FBFBB/F<BF</F<FFFFFFFF<</<FFBFBFFBFF<FBBBBB; @D00585:40:CB7FUANXX:1:2113:18626:8045; ATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCATCTGCAGG; +D00585:40:CB7FUANXX:1:2113:18626:8045; FFFFFBFFFFFFFFFFFB/FBFFFFBFFFFFFFBBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFBFFFFFFFFFFFFFFFFFF<FFBFFBBBBB; ``` . This is the log of the analysis:; ```; Version Info: This is the most recent version of salmon.; Logs will be written to /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 18:08:01.805] [alevinLog] [info] Loading Header; [2019-06-23 18:08:01.807] [alevinLog] [info] Loading Transcript Info ; [201",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:2580,Performance,Load,Loading,2580,"/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 18:08:01.805] [alevinLog] [info] Loading Header; [2019-06-23 18:08:01.807] [alevinLog] [info] Loading Transcript Info ; [2019-06-23 18:08:02.243] [alevinLog] [warning] Found {} transcripts with duplicate names; [2019-06-23 18:08:02.530] [alevinLog] [info] Found all transcripts to gene mappings; ### alevin (dscRNA-seq quantification) v0.14.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { U }; ### [ mates2 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/read_fastq//sample.fastq }; ### [ mates1 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/CB_UMI//sample.fastq }; ### [ index ] => { /mnt/beegfs/alexmascension/STAR//hg38/salmon_index/ }; ### [ threads ] => { 40 }; ### [ output ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample }; ### [ end ] => { 5 }; ### [ barcodeLength ] => { 16 }; ### [ umiLength ] => { 10 }; ### [ dumpUmiGraph ] => { }; ### [ tgMap ] => { /mnt/beegfs/al",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:2641,Performance,Load,Loading,2641,"m protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 18:08:01.805] [alevinLog] [info] Loading Header; [2019-06-23 18:08:01.807] [alevinLog] [info] Loading Transcript Info ; [2019-06-23 18:08:02.243] [alevinLog] [warning] Found {} transcripts with duplicate names; [2019-06-23 18:08:02.530] [alevinLog] [info] Found all transcripts to gene mappings; ### alevin (dscRNA-seq quantification) v0.14.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { U }; ### [ mates2 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/read_fastq//sample.fastq }; ### [ mates1 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/CB_UMI//sample.fastq }; ### [ index ] => { /mnt/beegfs/alexmascension/STAR//hg38/salmon_index/ }; ### [ threads ] => { 40 }; ### [ output ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample }; ### [ end ] => { 5 }; ### [ barcodeLength ] => { 16 }; ### [ umiLength ] => { 10 }; ### [ dumpUmiGraph ] => { }; ### [ tgMap ] => { /mnt/beegfs/alexmascension/STAR//hg38/dict_transcript_gene.tsv }. [2019-06-23 18",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:5013,Performance,Load,Loading,5013,"2.364] [alevinLog] [warning] Gauss Prediction 13594 Too far from knee prediction skipping it; [2019-06-23 18:11:52.364] [alevinLog] [info] Learned InvCov: 254.933 normfactor: 13034.5; [2019-06-23 18:11:52.364] [alevinLog] [info] Total 384(has 200 low confidence) barcodes; [2019-06-23 18:11:52.383] [alevinLog] [info] Done True Barcode Sampling; [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:5145,Performance,Load,Loading,5145," [info] Learned InvCov: 254.933 normfactor: 13034.5; [2019-06-23 18:11:52.364] [alevinLog] [info] Total 384(has 200 low confidence) barcodes; [2019-06-23 18:11:52.383] [alevinLog] [info] Done True Barcode Sampling; [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:5210,Performance,Load,Loading,5210,"1:52.364] [alevinLog] [info] Total 384(has 200 low confidence) barcodes; [2019-06-23 18:11:52.383] [alevinLog] [info] Done True Barcode Sampling; [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:5283,Performance,Load,Loading,5283,"; [2019-06-23 18:11:52.383] [alevinLog] [info] Done True Barcode Sampling; [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,043,781 total reads in the equivalence classes ; [2019-06-23 18:14:43.419]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:5354,Performance,Load,Loading,5354," [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,043,781 total reads in the equivalence classes ; [2019-06-23 18:14:43.419] [jointLog] [info] Number of fragments discarded because they are best-ma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:5614,Performance,load,loading,5614," Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,043,781 total reads in the equivalence classes ; [2019-06-23 18:14:43.419] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-23 18:14:43.419] [jointLog] [warning] Found 494 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-06-23 18:14:43.419] [jointLog] [info] Mapping ra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:5678,Performance,load,loading,5678,"otal Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,043,781 total reads in the equivalence classes ; [2019-06-23 18:14:43.419] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-23 18:14:43.419] [jointLog] [warning] Found 494 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-06-23 18:14:43.419] [jointLog] [info] Mapping rate = 4.69856%. [2019-06-23 18:14:43.419] [jointLog] [info] finished qua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:6752,Performance,optimiz,optimizer,6752,"to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,043,781 total reads in the equivalence classes ; [2019-06-23 18:14:43.419] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-23 18:14:43.419] [jointLog] [warning] Found 494 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-06-23 18:14:43.419] [jointLog] [info] Mapping rate = 4.69856%. [2019-06-23 18:14:43.419] [jointLog] [info] finished quantifyLibrary(); [2019-06-23 18:14:43.838] [alevinLog] [info] Starting optimizer. Analyzed 39 cells (10% of all).; Analyzed 40 cells (10% of all).; Analyzed 41 cells (11% of all).; Analyzed 42 cells (11% of all).; Analyzed 43 cells (11% of all).; ...; Analyzed 154 cells (40% of all).; Analyzed 155 cells (40% of all).; Analyzed 156 cells (41% of all).; Analyzed 157 cells (41% of all).; ```. It seems that after the analysis of some cell the analysis stops. I have 12 different samples and each of them fails on the same step; even some of them fail just when starting the analysis of the cells. I have done a random subset of 35M reads from one sample and the analysis went fine, but when scaling to ~100M (this case) it also broke. I though that maybe the transcript-to-gene file was wrong, but I guess is not because is the one I used for the previous analysis, and also the one for the 35M-read file and it went right.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:4058,Safety,Predict,Prediction,4058,q//sample.fastq }; ### [ mates1 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/CB_UMI//sample.fastq }; ### [ index ] => { /mnt/beegfs/alexmascension/STAR//hg38/salmon_index/ }; ### [ threads ] => { 40 }; ### [ output ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample }; ### [ end ] => { 5 }; ### [ barcodeLength ] => { 16 }; ### [ umiLength ] => { 10 }; ### [ dumpUmiGraph ] => { }; ### [ tgMap ] => { /mnt/beegfs/alexmascension/STAR//hg38/dict_transcript_gene.tsv }. [2019-06-23 18:08:02.553] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 107 Million barcodes. [2019-06-23 18:11:30.689] [alevinLog] [info] Done barcode density calculation.; [2019-06-23 18:11:30.689] [alevinLog] [info] # Barcodes Used: 105189924 / 107347363.; [2019-06-23 18:11:34.706] [alevinLog] [info] Knee found left boundary at 184 ; [2019-06-23 18:11:52.364] [alevinLog] [warning] Gauss Prediction 13594 Too far from knee prediction skipping it; [2019-06-23 18:11:52.364] [alevinLog] [info] Learned InvCov: 254.933 normfactor: 13034.5; [2019-06-23 18:11:52.364] [alevinLog] [info] Total 384(has 200 low confidence) barcodes; [2019-06-23 18:11:52.383] [alevinLog] [info] Done True Barcode Sampling; [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] Th,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:4093,Safety,predict,prediction,4093,q//sample.fastq }; ### [ mates1 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/CB_UMI//sample.fastq }; ### [ index ] => { /mnt/beegfs/alexmascension/STAR//hg38/salmon_index/ }; ### [ threads ] => { 40 }; ### [ output ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample }; ### [ end ] => { 5 }; ### [ barcodeLength ] => { 16 }; ### [ umiLength ] => { 10 }; ### [ dumpUmiGraph ] => { }; ### [ tgMap ] => { /mnt/beegfs/alexmascension/STAR//hg38/dict_transcript_gene.tsv }. [2019-06-23 18:08:02.553] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 107 Million barcodes. [2019-06-23 18:11:30.689] [alevinLog] [info] Done barcode density calculation.; [2019-06-23 18:11:30.689] [alevinLog] [info] # Barcodes Used: 105189924 / 107347363.; [2019-06-23 18:11:34.706] [alevinLog] [info] Knee found left boundary at 184 ; [2019-06-23 18:11:52.364] [alevinLog] [warning] Gauss Prediction 13594 Too far from knee prediction skipping it; [2019-06-23 18:11:52.364] [alevinLog] [info] Learned InvCov: 254.933 normfactor: 13034.5; [2019-06-23 18:11:52.364] [alevinLog] [info] Total 384(has 200 low confidence) barcodes; [2019-06-23 18:11:52.383] [alevinLog] [info] Done True Barcode Sampling; [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] Th,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:1949,Security,validat,validateMappings,1949,"585:41:CB64LANXX:1:1202:13646:88674; BFFF<FFFBFFB<FFFB<FFFBF//FFFFB<FFFF<F///FFFB/BF<//F<7//FBFBB/F<BF</F<FFFFFFFF<</<FFBFBFFBFF<FBBBBB; @D00585:40:CB7FUANXX:1:2113:18626:8045; ATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCATCTGCAGG; +D00585:40:CB7FUANXX:1:2113:18626:8045; FFFFFBFFFFFFFFFFFB/FBFFFFBFFFFFFFBBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFBFFFFFFFFFFFFFFFFFF<FFBFFBBBBB; ``` . This is the log of the analysis:; ```; Version Info: This is the most recent version of salmon.; Logs will be written to /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 18:08:01.805] [alevinLog] [info] Loading Header; [2019-06-23 18:08:01.807] [alevinLog] [info] Loading Transcript Info ; [2019-06-23 18:08:02.243] [alevinLog] [warning] Found {} transcripts with duplicate names; [2019-06-23 18:08:02.530] [alevinLog] [info] Found all transcripts to gene mappings; ### alevin (dscRNA-seq quantification) v0.14.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:2111,Security,validat,validateMappings,2111,"; ATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCATCTGCAGG; +D00585:40:CB7FUANXX:1:2113:18626:8045; FFFFFBFFFFFFFFFFFB/FBFFFFBFFFFFFFBBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFBFFFFFFFFFFFFFFFFFF<FFBFFBBBBB; ``` . This is the log of the analysis:; ```; Version Info: This is the most recent version of salmon.; Logs will be written to /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 18:08:01.805] [alevinLog] [info] Loading Header; [2019-06-23 18:08:01.807] [alevinLog] [info] Loading Transcript Info ; [2019-06-23 18:08:02.243] [alevinLog] [warning] Found {} transcripts with duplicate names; [2019-06-23 18:08:02.530] [alevinLog] [info] Found all transcripts to gene mappings; ### alevin (dscRNA-seq quantification) v0.14.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { U }; ### [ mates2 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/read_fastq//sample.fastq }; ### [ mates1 ] => { /mnt/beegfs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:2283,Security,validat,validateMappings,2283,"FFFFBFFFFFFFBBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFBFFFFFFFFFFFFFFFFFF<FFBFFBBBBB; ``` . This is the log of the analysis:; ```; Version Info: This is the most recent version of salmon.; Logs will be written to /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 18:08:01.805] [alevinLog] [info] Loading Header; [2019-06-23 18:08:01.807] [alevinLog] [info] Loading Transcript Info ; [2019-06-23 18:08:02.243] [alevinLog] [warning] Found {} transcripts with duplicate names; [2019-06-23 18:08:02.530] [alevinLog] [info] Found all transcripts to gene mappings; ### alevin (dscRNA-seq quantification) v0.14.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { U }; ### [ mates2 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/read_fastq//sample.fastq }; ### [ mates1 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/CB_UMI//sample.fastq }; ### [ index ] => { /mnt/beegfs/alexmascension/STAR//hg38/salmon_index/ ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:5622,Security,hash,hash,5622," Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,043,781 total reads in the equivalence classes ; [2019-06-23 18:14:43.419] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-23 18:14:43.419] [jointLog] [warning] Found 494 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-06-23 18:14:43.419] [jointLog] [info] Mapping ra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:1391,Testability,log,log,1391,"transcript_gene.tsv`. Here is an extract of CB+UMI fastq:; ```; @D00585:41:CB64LANXX:1:1202:13646:88674; ACATCAGTCCCTCAGTTGAAGAAAGG; +D00585:41:CB64LANXX:1:1202:13646:88674; BBBBBFFFFFFFFFFFF<FFFBF//<; @D00585:40:CB7FUANXX:1:2113:18626:8045; TGGGCGTTCTTGCATTCCTGGAACCT; +D00585:40:CB7FUANXX:1:2113:18626:8045; BBBBBFFFFFFFFFFFF<FBFFFFFF; ``` . And an extract of the reads fastq:; ```; @D00585:41:CB64LANXX:1:1202:13646:88674; TCTGTTCATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCAT; +D00585:41:CB64LANXX:1:1202:13646:88674; BFFF<FFFBFFB<FFFB<FFFBF//FFFFB<FFFF<F///FFFB/BF<//F<7//FBFBB/F<BF</F<FFFFFFFF<</<FFBFBFFBFF<FBBBBB; @D00585:40:CB7FUANXX:1:2113:18626:8045; ATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCATCTGCAGG; +D00585:40:CB7FUANXX:1:2113:18626:8045; FFFFFBFFFFFFFFFFFB/FBFFFFBFFFFFFFBBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFBFFFFFFFFFFFFFFFFFF<FFBFFBBBBB; ``` . This is the log of the analysis:; ```; Version Info: This is the most recent version of salmon.; Logs will be written to /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using de",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:1476,Testability,Log,Logs,1476,"TGAAGAAAGG; +D00585:41:CB64LANXX:1:1202:13646:88674; BBBBBFFFFFFFFFFFF<FFFBF//<; @D00585:40:CB7FUANXX:1:2113:18626:8045; TGGGCGTTCTTGCATTCCTGGAACCT; +D00585:40:CB7FUANXX:1:2113:18626:8045; BBBBBFFFFFFFFFFFF<FBFFFFFF; ``` . And an extract of the reads fastq:; ```; @D00585:41:CB64LANXX:1:1202:13646:88674; TCTGTTCATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCAT; +D00585:41:CB64LANXX:1:1202:13646:88674; BFFF<FFFBFFB<FFFB<FFFBF//FFFFB<FFFF<F///FFFB/BF<//F<7//FBFBB/F<BF</F<FFFFFFFF<</<FFBFBFFBFF<FBBBBB; @D00585:40:CB7FUANXX:1:2113:18626:8045; ATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCATCTGCAGG; +D00585:40:CB7FUANXX:1:2113:18626:8045; FFFFFBFFFFFFFFFFFB/FBFFFFBFFFFFFFBBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFBFFFFFFFFFFFFFFFFFF<FFBFFBBBBB; ``` . This is the log of the analysis:; ```; Version Info: This is the most recent version of salmon.; Logs will be written to /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:1594,Testability,log,logs,1594,"TGAAGAAAGG; +D00585:41:CB64LANXX:1:1202:13646:88674; BBBBBFFFFFFFFFFFF<FFFBF//<; @D00585:40:CB7FUANXX:1:2113:18626:8045; TGGGCGTTCTTGCATTCCTGGAACCT; +D00585:40:CB7FUANXX:1:2113:18626:8045; BBBBBFFFFFFFFFFFF<FBFFFFFF; ``` . And an extract of the reads fastq:; ```; @D00585:41:CB64LANXX:1:1202:13646:88674; TCTGTTCATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCAT; +D00585:41:CB64LANXX:1:1202:13646:88674; BFFF<FFFBFFB<FFFB<FFFBF//FFFFB<FFFF<F///FFFB/BF<//F<7//FBFBB/F<BF</F<FFFFFFFF<</<FFBFBFFBFF<FBBBBB; @D00585:40:CB7FUANXX:1:2113:18626:8045; ATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCATCTGCAGG; +D00585:40:CB7FUANXX:1:2113:18626:8045; FFFFFBFFFFFFFFFFFB/FBFFFFBFFFFFFFBBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFBFFFFFFFFFFFFFFFFFF<FFBFFBBBBB; ``` . This is the log of the analysis:; ```; Version Info: This is the most recent version of salmon.; Logs will be written to /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/386:4162,Usability,Learn,Learned,4162,le-cell_skin_analysis//Data/Cheng-2018/CB_UMI//sample.fastq }; ### [ index ] => { /mnt/beegfs/alexmascension/STAR//hg38/salmon_index/ }; ### [ threads ] => { 40 }; ### [ output ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample }; ### [ end ] => { 5 }; ### [ barcodeLength ] => { 16 }; ### [ umiLength ] => { 10 }; ### [ dumpUmiGraph ] => { }; ### [ tgMap ] => { /mnt/beegfs/alexmascension/STAR//hg38/dict_transcript_gene.tsv }. [2019-06-23 18:08:02.553] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 107 Million barcodes. [2019-06-23 18:11:30.689] [alevinLog] [info] Done barcode density calculation.; [2019-06-23 18:11:30.689] [alevinLog] [info] # Barcodes Used: 105189924 / 107347363.; [2019-06-23 18:11:34.706] [alevinLog] [info] Knee found left boundary at 184 ; [2019-06-23 18:11:52.364] [alevinLog] [warning] Gauss Prediction 13594 Too far from knee prediction skipping it; [2019-06-23 18:11:52.364] [alevinLog] [info] Learned InvCov: 254.933 normfactor: 13034.5; [2019-06-23 18:11:52.364] [alevinLog] [info] Total 384(has 200 low confidence) barcodes; [2019-06-23 18:11:52.383] [alevinLog] [info] Done True Barcode Sampling; [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi i,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386
https://github.com/COMBINE-lab/salmon/issues/387:133,Availability,error,error,133,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387
https://github.com/COMBINE-lab/salmon/issues/387:712,Availability,avail,available,712,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387
https://github.com/COMBINE-lab/salmon/issues/387:754,Availability,avail,available,754,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387
https://github.com/COMBINE-lab/salmon/issues/387:1183,Availability,ERROR,ERROR,1183,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387
https://github.com/COMBINE-lab/salmon/issues/387:1501,Availability,error,error,1501,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387
https://github.com/COMBINE-lab/salmon/issues/387:617,Deployability,UPGRADE,UPGRADE,617,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387
https://github.com/COMBINE-lab/salmon/issues/387:805,Deployability,release,releases,805,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387
https://github.com/COMBINE-lab/salmon/issues/387:874,Deployability,upgrade,upgrade,874,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387
https://github.com/COMBINE-lab/salmon/issues/387:996,Deployability,update,updates,996,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387
https://github.com/COMBINE-lab/salmon/issues/387:1051,Testability,Log,Logs,1051,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387
https://github.com/COMBINE-lab/salmon/issues/387:1085,Testability,log,logs,1085,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387
https://github.com/COMBINE-lab/salmon/issues/388:252,Availability,error,error,252,"Hello, I'm trying to install Salmon on my CentOS 7 system, as suggested here:; https://salmon.readthedocs.io/en/latest/building.html#installation. I decided to get the cmake `-DFETCH_BOOST=TRUE` option, in spite of having installed Boost. ; I get this error (here is the full log):. `cmake -DFETCH_BOOST=TRUE`. > Salmon requires g++ 5.2 or greater. https://pastebin.com/UmVJw0Ae. This is particularly odd.; I have installed a recent GCC version and even rebuilt Boost after it... As you can see, if I type . > gcc --version; > g++ --version. By root and user, I always get... > gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388
https://github.com/COMBINE-lab/salmon/issues/388:21,Deployability,install,install,21,"Hello, I'm trying to install Salmon on my CentOS 7 system, as suggested here:; https://salmon.readthedocs.io/en/latest/building.html#installation. I decided to get the cmake `-DFETCH_BOOST=TRUE` option, in spite of having installed Boost. ; I get this error (here is the full log):. `cmake -DFETCH_BOOST=TRUE`. > Salmon requires g++ 5.2 or greater. https://pastebin.com/UmVJw0Ae. This is particularly odd.; I have installed a recent GCC version and even rebuilt Boost after it... As you can see, if I type . > gcc --version; > g++ --version. By root and user, I always get... > gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388
https://github.com/COMBINE-lab/salmon/issues/388:133,Deployability,install,installation,133,"Hello, I'm trying to install Salmon on my CentOS 7 system, as suggested here:; https://salmon.readthedocs.io/en/latest/building.html#installation. I decided to get the cmake `-DFETCH_BOOST=TRUE` option, in spite of having installed Boost. ; I get this error (here is the full log):. `cmake -DFETCH_BOOST=TRUE`. > Salmon requires g++ 5.2 or greater. https://pastebin.com/UmVJw0Ae. This is particularly odd.; I have installed a recent GCC version and even rebuilt Boost after it... As you can see, if I type . > gcc --version; > g++ --version. By root and user, I always get... > gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388
https://github.com/COMBINE-lab/salmon/issues/388:222,Deployability,install,installed,222,"Hello, I'm trying to install Salmon on my CentOS 7 system, as suggested here:; https://salmon.readthedocs.io/en/latest/building.html#installation. I decided to get the cmake `-DFETCH_BOOST=TRUE` option, in spite of having installed Boost. ; I get this error (here is the full log):. `cmake -DFETCH_BOOST=TRUE`. > Salmon requires g++ 5.2 or greater. https://pastebin.com/UmVJw0Ae. This is particularly odd.; I have installed a recent GCC version and even rebuilt Boost after it... As you can see, if I type . > gcc --version; > g++ --version. By root and user, I always get... > gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388
https://github.com/COMBINE-lab/salmon/issues/388:414,Deployability,install,installed,414,"Hello, I'm trying to install Salmon on my CentOS 7 system, as suggested here:; https://salmon.readthedocs.io/en/latest/building.html#installation. I decided to get the cmake `-DFETCH_BOOST=TRUE` option, in spite of having installed Boost. ; I get this error (here is the full log):. `cmake -DFETCH_BOOST=TRUE`. > Salmon requires g++ 5.2 or greater. https://pastebin.com/UmVJw0Ae. This is particularly odd.; I have installed a recent GCC version and even rebuilt Boost after it... As you can see, if I type . > gcc --version; > g++ --version. By root and user, I always get... > gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388
https://github.com/COMBINE-lab/salmon/issues/388:1148,Deployability,install,installing,1148,"nstallation. I decided to get the cmake `-DFETCH_BOOST=TRUE` option, in spite of having installed Boost. ; I get this error (here is the full log):. `cmake -DFETCH_BOOST=TRUE`. > Salmon requires g++ 5.2 or greater. https://pastebin.com/UmVJw0Ae. This is particularly odd.; I have installed a recent GCC version and even rebuilt Boost after it... As you can see, if I type . > gcc --version; > g++ --version. By root and user, I always get... > gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cmaking Salmon, it will always complain about an outdated version, having it opened or not won't make any difference. I'm also attaching",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388
https://github.com/COMBINE-lab/salmon/issues/388:2281,Deployability,install,installing,2281,"5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cmaking Salmon, it will always complain about an outdated version, having it opened or not won't make any difference. I'm also attaching the log files generated by Salmon:. CMakeCache.txt => https://pastebin.com/shdCpDde; CMakeLists.txt => https://pastebin.com/16AeRnyL. Also, while installing Boost, I got this:. > ; > The following directory should be added to linker library paths:; > ; > /mnt/d8e73111-db5e-4011-87aa-e4d64fb8c1e9/DATA/Software/boost/boost_1_70_0/stage/lib. What could the problem be? Why can't it recognise the right version? Did I mess up with anything? Thanks in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388
https://github.com/COMBINE-lab/salmon/issues/388:276,Testability,log,log,276,"Hello, I'm trying to install Salmon on my CentOS 7 system, as suggested here:; https://salmon.readthedocs.io/en/latest/building.html#installation. I decided to get the cmake `-DFETCH_BOOST=TRUE` option, in spite of having installed Boost. ; I get this error (here is the full log):. `cmake -DFETCH_BOOST=TRUE`. > Salmon requires g++ 5.2 or greater. https://pastebin.com/UmVJw0Ae. This is particularly odd.; I have installed a recent GCC version and even rebuilt Boost after it... As you can see, if I type . > gcc --version; > g++ --version. By root and user, I always get... > gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388
https://github.com/COMBINE-lab/salmon/issues/388:2139,Testability,log,log,2139,"5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cmaking Salmon, it will always complain about an outdated version, having it opened or not won't make any difference. I'm also attaching the log files generated by Salmon:. CMakeCache.txt => https://pastebin.com/shdCpDde; CMakeLists.txt => https://pastebin.com/16AeRnyL. Also, while installing Boost, I got this:. > ; > The following directory should be added to linker library paths:; > ; > /mnt/d8e73111-db5e-4011-87aa-e4d64fb8c1e9/DATA/Software/boost/boost_1_70_0/stage/lib. What could the problem be? Why can't it recognise the right version? Did I mess up with anything? Thanks in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388
https://github.com/COMBINE-lab/salmon/issues/389:17,Availability,error,error,17,"Hi,. this is the error i get, when making a transcript index using salmon. I am using the decoy making script to make the decoy, which the script makes but fails when creating the index!. Specifically, please provide at least the following information:. Which version of salmon was used?; Version: salmon 0.14.1; How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; Which reference (e.g. transcriptome) was used?; Pig transcriptome; Which read files were used?; None; Which which program options were used?; command line:. salmon index -t gentrome.fa -i ../salmon_index -decoys decoys.txt -k 31; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; index [""../salmon_index""] did not previously exist . . . creating it; [2019-06-27 16:02:56.612] [jLog] [info] building index; [2019-06-27 16:02:56.614] [jointLog] [error] The decoy file ecoys does not exist. I did use the SalmonTools to make the decoy file (few lines). INFO, skch::Sketch::computeFreqHist, With threshold 0.001%, ignore minimizers occurring >= 5124 times during lookup.; INFO, skch::main, Time spent computing the reference index: 727.737 sec; INFO, skch::Map::mapQuery, [count of mapped reads, reads qualified for mapping, total input reads] = [40777, 40831, 45898]; INFO, skch::main, Time spent mapping the query : 1912.34 sec; INFO, skch::main, mapping results saved in : mashmap.out; [4/10] Extracting intervals from mashmap alignments; [5/10] Merging the intervals; [6/10] Extracting sequences from the genome; index file reference.masked.genome.fa.fai not found, generating...; [7/10] Concatenating to get decoy sequences; [8/10] Making gentrome; [9/10] Extracting decoy sequence ids; [10/10] Removing temporary files; **********************************************; *** DONE Processing ...; *** You can use files `$outfolder/gentrome.fa` ; *** and $outfolder/decoys.txt` with ; *** `salmon index`; ****",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389
https://github.com/COMBINE-lab/salmon/issues/389:349,Availability,down,downloaded,349,"Hi,. this is the error i get, when making a transcript index using salmon. I am using the decoy making script to make the decoy, which the script makes but fails when creating the index!. Specifically, please provide at least the following information:. Which version of salmon was used?; Version: salmon 0.14.1; How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; Which reference (e.g. transcriptome) was used?; Pig transcriptome; Which read files were used?; None; Which which program options were used?; command line:. salmon index -t gentrome.fa -i ../salmon_index -decoys decoys.txt -k 31; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; index [""../salmon_index""] did not previously exist . . . creating it; [2019-06-27 16:02:56.612] [jLog] [info] building index; [2019-06-27 16:02:56.614] [jointLog] [error] The decoy file ecoys does not exist. I did use the SalmonTools to make the decoy file (few lines). INFO, skch::Sketch::computeFreqHist, With threshold 0.001%, ignore minimizers occurring >= 5124 times during lookup.; INFO, skch::main, Time spent computing the reference index: 727.737 sec; INFO, skch::Map::mapQuery, [count of mapped reads, reads qualified for mapping, total input reads] = [40777, 40831, 45898]; INFO, skch::main, Time spent mapping the query : 1912.34 sec; INFO, skch::main, mapping results saved in : mashmap.out; [4/10] Extracting intervals from mashmap alignments; [5/10] Merging the intervals; [6/10] Extracting sequences from the genome; index file reference.masked.genome.fa.fai not found, generating...; [7/10] Concatenating to get decoy sequences; [8/10] Making gentrome; [9/10] Extracting decoy sequence ids; [10/10] Removing temporary files; **********************************************; *** DONE Processing ...; *** You can use files `$outfolder/gentrome.fa` ; *** and $outfolder/decoys.txt` with ; *** `salmon index`; ****",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389
https://github.com/COMBINE-lab/salmon/issues/389:939,Availability,error,error,939,"Hi,. this is the error i get, when making a transcript index using salmon. I am using the decoy making script to make the decoy, which the script makes but fails when creating the index!. Specifically, please provide at least the following information:. Which version of salmon was used?; Version: salmon 0.14.1; How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; Which reference (e.g. transcriptome) was used?; Pig transcriptome; Which read files were used?; None; Which which program options were used?; command line:. salmon index -t gentrome.fa -i ../salmon_index -decoys decoys.txt -k 31; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; index [""../salmon_index""] did not previously exist . . . creating it; [2019-06-27 16:02:56.612] [jLog] [info] building index; [2019-06-27 16:02:56.614] [jointLog] [error] The decoy file ecoys does not exist. I did use the SalmonTools to make the decoy file (few lines). INFO, skch::Sketch::computeFreqHist, With threshold 0.001%, ignore minimizers occurring >= 5124 times during lookup.; INFO, skch::main, Time spent computing the reference index: 727.737 sec; INFO, skch::Map::mapQuery, [count of mapped reads, reads qualified for mapping, total input reads] = [40777, 40831, 45898]; INFO, skch::main, Time spent mapping the query : 1912.34 sec; INFO, skch::main, mapping results saved in : mashmap.out; [4/10] Extracting intervals from mashmap alignments; [5/10] Merging the intervals; [6/10] Extracting sequences from the genome; index file reference.masked.genome.fa.fai not found, generating...; [7/10] Concatenating to get decoy sequences; [8/10] Making gentrome; [9/10] Extracting decoy sequence ids; [10/10] Removing temporary files; **********************************************; *** DONE Processing ...; *** You can use files `$outfolder/gentrome.fa` ; *** and $outfolder/decoys.txt` with ; *** `salmon index`; ****",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389
https://github.com/COMBINE-lab/salmon/issues/389:1629,Availability,mask,masked,1629,"almon. I am using the decoy making script to make the decoy, which the script makes but fails when creating the index!. Specifically, please provide at least the following information:. Which version of salmon was used?; Version: salmon 0.14.1; How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; Which reference (e.g. transcriptome) was used?; Pig transcriptome; Which read files were used?; None; Which which program options were used?; command line:. salmon index -t gentrome.fa -i ../salmon_index -decoys decoys.txt -k 31; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; index [""../salmon_index""] did not previously exist . . . creating it; [2019-06-27 16:02:56.612] [jLog] [info] building index; [2019-06-27 16:02:56.614] [jointLog] [error] The decoy file ecoys does not exist. I did use the SalmonTools to make the decoy file (few lines). INFO, skch::Sketch::computeFreqHist, With threshold 0.001%, ignore minimizers occurring >= 5124 times during lookup.; INFO, skch::main, Time spent computing the reference index: 727.737 sec; INFO, skch::Map::mapQuery, [count of mapped reads, reads qualified for mapping, total input reads] = [40777, 40831, 45898]; INFO, skch::main, Time spent mapping the query : 1912.34 sec; INFO, skch::main, mapping results saved in : mashmap.out; [4/10] Extracting intervals from mashmap alignments; [5/10] Merging the intervals; [6/10] Extracting sequences from the genome; index file reference.masked.genome.fa.fai not found, generating...; [7/10] Concatenating to get decoy sequences; [8/10] Making gentrome; [9/10] Extracting decoy sequence ids; [10/10] Removing temporary files; **********************************************; *** DONE Processing ...; *** You can use files `$outfolder/gentrome.fa` ; *** and $outfolder/decoys.txt` with ; *** `salmon index`; **********************************************. Thanks for all the help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389
https://github.com/COMBINE-lab/salmon/issues/389:328,Deployability,install,installed,328,"Hi,. this is the error i get, when making a transcript index using salmon. I am using the decoy making script to make the decoy, which the script makes but fails when creating the index!. Specifically, please provide at least the following information:. Which version of salmon was used?; Version: salmon 0.14.1; How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; Which reference (e.g. transcriptome) was used?; Pig transcriptome; Which read files were used?; None; Which which program options were used?; command line:. salmon index -t gentrome.fa -i ../salmon_index -decoys decoys.txt -k 31; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; index [""../salmon_index""] did not previously exist . . . creating it; [2019-06-27 16:02:56.612] [jLog] [info] building index; [2019-06-27 16:02:56.614] [jointLog] [error] The decoy file ecoys does not exist. I did use the SalmonTools to make the decoy file (few lines). INFO, skch::Sketch::computeFreqHist, With threshold 0.001%, ignore minimizers occurring >= 5124 times during lookup.; INFO, skch::main, Time spent computing the reference index: 727.737 sec; INFO, skch::Map::mapQuery, [count of mapped reads, reads qualified for mapping, total input reads] = [40777, 40831, 45898]; INFO, skch::main, Time spent mapping the query : 1912.34 sec; INFO, skch::main, mapping results saved in : mashmap.out; [4/10] Extracting intervals from mashmap alignments; [5/10] Merging the intervals; [6/10] Extracting sequences from the genome; index file reference.masked.genome.fa.fai not found, generating...; [7/10] Concatenating to get decoy sequences; [8/10] Making gentrome; [9/10] Extracting decoy sequence ids; [10/10] Removing temporary files; **********************************************; *** DONE Processing ...; *** You can use files `$outfolder/gentrome.fa` ; *** and $outfolder/decoys.txt` with ; *** `salmon index`; ****",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389
https://github.com/COMBINE-lab/salmon/issues/389:664,Deployability,upgrade,upgrade,664,"Hi,. this is the error i get, when making a transcript index using salmon. I am using the decoy making script to make the decoy, which the script makes but fails when creating the index!. Specifically, please provide at least the following information:. Which version of salmon was used?; Version: salmon 0.14.1; How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; Which reference (e.g. transcriptome) was used?; Pig transcriptome; Which read files were used?; None; Which which program options were used?; command line:. salmon index -t gentrome.fa -i ../salmon_index -decoys decoys.txt -k 31; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; index [""../salmon_index""] did not previously exist . . . creating it; [2019-06-27 16:02:56.612] [jLog] [info] building index; [2019-06-27 16:02:56.614] [jointLog] [error] The decoy file ecoys does not exist. I did use the SalmonTools to make the decoy file (few lines). INFO, skch::Sketch::computeFreqHist, With threshold 0.001%, ignore minimizers occurring >= 5124 times during lookup.; INFO, skch::main, Time spent computing the reference index: 727.737 sec; INFO, skch::Map::mapQuery, [count of mapped reads, reads qualified for mapping, total input reads] = [40777, 40831, 45898]; INFO, skch::main, Time spent mapping the query : 1912.34 sec; INFO, skch::main, mapping results saved in : mashmap.out; [4/10] Extracting intervals from mashmap alignments; [5/10] Merging the intervals; [6/10] Extracting sequences from the genome; index file reference.masked.genome.fa.fai not found, generating...; [7/10] Concatenating to get decoy sequences; [8/10] Making gentrome; [9/10] Extracting decoy sequence ids; [10/10] Removing temporary files; **********************************************; *** DONE Processing ...; *** You can use files `$outfolder/gentrome.fa` ; *** and $outfolder/decoys.txt` with ; *** `salmon index`; ****",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389
https://github.com/COMBINE-lab/salmon/issues/389:716,Deployability,upgrade,upgrades,716,"Hi,. this is the error i get, when making a transcript index using salmon. I am using the decoy making script to make the decoy, which the script makes but fails when creating the index!. Specifically, please provide at least the following information:. Which version of salmon was used?; Version: salmon 0.14.1; How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; Which reference (e.g. transcriptome) was used?; Pig transcriptome; Which read files were used?; None; Which which program options were used?; command line:. salmon index -t gentrome.fa -i ../salmon_index -decoys decoys.txt -k 31; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; index [""../salmon_index""] did not previously exist . . . creating it; [2019-06-27 16:02:56.612] [jLog] [info] building index; [2019-06-27 16:02:56.614] [jointLog] [error] The decoy file ecoys does not exist. I did use the SalmonTools to make the decoy file (few lines). INFO, skch::Sketch::computeFreqHist, With threshold 0.001%, ignore minimizers occurring >= 5124 times during lookup.; INFO, skch::main, Time spent computing the reference index: 727.737 sec; INFO, skch::Map::mapQuery, [count of mapped reads, reads qualified for mapping, total input reads] = [40777, 40831, 45898]; INFO, skch::main, Time spent mapping the query : 1912.34 sec; INFO, skch::main, mapping results saved in : mashmap.out; [4/10] Extracting intervals from mashmap alignments; [5/10] Merging the intervals; [6/10] Extracting sequences from the genome; index file reference.masked.genome.fa.fai not found, generating...; [7/10] Concatenating to get decoy sequences; [8/10] Making gentrome; [9/10] Extracting decoy sequence ids; [10/10] Removing temporary files; **********************************************; *** DONE Processing ...; *** You can use files `$outfolder/gentrome.fa` ; *** and $outfolder/decoys.txt` with ; *** `salmon index`; ****",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389
https://github.com/COMBINE-lab/salmon/issues/390:433,Availability,error,errors,433,"**This question is primarily related to salmon (bulk mode)**. **Describe the problem**; How will Salmon handle if only a fraction of a read maps to a transcript but the rest do not? Ran in to this problematic FastQ file the other day where the first 52 nucleotides where N (see below). Could Salmon handle such fastq files or is trimming needed? What if the first 50 nucleotides ""just"" had very low quality (and thereby were full of errors whereby the did not map to the transcriptome?. **Screenshots**. ![image](https://user-images.githubusercontent.com/23721187/60346555-ac4a5f00-99bb-11e9-94a7-57e3d75654f6.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/390
https://github.com/COMBINE-lab/salmon/issues/393:800,Availability,down,downloaded,800,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk); **Describe the bug**; I have a Illumina TruSeq Stranded Ribozero library and when I use salmon with -l A, it detects the libraries as either ISF or IU (for different indexes). The mapping rate is about 50-75% per index. However, as I understand it, Illumina TruSeq stranded libraries are supposed to be ISR? When I use -l ISR, i get much lower mapping rates so I'm a bit confused. Am I wrong about the library type for TruSeq Stranded, or is there a mistake in the Salmon docs? . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Latest (0.14.1); * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda, using a Snakemake workflow (ARMOR, from Mark Robinson's lab); * Which reference (e.g. transcriptome) was used?; Arabidopsis thaliana, from ensembl; * Which read files were used?; * Which which program options were used?; salmon (mapping-based) v0.14.1; [ program ] => salmon; [ command ] => quant; [ index ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/reference/SalmonIndex/Arabidopsis_thaliana }; [ libType ] => { ISR }; [ mates1 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R1.fastq.gz }; [ mates2 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R2.fastq.gz }; [ output ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/output/salmon/12-0-rve-30-3 }; [ numBootstraps ] => { 100 }; [ seqBias ] => { }; [ gcBias ] => { }; [ validateMappings ] => { }; [ ] => { o--fldMean }; [ ] => { 250 }; [ fldSD ] => { 25 }; [ threads ] => { 7 }. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version ; **Additional context**; Add any o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/393
https://github.com/COMBINE-lab/salmon/issues/393:779,Deployability,install,installed,779,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk); **Describe the bug**; I have a Illumina TruSeq Stranded Ribozero library and when I use salmon with -l A, it detects the libraries as either ISF or IU (for different indexes). The mapping rate is about 50-75% per index. However, as I understand it, Illumina TruSeq stranded libraries are supposed to be ISR? When I use -l ISR, i get much lower mapping rates so I'm a bit confused. Am I wrong about the library type for TruSeq Stranded, or is there a mistake in the Salmon docs? . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Latest (0.14.1); * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda, using a Snakemake workflow (ARMOR, from Mark Robinson's lab); * Which reference (e.g. transcriptome) was used?; Arabidopsis thaliana, from ensembl; * Which read files were used?; * Which which program options were used?; salmon (mapping-based) v0.14.1; [ program ] => salmon; [ command ] => quant; [ index ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/reference/SalmonIndex/Arabidopsis_thaliana }; [ libType ] => { ISR }; [ mates1 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R1.fastq.gz }; [ mates2 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R2.fastq.gz }; [ output ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/output/salmon/12-0-rve-30-3 }; [ numBootstraps ] => { 100 }; [ seqBias ] => { }; [ gcBias ] => { }; [ validateMappings ] => { }; [ ] => { o--fldMean }; [ ] => { 250 }; [ fldSD ] => { 25 }; [ threads ] => { 7 }. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version ; **Additional context**; Add any o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/393
https://github.com/COMBINE-lab/salmon/issues/393:210,Safety,detect,detects,210,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk); **Describe the bug**; I have a Illumina TruSeq Stranded Ribozero library and when I use salmon with -l A, it detects the libraries as either ISF or IU (for different indexes). The mapping rate is about 50-75% per index. However, as I understand it, Illumina TruSeq stranded libraries are supposed to be ISR? When I use -l ISR, i get much lower mapping rates so I'm a bit confused. Am I wrong about the library type for TruSeq Stranded, or is there a mistake in the Salmon docs? . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Latest (0.14.1); * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda, using a Snakemake workflow (ARMOR, from Mark Robinson's lab); * Which reference (e.g. transcriptome) was used?; Arabidopsis thaliana, from ensembl; * Which read files were used?; * Which which program options were used?; salmon (mapping-based) v0.14.1; [ program ] => salmon; [ command ] => quant; [ index ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/reference/SalmonIndex/Arabidopsis_thaliana }; [ libType ] => { ISR }; [ mates1 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R1.fastq.gz }; [ mates2 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R2.fastq.gz }; [ output ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/output/salmon/12-0-rve-30-3 }; [ numBootstraps ] => { 100 }; [ seqBias ] => { }; [ gcBias ] => { }; [ validateMappings ] => { }; [ ] => { o--fldMean }; [ ] => { 250 }; [ fldSD ] => { 25 }; [ threads ] => { 7 }. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version ; **Additional context**; Add any o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/393
https://github.com/COMBINE-lab/salmon/issues/393:1591,Security,validat,validateMappings,1591,"mon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk); **Describe the bug**; I have a Illumina TruSeq Stranded Ribozero library and when I use salmon with -l A, it detects the libraries as either ISF or IU (for different indexes). The mapping rate is about 50-75% per index. However, as I understand it, Illumina TruSeq stranded libraries are supposed to be ISR? When I use -l ISR, i get much lower mapping rates so I'm a bit confused. Am I wrong about the library type for TruSeq Stranded, or is there a mistake in the Salmon docs? . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Latest (0.14.1); * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda, using a Snakemake workflow (ARMOR, from Mark Robinson's lab); * Which reference (e.g. transcriptome) was used?; Arabidopsis thaliana, from ensembl; * Which read files were used?; * Which which program options were used?; salmon (mapping-based) v0.14.1; [ program ] => salmon; [ command ] => quant; [ index ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/reference/SalmonIndex/Arabidopsis_thaliana }; [ libType ] => { ISR }; [ mates1 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R1.fastq.gz }; [ mates2 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R2.fastq.gz }; [ output ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/output/salmon/12-0-rve-30-3 }; [ numBootstraps ] => { 100 }; [ seqBias ] => { }; [ gcBias ] => { }; [ validateMappings ] => { }; [ ] => { o--fldMean }; [ ] => { 250 }; [ fldSD ] => { 25 }; [ threads ] => { 7 }. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version ; **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/393
https://github.com/COMBINE-lab/salmon/issues/393:1725,Usability,clear,clear,1725,"mon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk); **Describe the bug**; I have a Illumina TruSeq Stranded Ribozero library and when I use salmon with -l A, it detects the libraries as either ISF or IU (for different indexes). The mapping rate is about 50-75% per index. However, as I understand it, Illumina TruSeq stranded libraries are supposed to be ISR? When I use -l ISR, i get much lower mapping rates so I'm a bit confused. Am I wrong about the library type for TruSeq Stranded, or is there a mistake in the Salmon docs? . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Latest (0.14.1); * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda, using a Snakemake workflow (ARMOR, from Mark Robinson's lab); * Which reference (e.g. transcriptome) was used?; Arabidopsis thaliana, from ensembl; * Which read files were used?; * Which which program options were used?; salmon (mapping-based) v0.14.1; [ program ] => salmon; [ command ] => quant; [ index ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/reference/SalmonIndex/Arabidopsis_thaliana }; [ libType ] => { ISR }; [ mates1 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R1.fastq.gz }; [ mates2 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R2.fastq.gz }; [ output ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/output/salmon/12-0-rve-30-3 }; [ numBootstraps ] => { 100 }; [ seqBias ] => { }; [ gcBias ] => { }; [ validateMappings ] => { }; [ ] => { o--fldMean }; [ ] => { 250 }; [ fldSD ] => { 25 }; [ threads ] => { 7 }. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version ; **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/393
https://github.com/COMBINE-lab/salmon/issues/398:6,Energy Efficiency,adapt,adapter,6,"If an adapter is not trimmed, will it affect the mapping rate?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/398
https://github.com/COMBINE-lab/salmon/issues/398:6,Integrability,adapter,adapter,6,"If an adapter is not trimmed, will it affect the mapping rate?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/398
https://github.com/COMBINE-lab/salmon/issues/398:6,Modifiability,adapt,adapter,6,"If an adapter is not trimmed, will it affect the mapping rate?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/398
https://github.com/COMBINE-lab/salmon/issues/399:196,Security,validat,validateMappings,196,"Hi,. I just wanted to check if I'm following the documentation correctly. I have created a decoy-aware index and want to run salmon (v0.14.1) with the following options:. `salmon quant --dumpEq --validateMappings --rangeFactorizationBins 4 -l A -i $index --seqBias --gcBias -p 40 --geneMap $genemap -o $1.quants.25 -1 $read1 -2 $read2`. I am confused as to whether the documentation (https://salmon.readthedocs.io/en/latest/salmon.html) is recommending to combine ""--validateMappings"" with ""--mimicBT2"" or ""--mimicStrictBT2"" or not. Secondly, selective mapping is now highly recommended in conjunction with a decoy-aware transcriptome in the first note, but a later note states: . ""For the time being, if you wish to quantify using quasi-mapping, you should not build a decoy-augmented index."". Given the above command should I go back to a non-decoy aware transcriptome? . Thank you for any help and clarifications!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/399
https://github.com/COMBINE-lab/salmon/issues/399:467,Security,validat,validateMappings,467,"Hi,. I just wanted to check if I'm following the documentation correctly. I have created a decoy-aware index and want to run salmon (v0.14.1) with the following options:. `salmon quant --dumpEq --validateMappings --rangeFactorizationBins 4 -l A -i $index --seqBias --gcBias -p 40 --geneMap $genemap -o $1.quants.25 -1 $read1 -2 $read2`. I am confused as to whether the documentation (https://salmon.readthedocs.io/en/latest/salmon.html) is recommending to combine ""--validateMappings"" with ""--mimicBT2"" or ""--mimicStrictBT2"" or not. Secondly, selective mapping is now highly recommended in conjunction with a decoy-aware transcriptome in the first note, but a later note states: . ""For the time being, if you wish to quantify using quasi-mapping, you should not build a decoy-augmented index."". Given the above command should I go back to a non-decoy aware transcriptome? . Thank you for any help and clarifications!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/399
https://github.com/COMBINE-lab/salmon/issues/401:1297,Availability,down,down,1297,"lping my adviser with this as a side project so I have limited knowledge on the topic and I also have limited knowledge on RNAseq as I mostly deal with full genomes. Lastly, I also do know that this research question is very narrow and I believe the concept can be done by Salmon, but this is where I would need your feedback. . The idea is to look for the number of reads that map to two versions of a gene. The gene is split into two version by exon skipping and is not alternatively spliced. I also want to make this process fast as the idea would be to look for differences in the proportions of gene versions that are created based on a large databases of RNAseq data (easily 200+ different RNAseq experiments). So to make it quick I am only passing two transcripts to Salmon (T - 1, and T - 2) for version 1 and 2 of the transcript, where version 2 has the 2nd exon (of 4 total exons) removed. . Now I know Salmon was created to map reads to a large number of transcripts across the whole genome, but I believe it still should be possible to narrow down the view to only 1 gene with 2 versions. I believe I just need to set the parameters right, but I also want to set the parameters in a general way so that my script can work across different species with different input RNAseq data. The other problem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401
https://github.com/COMBINE-lab/salmon/issues/401:3224,Availability,fault,fault,3224,"ld like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they were working at the default settings. Below is also a small chart of some of my runs (which included quasi-mapping and selective-alignment), but what you can get is that there is a large variance between parameters. Particularly ```--seqBias``` showed a dramatic drop in predicted T - 2 transcripts. ![image](https://user-images.githubusercontent.com/29610303/61421680-5899aa00-a8c5-11e9-8349-bd708316599d.png). Any suggestions onto parameters settings to help me with this narrow question?. Now onto some questions regarding some outputs. 1. I run into a segmentation fault (core dumped) when I try to run the experimental ```--posBias```. I am new to RNAseq, but I thought this might help with this particular RNAseq set as it was a PolyA tail selection and when mapping to the full genome there is an observed heavy mapping to exon 1 with decreased mapping over exon 2, 3 and 4. . 2. During my runs I have been using ```-l A``` as I will be using this method in my script so that Salmon can just select the best libtype based on the given sequence to help make my script less complex. However, I found something strange when I used ```-l A``` on my test sequence. I got a warning of >1% strand bias on the command line and in the lib_format_counts.json I see that Salmon selected ""IU"" which I believe to be the correct libtype as well, but got this:; ```; {; ""read_files"": [; ""/data/wyka/vamsi/SRR1174205_1_paired.fastq"",; ""/data/wyka/vamsi/SRR1174205_2_paired.fastq""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 5549,; ""num_assigned_fragm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401
https://github.com/COMBINE-lab/salmon/issues/401:1712,Performance,perform,perform,1712,"ne is split into two version by exon skipping and is not alternatively spliced. I also want to make this process fast as the idea would be to look for differences in the proportions of gene versions that are created based on a large databases of RNAseq data (easily 200+ different RNAseq experiments). So to make it quick I am only passing two transcripts to Salmon (T - 1, and T - 2) for version 1 and 2 of the transcript, where version 2 has the 2nd exon (of 4 total exons) removed. . Now I know Salmon was created to map reads to a large number of transcripts across the whole genome, but I believe it still should be possible to narrow down the view to only 1 gene with 2 versions. I believe I just need to set the parameters right, but I also want to set the parameters in a general way so that my script can work across different species with different input RNAseq data. The other problem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and would like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they we",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401
https://github.com/COMBINE-lab/salmon/issues/401:2313,Performance,perform,performed,2313," I believe I just need to set the parameters right, but I also want to set the parameters in a general way so that my script can work across different species with different input RNAseq data. The other problem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and would like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they were working at the default settings. Below is also a small chart of some of my runs (which included quasi-mapping and selective-alignment), but what you can get is that there is a large variance between parameters. Particularly ```--seqBias``` showed a dramatic drop in predicted T - 2 transcripts. ![image](https://user-images.githubusercontent.com/29610303/61421680-5899aa00-a8c5-11e9-8349-bd708316599d.png). Any suggestions onto parameters settings to help me with this narrow question?. Now onto some questions regarding some outputs. 1. I run into a segmentation fault (core dumped) when I try to run the experimental ```--posBias```. I am new to RNAseq, but I thought this might he",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401
https://github.com/COMBINE-lab/salmon/issues/401:2926,Safety,predict,predicted,2926,"nd, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and would like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they were working at the default settings. Below is also a small chart of some of my runs (which included quasi-mapping and selective-alignment), but what you can get is that there is a large variance between parameters. Particularly ```--seqBias``` showed a dramatic drop in predicted T - 2 transcripts. ![image](https://user-images.githubusercontent.com/29610303/61421680-5899aa00-a8c5-11e9-8349-bd708316599d.png). Any suggestions onto parameters settings to help me with this narrow question?. Now onto some questions regarding some outputs. 1. I run into a segmentation fault (core dumped) when I try to run the experimental ```--posBias```. I am new to RNAseq, but I thought this might help with this particular RNAseq set as it was a PolyA tail selection and when mapping to the full genome there is an observed heavy mapping to exon 1 with decreased mapping over exon 2, 3 and 4. . 2. During my runs I have been using ```-l A``` as I will be using this method in my script so that Salmon can just select the best libtype based on the given sequence to help make my script less complex. However, I found something strange when I used ```-l A``` on my test sequence. I got a warning of >1% strand bias on the command line and in the lib_format_counts.json I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401
https://github.com/COMBINE-lab/salmon/issues/401:2412,Security,validat,validateMappings,2412,"lem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and would like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they were working at the default settings. Below is also a small chart of some of my runs (which included quasi-mapping and selective-alignment), but what you can get is that there is a large variance between parameters. Particularly ```--seqBias``` showed a dramatic drop in predicted T - 2 transcripts. ![image](https://user-images.githubusercontent.com/29610303/61421680-5899aa00-a8c5-11e9-8349-bd708316599d.png). Any suggestions onto parameters settings to help me with this narrow question?. Now onto some questions regarding some outputs. 1. I run into a segmentation fault (core dumped) when I try to run the experimental ```--posBias```. I am new to RNAseq, but I thought this might help with this particular RNAseq set as it was a PolyA tail selection and when mapping to the full genome there is an observed heavy mapping to exon 1 with decreased mapping over exon 2, 3 and 4. . 2. During m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401
https://github.com/COMBINE-lab/salmon/issues/401:1769,Testability,test,test,1769,"ne is split into two version by exon skipping and is not alternatively spliced. I also want to make this process fast as the idea would be to look for differences in the proportions of gene versions that are created based on a large databases of RNAseq data (easily 200+ different RNAseq experiments). So to make it quick I am only passing two transcripts to Salmon (T - 1, and T - 2) for version 1 and 2 of the transcript, where version 2 has the 2nd exon (of 4 total exons) removed. . Now I know Salmon was created to map reads to a large number of transcripts across the whole genome, but I believe it still should be possible to narrow down the view to only 1 gene with 2 versions. I believe I just need to set the parameters right, but I also want to set the parameters in a general way so that my script can work across different species with different input RNAseq data. The other problem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and would like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they we",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401
https://github.com/COMBINE-lab/salmon/issues/401:1815,Testability,test,test,1815,"fferent RNAseq experiments). So to make it quick I am only passing two transcripts to Salmon (T - 1, and T - 2) for version 1 and 2 of the transcript, where version 2 has the 2nd exon (of 4 total exons) removed. . Now I know Salmon was created to map reads to a large number of transcripts across the whole genome, but I believe it still should be possible to narrow down the view to only 1 gene with 2 versions. I believe I just need to set the parameters right, but I also want to set the parameters in a general way so that my script can work across different species with different input RNAseq data. The other problem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and would like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they were working at the default settings. Below is also a small chart of some of my runs (which included quasi-mapping and selective-alignment), but what you can get is that there is a large variance between parameters. Particularly ```--seqBias``` showed a dramatic drop in pred",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401
https://github.com/COMBINE-lab/salmon/issues/401:3807,Testability,test,test,3807,"ncluded quasi-mapping and selective-alignment), but what you can get is that there is a large variance between parameters. Particularly ```--seqBias``` showed a dramatic drop in predicted T - 2 transcripts. ![image](https://user-images.githubusercontent.com/29610303/61421680-5899aa00-a8c5-11e9-8349-bd708316599d.png). Any suggestions onto parameters settings to help me with this narrow question?. Now onto some questions regarding some outputs. 1. I run into a segmentation fault (core dumped) when I try to run the experimental ```--posBias```. I am new to RNAseq, but I thought this might help with this particular RNAseq set as it was a PolyA tail selection and when mapping to the full genome there is an observed heavy mapping to exon 1 with decreased mapping over exon 2, 3 and 4. . 2. During my runs I have been using ```-l A``` as I will be using this method in my script so that Salmon can just select the best libtype based on the given sequence to help make my script less complex. However, I found something strange when I used ```-l A``` on my test sequence. I got a warning of >1% strand bias on the command line and in the lib_format_counts.json I see that Salmon selected ""IU"" which I believe to be the correct libtype as well, but got this:; ```; {; ""read_files"": [; ""/data/wyka/vamsi/SRR1174205_1_paired.fastq"",; ""/data/wyka/vamsi/SRR1174205_2_paired.fastq""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 5549,; ""num_assigned_fragments"": 5549,; ""num_frags_with_concordant_consistent_mappings"": 4190,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1359,; ""strand_mapping_bias"": 0.45441527446300719,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 2286,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1904,; ""SF"": 547,; ""SR"": 812,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```; When my strand mapping was 0.45 (which to be honest I am not sure how bad that actually is), but I noticed that my reads were mapped with the ISF, ISR, SF, and SR libtypes. Is that normal?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401
https://github.com/COMBINE-lab/salmon/issues/401:559,Usability,feedback,feedback,559,"Hello,. I have some questions about functions within the software and mainly I am seeking some advice on parameter setting as I believe the developers might have a better idea of how to tackle this problem I am working with. To start, I am helping my adviser with this as a side project so I have limited knowledge on the topic and I also have limited knowledge on RNAseq as I mostly deal with full genomes. Lastly, I also do know that this research question is very narrow and I believe the concept can be done by Salmon, but this is where I would need your feedback. . The idea is to look for the number of reads that map to two versions of a gene. The gene is split into two version by exon skipping and is not alternatively spliced. I also want to make this process fast as the idea would be to look for differences in the proportions of gene versions that are created based on a large databases of RNAseq data (easily 200+ different RNAseq experiments). So to make it quick I am only passing two transcripts to Salmon (T - 1, and T - 2) for version 1 and 2 of the transcript, where version 2 has the 2nd exon (of 4 total exons) removed. . Now I know Salmon was created to map reads to a large number of transcripts across the whole genome, but I believe it still should be possible to narrow down the view to only 1 gene with 2 versions. I believe I just need to set the parameters right, but I also want to set the parameters in a general way so that my script can work across different species with different input RNAseq data. The other problem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, di",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401
https://github.com/COMBINE-lab/salmon/issues/402:1196,Security,validat,validateMappings,1196,"Hello,; Thanks for developing Salmon. I recently had a look at the `--dumpEQ` option, and found that all equivalence classes had this curious pattern, I am wondering why could that be:; ```; // EC line from eq_classes.txt; 14 46954 46966 46968 46970 46971 46975 46976 0 0 0 0 0 0 0 28; ```; Here the line reports 14 ECs with a TCC of 28. However, it seems that the last 7 zeros should not be there. Similar lines can be found with ones instead, or even mixes of 0, 1 and 2's. Line a single trailing 5 are also very common. To illustrate, here are some other examples:; ```; 12 37568 108918 108919 108924 108931 131734 0 1 1 1 1 0 1. 16 98091 98097 104688 104689 104694 127677 153862 153865 0 0 0 0 0 0 2 2 3. 2 141075 5 1 ; 2 95598 5 4 ; 2 172834 5 158; ```. Here is how I ran salmon (most path have been removed for clarity):; ```; ./generateDecoyTranscriptome.sh -j 20 -g Homo_sapiens.GRCh38.dna.primary_assembly.fa -t Homo_sapiens.GRCh38.cdna.all.fa -a Homo_sapiens.GRCh38.97.chr.gtf -b <bed_path>bedtools -m <mash_path>mashmap -o <index_path>salmon. ${SALMON} index -t gentrome.fa -d decoys.txt -k 31 -i transcripts_index. ${SALMON} quant -p 8 -i ${SALMON_INDEX} -l U -r ${SAMPLE_ID}.fastq --validateMappings -o transcripts_quant; ```. Salmon was compiled on ubuntu 16.04 x86_64; version=0.14.1. Reference file come from ensembl.; ```; ftp://ftp.ensembl.org/pub/current_gtf/homo_sapiens/Homo_sapiens.GRCh38.97.chr.gtf.gz; ftp://ftp.ensembl.org/pub/current_fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; ftp://ftp.ensembl.org/pub/current_fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; ```; Read file is SRX2830419_1 (fastq). Please let me know what you think.; Thanks; [eq_classes.txt](https://github.com/COMBINE-lab/salmon/files/3407037/eq_classes.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/402
https://github.com/COMBINE-lab/salmon/issues/403:296,Availability,avail,available,296,"Hi,; I am used to work with RNA-seq data sets from human or mouse (thus well-annotated organisms), for which I always use Salmon.; Now a colleague of mine asked whether I could help him with analyzing a data set obtained from a non-model organism (A) for which even no reference transcriptome is available. I therefore would like to map the reads to the transcriptome of the closest species (B) available in ENSEMBL. [It basically resembles the situation mentioned [here](https://www.biostars.org/p/253396/) at the BioStars forum, but then at the transcriptome level]. . I started by running Salmon using the settings I normally use for mouse, but the the percentage of mapped reads is extremely low, i.e varying between 0.5-2%. That it would be lower than usual I expected, but not this low....; Because I cannot easily see the forest for the trees, I would appreciate if some suggestions could be given that in effect 'relax' the criteria for mapping, eventually resulting in an increased mapping%. Thanks!; G. My code/arguments:; Input: 150 bp paired-end RNA-seq data.; Average number of reads per sample: ~22M. Transcriptome index file is 'decoyed'; generated with default settings (k=31). Salmon arguments:; ```; /home/guidoh/SALMON/salmon-latest_linux_x86_64/bin/salmon quant -i ./Lotgi1_combined_index \; 	--libType A \; 	--seqBias \; 	--gcBias \; 	--biasSpeedSamp 5 \; 	--validateMappings \; 	--numGibbsSamples 20 \; 	-1 ${F1} \; 	-2 ${R1} \; 	-o ${salmonsubdir}$fn4; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/403
https://github.com/COMBINE-lab/salmon/issues/403:395,Availability,avail,available,395,"Hi,; I am used to work with RNA-seq data sets from human or mouse (thus well-annotated organisms), for which I always use Salmon.; Now a colleague of mine asked whether I could help him with analyzing a data set obtained from a non-model organism (A) for which even no reference transcriptome is available. I therefore would like to map the reads to the transcriptome of the closest species (B) available in ENSEMBL. [It basically resembles the situation mentioned [here](https://www.biostars.org/p/253396/) at the BioStars forum, but then at the transcriptome level]. . I started by running Salmon using the settings I normally use for mouse, but the the percentage of mapped reads is extremely low, i.e varying between 0.5-2%. That it would be lower than usual I expected, but not this low....; Because I cannot easily see the forest for the trees, I would appreciate if some suggestions could be given that in effect 'relax' the criteria for mapping, eventually resulting in an increased mapping%. Thanks!; G. My code/arguments:; Input: 150 bp paired-end RNA-seq data.; Average number of reads per sample: ~22M. Transcriptome index file is 'decoyed'; generated with default settings (k=31). Salmon arguments:; ```; /home/guidoh/SALMON/salmon-latest_linux_x86_64/bin/salmon quant -i ./Lotgi1_combined_index \; 	--libType A \; 	--seqBias \; 	--gcBias \; 	--biasSpeedSamp 5 \; 	--validateMappings \; 	--numGibbsSamples 20 \; 	-1 ${F1} \; 	-2 ${R1} \; 	-o ${salmonsubdir}$fn4; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/403
https://github.com/COMBINE-lab/salmon/issues/403:1380,Security,validat,validateMappings,1380,"Hi,; I am used to work with RNA-seq data sets from human or mouse (thus well-annotated organisms), for which I always use Salmon.; Now a colleague of mine asked whether I could help him with analyzing a data set obtained from a non-model organism (A) for which even no reference transcriptome is available. I therefore would like to map the reads to the transcriptome of the closest species (B) available in ENSEMBL. [It basically resembles the situation mentioned [here](https://www.biostars.org/p/253396/) at the BioStars forum, but then at the transcriptome level]. . I started by running Salmon using the settings I normally use for mouse, but the the percentage of mapped reads is extremely low, i.e varying between 0.5-2%. That it would be lower than usual I expected, but not this low....; Because I cannot easily see the forest for the trees, I would appreciate if some suggestions could be given that in effect 'relax' the criteria for mapping, eventually resulting in an increased mapping%. Thanks!; G. My code/arguments:; Input: 150 bp paired-end RNA-seq data.; Average number of reads per sample: ~22M. Transcriptome index file is 'decoyed'; generated with default settings (k=31). Salmon arguments:; ```; /home/guidoh/SALMON/salmon-latest_linux_x86_64/bin/salmon quant -i ./Lotgi1_combined_index \; 	--libType A \; 	--seqBias \; 	--gcBias \; 	--biasSpeedSamp 5 \; 	--validateMappings \; 	--numGibbsSamples 20 \; 	-1 ${F1} \; 	-2 ${R1} \; 	-o ${salmonsubdir}$fn4; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/403
https://github.com/COMBINE-lab/salmon/issues/403:1224,Usability,guid,guidoh,1224,"Hi,; I am used to work with RNA-seq data sets from human or mouse (thus well-annotated organisms), for which I always use Salmon.; Now a colleague of mine asked whether I could help him with analyzing a data set obtained from a non-model organism (A) for which even no reference transcriptome is available. I therefore would like to map the reads to the transcriptome of the closest species (B) available in ENSEMBL. [It basically resembles the situation mentioned [here](https://www.biostars.org/p/253396/) at the BioStars forum, but then at the transcriptome level]. . I started by running Salmon using the settings I normally use for mouse, but the the percentage of mapped reads is extremely low, i.e varying between 0.5-2%. That it would be lower than usual I expected, but not this low....; Because I cannot easily see the forest for the trees, I would appreciate if some suggestions could be given that in effect 'relax' the criteria for mapping, eventually resulting in an increased mapping%. Thanks!; G. My code/arguments:; Input: 150 bp paired-end RNA-seq data.; Average number of reads per sample: ~22M. Transcriptome index file is 'decoyed'; generated with default settings (k=31). Salmon arguments:; ```; /home/guidoh/SALMON/salmon-latest_linux_x86_64/bin/salmon quant -i ./Lotgi1_combined_index \; 	--libType A \; 	--seqBias \; 	--gcBias \; 	--biasSpeedSamp 5 \; 	--validateMappings \; 	--numGibbsSamples 20 \; 	-1 ${F1} \; 	-2 ${R1} \; 	-o ${salmonsubdir}$fn4; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/403
https://github.com/COMBINE-lab/salmon/issues/404:439,Performance,Load,Loading,439,"Hi,. I try to follow Alevin tutorial on 'How to Use alevin with Seurat' and have an issue with tximport(). I found this step is extremely **slow**. For **quants_mat.gz** file with **4.7M** in size, it took **12** minutes to finish. Is this common for alevin generated single cell data? . Thanks!; Lei. ## Test data: 10x 1k_PMBC_v2; ### Intel(R) Xeon(R) CPU E5-2698 v3 @ 2.30GHz; ## alevin.log; [2019-07-18 14:13:59.692] [alevinLog] [info] Loading Header; [2019-07-18 14:13:59.692] [alevinLog] [info] Loading Transcript Info; [2019-07-18 14:14:00.014] [alevinLog] [info] Found all transcripts to gene mappings; [2019-07-18 14:14:00.023] [alevinLog] [info] Processing barcodes files (if Present); [2019-07-18 14:15:51.124] [alevinLog] [info] Done barcode density calculation.; [2019-07-18 14:15:51.124] [alevinLog] [info] # Barcodes Used: 76866957 76921082.; [2019-07-18 14:15:51.553] [alevinLog] [info] Done importing white-list Barcodes; [2019-07-18 14:15:51.853] [alevinLog] [warning] Skipping 575996 Barcodes as no read was mapped; [2019-07-18 14:15:52.078] [alevinLog] [info] Total 161284 white-listed Barcodes; [2019-07-18 14:15:52.259] [alevinLog] [info] Total 5.95793% reads will be thrown away because of noisy Cellular barcodes.; [2019-07-18 14:15:58.709] [alevinLog] [info] Done populating Z matrix; [2019-07-18 14:15:58.741] [alevinLog] [info] Total 56814 CB got sequence corrected; [2019-07-18 14:15:58.750] [alevinLog] [info] Done indexing Barcodes; [2019-07-18 14:15:58.750] [alevinLog] [info] Total Unique barcodes found: 687531; [2019-07-18 14:15:58.750] [alevinLog] [info] Used Barcodes except Whitelist: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [al",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404
https://github.com/COMBINE-lab/salmon/issues/404:500,Performance,Load,Loading,500,"Hi,. I try to follow Alevin tutorial on 'How to Use alevin with Seurat' and have an issue with tximport(). I found this step is extremely **slow**. For **quants_mat.gz** file with **4.7M** in size, it took **12** minutes to finish. Is this common for alevin generated single cell data? . Thanks!; Lei. ## Test data: 10x 1k_PMBC_v2; ### Intel(R) Xeon(R) CPU E5-2698 v3 @ 2.30GHz; ## alevin.log; [2019-07-18 14:13:59.692] [alevinLog] [info] Loading Header; [2019-07-18 14:13:59.692] [alevinLog] [info] Loading Transcript Info; [2019-07-18 14:14:00.014] [alevinLog] [info] Found all transcripts to gene mappings; [2019-07-18 14:14:00.023] [alevinLog] [info] Processing barcodes files (if Present); [2019-07-18 14:15:51.124] [alevinLog] [info] Done barcode density calculation.; [2019-07-18 14:15:51.124] [alevinLog] [info] # Barcodes Used: 76866957 76921082.; [2019-07-18 14:15:51.553] [alevinLog] [info] Done importing white-list Barcodes; [2019-07-18 14:15:51.853] [alevinLog] [warning] Skipping 575996 Barcodes as no read was mapped; [2019-07-18 14:15:52.078] [alevinLog] [info] Total 161284 white-listed Barcodes; [2019-07-18 14:15:52.259] [alevinLog] [info] Total 5.95793% reads will be thrown away because of noisy Cellular barcodes.; [2019-07-18 14:15:58.709] [alevinLog] [info] Done populating Z matrix; [2019-07-18 14:15:58.741] [alevinLog] [info] Total 56814 CB got sequence corrected; [2019-07-18 14:15:58.750] [alevinLog] [info] Done indexing Barcodes; [2019-07-18 14:15:58.750] [alevinLog] [info] Total Unique barcodes found: 687531; [2019-07-18 14:15:58.750] [alevinLog] [info] Used Barcodes except Whitelist: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [al",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404
https://github.com/COMBINE-lab/salmon/issues/404:1851,Performance,optimiz,optimizer,1851,"1082.; [2019-07-18 14:15:51.553] [alevinLog] [info] Done importing white-list Barcodes; [2019-07-18 14:15:51.853] [alevinLog] [warning] Skipping 575996 Barcodes as no read was mapped; [2019-07-18 14:15:52.078] [alevinLog] [info] Total 161284 white-listed Barcodes; [2019-07-18 14:15:52.259] [alevinLog] [info] Total 5.95793% reads will be thrown away because of noisy Cellular barcodes.; [2019-07-18 14:15:58.709] [alevinLog] [info] Done populating Z matrix; [2019-07-18 14:15:58.741] [alevinLog] [info] Total 56814 CB got sequence corrected; [2019-07-18 14:15:58.750] [alevinLog] [info] Done indexing Barcodes; [2019-07-18 14:15:58.750] [alevinLog] [info] Total Unique barcodes found: 687531; [2019-07-18 14:15:58.750] [alevinLog] [info] Used Barcodes except Whitelist: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [alevinLog] [info] Total 13 usable mRna genes; [2019-07-18 14:24:28.656] [alevinLog] [warning] 558 ribosomal rna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.656] [alevinLog] [info] Total 0 usable rRna genes; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 4282454.00 UMI after deduplicating.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 5378060 BiDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 958944 UniDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [warning] Skipped 28272 barcodes due to No mapped read; [2019-07-18 14:30:09.552] [alevinLog] [info] Finished optimizer; ```. ## R code (How to Use alevin with Seurat). ```; > library(here); > library(tidyverse); > library(Seurat); > library(tximport); > library(tictoc). > files <- file.path(here(""alevin_output/alevin/quants_mat.gz"")",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404
https://github.com/COMBINE-lab/salmon/issues/404:2626,Performance,optimiz,optimizer,2626,"st: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [alevinLog] [info] Total 13 usable mRna genes; [2019-07-18 14:24:28.656] [alevinLog] [warning] 558 ribosomal rna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.656] [alevinLog] [info] Total 0 usable rRna genes; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 4282454.00 UMI after deduplicating.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 5378060 BiDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 958944 UniDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [warning] Skipped 28272 barcodes due to No mapped read; [2019-07-18 14:30:09.552] [alevinLog] [info] Finished optimizer; ```. ## R code (How to Use alevin with Seurat). ```; > library(here); > library(tidyverse); > library(Seurat); > library(tximport); > library(tictoc). > files <- file.path(here(""alevin_output/alevin/quants_mat.gz"")); > file.exists(files); [1] TRUE; >; > tic(""starts...""); > txi <- tximport(files, type=""alevin""; > toc(); starts...: 728.506 sec elapsed; > sessionInfo(); ```; R version 3.6.1 (2019-07-05); Platform: x86_64-conda_cos6-linux-gnu (64-bit); Running under: CentOS Linux 7 (Core). Matrix products: default; BLAS/LAPACK: /gpfs/data/software/anaconda3/envs/R3.6/lib/libopenblasp-r0.3.6.so. locale:; [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C; [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8; [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8; [7] LC_PAPER=en_US.UTF-8 LC_NAME=C; [9] LC_ADDRESS=C LC_TELEPHONE=C; [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C. attached base packages:; [1] stats graphics grDevices utils datasets methods base. other attached packages:; [1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404
https://github.com/COMBINE-lab/salmon/issues/404:3787,Performance,load,loaded,3787,"alevinLog] [info] Total 958944 UniDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [warning] Skipped 28272 barcodes due to No mapped read; [2019-07-18 14:30:09.552] [alevinLog] [info] Finished optimizer; ```. ## R code (How to Use alevin with Seurat). ```; > library(here); > library(tidyverse); > library(Seurat); > library(tximport); > library(tictoc). > files <- file.path(here(""alevin_output/alevin/quants_mat.gz"")); > file.exists(files); [1] TRUE; >; > tic(""starts...""); > txi <- tximport(files, type=""alevin""; > toc(); starts...: 728.506 sec elapsed; > sessionInfo(); ```; R version 3.6.1 (2019-07-05); Platform: x86_64-conda_cos6-linux-gnu (64-bit); Running under: CentOS Linux 7 (Core). Matrix products: default; BLAS/LAPACK: /gpfs/data/software/anaconda3/envs/R3.6/lib/libopenblasp-r0.3.6.so. locale:; [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C; [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8; [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8; [7] LC_PAPER=en_US.UTF-8 LC_NAME=C; [9] LC_ADDRESS=C LC_TELEPHONE=C; [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C. attached base packages:; [1] stats graphics grDevices utils datasets methods base. other attached packages:; [1] tictoc_1.0.1 tximport_1.12.3 forcats_0.4.0 stringr_1.4.0; [5] dplyr_0.8.3 purrr_0.3.2 readr_1.3.1 tidyr_0.8.3; [9] tibble_2.1.3 ggplot2_3.2.0 tidyverse_1.2.1 here_0.1. loaded via a namespace (and not attached):; [1] Rcpp_1.0.1 cellranger_1.1.0 pillar_1.4.2 compiler_3.6.1; [5] tools_3.6.1 zeallot_0.1.0 jsonlite_1.6 lubridate_1.7.4; [9] gtable_0.3.0 nlme_3.1-140 lattice_0.20-38 pkgconfig_2.0.2; [13] rlang_0.4.0 cli_1.1.0 rstudioapi_0.10 haven_2.1.1; [17] withr_2.1.2 xml2_1.2.0 httr_1.4.0 generics_0.0.2; [21] vctrs_0.2.0 hms_0.5.0 rprojroot_1.3-2 grid_3.6.1; [25] tidyselect_0.2.5 glue_1.3.1 R6_2.4.0 readxl_1.3.1; [29] modelr_0.1.4 magrittr_1.5 backports_1.1.4 scales_1.0.0; [33] rvest_0.3.4 assertthat_0.2.1 colorspace_1.4-1 stringi_1.4.3; [37] lazyeval_0.2.2 munsell_0.5.0 broom_0.5.2 crayon_1.3.4; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404
https://github.com/COMBINE-lab/salmon/issues/404:305,Testability,Test,Test,305,"Hi,. I try to follow Alevin tutorial on 'How to Use alevin with Seurat' and have an issue with tximport(). I found this step is extremely **slow**. For **quants_mat.gz** file with **4.7M** in size, it took **12** minutes to finish. Is this common for alevin generated single cell data? . Thanks!; Lei. ## Test data: 10x 1k_PMBC_v2; ### Intel(R) Xeon(R) CPU E5-2698 v3 @ 2.30GHz; ## alevin.log; [2019-07-18 14:13:59.692] [alevinLog] [info] Loading Header; [2019-07-18 14:13:59.692] [alevinLog] [info] Loading Transcript Info; [2019-07-18 14:14:00.014] [alevinLog] [info] Found all transcripts to gene mappings; [2019-07-18 14:14:00.023] [alevinLog] [info] Processing barcodes files (if Present); [2019-07-18 14:15:51.124] [alevinLog] [info] Done barcode density calculation.; [2019-07-18 14:15:51.124] [alevinLog] [info] # Barcodes Used: 76866957 76921082.; [2019-07-18 14:15:51.553] [alevinLog] [info] Done importing white-list Barcodes; [2019-07-18 14:15:51.853] [alevinLog] [warning] Skipping 575996 Barcodes as no read was mapped; [2019-07-18 14:15:52.078] [alevinLog] [info] Total 161284 white-listed Barcodes; [2019-07-18 14:15:52.259] [alevinLog] [info] Total 5.95793% reads will be thrown away because of noisy Cellular barcodes.; [2019-07-18 14:15:58.709] [alevinLog] [info] Done populating Z matrix; [2019-07-18 14:15:58.741] [alevinLog] [info] Total 56814 CB got sequence corrected; [2019-07-18 14:15:58.750] [alevinLog] [info] Done indexing Barcodes; [2019-07-18 14:15:58.750] [alevinLog] [info] Total Unique barcodes found: 687531; [2019-07-18 14:15:58.750] [alevinLog] [info] Used Barcodes except Whitelist: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [al",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404
https://github.com/COMBINE-lab/salmon/issues/404:389,Testability,log,log,389,"Hi,. I try to follow Alevin tutorial on 'How to Use alevin with Seurat' and have an issue with tximport(). I found this step is extremely **slow**. For **quants_mat.gz** file with **4.7M** in size, it took **12** minutes to finish. Is this common for alevin generated single cell data? . Thanks!; Lei. ## Test data: 10x 1k_PMBC_v2; ### Intel(R) Xeon(R) CPU E5-2698 v3 @ 2.30GHz; ## alevin.log; [2019-07-18 14:13:59.692] [alevinLog] [info] Loading Header; [2019-07-18 14:13:59.692] [alevinLog] [info] Loading Transcript Info; [2019-07-18 14:14:00.014] [alevinLog] [info] Found all transcripts to gene mappings; [2019-07-18 14:14:00.023] [alevinLog] [info] Processing barcodes files (if Present); [2019-07-18 14:15:51.124] [alevinLog] [info] Done barcode density calculation.; [2019-07-18 14:15:51.124] [alevinLog] [info] # Barcodes Used: 76866957 76921082.; [2019-07-18 14:15:51.553] [alevinLog] [info] Done importing white-list Barcodes; [2019-07-18 14:15:51.853] [alevinLog] [warning] Skipping 575996 Barcodes as no read was mapped; [2019-07-18 14:15:52.078] [alevinLog] [info] Total 161284 white-listed Barcodes; [2019-07-18 14:15:52.259] [alevinLog] [info] Total 5.95793% reads will be thrown away because of noisy Cellular barcodes.; [2019-07-18 14:15:58.709] [alevinLog] [info] Done populating Z matrix; [2019-07-18 14:15:58.741] [alevinLog] [info] Total 56814 CB got sequence corrected; [2019-07-18 14:15:58.750] [alevinLog] [info] Done indexing Barcodes; [2019-07-18 14:15:58.750] [alevinLog] [info] Total Unique barcodes found: 687531; [2019-07-18 14:15:58.750] [alevinLog] [info] Used Barcodes except Whitelist: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [al",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404
https://github.com/COMBINE-lab/salmon/issues/404:2026,Usability,usab,usable,2026,"ped; [2019-07-18 14:15:52.078] [alevinLog] [info] Total 161284 white-listed Barcodes; [2019-07-18 14:15:52.259] [alevinLog] [info] Total 5.95793% reads will be thrown away because of noisy Cellular barcodes.; [2019-07-18 14:15:58.709] [alevinLog] [info] Done populating Z matrix; [2019-07-18 14:15:58.741] [alevinLog] [info] Total 56814 CB got sequence corrected; [2019-07-18 14:15:58.750] [alevinLog] [info] Done indexing Barcodes; [2019-07-18 14:15:58.750] [alevinLog] [info] Total Unique barcodes found: 687531; [2019-07-18 14:15:58.750] [alevinLog] [info] Used Barcodes except Whitelist: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [alevinLog] [info] Total 13 usable mRna genes; [2019-07-18 14:24:28.656] [alevinLog] [warning] 558 ribosomal rna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.656] [alevinLog] [info] Total 0 usable rRna genes; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 4282454.00 UMI after deduplicating.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 5378060 BiDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 958944 UniDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [warning] Skipped 28272 barcodes due to No mapped read; [2019-07-18 14:30:09.552] [alevinLog] [info] Finished optimizer; ```. ## R code (How to Use alevin with Seurat). ```; > library(here); > library(tidyverse); > library(Seurat); > library(tximport); > library(tictoc). > files <- file.path(here(""alevin_output/alevin/quants_mat.gz"")); > file.exists(files); [1] TRUE; >; > tic(""starts...""); > txi <- tximport(files, type=""alevin""; > toc(); starts...: 728.506 sec elapsed; > sessionInfo(); ```; R version 3.6.1 (2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404
https://github.com/COMBINE-lab/salmon/issues/404:2215,Usability,usab,usable,2215,"ellular barcodes.; [2019-07-18 14:15:58.709] [alevinLog] [info] Done populating Z matrix; [2019-07-18 14:15:58.741] [alevinLog] [info] Total 56814 CB got sequence corrected; [2019-07-18 14:15:58.750] [alevinLog] [info] Done indexing Barcodes; [2019-07-18 14:15:58.750] [alevinLog] [info] Total Unique barcodes found: 687531; [2019-07-18 14:15:58.750] [alevinLog] [info] Used Barcodes except Whitelist: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [alevinLog] [info] Total 13 usable mRna genes; [2019-07-18 14:24:28.656] [alevinLog] [warning] 558 ribosomal rna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.656] [alevinLog] [info] Total 0 usable rRna genes; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 4282454.00 UMI after deduplicating.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 5378060 BiDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 958944 UniDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [warning] Skipped 28272 barcodes due to No mapped read; [2019-07-18 14:30:09.552] [alevinLog] [info] Finished optimizer; ```. ## R code (How to Use alevin with Seurat). ```; > library(here); > library(tidyverse); > library(Seurat); > library(tximport); > library(tictoc). > files <- file.path(here(""alevin_output/alevin/quants_mat.gz"")); > file.exists(files); [1] TRUE; >; > tic(""starts...""); > txi <- tximport(files, type=""alevin""; > toc(); starts...: 728.506 sec elapsed; > sessionInfo(); ```; R version 3.6.1 (2019-07-05); Platform: x86_64-conda_cos6-linux-gnu (64-bit); Running under: CentOS Linux 7 (Core). Matrix products: default; BLAS/LAPACK: /gpfs/data/software/anaconda3/envs/R3.6/lib/libopenb",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404
https://github.com/COMBINE-lab/salmon/issues/405:843,Deployability,update,update,843,"I have been using salmon index command as: ; `salmon index --type quasi -k 31 --perfectHash `. If I am interested in using the SA method, my understanding from the command line help text `salmon index -h ` is that _perfectHash is only for the quasi method_ and cannot be used if I am using the SA method. Is my understanding correct?. Also, [the online documentation](https://salmon.readthedocs.io/en/latest/salmon.html) does not pull out any mention of the `--perfectHash` argument. Another question/suggestion for the online documentation page - [as referenced in this issue](https://github.com/COMBINE-lab/salmon/issues/399), on first glance, it is confusing as to whether one has to combine ""--validateMappings"" with ""--mimicBT2"" or ""--mimicStrictBT2"". I know @rob-p has addressed it in the github issue tracker, but it would be better to update the online documentation to clarify this **and also give scenarios** in which mimicBT2 or mimicStictBT2 should be used,. https://github.com/COMBINE-lab/salmon/issues/399",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/405
https://github.com/COMBINE-lab/salmon/issues/405:698,Security,validat,validateMappings,698,"I have been using salmon index command as: ; `salmon index --type quasi -k 31 --perfectHash `. If I am interested in using the SA method, my understanding from the command line help text `salmon index -h ` is that _perfectHash is only for the quasi method_ and cannot be used if I am using the SA method. Is my understanding correct?. Also, [the online documentation](https://salmon.readthedocs.io/en/latest/salmon.html) does not pull out any mention of the `--perfectHash` argument. Another question/suggestion for the online documentation page - [as referenced in this issue](https://github.com/COMBINE-lab/salmon/issues/399), on first glance, it is confusing as to whether one has to combine ""--validateMappings"" with ""--mimicBT2"" or ""--mimicStrictBT2"". I know @rob-p has addressed it in the github issue tracker, but it would be better to update the online documentation to clarify this **and also give scenarios** in which mimicBT2 or mimicStictBT2 should be used,. https://github.com/COMBINE-lab/salmon/issues/399",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/405
https://github.com/COMBINE-lab/salmon/issues/407:57,Availability,error,error,57,"alevin (single-cell mode). **Describe the bug**; Getting error "" Size of the feature file doesn't match"" in the log file while starting to make feature Matrix. Latest version of Salmon was used",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/407
https://github.com/COMBINE-lab/salmon/issues/407:112,Testability,log,log,112,"alevin (single-cell mode). **Describe the bug**; Getting error "" Size of the feature file doesn't match"" in the log file while starting to make feature Matrix. Latest version of Salmon was used",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/407
https://github.com/COMBINE-lab/salmon/issues/408:638,Availability,error,error,638,"Hello! I am having some difficulty quantifying RNAseq data with salmon in mapping-based mode. I have been struggling with this for a few days and would be very grateful for any advice on how to move forward. Thank you in advance. Here is my command:; ```; #!/bin/bash -l ; #SBATCH -J male_salmon_map; #SBATCH -t 700:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/ve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:1955,Availability,Error,Error,1955,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:3566,Availability,Error,Error,3566,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:5112,Availability,Error,Error,5112," salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:6787,Availability,Error,Error,6787,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:8398,Availability,Error,Error,8398,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:10009,Availability,Error,Error,10009,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:11620,Availability,Error,Error,11620,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:13231,Availability,Error,Error,13231,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Plea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:14164,Availability,Error,Error,14164,"tLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:16453,Availability,Error,Error,16453,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:17926,Availability,Error,Error,17926,"7-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.269] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:1651,Deployability,release,release,1651,"r message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:3262,Deployability,release,release,3262,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:4873,Deployability,release,release,4873,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ ma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:6483,Deployability,release,release,6483,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:8094,Deployability,release,release,8094,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:9705,Deployability,release,release,9705,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:11316,Deployability,release,release,11316,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:12927,Deployability,release,release,12927,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:14774,Deployability,release,release,14774,"am ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:16149,Deployability,release,release,16149,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:17760,Deployability,release,release,17760,"7-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.269] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:644,Integrability,message,message,644,"Hello! I am having some difficulty quantifying RNAseq data with salmon in mapping-based mode. I have been struggling with this for a few days and would be very grateful for any advice on how to move forward. Thank you in advance. Here is my command:; ```; #!/bin/bash -l ; #SBATCH -J male_salmon_map; #SBATCH -t 700:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/ve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:577,Security,validat,validateMappings,577,"Hello! I am having some difficulty quantifying RNAseq data with salmon in mapping-based mode. I have been struggling with this for a few days and would be very grateful for any advice on how to move forward. Thank you in advance. Here is my command:; ```; #!/bin/bash -l ; #SBATCH -J male_salmon_map; #SBATCH -t 700:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/ve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:1368,Security,validat,validateMappings,1368,"us-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:1403,Security,validat,validation,1403,"/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:1561,Security,validat,validation,1561,"dateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:1760,Security,validat,validateMappings,1760,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:2233,Security,validat,validateMappings,2233,"e ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:2979,Security,validat,validateMappings,2979,"he index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:3014,Security,validat,validation,3014,"salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:3172,Security,validat,validation,3172,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:3371,Security,validat,validateMappings,3371,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:3844,Security,validat,validateMappings,3844,"e ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:4590,Security,validat,validateMappings,4590,"he index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:4625,Security,validat,validation,4625,"salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:4783,Security,validat,validation,4783,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:4982,Security,validat,validateMappings,4982,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:5454,Security,validat,validateMappings,5454,"be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:6200,Security,validat,validateMappings,6200,"m to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:6235,Security,validat,validation,6235," salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:6393,Security,validat,validation,6393,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:6592,Security,validat,validateMappings,6592,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:7065,Security,validat,validateMappings,7065,"e ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:7811,Security,validat,validateMappings,7811,"he index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:7846,Security,validat,validation,7846,"salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:8004,Security,validat,validation,8004,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:8203,Security,validat,validateMappings,8203,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:8676,Security,validat,validateMappings,8676,"e ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:9422,Security,validat,validateMappings,9422,"he index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:9457,Security,validat,validation,9457,"salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:9615,Security,validat,validation,9615,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:9814,Security,validat,validateMappings,9814,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:10287,Security,validat,validateMappings,10287,"e ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:11033,Security,validat,validateMappings,11033,"he index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:11068,Security,validat,validation,11068,"salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:11226,Security,validat,validation,11226,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:11425,Security,validat,validateMappings,11425,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:11898,Security,validat,validateMappings,11898,"e ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:12644,Security,validat,validateMappings,12644,"he index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:12679,Security,validat,validation,12679,"salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:12837,Security,validat,validation,12837,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:13036,Security,validat,validateMappings,13036,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:13509,Security,validat,validateMappings,13509,"e ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping va",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:14491,Security,validat,validateMappings,14491,"12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => {",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:14526,Security,validat,validation,14526,"05_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Log",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:14684,Security,validat,validation,14684,"n of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:14883,Security,validat,validateMappings,14883," => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:15120,Security,validat,validateMappings,15120,"e ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:15866,Security,validat,validateMappings,15866,"ng on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:15901,Security,validat,validation,15901,"] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:16059,Security,validat,validation,16059,"rmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:16258,Security,validat,validateMappings,16258,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:16731,Security,validat,validateMappings,16731,"e ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:17477,Security,validat,validateMappings,17477,"7-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.269] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:17512,Security,validat,validation,17512,"7-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.269] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:17670,Security,validat,validation,17670,"7-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.269] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:17869,Security,validat,validateMappings,17869,"7-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.269] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:18342,Security,validat,validateMappings,18342,"7-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.269] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:1094,Testability,Log,Logs,1094,"een struggling with this for a few days and would be very grateful for any advice on how to move forward. Thank you in advance. Here is my command:; ```; #!/bin/bash -l ; #SBATCH -J male_salmon_map; #SBATCH -t 700:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:1125,Testability,log,logs,1125,"w days and would be very grateful for any advice on how to move forward. Thank you in advance. Here is my command:; ```; #!/bin/bash -l ; #SBATCH -J male_salmon_map; #SBATCH -t 700:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:1722,Testability,test,testing,1722,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:2705,Testability,Log,Logs,2705,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:2736,Testability,log,logs,2736,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:3333,Testability,test,testing,3333,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:4316,Testability,Log,Logs,4316,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:4347,Testability,log,logs,4347,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] Ther",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:4944,Testability,test,testing,4944,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:5926,Testability,Log,Logs,5926,"his (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:5957,Testability,log,logs,5957,"ted data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:6554,Testability,test,testing,6554,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:7537,Testability,Log,Logs,7537,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:7568,Testability,log,logs,7568,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:8165,Testability,test,testing,8165,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:9148,Testability,Log,Logs,9148,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:9179,Testability,log,logs,9179,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:9776,Testability,test,testing,9776,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:10759,Testability,Log,Logs,10759,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:10790,Testability,log,logs,10790,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:11387,Testability,test,testing,11387,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:12370,Testability,Log,Logs,12370,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:12401,Testability,log,logs,12401,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:12998,Testability,test,testing,12998,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:13981,Testability,Log,Logs,13981,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read libra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:14012,Testability,log,logs,14012,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.08",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:14845,Testability,test,testing,14845," => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:15592,Testability,Log,Logs,15592,"apping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was inv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:15623,Testability,log,logs,15623,"rease in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:16220,Testability,test,testing,16220,"ormation.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:17203,Testability,Log,Logs,17203,"is (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read libra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:17234,Testability,log,logs,17234,"ed data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.26",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/408:17831,Testability,test,testing,17831,"7-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.269] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408
https://github.com/COMBINE-lab/salmon/issues/414:1249,Availability,fault,fault,1249,"**The bug is primarily related to salmon (bulk mode)**; **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v0.14.1; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { U }; # [ alignments ] => { Analysis/Quantification/OJ33.sam }; # [ targets ] => { Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas }; # [ output ] => { Analysis/Quantification/OJ33 }; # [ noErrorModel ] => { }; # [ writeUnmappedNames ] => { }; Logs will be written to Analysis/Quantification/OJ33/logs; [2019-08-13 11:13:43.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2019-08-13 11:13:43.563] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Analysis/Quantification/OJ33.sam"", fasta = ""Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas"" . . .done; [2019-08-13 11:13:46.239] [jointLog] [info] replaced 1 non-ACGT nucleotides with random nucleotides. processed 2000000 reads in current roundSegmentation fault (core dumped); ```; # To Reproduce; **Which version of salmon was used?**; salmon 0.14.1; **How was salmon installed (compiled, downloaded executable, through bioconda)?**; downloaded executable; **Which reference was used?**; custom, transcriptom derived from nanopore long-reads using Pinfish pipeline; **Which read files were used?**; SAM file returned by minimap2 (nanopore long reads); **Which which program options were used?**; `salmon quant -l U -a Analysis/Quantification/OJ33.sam -t Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas -o Analysis/Quantification/OJ33 --noErrorModel --writeUnmappedNames > Analysis/Quantification/OJ33.log`; **Desktop (please complete the following information):**; x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414
https://github.com/COMBINE-lab/salmon/issues/414:1383,Availability,down,downloaded,1383,"**The bug is primarily related to salmon (bulk mode)**; **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v0.14.1; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { U }; # [ alignments ] => { Analysis/Quantification/OJ33.sam }; # [ targets ] => { Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas }; # [ output ] => { Analysis/Quantification/OJ33 }; # [ noErrorModel ] => { }; # [ writeUnmappedNames ] => { }; Logs will be written to Analysis/Quantification/OJ33/logs; [2019-08-13 11:13:43.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2019-08-13 11:13:43.563] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Analysis/Quantification/OJ33.sam"", fasta = ""Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas"" . . .done; [2019-08-13 11:13:46.239] [jointLog] [info] replaced 1 non-ACGT nucleotides with random nucleotides. processed 2000000 reads in current roundSegmentation fault (core dumped); ```; # To Reproduce; **Which version of salmon was used?**; salmon 0.14.1; **How was salmon installed (compiled, downloaded executable, through bioconda)?**; downloaded executable; **Which reference was used?**; custom, transcriptom derived from nanopore long-reads using Pinfish pipeline; **Which read files were used?**; SAM file returned by minimap2 (nanopore long reads); **Which which program options were used?**; `salmon quant -l U -a Analysis/Quantification/OJ33.sam -t Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas -o Analysis/Quantification/OJ33 --noErrorModel --writeUnmappedNames > Analysis/Quantification/OJ33.log`; **Desktop (please complete the following information):**; x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414
https://github.com/COMBINE-lab/salmon/issues/414:1428,Availability,down,downloaded,1428,"**The bug is primarily related to salmon (bulk mode)**; **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v0.14.1; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { U }; # [ alignments ] => { Analysis/Quantification/OJ33.sam }; # [ targets ] => { Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas }; # [ output ] => { Analysis/Quantification/OJ33 }; # [ noErrorModel ] => { }; # [ writeUnmappedNames ] => { }; Logs will be written to Analysis/Quantification/OJ33/logs; [2019-08-13 11:13:43.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2019-08-13 11:13:43.563] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Analysis/Quantification/OJ33.sam"", fasta = ""Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas"" . . .done; [2019-08-13 11:13:46.239] [jointLog] [info] replaced 1 non-ACGT nucleotides with random nucleotides. processed 2000000 reads in current roundSegmentation fault (core dumped); ```; # To Reproduce; **Which version of salmon was used?**; salmon 0.14.1; **How was salmon installed (compiled, downloaded executable, through bioconda)?**; downloaded executable; **Which reference was used?**; custom, transcriptom derived from nanopore long-reads using Pinfish pipeline; **Which read files were used?**; SAM file returned by minimap2 (nanopore long reads); **Which which program options were used?**; `salmon quant -l U -a Analysis/Quantification/OJ33.sam -t Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas -o Analysis/Quantification/OJ33 --noErrorModel --writeUnmappedNames > Analysis/Quantification/OJ33.log`; **Desktop (please complete the following information):**; x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414
https://github.com/COMBINE-lab/salmon/issues/414:1362,Deployability,install,installed,1362,"**The bug is primarily related to salmon (bulk mode)**; **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v0.14.1; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { U }; # [ alignments ] => { Analysis/Quantification/OJ33.sam }; # [ targets ] => { Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas }; # [ output ] => { Analysis/Quantification/OJ33 }; # [ noErrorModel ] => { }; # [ writeUnmappedNames ] => { }; Logs will be written to Analysis/Quantification/OJ33/logs; [2019-08-13 11:13:43.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2019-08-13 11:13:43.563] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Analysis/Quantification/OJ33.sam"", fasta = ""Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas"" . . .done; [2019-08-13 11:13:46.239] [jointLog] [info] replaced 1 non-ACGT nucleotides with random nucleotides. processed 2000000 reads in current roundSegmentation fault (core dumped); ```; # To Reproduce; **Which version of salmon was used?**; salmon 0.14.1; **How was salmon installed (compiled, downloaded executable, through bioconda)?**; downloaded executable; **Which reference was used?**; custom, transcriptom derived from nanopore long-reads using Pinfish pipeline; **Which read files were used?**; SAM file returned by minimap2 (nanopore long reads); **Which which program options were used?**; `salmon quant -l U -a Analysis/Quantification/OJ33.sam -t Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas -o Analysis/Quantification/OJ33 --noErrorModel --writeUnmappedNames > Analysis/Quantification/OJ33.log`; **Desktop (please complete the following information):**; x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414
https://github.com/COMBINE-lab/salmon/issues/414:1550,Deployability,pipeline,pipeline,1550,"**The bug is primarily related to salmon (bulk mode)**; **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v0.14.1; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { U }; # [ alignments ] => { Analysis/Quantification/OJ33.sam }; # [ targets ] => { Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas }; # [ output ] => { Analysis/Quantification/OJ33 }; # [ noErrorModel ] => { }; # [ writeUnmappedNames ] => { }; Logs will be written to Analysis/Quantification/OJ33/logs; [2019-08-13 11:13:43.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2019-08-13 11:13:43.563] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Analysis/Quantification/OJ33.sam"", fasta = ""Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas"" . . .done; [2019-08-13 11:13:46.239] [jointLog] [info] replaced 1 non-ACGT nucleotides with random nucleotides. processed 2000000 reads in current roundSegmentation fault (core dumped); ```; # To Reproduce; **Which version of salmon was used?**; salmon 0.14.1; **How was salmon installed (compiled, downloaded executable, through bioconda)?**; downloaded executable; **Which reference was used?**; custom, transcriptom derived from nanopore long-reads using Pinfish pipeline; **Which read files were used?**; SAM file returned by minimap2 (nanopore long reads); **Which which program options were used?**; `salmon quant -l U -a Analysis/Quantification/OJ33.sam -t Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas -o Analysis/Quantification/OJ33 --noErrorModel --writeUnmappedNames > Analysis/Quantification/OJ33.log`; **Desktop (please complete the following information):**; x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414
https://github.com/COMBINE-lab/salmon/issues/414:506,Testability,Log,Logs,506,"**The bug is primarily related to salmon (bulk mode)**; **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v0.14.1; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { U }; # [ alignments ] => { Analysis/Quantification/OJ33.sam }; # [ targets ] => { Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas }; # [ output ] => { Analysis/Quantification/OJ33 }; # [ noErrorModel ] => { }; # [ writeUnmappedNames ] => { }; Logs will be written to Analysis/Quantification/OJ33/logs; [2019-08-13 11:13:43.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2019-08-13 11:13:43.563] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Analysis/Quantification/OJ33.sam"", fasta = ""Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas"" . . .done; [2019-08-13 11:13:46.239] [jointLog] [info] replaced 1 non-ACGT nucleotides with random nucleotides. processed 2000000 reads in current roundSegmentation fault (core dumped); ```; # To Reproduce; **Which version of salmon was used?**; salmon 0.14.1; **How was salmon installed (compiled, downloaded executable, through bioconda)?**; downloaded executable; **Which reference was used?**; custom, transcriptom derived from nanopore long-reads using Pinfish pipeline; **Which read files were used?**; SAM file returned by minimap2 (nanopore long reads); **Which which program options were used?**; `salmon quant -l U -a Analysis/Quantification/OJ33.sam -t Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas -o Analysis/Quantification/OJ33 --noErrorModel --writeUnmappedNames > Analysis/Quantification/OJ33.log`; **Desktop (please complete the following information):**; x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414
https://github.com/COMBINE-lab/salmon/issues/414:559,Testability,log,logs,559,"**The bug is primarily related to salmon (bulk mode)**; **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v0.14.1; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { U }; # [ alignments ] => { Analysis/Quantification/OJ33.sam }; # [ targets ] => { Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas }; # [ output ] => { Analysis/Quantification/OJ33 }; # [ noErrorModel ] => { }; # [ writeUnmappedNames ] => { }; Logs will be written to Analysis/Quantification/OJ33/logs; [2019-08-13 11:13:43.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2019-08-13 11:13:43.563] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Analysis/Quantification/OJ33.sam"", fasta = ""Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas"" . . .done; [2019-08-13 11:13:46.239] [jointLog] [info] replaced 1 non-ACGT nucleotides with random nucleotides. processed 2000000 reads in current roundSegmentation fault (core dumped); ```; # To Reproduce; **Which version of salmon was used?**; salmon 0.14.1; **How was salmon installed (compiled, downloaded executable, through bioconda)?**; downloaded executable; **Which reference was used?**; custom, transcriptom derived from nanopore long-reads using Pinfish pipeline; **Which read files were used?**; SAM file returned by minimap2 (nanopore long reads); **Which which program options were used?**; `salmon quant -l U -a Analysis/Quantification/OJ33.sam -t Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas -o Analysis/Quantification/OJ33 --noErrorModel --writeUnmappedNames > Analysis/Quantification/OJ33.log`; **Desktop (please complete the following information):**; x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414
https://github.com/COMBINE-lab/salmon/issues/414:1911,Testability,log,log,1911,"**The bug is primarily related to salmon (bulk mode)**; **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v0.14.1; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { U }; # [ alignments ] => { Analysis/Quantification/OJ33.sam }; # [ targets ] => { Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas }; # [ output ] => { Analysis/Quantification/OJ33 }; # [ noErrorModel ] => { }; # [ writeUnmappedNames ] => { }; Logs will be written to Analysis/Quantification/OJ33/logs; [2019-08-13 11:13:43.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2019-08-13 11:13:43.563] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Analysis/Quantification/OJ33.sam"", fasta = ""Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas"" . . .done; [2019-08-13 11:13:46.239] [jointLog] [info] replaced 1 non-ACGT nucleotides with random nucleotides. processed 2000000 reads in current roundSegmentation fault (core dumped); ```; # To Reproduce; **Which version of salmon was used?**; salmon 0.14.1; **How was salmon installed (compiled, downloaded executable, through bioconda)?**; downloaded executable; **Which reference was used?**; custom, transcriptom derived from nanopore long-reads using Pinfish pipeline; **Which read files were used?**; SAM file returned by minimap2 (nanopore long reads); **Which which program options were used?**; `salmon quant -l U -a Analysis/Quantification/OJ33.sam -t Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas -o Analysis/Quantification/OJ33 --noErrorModel --writeUnmappedNames > Analysis/Quantification/OJ33.log`; **Desktop (please complete the following information):**; x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414
https://github.com/COMBINE-lab/salmon/issues/415:371,Performance,load,load,371,"Hi , Thank you very much for check the problem in my results. I used the salmon11.3 and salmon14.1 to analyze my data, the tpm value of the salmon4.1 is much smaller than the data got from salmon11.3 using the same raw data. ; [Lei_Tpm_vs_Jack_index_tpm.pdf](https://github.com/COMBINE-lab/salmon/files/3497212/Lei_Tpm_vs_Jack_index_tpm.pdf); my code as follow: . module load salmon/0.11.3 ; salmon index -t gencode.vM16.transcripts.fa -i 0.11.3_Lei.ind -k 31 --gencode; salmon quant -p 10 --numBootstraps 200 --gcBias --seqBias -l A -i 0.11.3_Lei.ind -1 read1.fq.gz -2 read2.fq.gz -o vM16 -g gencode.vM16.annotation.gtf. module load salmon/0.14.1 || exit 1; salmon index -t gencode.vM16.transcripts.fa -i 14.1_Lei.ind -d decoys.txt -k 31 --gencode; salmon quant -p 10 --numBootstraps 200 --gcBias --seqBias -l A -i 14.1_Lei.ind -1 read1.fq.gz -2 read2.fq.gz -o vM16_1 -g gencode.vM16.annotation.gtf. I do not understand if where is the problem in my analyze? Thank you very much.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/415
https://github.com/COMBINE-lab/salmon/issues/415:629,Performance,load,load,629,"Hi , Thank you very much for check the problem in my results. I used the salmon11.3 and salmon14.1 to analyze my data, the tpm value of the salmon4.1 is much smaller than the data got from salmon11.3 using the same raw data. ; [Lei_Tpm_vs_Jack_index_tpm.pdf](https://github.com/COMBINE-lab/salmon/files/3497212/Lei_Tpm_vs_Jack_index_tpm.pdf); my code as follow: . module load salmon/0.11.3 ; salmon index -t gencode.vM16.transcripts.fa -i 0.11.3_Lei.ind -k 31 --gencode; salmon quant -p 10 --numBootstraps 200 --gcBias --seqBias -l A -i 0.11.3_Lei.ind -1 read1.fq.gz -2 read2.fq.gz -o vM16 -g gencode.vM16.annotation.gtf. module load salmon/0.14.1 || exit 1; salmon index -t gencode.vM16.transcripts.fa -i 14.1_Lei.ind -d decoys.txt -k 31 --gencode; salmon quant -p 10 --numBootstraps 200 --gcBias --seqBias -l A -i 14.1_Lei.ind -1 read1.fq.gz -2 read2.fq.gz -o vM16_1 -g gencode.vM16.annotation.gtf. I do not understand if where is the problem in my analyze? Thank you very much.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/415
https://github.com/COMBINE-lab/salmon/issues/416:331,Integrability,protocol,protocol,331,"Dear alevin team,. I am a developer of Quartz-Seq2 ([Sasagawa Y. et al. Genome Biol. 2018](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-018-1407-3); [Mereu E. et al. bioRxiv](https://www.biorxiv.org/content/10.1101/630087v1)), one of 3’ tagged-end single-cell RNA sequencing. Could you add `Rule` of Quartz-Seq2 protocol to SingleCellProtocols.hpp?. ```; struct QuartzSeq2v31 : Rule{; //Quartz-Seq2 v3.1 starts from 5 end with 14 length; //barcode and 8 length umi & iupac can be; //changed; QuartzSeq2v31(): Rule(14, 8, BarcodeEnd::FIVE, 268435456){}; };. struct QuartzSeq2v32 : Rule{; //Quartz-Seq2 v3.2 starts from 5 end with 15 length; //barcode and 8 length umi & iupac can be; //changed; QuartzSeq2v32(): Rule(15, 8, BarcodeEnd::FIVE, 1073741824){}; };; ```. Best,; Itoshi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/416
https://github.com/COMBINE-lab/salmon/issues/418:99,Availability,error,errors,99,"Hi,; I was just trying to update my installation of Salmon last night, and encountered a series of errors in compilation:; ```; .../salmon/include/SalmonIndex.hpp:254:43: error: ‘class RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/418:171,Availability,error,error,171,"Hi,; I was just trying to update my installation of Salmon last night, and encountered a series of errors in compilation:; ```; .../salmon/include/SalmonIndex.hpp:254:43: error: ‘class RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/418:405,Availability,error,error,405,"Hi,; I was just trying to update my installation of Salmon last night, and encountered a series of errors in compilation:; ```; .../salmon/include/SalmonIndex.hpp:254:43: error: ‘class RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/418:796,Availability,error,error,796,"Hi,; I was just trying to update my installation of Salmon last night, and encountered a series of errors in compilation:; ```; .../salmon/include/SalmonIndex.hpp:254:43: error: ‘class RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/418:1020,Availability,error,error,1020,"ss RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481dac12ac8cffd6d5d924699c5ad7e04.). Adjusting the fetchRapMap.sh script to use the SVER and EXPECTED_SHA256SUM variables back to their values in commit COMBINE-lab/salmon@cf07385f2164698",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/418:1433,Availability,down,downloaded,1433,"p:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481dac12ac8cffd6d5d924699c5ad7e04.). Adjusting the fetchRapMap.sh script to use the SVER and EXPECTED_SHA256SUM variables back to their values in commit COMBINE-lab/salmon@cf07385f2164698eda5b9869dd4865fec747840d, then re-running the script, and recompiling produces no errors, and the tests all run. Hope that helps, and thanks for all your work in developing Salmon!. Best regards,; Patrick Reilly",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/418:2266,Availability,error,errors,2266,"p:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481dac12ac8cffd6d5d924699c5ad7e04.). Adjusting the fetchRapMap.sh script to use the SVER and EXPECTED_SHA256SUM variables back to their values in commit COMBINE-lab/salmon@cf07385f2164698eda5b9869dd4865fec747840d, then re-running the script, and recompiling produces no errors, and the tests all run. Hope that helps, and thanks for all your work in developing Salmon!. Best regards,; Patrick Reilly",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/418:26,Deployability,update,update,26,"Hi,; I was just trying to update my installation of Salmon last night, and encountered a series of errors in compilation:; ```; .../salmon/include/SalmonIndex.hpp:254:43: error: ‘class RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/418:36,Deployability,install,installation,36,"Hi,; I was just trying to update my installation of Salmon last night, and encountered a series of errors in compilation:; ```; .../salmon/include/SalmonIndex.hpp:254:43: error: ‘class RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/418:1458,Deployability,release,release,1458,"p:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481dac12ac8cffd6d5d924699c5ad7e04.). Adjusting the fetchRapMap.sh script to use the SVER and EXPECTED_SHA256SUM variables back to their values in commit COMBINE-lab/salmon@cf07385f2164698eda5b9869dd4865fec747840d, then re-running the script, and recompiling produces no errors, and the tests all run. Hope that helps, and thanks for all your work in developing Salmon!. Best regards,; Patrick Reilly",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/418:1838,Deployability,release,releases,1838,"p:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481dac12ac8cffd6d5d924699c5ad7e04.). Adjusting the fetchRapMap.sh script to use the SVER and EXPECTED_SHA256SUM variables back to their values in commit COMBINE-lab/salmon@cf07385f2164698eda5b9869dd4865fec747840d, then re-running the script, and recompiling produces no errors, and the tests all run. Hope that helps, and thanks for all your work in developing Salmon!. Best regards,; Patrick Reilly",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/418:1926,Deployability,release,releases,1926,"p:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481dac12ac8cffd6d5d924699c5ad7e04.). Adjusting the fetchRapMap.sh script to use the SVER and EXPECTED_SHA256SUM variables back to their values in commit COMBINE-lab/salmon@cf07385f2164698eda5b9869dd4865fec747840d, then re-running the script, and recompiling produces no errors, and the tests all run. Hope that helps, and thanks for all your work in developing Salmon!. Best regards,; Patrick Reilly",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/418:2108,Modifiability,variab,variables,2108,"p:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481dac12ac8cffd6d5d924699c5ad7e04.). Adjusting the fetchRapMap.sh script to use the SVER and EXPECTED_SHA256SUM variables back to their values in commit COMBINE-lab/salmon@cf07385f2164698eda5b9869dd4865fec747840d, then re-running the script, and recompiling produces no errors, and the tests all run. Hope that helps, and thanks for all your work in developing Salmon!. Best regards,; Patrick Reilly",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/418:2282,Testability,test,tests,2282,"p:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481dac12ac8cffd6d5d924699c5ad7e04.). Adjusting the fetchRapMap.sh script to use the SVER and EXPECTED_SHA256SUM variables back to their values in commit COMBINE-lab/salmon@cf07385f2164698eda5b9869dd4865fec747840d, then re-running the script, and recompiling produces no errors, and the tests all run. Hope that helps, and thanks for all your work in developing Salmon!. Best regards,; Patrick Reilly",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418
https://github.com/COMBINE-lab/salmon/issues/419:15,Availability,error,error,15,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419
https://github.com/COMBINE-lab/salmon/issues/419:38,Availability,error,error,38,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419
https://github.com/COMBINE-lab/salmon/issues/419:944,Availability,fault,fault,944,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419
https://github.com/COMBINE-lab/salmon/issues/419:59,Deployability,RELEASE,RELEASE,59,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419
https://github.com/COMBINE-lab/salmon/issues/419:80,Deployability,RELEASE,RELEASE,80,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419
https://github.com/COMBINE-lab/salmon/issues/419:140,Deployability,install,installed,140,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419
https://github.com/COMBINE-lab/salmon/issues/419:725,Performance,load,loading,725,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419
https://github.com/COMBINE-lab/salmon/issues/419:789,Performance,load,loading,789,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419
https://github.com/COMBINE-lab/salmon/issues/419:284,Security,validat,validateMappings,284,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419
https://github.com/COMBINE-lab/salmon/issues/419:733,Security,hash,hash,733,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419
https://github.com/COMBINE-lab/salmon/issues/420:99,Availability,error,error,99,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:1012,Availability,avail,available,1012,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:772,Deployability,UPGRADE,UPGRADE,772,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:105,Integrability,message,message,105,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:181,Integrability,message,message,181,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:443,Testability,test,test,443,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:449,Testability,test,test,449,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:506,Testability,test,test,506,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:517,Testability,test,test,517,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:591,Testability,test,test,591,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:730,Testability,test,test,730,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:741,Testability,test,test,741,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:809,Testability,test,test,809,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:948,Testability,test,test,948,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/issues/420:959,Testability,test,test,959,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420
https://github.com/COMBINE-lab/salmon/pull/421:0,Deployability,Update,Updated,0,Updated documentation to explicitly show --chromiumV3 option,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/421
https://github.com/COMBINE-lab/salmon/issues/422:923,Availability,down,downloaded,923,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I used the default parameters to run salmon on mouse sample. But I got the warning:. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file:`. **To Reproduce**; `""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 10869138,; ""num_assigned_fragments"": 10869138,; ""num_frags_with_concordant_consistent_mappings"": 10212463,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1088473,; ""strand_mapping_bias"": 0.5258466052704426,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4842274,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 5370189,; ""SF"": 593930,; ""SR"": 494543,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0`. Specifically, please provide at least the following information:. * Which version of salmon was used? ; ""salmon_version"": ""0.14.1"". * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda. * Which reference (e.g. transcriptome) was used?; gencode mouse VM22. * Which read files were used?. Downloaded from sra（Just ordinary Illumina reads). * Which which program options were used?. ```; salmon quant -i $mm10_whole_index -l A \; -1 $fastq1 \; -2 $fastq2 \; -p 20 --validateMappings -o $output_whole; ```. **Expected behavior**; Why Strand bias is very high?. **Desktop (please complete the following information):**; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/422
https://github.com/COMBINE-lab/salmon/issues/422:1076,Availability,Down,Downloaded,1076,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I used the default parameters to run salmon on mouse sample. But I got the warning:. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file:`. **To Reproduce**; `""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 10869138,; ""num_assigned_fragments"": 10869138,; ""num_frags_with_concordant_consistent_mappings"": 10212463,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1088473,; ""strand_mapping_bias"": 0.5258466052704426,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4842274,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 5370189,; ""SF"": 593930,; ""SR"": 494543,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0`. Specifically, please provide at least the following information:. * Which version of salmon was used? ; ""salmon_version"": ""0.14.1"". * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda. * Which reference (e.g. transcriptome) was used?; gencode mouse VM22. * Which read files were used?. Downloaded from sra（Just ordinary Illumina reads). * Which which program options were used?. ```; salmon quant -i $mm10_whole_index -l A \; -1 $fastq1 \; -2 $fastq2 \; -p 20 --validateMappings -o $output_whole; ```. **Expected behavior**; Why Strand bias is very high?. **Desktop (please complete the following information):**; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/422
https://github.com/COMBINE-lab/salmon/issues/422:902,Deployability,install,installed,902,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I used the default parameters to run salmon on mouse sample. But I got the warning:. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file:`. **To Reproduce**; `""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 10869138,; ""num_assigned_fragments"": 10869138,; ""num_frags_with_concordant_consistent_mappings"": 10212463,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1088473,; ""strand_mapping_bias"": 0.5258466052704426,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4842274,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 5370189,; ""SF"": 593930,; ""SR"": 494543,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0`. Specifically, please provide at least the following information:. * Which version of salmon was used? ; ""salmon_version"": ""0.14.1"". * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda. * Which reference (e.g. transcriptome) was used?; gencode mouse VM22. * Which read files were used?. Downloaded from sra（Just ordinary Illumina reads). * Which which program options were used?. ```; salmon quant -i $mm10_whole_index -l A \; -1 $fastq1 \; -2 $fastq2 \; -p 20 --validateMappings -o $output_whole; ```. **Expected behavior**; Why Strand bias is very high?. **Desktop (please complete the following information):**; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/422
https://github.com/COMBINE-lab/salmon/issues/422:259,Integrability,protocol,protocol,259,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I used the default parameters to run salmon on mouse sample. But I got the warning:. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file:`. **To Reproduce**; `""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 10869138,; ""num_assigned_fragments"": 10869138,; ""num_frags_with_concordant_consistent_mappings"": 10212463,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1088473,; ""strand_mapping_bias"": 0.5258466052704426,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4842274,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 5370189,; ""SF"": 593930,; ""SR"": 494543,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0`. Specifically, please provide at least the following information:. * Which version of salmon was used? ; ""salmon_version"": ""0.14.1"". * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda. * Which reference (e.g. transcriptome) was used?; gencode mouse VM22. * Which read files were used?. Downloaded from sra（Just ordinary Illumina reads). * Which which program options were used?. ```; salmon quant -i $mm10_whole_index -l A \; -1 $fastq1 \; -2 $fastq2 \; -p 20 --validateMappings -o $output_whole; ```. **Expected behavior**; Why Strand bias is very high?. **Desktop (please complete the following information):**; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/422
https://github.com/COMBINE-lab/salmon/issues/422:202,Safety,Detect,Detected,202,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I used the default parameters to run salmon on mouse sample. But I got the warning:. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file:`. **To Reproduce**; `""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 10869138,; ""num_assigned_fragments"": 10869138,; ""num_frags_with_concordant_consistent_mappings"": 10212463,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1088473,; ""strand_mapping_bias"": 0.5258466052704426,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4842274,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 5370189,; ""SF"": 593930,; ""SR"": 494543,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0`. Specifically, please provide at least the following information:. * Which version of salmon was used? ; ""salmon_version"": ""0.14.1"". * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda. * Which reference (e.g. transcriptome) was used?; gencode mouse VM22. * Which read files were used?. Downloaded from sra（Just ordinary Illumina reads). * Which which program options were used?. ```; salmon quant -i $mm10_whole_index -l A \; -1 $fastq1 \; -2 $fastq2 \; -p 20 --validateMappings -o $output_whole; ```. **Expected behavior**; Why Strand bias is very high?. **Desktop (please complete the following information):**; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/422
https://github.com/COMBINE-lab/salmon/issues/422:1252,Security,validat,validateMappings,1252,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I used the default parameters to run salmon on mouse sample. But I got the warning:. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file:`. **To Reproduce**; `""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 10869138,; ""num_assigned_fragments"": 10869138,; ""num_frags_with_concordant_consistent_mappings"": 10212463,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1088473,; ""strand_mapping_bias"": 0.5258466052704426,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4842274,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 5370189,; ""SF"": 593930,; ""SR"": 494543,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0`. Specifically, please provide at least the following information:. * Which version of salmon was used? ; ""salmon_version"": ""0.14.1"". * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda. * Which reference (e.g. transcriptome) was used?; gencode mouse VM22. * Which read files were used?. Downloaded from sra（Just ordinary Illumina reads). * Which which program options were used?. ```; salmon quant -i $mm10_whole_index -l A \; -1 $fastq1 \; -2 $fastq2 \; -p 20 --validateMappings -o $output_whole; ```. **Expected behavior**; Why Strand bias is very high?. **Desktop (please complete the following information):**; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/422
https://github.com/COMBINE-lab/salmon/issues/423:275,Availability,error,error,275,"I am using Metawrap`https://github.com/bxlab/metaWRAP/blob/master/Usage_tutorial.md` to analyze bins abundance to the fwd and rev paired reads. MetaWrap uses Salmon and its telling me to upgrade Salmon but since it is within Metawrap, I am unsure how to do this. This is the error I receive: ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; salmon v0.13.1; ===============. I downloaded the tar file for salmon but because it is used within MetaWrap I'm unsure the linux terminal line to update the salmon. Thanks,; Katie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423
https://github.com/COMBINE-lab/salmon/issues/423:414,Availability,avail,available,414,"I am using Metawrap`https://github.com/bxlab/metaWRAP/blob/master/Usage_tutorial.md` to analyze bins abundance to the fwd and rev paired reads. MetaWrap uses Salmon and its telling me to upgrade Salmon but since it is within Metawrap, I am unsure how to do this. This is the error I receive: ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; salmon v0.13.1; ===============. I downloaded the tar file for salmon but because it is used within MetaWrap I'm unsure the linux terminal line to update the salmon. Thanks,; Katie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423
https://github.com/COMBINE-lab/salmon/issues/423:456,Availability,avail,available,456,"I am using Metawrap`https://github.com/bxlab/metaWRAP/blob/master/Usage_tutorial.md` to analyze bins abundance to the fwd and rev paired reads. MetaWrap uses Salmon and its telling me to upgrade Salmon but since it is within Metawrap, I am unsure how to do this. This is the error I receive: ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; salmon v0.13.1; ===============. I downloaded the tar file for salmon but because it is used within MetaWrap I'm unsure the linux terminal line to update the salmon. Thanks,; Katie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423
https://github.com/COMBINE-lab/salmon/issues/423:788,Availability,down,downloaded,788,"I am using Metawrap`https://github.com/bxlab/metaWRAP/blob/master/Usage_tutorial.md` to analyze bins abundance to the fwd and rev paired reads. MetaWrap uses Salmon and its telling me to upgrade Salmon but since it is within Metawrap, I am unsure how to do this. This is the error I receive: ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; salmon v0.13.1; ===============. I downloaded the tar file for salmon but because it is used within MetaWrap I'm unsure the linux terminal line to update the salmon. Thanks,; Katie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423
https://github.com/COMBINE-lab/salmon/issues/423:187,Deployability,upgrade,upgrade,187,"I am using Metawrap`https://github.com/bxlab/metaWRAP/blob/master/Usage_tutorial.md` to analyze bins abundance to the fwd and rev paired reads. MetaWrap uses Salmon and its telling me to upgrade Salmon but since it is within Metawrap, I am unsure how to do this. This is the error I receive: ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; salmon v0.13.1; ===============. I downloaded the tar file for salmon but because it is used within MetaWrap I'm unsure the linux terminal line to update the salmon. Thanks,; Katie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423
https://github.com/COMBINE-lab/salmon/issues/423:319,Deployability,UPGRADE,UPGRADE,319,"I am using Metawrap`https://github.com/bxlab/metaWRAP/blob/master/Usage_tutorial.md` to analyze bins abundance to the fwd and rev paired reads. MetaWrap uses Salmon and its telling me to upgrade Salmon but since it is within Metawrap, I am unsure how to do this. This is the error I receive: ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; salmon v0.13.1; ===============. I downloaded the tar file for salmon but because it is used within MetaWrap I'm unsure the linux terminal line to update the salmon. Thanks,; Katie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423
https://github.com/COMBINE-lab/salmon/issues/423:507,Deployability,release,releases,507,"I am using Metawrap`https://github.com/bxlab/metaWRAP/blob/master/Usage_tutorial.md` to analyze bins abundance to the fwd and rev paired reads. MetaWrap uses Salmon and its telling me to upgrade Salmon but since it is within Metawrap, I am unsure how to do this. This is the error I receive: ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; salmon v0.13.1; ===============. I downloaded the tar file for salmon but because it is used within MetaWrap I'm unsure the linux terminal line to update the salmon. Thanks,; Katie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423
https://github.com/COMBINE-lab/salmon/issues/423:576,Deployability,upgrade,upgrade,576,"I am using Metawrap`https://github.com/bxlab/metaWRAP/blob/master/Usage_tutorial.md` to analyze bins abundance to the fwd and rev paired reads. MetaWrap uses Salmon and its telling me to upgrade Salmon but since it is within Metawrap, I am unsure how to do this. This is the error I receive: ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; salmon v0.13.1; ===============. I downloaded the tar file for salmon but because it is used within MetaWrap I'm unsure the linux terminal line to update the salmon. Thanks,; Katie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423
https://github.com/COMBINE-lab/salmon/issues/423:698,Deployability,update,updates,698,"I am using Metawrap`https://github.com/bxlab/metaWRAP/blob/master/Usage_tutorial.md` to analyze bins abundance to the fwd and rev paired reads. MetaWrap uses Salmon and its telling me to upgrade Salmon but since it is within Metawrap, I am unsure how to do this. This is the error I receive: ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; salmon v0.13.1; ===============. I downloaded the tar file for salmon but because it is used within MetaWrap I'm unsure the linux terminal line to update the salmon. Thanks,; Katie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423
https://github.com/COMBINE-lab/salmon/issues/423:900,Deployability,update,update,900,"I am using Metawrap`https://github.com/bxlab/metaWRAP/blob/master/Usage_tutorial.md` to analyze bins abundance to the fwd and rev paired reads. MetaWrap uses Salmon and its telling me to upgrade Salmon but since it is within Metawrap, I am unsure how to do this. This is the error I receive: ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; salmon v0.13.1; ===============. I downloaded the tar file for salmon but because it is used within MetaWrap I'm unsure the linux terminal line to update the salmon. Thanks,; Katie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423
https://github.com/COMBINE-lab/salmon/issues/424:110,Availability,error,error,110,"Hi, I'm trying to use salmon in Linux arm (aarch64) environment, but I can not compile the software due to an error. There is any instruction to compile?; Using Linux Ubuntu 18.04.3 LTS (arm).; Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/424
https://github.com/COMBINE-lab/salmon/issues/425:68,Availability,error,errors,68,Compilation of newest release crashes with many undefined reference errors:; ```; [ 72%] Linking CXX executable unitTests; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `Curl_disconnect':; (.text+0xb3c): undefined reference to `idn2_free'; (.text+0xb58): undefined reference to `idn2_free'; (.text+0xb74): undefined reference to `idn2_free'; (.text+0xb90): undefined reference to `idn2_free'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `Curl_connect':; (.text+0x4e9e): undefined reference to `idn2_free'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o):(.text+0x4eba): more undefined references to `idn2_free' follow; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `fix_hostname.isra.7':; (.text.unlikely+0x2e4): undefined reference to `idn2_check_version'; (.text.unlikely+0x301): undefined reference to `idn2_lookup_ul'; (.text.unlikely+0x34b): undefined reference to `idn2_strerror'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-cookie.o): In function `Curl_cookie_add':; (.text+0xbb1): undefined reference to `psl_builtin'; (.text+0xbca): undefined reference to `psl_is_cookie_domain_acceptable'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version':; (.text+0xd6): undefined reference to `idn2_check_version'; (.text+0xe2): undefined reference to `idn2_check_version'; (.text+0x106): undefined reference to `psl_get_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version_info':; (.text+0x1e9): undefined reference to `idn2_check_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-socks_gssapi.o): In function `check_gss_err.part.0':; (.text+0x57): undefined reference to `gss_release_buffer'; (.text+0x77): undefined reference to `gss_display_status'; (.text+0x9b): undefined reference to `gss_release_buffer'; (.text+0xcf): undefined reference to `gss_release_buffer'; (.text+0xef): undefined reference to `gss_display_status'; (.text+0x10e): ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/425
https://github.com/COMBINE-lab/salmon/issues/425:22,Deployability,release,release,22,Compilation of newest release crashes with many undefined reference errors:; ```; [ 72%] Linking CXX executable unitTests; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `Curl_disconnect':; (.text+0xb3c): undefined reference to `idn2_free'; (.text+0xb58): undefined reference to `idn2_free'; (.text+0xb74): undefined reference to `idn2_free'; (.text+0xb90): undefined reference to `idn2_free'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `Curl_connect':; (.text+0x4e9e): undefined reference to `idn2_free'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o):(.text+0x4eba): more undefined references to `idn2_free' follow; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `fix_hostname.isra.7':; (.text.unlikely+0x2e4): undefined reference to `idn2_check_version'; (.text.unlikely+0x301): undefined reference to `idn2_lookup_ul'; (.text.unlikely+0x34b): undefined reference to `idn2_strerror'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-cookie.o): In function `Curl_cookie_add':; (.text+0xbb1): undefined reference to `psl_builtin'; (.text+0xbca): undefined reference to `psl_is_cookie_domain_acceptable'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version':; (.text+0xd6): undefined reference to `idn2_check_version'; (.text+0xe2): undefined reference to `idn2_check_version'; (.text+0x106): undefined reference to `psl_get_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version_info':; (.text+0x1e9): undefined reference to `idn2_check_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-socks_gssapi.o): In function `check_gss_err.part.0':; (.text+0x57): undefined reference to `gss_release_buffer'; (.text+0x77): undefined reference to `gss_display_status'; (.text+0x9b): undefined reference to `gss_release_buffer'; (.text+0xcf): undefined reference to `gss_release_buffer'; (.text+0xef): undefined reference to `gss_display_status'; (.text+0x10e): ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/425
https://github.com/COMBINE-lab/salmon/issues/425:2701,Deployability,install,installed,2701,"l_la-url.o): In function `fix_hostname.isra.7':; (.text.unlikely+0x2e4): undefined reference to `idn2_check_version'; (.text.unlikely+0x301): undefined reference to `idn2_lookup_ul'; (.text.unlikely+0x34b): undefined reference to `idn2_strerror'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-cookie.o): In function `Curl_cookie_add':; (.text+0xbb1): undefined reference to `psl_builtin'; (.text+0xbca): undefined reference to `psl_is_cookie_domain_acceptable'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version':; (.text+0xd6): undefined reference to `idn2_check_version'; (.text+0xe2): undefined reference to `idn2_check_version'; (.text+0x106): undefined reference to `psl_get_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version_info':; (.text+0x1e9): undefined reference to `idn2_check_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-socks_gssapi.o): In function `check_gss_err.part.0':; (.text+0x57): undefined reference to `gss_release_buffer'; (.text+0x77): undefined reference to `gss_display_status'; (.text+0x9b): undefined reference to `gss_release_buffer'; (.text+0xcf): undefined reference to `gss_release_buffer'; (.text+0xef): undefined reference to `gss_display_status'; (.text+0x10e): undefined reference to `gss_release_buffer'; (.text+0x18e): undefined reference to `gss_release_buffer'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-socks_gssapi.o): In function `Curl_SOCKS5_gssapi_negotiate':; (.text+0x2ef): undefined reference to `gss_import_name'; (.text+0x302): undefined reference to `gss_release_buffer'; (.text+0x42c): undefined reference to `gss_release_buffer'; (.text+0x437): undefined reference to `gss_release_buffer'; (.text+0x532): undefined reference to `gss_release_buffer'; (.text+0x56c): undefined reference to `gss_release_name'; ```. and hundreds more, all related to libcurl. System is Linux Mint 19.2 (Ubuntu 18.04), idn2 and all other related libraries are installed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/425
https://github.com/COMBINE-lab/salmon/issues/426:180,Availability,error,error,180,**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon. **Describe the bug**; Running on a machine with 256GB of RAM the index builds without error but quant fails. **To Reproduce**; The input transcript file is 425Mb and I'm using salmon 0.14.1. This command ran successfully to index:. `/usr/local/common/salmon-0.14.1/bin/salmon index -t Trinity.fasta -i transcripts_index -k 31 -p 12`. And this one failed:. `/usr/local/common/salmon-0.14.1/bin/salmon quant -i transcripts_index -l IU -1 IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq -2 IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq --validateMappings -p 12 --output salmon_out`. But here's the output:. ```; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { transcripts_index }; ### [ libType ] => { IU }; ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompati,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:2696,Performance,Load,Loading,2696,"d.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 targets. processed 978,500,000 fragments; hits: 2,484,589,998, hits per frag: 2.53933terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted. ```. **Desktop (please complete the following information):**; - OS: RHEL 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:2762,Performance,Load,Loading,2762,"d.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 targets. processed 978,500,000 fragments; hits: 2,484,589,998, hits per frag: 2.53933terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted. ```. **Desktop (please complete the following information):**; - OS: RHEL 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:2827,Performance,Load,Loading,2827,"d.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 targets. processed 978,500,000 fragments; hits: 2,484,589,998, hits per frag: 2.53933terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted. ```. **Desktop (please complete the following information):**; - OS: RHEL 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:2900,Performance,Load,Loading,2900,"d.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 targets. processed 978,500,000 fragments; hits: 2,484,589,998, hits per frag: 2.53933terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted. ```. **Desktop (please complete the following information):**; - OS: RHEL 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:2970,Performance,Load,Loading,2970,"d.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 targets. processed 978,500,000 fragments; hits: 2,484,589,998, hits per frag: 2.53933terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted. ```. **Desktop (please complete the following information):**; - OS: RHEL 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:3230,Performance,load,loading,3230,"d.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 targets. processed 978,500,000 fragments; hits: 2,484,589,998, hits per frag: 2.53933terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted. ```. **Desktop (please complete the following information):**; - OS: RHEL 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:3294,Performance,load,loading,3294,"d.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 targets. processed 978,500,000 fragments; hits: 2,484,589,998, hits per frag: 2.53933terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted. ```. **Desktop (please complete the following information):**; - OS: RHEL 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:3601,Safety,Abort,Aborted,3601,"d.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 targets. processed 978,500,000 fragments; hits: 2,484,589,998, hits per frag: 2.53933terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted. ```. **Desktop (please complete the following information):**; - OS: RHEL 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:983,Security,validat,validateMappings,983,*Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon. **Describe the bug**; Running on a machine with 256GB of RAM the index builds without error but quant fails. **To Reproduce**; The input transcript file is 425Mb and I'm using salmon 0.14.1. This command ran successfully to index:. `/usr/local/common/salmon-0.14.1/bin/salmon index -t Trinity.fasta -i transcripts_index -k 31 -p 12`. And this one failed:. `/usr/local/common/salmon-0.14.1/bin/salmon quant -i transcripts_index -l IU -1 IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq -2 IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq --validateMappings -p 12 --output salmon_out`. But here's the output:. ```; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { transcripts_index }; ### [ libType ] => { IU }; ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompati,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:1771,Security,validat,validateMappings,1771,"immed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq --validateMappings -p 12 --output salmon_out`. But here's the output:. ```; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { transcripts_index }; ### [ libType ] => { IU }; ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:2088,Security,validat,validateMappings,2088,"version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { transcripts_index }; ### [ libType ] => { IU }; ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [201",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:2250,Security,validat,validateMappings,2250," ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:2422,Security,validat,validateMappings,2422,".trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 target",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:3238,Security,hash,hash,3238,"d.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 targets. processed 978,500,000 fragments; hits: 2,484,589,998, hits per frag: 2.53933terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted. ```. **Desktop (please complete the following information):**; - OS: RHEL 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:1859,Testability,Log,Logs,1859,"immed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq --validateMappings -p 12 --output salmon_out`. But here's the output:. ```; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { transcripts_index }; ### [ libType ] => { IU }; ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/426:1894,Testability,log,logs,1894,"immed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq --validateMappings -p 12 --output salmon_out`. But here's the output:. ```; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { transcripts_index }; ### [ libType ] => { IU }; ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426
https://github.com/COMBINE-lab/salmon/issues/427:1776,Availability,down,downloaded,1776,"file as input corresponding to the stringtie gtf file.; **To Reproduce**; Steps and data to reproduce the behavior:; Trasncript fasta file corres[onding to the stringtie generated gtf file used for salmon indexing with the following command.; `salmon index -t stringtie.fasta -i annotation_merged_index -p 20 -k 31`; THe index output used for salmon quantification with the following command; `salmon quant -i matchedtranscript_index/ -l ISR -1 ../../12_1_trimmed_R1.fastq -2 ../../12_1_trimmed_R2.fastq --gcBias --seqBias --posBias --dumpEqWeights -o salmon_output_rerun --writeMappings=salmon_output_rerun/mapping.sam -p 20`. Actual transcript IDs; ```; transcript	gene; 1 MSTRG.1.1	MSTRG.1; 2 MSTRG.1.2	MSTRG.1; 3 MSTRG.1.3	MSTRG.1; 4	BGIOSGA002578-TA	MSTRG.1; 5 MSTRG.1.5	MSTRG.1; 6 MSTRG.1.6	MSTRG.1; ```; Output quant.sf file:; ```; transcript count TPM; 1 BGIOSGA002568-TA 5692.000 5.840431; 2 MSTRG.3 1165.181 0.825116; 3 MSTRG.3 15240.169 10.700565; 4 MSTRG.3 5233.400 3.656954; 5 MSTRG.3 34.780 0.027226; 6 MSTRG.3 5219.345 3.916051; 7 MSTRG.3 4.277 0.003473; ```; Rscript used to read the quant.sf file. ```; library(dplyr); tmp <- read.delim(""quant.sf"", header = TRUE, as.is = TRUE); idx <- grep(""^STRG\\.|^CHS\\."", tmp$Name, invert = TRUE); tmp$Name[idx] <- gsub(""\\.[0-9]+$"", """", tmp$Name[idx]); tmp %>% dplyr::rename(transcript = Name, count = NumReads) %>%; dplyr::select(transcript, count, TPM); ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.14.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda; * Which reference (e.g. transcriptome) was used?; transcriptome; * Which read files were used?; paired-end illumina read files. **Expected behavior**; A clear and concise description of what you expected to happen.; Expected to retrieve the full name of transcript IDs. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Cluster with centOS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/427
https://github.com/COMBINE-lab/salmon/issues/427:1755,Deployability,install,installed,1755,"file as input corresponding to the stringtie gtf file.; **To Reproduce**; Steps and data to reproduce the behavior:; Trasncript fasta file corres[onding to the stringtie generated gtf file used for salmon indexing with the following command.; `salmon index -t stringtie.fasta -i annotation_merged_index -p 20 -k 31`; THe index output used for salmon quantification with the following command; `salmon quant -i matchedtranscript_index/ -l ISR -1 ../../12_1_trimmed_R1.fastq -2 ../../12_1_trimmed_R2.fastq --gcBias --seqBias --posBias --dumpEqWeights -o salmon_output_rerun --writeMappings=salmon_output_rerun/mapping.sam -p 20`. Actual transcript IDs; ```; transcript	gene; 1 MSTRG.1.1	MSTRG.1; 2 MSTRG.1.2	MSTRG.1; 3 MSTRG.1.3	MSTRG.1; 4	BGIOSGA002578-TA	MSTRG.1; 5 MSTRG.1.5	MSTRG.1; 6 MSTRG.1.6	MSTRG.1; ```; Output quant.sf file:; ```; transcript count TPM; 1 BGIOSGA002568-TA 5692.000 5.840431; 2 MSTRG.3 1165.181 0.825116; 3 MSTRG.3 15240.169 10.700565; 4 MSTRG.3 5233.400 3.656954; 5 MSTRG.3 34.780 0.027226; 6 MSTRG.3 5219.345 3.916051; 7 MSTRG.3 4.277 0.003473; ```; Rscript used to read the quant.sf file. ```; library(dplyr); tmp <- read.delim(""quant.sf"", header = TRUE, as.is = TRUE); idx <- grep(""^STRG\\.|^CHS\\."", tmp$Name, invert = TRUE); tmp$Name[idx] <- gsub(""\\.[0-9]+$"", """", tmp$Name[idx]); tmp %>% dplyr::rename(transcript = Name, count = NumReads) %>%; dplyr::select(transcript, count, TPM); ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.14.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda; * Which reference (e.g. transcriptome) was used?; transcriptome; * Which read files were used?; paired-end illumina read files. **Expected behavior**; A clear and concise description of what you expected to happen.; Expected to retrieve the full name of transcript IDs. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Cluster with centOS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/427
https://github.com/COMBINE-lab/salmon/issues/427:1982,Usability,clear,clear,1982,"file as input corresponding to the stringtie gtf file.; **To Reproduce**; Steps and data to reproduce the behavior:; Trasncript fasta file corres[onding to the stringtie generated gtf file used for salmon indexing with the following command.; `salmon index -t stringtie.fasta -i annotation_merged_index -p 20 -k 31`; THe index output used for salmon quantification with the following command; `salmon quant -i matchedtranscript_index/ -l ISR -1 ../../12_1_trimmed_R1.fastq -2 ../../12_1_trimmed_R2.fastq --gcBias --seqBias --posBias --dumpEqWeights -o salmon_output_rerun --writeMappings=salmon_output_rerun/mapping.sam -p 20`. Actual transcript IDs; ```; transcript	gene; 1 MSTRG.1.1	MSTRG.1; 2 MSTRG.1.2	MSTRG.1; 3 MSTRG.1.3	MSTRG.1; 4	BGIOSGA002578-TA	MSTRG.1; 5 MSTRG.1.5	MSTRG.1; 6 MSTRG.1.6	MSTRG.1; ```; Output quant.sf file:; ```; transcript count TPM; 1 BGIOSGA002568-TA 5692.000 5.840431; 2 MSTRG.3 1165.181 0.825116; 3 MSTRG.3 15240.169 10.700565; 4 MSTRG.3 5233.400 3.656954; 5 MSTRG.3 34.780 0.027226; 6 MSTRG.3 5219.345 3.916051; 7 MSTRG.3 4.277 0.003473; ```; Rscript used to read the quant.sf file. ```; library(dplyr); tmp <- read.delim(""quant.sf"", header = TRUE, as.is = TRUE); idx <- grep(""^STRG\\.|^CHS\\."", tmp$Name, invert = TRUE); tmp$Name[idx] <- gsub(""\\.[0-9]+$"", """", tmp$Name[idx]); tmp %>% dplyr::rename(transcript = Name, count = NumReads) %>%; dplyr::select(transcript, count, TPM); ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.14.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda; * Which reference (e.g. transcriptome) was used?; transcriptome; * Which read files were used?; paired-end illumina read files. **Expected behavior**; A clear and concise description of what you expected to happen.; Expected to retrieve the full name of transcript IDs. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Cluster with centOS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/427
https://github.com/COMBINE-lab/salmon/issues/428:741,Testability,test,test,741,"Hi,; I've ran Alevin and generated an alevinQC report. The initial whitelist contains 5261 cells and the final whitelist contains 4340 cells. ; filtered_cb_frequency.txt contains 5261 cells and whitelist.txt contains 4240 cells.; AlevinQC states that ""Once the initial set of whitelisted cell barcodes is defined, Alevin goes through the remaining cell barcodes. If a cell barcode is similar enough to a whitelisted cell barcode, it will be corrected and the reads will be added to those of the whitelisted one.""; However my final counts matrix contains 5621 cells, the number from the initial whitelist. ; Shouldn't my final counts matrix contain 4340 cells after the correction has taken place?; I'm running:; ```; salmon alevin -l ISR -1 test.fastq.1.gz -2 test.fastq.2.gz --chromium -i geneset.dir/geneset_all.salmon.index -p 16 -o salmon.dir/test; --tgMap t2gmap.tsv --dumpFeatures --dumpUmiGraph; ```. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/428
https://github.com/COMBINE-lab/salmon/issues/428:760,Testability,test,test,760,"Hi,; I've ran Alevin and generated an alevinQC report. The initial whitelist contains 5261 cells and the final whitelist contains 4340 cells. ; filtered_cb_frequency.txt contains 5261 cells and whitelist.txt contains 4240 cells.; AlevinQC states that ""Once the initial set of whitelisted cell barcodes is defined, Alevin goes through the remaining cell barcodes. If a cell barcode is similar enough to a whitelisted cell barcode, it will be corrected and the reads will be added to those of the whitelisted one.""; However my final counts matrix contains 5621 cells, the number from the initial whitelist. ; Shouldn't my final counts matrix contain 4340 cells after the correction has taken place?; I'm running:; ```; salmon alevin -l ISR -1 test.fastq.1.gz -2 test.fastq.2.gz --chromium -i geneset.dir/geneset_all.salmon.index -p 16 -o salmon.dir/test; --tgMap t2gmap.tsv --dumpFeatures --dumpUmiGraph; ```. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/428
https://github.com/COMBINE-lab/salmon/issues/428:847,Testability,test,test,847,"Hi,; I've ran Alevin and generated an alevinQC report. The initial whitelist contains 5261 cells and the final whitelist contains 4340 cells. ; filtered_cb_frequency.txt contains 5261 cells and whitelist.txt contains 4240 cells.; AlevinQC states that ""Once the initial set of whitelisted cell barcodes is defined, Alevin goes through the remaining cell barcodes. If a cell barcode is similar enough to a whitelisted cell barcode, it will be corrected and the reads will be added to those of the whitelisted one.""; However my final counts matrix contains 5621 cells, the number from the initial whitelist. ; Shouldn't my final counts matrix contain 4340 cells after the correction has taken place?; I'm running:; ```; salmon alevin -l ISR -1 test.fastq.1.gz -2 test.fastq.2.gz --chromium -i geneset.dir/geneset_all.salmon.index -p 16 -o salmon.dir/test; --tgMap t2gmap.tsv --dumpFeatures --dumpUmiGraph; ```. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/428
https://github.com/COMBINE-lab/salmon/issues/431:3997,Deployability,release,release,3997,"SRR898/009/SRR8985039/SRR8985039_1.fastq.gz	ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR898/009/SRR8985039/SRR8985039_2.fastq.gz; ```; (renamed to cdna*.fastq.gz and barcodes.fastq.gz internal to workflow). * Which which program options were used?. ```; # Do a pre-run to derive a starting whitelist, see https://github.com/COMBINE-lab/salmon/issues/362. salmon alevin -l ISR -1 $(ls barcodes*.fastq.gz | tr '\n' ' ') -2 $(ls cdna*.fastq.gz | tr '\n' ' ') --chromium -i salmon_index -p 12 -o SAMN11526602_pre --tgMap transcript_to_gene.txt --dumpFeatures --noQuant. # Derive a relaxed whitelist, removing only the most obvious junk . if [ $? -eq 0 ]; then ; awk '{ if ($2 > 10) { print $1} }' SAMN11526602_pre/alevin/raw_cb_frequency.txt > pre_whitelist.txt; fi. # Supply the whitelist to the main Alevin run. salmon alevin -l ISR -1 $(ls barcodes*.fastq.gz | tr '\n' ' ') -2 $(ls cdna*.fastq.gz | tr '\n' ' ') --chromium -i salmon_index -p 12 -o SAMN11526602_tmp --tgMap transcript_to_gene.txt --whitelist pre_whitelist.txt --forceCells $(cat pre_whitelist.txt | wc -l | tr -d '\n') --dumpMtx; ```. **Expected behavior**; MTX files without references to out-of-range columns. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ```; Linux hx-noah-63-15.ebi.ac.uk 3.10.0-693.5.2.el7.x86_64 #1 SMP Fri Oct 13 10:46:25 EDT 2017 x86_64 GNU/Linux. LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 7.4 (Maipo); Release:	7.4; Codename:	Maipo; ```. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/431
https://github.com/COMBINE-lab/salmon/issues/431:4018,Deployability,Release,Release,4018,"SRR898/009/SRR8985039/SRR8985039_1.fastq.gz	ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR898/009/SRR8985039/SRR8985039_2.fastq.gz; ```; (renamed to cdna*.fastq.gz and barcodes.fastq.gz internal to workflow). * Which which program options were used?. ```; # Do a pre-run to derive a starting whitelist, see https://github.com/COMBINE-lab/salmon/issues/362. salmon alevin -l ISR -1 $(ls barcodes*.fastq.gz | tr '\n' ' ') -2 $(ls cdna*.fastq.gz | tr '\n' ' ') --chromium -i salmon_index -p 12 -o SAMN11526602_pre --tgMap transcript_to_gene.txt --dumpFeatures --noQuant. # Derive a relaxed whitelist, removing only the most obvious junk . if [ $? -eq 0 ]; then ; awk '{ if ($2 > 10) { print $1} }' SAMN11526602_pre/alevin/raw_cb_frequency.txt > pre_whitelist.txt; fi. # Supply the whitelist to the main Alevin run. salmon alevin -l ISR -1 $(ls barcodes*.fastq.gz | tr '\n' ' ') -2 $(ls cdna*.fastq.gz | tr '\n' ' ') --chromium -i salmon_index -p 12 -o SAMN11526602_tmp --tgMap transcript_to_gene.txt --whitelist pre_whitelist.txt --forceCells $(cat pre_whitelist.txt | wc -l | tr -d '\n') --dumpMtx; ```. **Expected behavior**; MTX files without references to out-of-range columns. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ```; Linux hx-noah-63-15.ebi.ac.uk 3.10.0-693.5.2.el7.x86_64 #1 SMP Fri Oct 13 10:46:25 EDT 2017 x86_64 GNU/Linux. LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 7.4 (Maipo); Release:	7.4; Codename:	Maipo; ```. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/431
https://github.com/COMBINE-lab/salmon/issues/432:201,Availability,error,error,201,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both likely.; **Describe the bug**; Trying to build the new pufferfish index format, I receive a memory allocation error near the end of the index build process. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.99.0 beta1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded from Github release; * Which reference (e.g. transcriptome) was used?; gencode v25 with some ""extra"" stuff added - mainly introns for each unprocessed transcript.; * Which read files were used?; None; * Which which program options were used?; -p 8 (though I've used the default as well). **Expected behavior**; I expected the indexing process to complete. **Screenshots**; [pisces_bug.log](https://github.com/COMBINE-lab/salmon/files/3692191/pisces_bug.log). **Desktop (please complete the following information):**; - OS: Linux; - Version RHEL7; **Additional context**. I'm attempting to build an index that's quite large, and am very excited to try the new pufferfish graph-based index. Please let me know how I can help out - if it would be useful I can try to build the index using your standalone library as well.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432
https://github.com/COMBINE-lab/salmon/issues/432:465,Availability,down,downloaded,465,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both likely.; **Describe the bug**; Trying to build the new pufferfish index format, I receive a memory allocation error near the end of the index build process. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.99.0 beta1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded from Github release; * Which reference (e.g. transcriptome) was used?; gencode v25 with some ""extra"" stuff added - mainly introns for each unprocessed transcript.; * Which read files were used?; None; * Which which program options were used?; -p 8 (though I've used the default as well). **Expected behavior**; I expected the indexing process to complete. **Screenshots**; [pisces_bug.log](https://github.com/COMBINE-lab/salmon/files/3692191/pisces_bug.log). **Desktop (please complete the following information):**; - OS: Linux; - Version RHEL7; **Additional context**. I'm attempting to build an index that's quite large, and am very excited to try the new pufferfish graph-based index. Please let me know how I can help out - if it would be useful I can try to build the index using your standalone library as well.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432
https://github.com/COMBINE-lab/salmon/issues/432:508,Availability,Down,Downloaded,508,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both likely.; **Describe the bug**; Trying to build the new pufferfish index format, I receive a memory allocation error near the end of the index build process. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.99.0 beta1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded from Github release; * Which reference (e.g. transcriptome) was used?; gencode v25 with some ""extra"" stuff added - mainly introns for each unprocessed transcript.; * Which read files were used?; None; * Which which program options were used?; -p 8 (though I've used the default as well). **Expected behavior**; I expected the indexing process to complete. **Screenshots**; [pisces_bug.log](https://github.com/COMBINE-lab/salmon/files/3692191/pisces_bug.log). **Desktop (please complete the following information):**; - OS: Linux; - Version RHEL7; **Additional context**. I'm attempting to build an index that's quite large, and am very excited to try the new pufferfish graph-based index. Please let me know how I can help out - if it would be useful I can try to build the index using your standalone library as well.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432
https://github.com/COMBINE-lab/salmon/issues/432:444,Deployability,install,installed,444,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both likely.; **Describe the bug**; Trying to build the new pufferfish index format, I receive a memory allocation error near the end of the index build process. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.99.0 beta1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded from Github release; * Which reference (e.g. transcriptome) was used?; gencode v25 with some ""extra"" stuff added - mainly introns for each unprocessed transcript.; * Which read files were used?; None; * Which which program options were used?; -p 8 (though I've used the default as well). **Expected behavior**; I expected the indexing process to complete. **Screenshots**; [pisces_bug.log](https://github.com/COMBINE-lab/salmon/files/3692191/pisces_bug.log). **Desktop (please complete the following information):**; - OS: Linux; - Version RHEL7; **Additional context**. I'm attempting to build an index that's quite large, and am very excited to try the new pufferfish graph-based index. Please let me know how I can help out - if it would be useful I can try to build the index using your standalone library as well.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432
https://github.com/COMBINE-lab/salmon/issues/432:531,Deployability,release,release,531,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both likely.; **Describe the bug**; Trying to build the new pufferfish index format, I receive a memory allocation error near the end of the index build process. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.99.0 beta1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded from Github release; * Which reference (e.g. transcriptome) was used?; gencode v25 with some ""extra"" stuff added - mainly introns for each unprocessed transcript.; * Which read files were used?; None; * Which which program options were used?; -p 8 (though I've used the default as well). **Expected behavior**; I expected the indexing process to complete. **Screenshots**; [pisces_bug.log](https://github.com/COMBINE-lab/salmon/files/3692191/pisces_bug.log). **Desktop (please complete the following information):**; - OS: Linux; - Version RHEL7; **Additional context**. I'm attempting to build an index that's quite large, and am very excited to try the new pufferfish graph-based index. Please let me know how I can help out - if it would be useful I can try to build the index using your standalone library as well.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432
https://github.com/COMBINE-lab/salmon/issues/432:904,Testability,log,log,904,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both likely.; **Describe the bug**; Trying to build the new pufferfish index format, I receive a memory allocation error near the end of the index build process. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.99.0 beta1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded from Github release; * Which reference (e.g. transcriptome) was used?; gencode v25 with some ""extra"" stuff added - mainly introns for each unprocessed transcript.; * Which read files were used?; None; * Which which program options were used?; -p 8 (though I've used the default as well). **Expected behavior**; I expected the indexing process to complete. **Screenshots**; [pisces_bug.log](https://github.com/COMBINE-lab/salmon/files/3692191/pisces_bug.log). **Desktop (please complete the following information):**; - OS: Linux; - Version RHEL7; **Additional context**. I'm attempting to build an index that's quite large, and am very excited to try the new pufferfish graph-based index. Please let me know how I can help out - if it would be useful I can try to build the index using your standalone library as well.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432
https://github.com/COMBINE-lab/salmon/issues/432:972,Testability,log,log,972,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both likely.; **Describe the bug**; Trying to build the new pufferfish index format, I receive a memory allocation error near the end of the index build process. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.99.0 beta1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded from Github release; * Which reference (e.g. transcriptome) was used?; gencode v25 with some ""extra"" stuff added - mainly introns for each unprocessed transcript.; * Which read files were used?; None; * Which which program options were used?; -p 8 (though I've used the default as well). **Expected behavior**; I expected the indexing process to complete. **Screenshots**; [pisces_bug.log](https://github.com/COMBINE-lab/salmon/files/3692191/pisces_bug.log). **Desktop (please complete the following information):**; - OS: Linux; - Version RHEL7; **Additional context**. I'm attempting to build an index that's quite large, and am very excited to try the new pufferfish graph-based index. Please let me know how I can help out - if it would be useful I can try to build the index using your standalone library as well.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432
https://github.com/COMBINE-lab/salmon/issues/433:82,Availability,error,error,82,"Hello,; I'm trying to compile salmon into arm64 linux system, but I'm getting the error bellow:; ```; ...; Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /usr/lib/aarch64-linux-gnu/libtbbmalloc_proxy.so;/usr/lib/aarch64-linux-gnu/libtbbmalloc.so;/usr/lib/aarch64-linux-gnu/libtbb.so;/usr/lib/aarch64-linux-gnu/libtbb.so; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon-0.14.2/build; [ 34%] Completed 'libtbb'; [ 39%] Built target libtbb; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. ```. How to fix this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/433
https://github.com/COMBINE-lab/salmon/issues/433:990,Availability,Error,Error,990,"Hello,; I'm trying to compile salmon into arm64 linux system, but I'm getting the error bellow:; ```; ...; Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /usr/lib/aarch64-linux-gnu/libtbbmalloc_proxy.so;/usr/lib/aarch64-linux-gnu/libtbbmalloc.so;/usr/lib/aarch64-linux-gnu/libtbb.so;/usr/lib/aarch64-linux-gnu/libtbb.so; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon-0.14.2/build; [ 34%] Completed 'libtbb'; [ 39%] Built target libtbb; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. ```. How to fix this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/433
https://github.com/COMBINE-lab/salmon/issues/433:771,Modifiability,Config,Configuring,771,"Hello,; I'm trying to compile salmon into arm64 linux system, but I'm getting the error bellow:; ```; ...; Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /usr/lib/aarch64-linux-gnu/libtbbmalloc_proxy.so;/usr/lib/aarch64-linux-gnu/libtbbmalloc.so;/usr/lib/aarch64-linux-gnu/libtbb.so;/usr/lib/aarch64-linux-gnu/libtbb.so; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon-0.14.2/build; [ 34%] Completed 'libtbb'; [ 39%] Built target libtbb; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. ```. How to fix this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/433
https://github.com/COMBINE-lab/salmon/issues/433:413,Testability,log,log,413,"Hello,; I'm trying to compile salmon into arm64 linux system, but I'm getting the error bellow:; ```; ...; Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /usr/lib/aarch64-linux-gnu/libtbbmalloc_proxy.so;/usr/lib/aarch64-linux-gnu/libtbbmalloc.so;/usr/lib/aarch64-linux-gnu/libtbb.so;/usr/lib/aarch64-linux-gnu/libtbb.so; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon-0.14.2/build; [ 34%] Completed 'libtbb'; [ 39%] Built target libtbb; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. ```. How to fix this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/433
https://github.com/COMBINE-lab/salmon/issues/434:272,Availability,avail,available,272,"Hi,. Quick question- if I have the reads for a library spread across multiple files, is it appropriate to run Alevin separately on each file pair and combine with quantmerge, rather than processing together? I'm looking to run Alevin via Galaxy for some training, and the available wrapper doesn't currently allow supplying multiple inputs. My feeling is that all files should be processed together for robust thresholding etc, but I may be worrying about nothing.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/434
https://github.com/COMBINE-lab/salmon/issues/434:403,Availability,robust,robust,403,"Hi,. Quick question- if I have the reads for a library spread across multiple files, is it appropriate to run Alevin separately on each file pair and combine with quantmerge, rather than processing together? I'm looking to run Alevin via Galaxy for some training, and the available wrapper doesn't currently allow supplying multiple inputs. My feeling is that all files should be processed together for robust thresholding etc, but I may be worrying about nothing.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/434
https://github.com/COMBINE-lab/salmon/issues/434:282,Integrability,wrap,wrapper,282,"Hi,. Quick question- if I have the reads for a library spread across multiple files, is it appropriate to run Alevin separately on each file pair and combine with quantmerge, rather than processing together? I'm looking to run Alevin via Galaxy for some training, and the available wrapper doesn't currently allow supplying multiple inputs. My feeling is that all files should be processed together for robust thresholding etc, but I may be worrying about nothing.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/434
https://github.com/COMBINE-lab/salmon/issues/436:102,Availability,error,error,102,This is in regards to issue https://github.com/satijalab/seurat/issues/2197 where @apcamargo reported error when importing alevin quants into the Seurat inbuilt parser.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/436
https://github.com/COMBINE-lab/salmon/issues/438:311,Security,access,access,311,"Hi there, I'm wondering how to view the *.gz files (e.g. fld and biases files) in the ""aux_info"" folder after running Salmon. It doesn't look straightforward to me on how to explore the contents of these files. After unzip the .gz files, they are still not in human readable format. Is another tool required to access these files? Any suggestions are appreciated. Guan.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/438
https://github.com/COMBINE-lab/salmon/issues/440:212,Availability,error,error,212,"I am trying to run Salmon (v0.14.1) in a linux environment with the following command:. `salmon quant -i /index -l A -1 PBS_2-R1.fastq.gz -2 PBS_2-R2.fastq.gz --numBootstraps 100 -o /scratch`. However, I get the error:. `(mapping-based mode) Exception : [unrecognised option '--numBootstraps 100'].`. When I run the command without the `--numBootstraps 100` argument it works fine. Is this error arising because I'm running in mapping-based mode? Can you not use numBootstraps in this mode?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/440
https://github.com/COMBINE-lab/salmon/issues/440:390,Availability,error,error,390,"I am trying to run Salmon (v0.14.1) in a linux environment with the following command:. `salmon quant -i /index -l A -1 PBS_2-R1.fastq.gz -2 PBS_2-R2.fastq.gz --numBootstraps 100 -o /scratch`. However, I get the error:. `(mapping-based mode) Exception : [unrecognised option '--numBootstraps 100'].`. When I run the command without the `--numBootstraps 100` argument it works fine. Is this error arising because I'm running in mapping-based mode? Can you not use numBootstraps in this mode?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/440
https://github.com/COMBINE-lab/salmon/issues/441:559,Availability,down,downloaded,559,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The bug is related to building the index by combining genome and transcriptome reference. **Describe the bug**; [salmon_index.err.log](https://github.com/COMBINE-lab/salmon/files/3801633/salmon_index.err.log). **To Reproduce**; Steps and data to reproduce the behavior: Reproducing the [Selective Alignment](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) tutorial. * Which version of salmon was used?; 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded Linux executable from GitHub; * Which reference (e.g. transcriptome) was used?; gencode.vM23.transcripts.fa.gz and GRCm38.primary_assembly.genome.fa.gz; * Which which program options were used?; `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index`. **Desktop (please complete the following information):**; - OS: Linux; - Version: Ubuntu 16.04. **Additional context**; When installed via bioconda the salmon index command finishes with no error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/441
https://github.com/COMBINE-lab/salmon/issues/441:602,Availability,down,downloaded,602,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The bug is related to building the index by combining genome and transcriptome reference. **Describe the bug**; [salmon_index.err.log](https://github.com/COMBINE-lab/salmon/files/3801633/salmon_index.err.log). **To Reproduce**; Steps and data to reproduce the behavior: Reproducing the [Selective Alignment](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) tutorial. * Which version of salmon was used?; 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded Linux executable from GitHub; * Which reference (e.g. transcriptome) was used?; gencode.vM23.transcripts.fa.gz and GRCm38.primary_assembly.genome.fa.gz; * Which which program options were used?; `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index`. **Desktop (please complete the following information):**; - OS: Linux; - Version: Ubuntu 16.04. **Additional context**; When installed via bioconda the salmon index command finishes with no error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/441
https://github.com/COMBINE-lab/salmon/issues/441:1068,Availability,error,error,1068,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The bug is related to building the index by combining genome and transcriptome reference. **Describe the bug**; [salmon_index.err.log](https://github.com/COMBINE-lab/salmon/files/3801633/salmon_index.err.log). **To Reproduce**; Steps and data to reproduce the behavior: Reproducing the [Selective Alignment](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) tutorial. * Which version of salmon was used?; 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded Linux executable from GitHub; * Which reference (e.g. transcriptome) was used?; gencode.vM23.transcripts.fa.gz and GRCm38.primary_assembly.genome.fa.gz; * Which which program options were used?; `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index`. **Desktop (please complete the following information):**; - OS: Linux; - Version: Ubuntu 16.04. **Additional context**; When installed via bioconda the salmon index command finishes with no error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/441
https://github.com/COMBINE-lab/salmon/issues/441:538,Deployability,install,installed,538,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The bug is related to building the index by combining genome and transcriptome reference. **Describe the bug**; [salmon_index.err.log](https://github.com/COMBINE-lab/salmon/files/3801633/salmon_index.err.log). **To Reproduce**; Steps and data to reproduce the behavior: Reproducing the [Selective Alignment](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) tutorial. * Which version of salmon was used?; 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded Linux executable from GitHub; * Which reference (e.g. transcriptome) was used?; gencode.vM23.transcripts.fa.gz and GRCm38.primary_assembly.genome.fa.gz; * Which which program options were used?; `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index`. **Desktop (please complete the following information):**; - OS: Linux; - Version: Ubuntu 16.04. **Additional context**; When installed via bioconda the salmon index command finishes with no error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/441
https://github.com/COMBINE-lab/salmon/issues/441:1003,Deployability,install,installed,1003,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The bug is related to building the index by combining genome and transcriptome reference. **Describe the bug**; [salmon_index.err.log](https://github.com/COMBINE-lab/salmon/files/3801633/salmon_index.err.log). **To Reproduce**; Steps and data to reproduce the behavior: Reproducing the [Selective Alignment](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) tutorial. * Which version of salmon was used?; 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded Linux executable from GitHub; * Which reference (e.g. transcriptome) was used?; gencode.vM23.transcripts.fa.gz and GRCm38.primary_assembly.genome.fa.gz; * Which which program options were used?; `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index`. **Desktop (please complete the following information):**; - OS: Linux; - Version: Ubuntu 16.04. **Additional context**; When installed via bioconda the salmon index command finishes with no error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/441
https://github.com/COMBINE-lab/salmon/issues/441:216,Testability,log,log,216,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The bug is related to building the index by combining genome and transcriptome reference. **Describe the bug**; [salmon_index.err.log](https://github.com/COMBINE-lab/salmon/files/3801633/salmon_index.err.log). **To Reproduce**; Steps and data to reproduce the behavior: Reproducing the [Selective Alignment](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) tutorial. * Which version of salmon was used?; 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded Linux executable from GitHub; * Which reference (e.g. transcriptome) was used?; gencode.vM23.transcripts.fa.gz and GRCm38.primary_assembly.genome.fa.gz; * Which which program options were used?; `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index`. **Desktop (please complete the following information):**; - OS: Linux; - Version: Ubuntu 16.04. **Additional context**; When installed via bioconda the salmon index command finishes with no error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/441
https://github.com/COMBINE-lab/salmon/issues/441:290,Testability,log,log,290,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The bug is related to building the index by combining genome and transcriptome reference. **Describe the bug**; [salmon_index.err.log](https://github.com/COMBINE-lab/salmon/files/3801633/salmon_index.err.log). **To Reproduce**; Steps and data to reproduce the behavior: Reproducing the [Selective Alignment](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) tutorial. * Which version of salmon was used?; 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded Linux executable from GitHub; * Which reference (e.g. transcriptome) was used?; gencode.vM23.transcripts.fa.gz and GRCm38.primary_assembly.genome.fa.gz; * Which which program options were used?; `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index`. **Desktop (please complete the following information):**; - OS: Linux; - Version: Ubuntu 16.04. **Additional context**; When installed via bioconda the salmon index command finishes with no error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/441
https://github.com/COMBINE-lab/salmon/issues/442:527,Availability,down,download,527,"@k3yavi @rob-p Thanks for work pertaining to new Salmon indexing methods as mentioned in this preprint: https://www.biorxiv.org/content/10.1101/657874v2. Some questions on salmon index building with salmon/v1.0 (as I am confused following the documentation at https://salmon.readthedocs.io/en/latest/salmon.html) - let me know if my understanding is correct. 1. Is this how to create SAF indices - https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ - with these steps, I assume I do not have to separately download mashmap and bedtools software. 2. If one has to use SA method, does one still use the generateDecoyTranscriptome.sh method as listed here - https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh (and this requires the gff file, mashmap and bedtools software). 3. SA and SAF both require genome. Can I still use `salmon index` on the transcriptome file without using genome files? Based on the release notes quoted (copy/pasted) below, I am worried about the phrase `""mapping without selective alignment is disabled""`). . Salmon v1.0 release notes state: . > changes since v.014.1; > In this release of salmon, selective-alignment is enabled by default (and, in fact, mapping without selective-alignemnt is disabled). We may explore, in the future, ways to allow disabling selecive-alignment under the new mapping approach, but at this point, it is always enabled.; > ; ; 4. Page 18 of your preprint pdf states that you used ""salmon v0.15.0 for quasi-mapping"" - so I am assuming I have to keep 2 versions of salmon in my system if I have to do both quasi-mapping and SA/SAF?. 5. Page 19 of your preprint pdf states you used `--mimicBT2 and --useEM for SA and SAF` quantification methods. Is this the recommendation while using SA and SAF methods? ; From salmon v01.4.1 with SA method, I have all along used the default `VBEM `and `--validateMappings` based on info in [SalmonReadTheDocs](https://salmon.readthedocs.io/en/latest/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442
https://github.com/COMBINE-lab/salmon/issues/442:967,Deployability,release,release,967,"@k3yavi @rob-p Thanks for work pertaining to new Salmon indexing methods as mentioned in this preprint: https://www.biorxiv.org/content/10.1101/657874v2. Some questions on salmon index building with salmon/v1.0 (as I am confused following the documentation at https://salmon.readthedocs.io/en/latest/salmon.html) - let me know if my understanding is correct. 1. Is this how to create SAF indices - https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ - with these steps, I assume I do not have to separately download mashmap and bedtools software. 2. If one has to use SA method, does one still use the generateDecoyTranscriptome.sh method as listed here - https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh (and this requires the gff file, mashmap and bedtools software). 3. SA and SAF both require genome. Can I still use `salmon index` on the transcriptome file without using genome files? Based on the release notes quoted (copy/pasted) below, I am worried about the phrase `""mapping without selective alignment is disabled""`). . Salmon v1.0 release notes state: . > changes since v.014.1; > In this release of salmon, selective-alignment is enabled by default (and, in fact, mapping without selective-alignemnt is disabled). We may explore, in the future, ways to allow disabling selecive-alignment under the new mapping approach, but at this point, it is always enabled.; > ; ; 4. Page 18 of your preprint pdf states that you used ""salmon v0.15.0 for quasi-mapping"" - so I am assuming I have to keep 2 versions of salmon in my system if I have to do both quasi-mapping and SA/SAF?. 5. Page 19 of your preprint pdf states you used `--mimicBT2 and --useEM for SA and SAF` quantification methods. Is this the recommendation while using SA and SAF methods? ; From salmon v01.4.1 with SA method, I have all along used the default `VBEM `and `--validateMappings` based on info in [SalmonReadTheDocs](https://salmon.readthedocs.io/en/latest/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442
https://github.com/COMBINE-lab/salmon/issues/442:1107,Deployability,release,release,1107,"iorxiv.org/content/10.1101/657874v2. Some questions on salmon index building with salmon/v1.0 (as I am confused following the documentation at https://salmon.readthedocs.io/en/latest/salmon.html) - let me know if my understanding is correct. 1. Is this how to create SAF indices - https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ - with these steps, I assume I do not have to separately download mashmap and bedtools software. 2. If one has to use SA method, does one still use the generateDecoyTranscriptome.sh method as listed here - https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh (and this requires the gff file, mashmap and bedtools software). 3. SA and SAF both require genome. Can I still use `salmon index` on the transcriptome file without using genome files? Based on the release notes quoted (copy/pasted) below, I am worried about the phrase `""mapping without selective alignment is disabled""`). . Salmon v1.0 release notes state: . > changes since v.014.1; > In this release of salmon, selective-alignment is enabled by default (and, in fact, mapping without selective-alignemnt is disabled). We may explore, in the future, ways to allow disabling selecive-alignment under the new mapping approach, but at this point, it is always enabled.; > ; ; 4. Page 18 of your preprint pdf states that you used ""salmon v0.15.0 for quasi-mapping"" - so I am assuming I have to keep 2 versions of salmon in my system if I have to do both quasi-mapping and SA/SAF?. 5. Page 19 of your preprint pdf states you used `--mimicBT2 and --useEM for SA and SAF` quantification methods. Is this the recommendation while using SA and SAF methods? ; From salmon v01.4.1 with SA method, I have all along used the default `VBEM `and `--validateMappings` based on info in [SalmonReadTheDocs](https://salmon.readthedocs.io/en/latest/salmon.html#validatemappings) . > Enables selective alignment of the sequencing reads when mapping them to the trans",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442
https://github.com/COMBINE-lab/salmon/issues/442:1165,Deployability,release,release,1165,"onfused following the documentation at https://salmon.readthedocs.io/en/latest/salmon.html) - let me know if my understanding is correct. 1. Is this how to create SAF indices - https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ - with these steps, I assume I do not have to separately download mashmap and bedtools software. 2. If one has to use SA method, does one still use the generateDecoyTranscriptome.sh method as listed here - https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh (and this requires the gff file, mashmap and bedtools software). 3. SA and SAF both require genome. Can I still use `salmon index` on the transcriptome file without using genome files? Based on the release notes quoted (copy/pasted) below, I am worried about the phrase `""mapping without selective alignment is disabled""`). . Salmon v1.0 release notes state: . > changes since v.014.1; > In this release of salmon, selective-alignment is enabled by default (and, in fact, mapping without selective-alignemnt is disabled). We may explore, in the future, ways to allow disabling selecive-alignment under the new mapping approach, but at this point, it is always enabled.; > ; ; 4. Page 18 of your preprint pdf states that you used ""salmon v0.15.0 for quasi-mapping"" - so I am assuming I have to keep 2 versions of salmon in my system if I have to do both quasi-mapping and SA/SAF?. 5. Page 19 of your preprint pdf states you used `--mimicBT2 and --useEM for SA and SAF` quantification methods. Is this the recommendation while using SA and SAF methods? ; From salmon v01.4.1 with SA method, I have all along used the default `VBEM `and `--validateMappings` based on info in [SalmonReadTheDocs](https://salmon.readthedocs.io/en/latest/salmon.html#validatemappings) . > Enables selective alignment of the sequencing reads when mapping them to the transcriptome. This can improve both the sensitivity and specificity of mapping and, as a result, can improve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442
https://github.com/COMBINE-lab/salmon/issues/442:1906,Security,validat,validateMappings,1906,"ill use the generateDecoyTranscriptome.sh method as listed here - https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh (and this requires the gff file, mashmap and bedtools software). 3. SA and SAF both require genome. Can I still use `salmon index` on the transcriptome file without using genome files? Based on the release notes quoted (copy/pasted) below, I am worried about the phrase `""mapping without selective alignment is disabled""`). . Salmon v1.0 release notes state: . > changes since v.014.1; > In this release of salmon, selective-alignment is enabled by default (and, in fact, mapping without selective-alignemnt is disabled). We may explore, in the future, ways to allow disabling selecive-alignment under the new mapping approach, but at this point, it is always enabled.; > ; ; 4. Page 18 of your preprint pdf states that you used ""salmon v0.15.0 for quasi-mapping"" - so I am assuming I have to keep 2 versions of salmon in my system if I have to do both quasi-mapping and SA/SAF?. 5. Page 19 of your preprint pdf states you used `--mimicBT2 and --useEM for SA and SAF` quantification methods. Is this the recommendation while using SA and SAF methods? ; From salmon v01.4.1 with SA method, I have all along used the default `VBEM `and `--validateMappings` based on info in [SalmonReadTheDocs](https://salmon.readthedocs.io/en/latest/salmon.html#validatemappings) . > Enables selective alignment of the sequencing reads when mapping them to the transcriptome. This can improve both the sensitivity and specificity of mapping and, as a result, can improve quantification accuracy. 6. Related to Q5 above - I assume you used `--mimicBT2 and --useEM for SA and SAF` methods so that you can compare to RSEM. Have you used the defaults for salmon quant for SA and SAF - or in other words, how does SA/SAF results compare against other methods listed in the preprint when you **_do not use_** the `--mimicBT2 and --useEM` options. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442
https://github.com/COMBINE-lab/salmon/issues/442:2013,Security,validat,validatemappings,2013,"ill use the generateDecoyTranscriptome.sh method as listed here - https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh (and this requires the gff file, mashmap and bedtools software). 3. SA and SAF both require genome. Can I still use `salmon index` on the transcriptome file without using genome files? Based on the release notes quoted (copy/pasted) below, I am worried about the phrase `""mapping without selective alignment is disabled""`). . Salmon v1.0 release notes state: . > changes since v.014.1; > In this release of salmon, selective-alignment is enabled by default (and, in fact, mapping without selective-alignemnt is disabled). We may explore, in the future, ways to allow disabling selecive-alignment under the new mapping approach, but at this point, it is always enabled.; > ; ; 4. Page 18 of your preprint pdf states that you used ""salmon v0.15.0 for quasi-mapping"" - so I am assuming I have to keep 2 versions of salmon in my system if I have to do both quasi-mapping and SA/SAF?. 5. Page 19 of your preprint pdf states you used `--mimicBT2 and --useEM for SA and SAF` quantification methods. Is this the recommendation while using SA and SAF methods? ; From salmon v01.4.1 with SA method, I have all along used the default `VBEM `and `--validateMappings` based on info in [SalmonReadTheDocs](https://salmon.readthedocs.io/en/latest/salmon.html#validatemappings) . > Enables selective alignment of the sequencing reads when mapping them to the transcriptome. This can improve both the sensitivity and specificity of mapping and, as a result, can improve quantification accuracy. 6. Related to Q5 above - I assume you used `--mimicBT2 and --useEM for SA and SAF` methods so that you can compare to RSEM. Have you used the defaults for salmon quant for SA and SAF - or in other words, how does SA/SAF results compare against other methods listed in the preprint when you **_do not use_** the `--mimicBT2 and --useEM` options. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442
https://github.com/COMBINE-lab/salmon/issues/443:14,Deployability,update,update,14,"I'm trying to update the 0.9.1 brew/conda package to 1.0; What version of `openssl` does it need?; I've tried `curl-openssl/lib/libcurl.a (found version ""7.66.0"")` without luck too.; Nothing stated at https://salmon.readthedocs.io/en/latest/building.html#. ```; /home/linuxbrew/.linuxbrew/bin/ld: /home/linuxbrew/.linuxbrew/lib/libcurl.a(libcurl_la-openssl.o): in function `Curl_ossl_sha256sum':; openssl.c:(.text+0x11c): undefined reference to `EVP_MD_CTX_create'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x124): undefined reference to `EVP_sha256'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x131): undefined reference to `EVP_DigestInit_ex'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x13f): undefined reference to `EVP_DigestUpdate'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x14f): undefined reference to `EVP_DigestFinal_ex'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x157): undefined reference to `EVP_MD_CTX_destroy'; /home/linuxbrew/.linuxbrew/bin/ld: /home/linuxbrew/.linuxbrew/lib/libcurl.a(libcurl_la-openssl.o): in function `Curl_ossl_md5sum':; ```. Also this:; ```; CMake Warning at /home/linuxbrew/.linuxbrew/lib/cmake/boost_iostreams-1.71.0/libboost_iostreams-variant-static.cmake:59 (message):; Target Boost::iostreams already has an imported location; '/home/linuxbrew/.linuxbrew/lib/libboost_iostreams-mt.a', which will be; overwritten with '/home/linuxbrew/.linuxbrew/lib/libboost_iostreams.a'; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/443
https://github.com/COMBINE-lab/salmon/issues/443:1255,Integrability,message,message,1255,"I'm trying to update the 0.9.1 brew/conda package to 1.0; What version of `openssl` does it need?; I've tried `curl-openssl/lib/libcurl.a (found version ""7.66.0"")` without luck too.; Nothing stated at https://salmon.readthedocs.io/en/latest/building.html#. ```; /home/linuxbrew/.linuxbrew/bin/ld: /home/linuxbrew/.linuxbrew/lib/libcurl.a(libcurl_la-openssl.o): in function `Curl_ossl_sha256sum':; openssl.c:(.text+0x11c): undefined reference to `EVP_MD_CTX_create'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x124): undefined reference to `EVP_sha256'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x131): undefined reference to `EVP_DigestInit_ex'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x13f): undefined reference to `EVP_DigestUpdate'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x14f): undefined reference to `EVP_DigestFinal_ex'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x157): undefined reference to `EVP_MD_CTX_destroy'; /home/linuxbrew/.linuxbrew/bin/ld: /home/linuxbrew/.linuxbrew/lib/libcurl.a(libcurl_la-openssl.o): in function `Curl_ossl_md5sum':; ```. Also this:; ```; CMake Warning at /home/linuxbrew/.linuxbrew/lib/cmake/boost_iostreams-1.71.0/libboost_iostreams-variant-static.cmake:59 (message):; Target Boost::iostreams already has an imported location; '/home/linuxbrew/.linuxbrew/lib/libboost_iostreams-mt.a', which will be; overwritten with '/home/linuxbrew/.linuxbrew/lib/libboost_iostreams.a'; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/443
https://github.com/COMBINE-lab/salmon/issues/444:65,Availability,avail,available,65,"Hi @k3yavi @rob-p . Will there be precomputed SAF gentromes made available as tarballs for select genomes (human, mouse, rat, arabidopsis, soybean, maize) etc . A few months ago, they were available (for SA gentromes) here: https://github.com/COMBINE-lab/salmon. Thanks,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/444
https://github.com/COMBINE-lab/salmon/issues/444:189,Availability,avail,available,189,"Hi @k3yavi @rob-p . Will there be precomputed SAF gentromes made available as tarballs for select genomes (human, mouse, rat, arabidopsis, soybean, maize) etc . A few months ago, they were available (for SA gentromes) here: https://github.com/COMBINE-lab/salmon. Thanks,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/444
https://github.com/COMBINE-lab/salmon/issues/445:1004,Availability,error,error,1004,"Hi,. first of all congratulations on a great tool, the expansion to scRNA-seq analysis is especially appreciated!. I was wondering what the reason for setting an upper limit on the barcode length in alevin is - would longer barcodes affect the computation in some manner? We are working with barcodes of length 27, which are incompatible with the hardcoded upper barcode length limit [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). I manually raised the limit on a modified alevin version, and the final output looks as expected, so if there is no risk that I am unaware of, would you consider raising or removing the barcode length limit altogether?. Thank you for you help!. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Using the manual barcode and UMI specification with `--end`, `--barcodeLength`, and `--umiLength` fails for barcodes longer than 20 with the error message:; ```; Barcode length (27) was not in the required length range [1, 20].; ```; The barcode length upper limit is hardcoded [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). **To Reproduce**; In Salmon 1.0.0, run `salmon alevin [...] --end 5 --barcodeLength 27 --umiLength 8` (or any `barcodeLength` value above 20). * Which version of salmon was used? 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? not relevant; * Which read files were used? not relevant; * Which which program options were used? `--end 5 --barcodeLength 27 --umiLength 8`. **Expected behavior**; Ideally, barcode longer than 20 would be processed as normal. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Mac OS X; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/445
https://github.com/COMBINE-lab/salmon/issues/445:1483,Availability,down,downloaded,1483,"specially appreciated!. I was wondering what the reason for setting an upper limit on the barcode length in alevin is - would longer barcodes affect the computation in some manner? We are working with barcodes of length 27, which are incompatible with the hardcoded upper barcode length limit [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). I manually raised the limit on a modified alevin version, and the final output looks as expected, so if there is no risk that I am unaware of, would you consider raising or removing the barcode length limit altogether?. Thank you for you help!. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Using the manual barcode and UMI specification with `--end`, `--barcodeLength`, and `--umiLength` fails for barcodes longer than 20 with the error message:; ```; Barcode length (27) was not in the required length range [1, 20].; ```; The barcode length upper limit is hardcoded [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). **To Reproduce**; In Salmon 1.0.0, run `salmon alevin [...] --end 5 --barcodeLength 27 --umiLength 8` (or any `barcodeLength` value above 20). * Which version of salmon was used? 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? not relevant; * Which read files were used? not relevant; * Which which program options were used? `--end 5 --barcodeLength 27 --umiLength 8`. **Expected behavior**; Ideally, barcode longer than 20 would be processed as normal. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Mac OS X; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`] 10.14.6 (18G103). **Additional context**; See top of post",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/445
https://github.com/COMBINE-lab/salmon/issues/445:1462,Deployability,install,installed,1462,"specially appreciated!. I was wondering what the reason for setting an upper limit on the barcode length in alevin is - would longer barcodes affect the computation in some manner? We are working with barcodes of length 27, which are incompatible with the hardcoded upper barcode length limit [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). I manually raised the limit on a modified alevin version, and the final output looks as expected, so if there is no risk that I am unaware of, would you consider raising or removing the barcode length limit altogether?. Thank you for you help!. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Using the manual barcode and UMI specification with `--end`, `--barcodeLength`, and `--umiLength` fails for barcodes longer than 20 with the error message:; ```; Barcode length (27) was not in the required length range [1, 20].; ```; The barcode length upper limit is hardcoded [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). **To Reproduce**; In Salmon 1.0.0, run `salmon alevin [...] --end 5 --barcodeLength 27 --umiLength 8` (or any `barcodeLength` value above 20). * Which version of salmon was used? 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? not relevant; * Which read files were used? not relevant; * Which which program options were used? `--end 5 --barcodeLength 27 --umiLength 8`. **Expected behavior**; Ideally, barcode longer than 20 would be processed as normal. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Mac OS X; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`] 10.14.6 (18G103). **Additional context**; See top of post",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/445
https://github.com/COMBINE-lab/salmon/issues/445:1010,Integrability,message,message,1010,"Hi,. first of all congratulations on a great tool, the expansion to scRNA-seq analysis is especially appreciated!. I was wondering what the reason for setting an upper limit on the barcode length in alevin is - would longer barcodes affect the computation in some manner? We are working with barcodes of length 27, which are incompatible with the hardcoded upper barcode length limit [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). I manually raised the limit on a modified alevin version, and the final output looks as expected, so if there is no risk that I am unaware of, would you consider raising or removing the barcode length limit altogether?. Thank you for you help!. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Using the manual barcode and UMI specification with `--end`, `--barcodeLength`, and `--umiLength` fails for barcodes longer than 20 with the error message:; ```; Barcode length (27) was not in the required length range [1, 20].; ```; The barcode length upper limit is hardcoded [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). **To Reproduce**; In Salmon 1.0.0, run `salmon alevin [...] --end 5 --barcodeLength 27 --umiLength 8` (or any `barcodeLength` value above 20). * Which version of salmon was used? 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? not relevant; * Which read files were used? not relevant; * Which which program options were used? `--end 5 --barcodeLength 27 --umiLength 8`. **Expected behavior**; Ideally, barcode longer than 20 would be processed as normal. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Mac OS X; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/445
https://github.com/COMBINE-lab/salmon/issues/445:618,Safety,risk,risk,618,"Hi,. first of all congratulations on a great tool, the expansion to scRNA-seq analysis is especially appreciated!. I was wondering what the reason for setting an upper limit on the barcode length in alevin is - would longer barcodes affect the computation in some manner? We are working with barcodes of length 27, which are incompatible with the hardcoded upper barcode length limit [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). I manually raised the limit on a modified alevin version, and the final output looks as expected, so if there is no risk that I am unaware of, would you consider raising or removing the barcode length limit altogether?. Thank you for you help!. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Using the manual barcode and UMI specification with `--end`, `--barcodeLength`, and `--umiLength` fails for barcodes longer than 20 with the error message:; ```; Barcode length (27) was not in the required length range [1, 20].; ```; The barcode length upper limit is hardcoded [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). **To Reproduce**; In Salmon 1.0.0, run `salmon alevin [...] --end 5 --barcodeLength 27 --umiLength 8` (or any `barcodeLength` value above 20). * Which version of salmon was used? 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? not relevant; * Which read files were used? not relevant; * Which which program options were used? `--end 5 --barcodeLength 27 --umiLength 8`. **Expected behavior**; Ideally, barcode longer than 20 would be processed as normal. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Mac OS X; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/445
https://github.com/COMBINE-lab/salmon/issues/446:177,Availability,avail,available,177,"Hi. I would like to know where I can get detailed info for different fields that get listed in meta_info.json. I can see some information listed in the section ""New information available in meta_info.json:"" in this page https://github.com/COMBINE-lab/salmon/releases. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/446
https://github.com/COMBINE-lab/salmon/issues/446:258,Deployability,release,releases,258,"Hi. I would like to know where I can get detailed info for different fields that get listed in meta_info.json. I can see some information listed in the section ""New information available in meta_info.json:"" in this page https://github.com/COMBINE-lab/salmon/releases. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/446
https://github.com/COMBINE-lab/salmon/issues/447:390,Availability,error,error,390,"Hello,; I'm trying to run the docker image on a cluster to quantify fastq files using the mapping mode. ; I'm using it with singularity ( already used it on another cluster and it worked perfectly). Here the command:; singularity exec docker://combinelab/salmon:latest salmon quant --validateMappings -l A -p ${threads} -o ./salmon_map -i ${salmon_index} -1 ${file_1} -2 ${file_2}. And the error:; salmon: error while loading shared libraries: libtbbmalloc.so.2: cannot open shared object file: No such file or directory. I suspect that it's missing inside the image and that in the other cluster it was running because it was taking the one outside the image ( the cluster where it worked had lots of libraries and softwares available, in this other you need to load the modules). Cheers; Claudio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/447
https://github.com/COMBINE-lab/salmon/issues/447:406,Availability,error,error,406,"Hello,; I'm trying to run the docker image on a cluster to quantify fastq files using the mapping mode. ; I'm using it with singularity ( already used it on another cluster and it worked perfectly). Here the command:; singularity exec docker://combinelab/salmon:latest salmon quant --validateMappings -l A -p ${threads} -o ./salmon_map -i ${salmon_index} -1 ${file_1} -2 ${file_2}. And the error:; salmon: error while loading shared libraries: libtbbmalloc.so.2: cannot open shared object file: No such file or directory. I suspect that it's missing inside the image and that in the other cluster it was running because it was taking the one outside the image ( the cluster where it worked had lots of libraries and softwares available, in this other you need to load the modules). Cheers; Claudio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/447
https://github.com/COMBINE-lab/salmon/issues/447:726,Availability,avail,available,726,"Hello,; I'm trying to run the docker image on a cluster to quantify fastq files using the mapping mode. ; I'm using it with singularity ( already used it on another cluster and it worked perfectly). Here the command:; singularity exec docker://combinelab/salmon:latest salmon quant --validateMappings -l A -p ${threads} -o ./salmon_map -i ${salmon_index} -1 ${file_1} -2 ${file_2}. And the error:; salmon: error while loading shared libraries: libtbbmalloc.so.2: cannot open shared object file: No such file or directory. I suspect that it's missing inside the image and that in the other cluster it was running because it was taking the one outside the image ( the cluster where it worked had lots of libraries and softwares available, in this other you need to load the modules). Cheers; Claudio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/447
https://github.com/COMBINE-lab/salmon/issues/447:418,Performance,load,loading,418,"Hello,; I'm trying to run the docker image on a cluster to quantify fastq files using the mapping mode. ; I'm using it with singularity ( already used it on another cluster and it worked perfectly). Here the command:; singularity exec docker://combinelab/salmon:latest salmon quant --validateMappings -l A -p ${threads} -o ./salmon_map -i ${salmon_index} -1 ${file_1} -2 ${file_2}. And the error:; salmon: error while loading shared libraries: libtbbmalloc.so.2: cannot open shared object file: No such file or directory. I suspect that it's missing inside the image and that in the other cluster it was running because it was taking the one outside the image ( the cluster where it worked had lots of libraries and softwares available, in this other you need to load the modules). Cheers; Claudio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/447
https://github.com/COMBINE-lab/salmon/issues/447:763,Performance,load,load,763,"Hello,; I'm trying to run the docker image on a cluster to quantify fastq files using the mapping mode. ; I'm using it with singularity ( already used it on another cluster and it worked perfectly). Here the command:; singularity exec docker://combinelab/salmon:latest salmon quant --validateMappings -l A -p ${threads} -o ./salmon_map -i ${salmon_index} -1 ${file_1} -2 ${file_2}. And the error:; salmon: error while loading shared libraries: libtbbmalloc.so.2: cannot open shared object file: No such file or directory. I suspect that it's missing inside the image and that in the other cluster it was running because it was taking the one outside the image ( the cluster where it worked had lots of libraries and softwares available, in this other you need to load the modules). Cheers; Claudio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/447
https://github.com/COMBINE-lab/salmon/issues/447:284,Security,validat,validateMappings,284,"Hello,; I'm trying to run the docker image on a cluster to quantify fastq files using the mapping mode. ; I'm using it with singularity ( already used it on another cluster and it worked perfectly). Here the command:; singularity exec docker://combinelab/salmon:latest salmon quant --validateMappings -l A -p ${threads} -o ./salmon_map -i ${salmon_index} -1 ${file_1} -2 ${file_2}. And the error:; salmon: error while loading shared libraries: libtbbmalloc.so.2: cannot open shared object file: No such file or directory. I suspect that it's missing inside the image and that in the other cluster it was running because it was taking the one outside the image ( the cluster where it worked had lots of libraries and softwares available, in this other you need to load the modules). Cheers; Claudio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/447
https://github.com/COMBINE-lab/salmon/issues/448:927,Deployability,install,install,927,"Hi,. I am testing Alevin, and would like to compare against Cell Ranger on my data set. While primary mapping statistics indicate more reads mapped, I would like to compare the results in the final analysis, in Seurat. Many steps rely on HGNC Gene symbols as opposed to Ensemble IDs. ### What is the best way to convert ensembl IDs to gene symbol in Alevin?. Alevin (aligned as in this [gist](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001#file-alevin-default-ipynb), imported to R in this [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/)) returns ensembl IDs in format like ""ENSG00000215910.7"". ```R; require(""fishpond""); require(""tximport""); ; files <- file.path(""[...]/alevin/quants_mat.gz""); file.exists(files); txi <- tximport(files, type=""alevin"");; rownames( txi$counts); ``` . I am currently converting these using biomart with suboptimal adaptations:. ```R; BiocManager::install(""biomaRt""); require('biomaRt'); mart <- useDataset(""hsapiens_gene_ensembl"", useMart(""ensembl"")); genes <- rownames(txi$counts); df$id <- NA; meta.genes <- getBM(attributes = c(""ensembl_gene_id"",""external_gene_name"", ""description""), ; values = genes, mart = mart ); ```; Manual adaptations:. 1. I trim IDs after dot (""ENSG00000215910.7"" → ""ENSG00000215910”); 2. I remove NA values (not all trimmed gene IDs are found in biomaRt); 3. I add up counts of genes (per ENS.ID) with the same gene symbol, e.g. “Y_RNA” or “HSPA14”. ```R; g.LookUp = meta.genes[,2]; names(g.LookUp) = meta.genes[,1]; ; # 1. Trim; ensembl_ID.simple =str_split_fixed(genes,pattern = '\\.', n=2)[,1]; ; genes.converted = g.LookUp[ensembl_ID.simple]; any.duplicated(genes.converted); ; # ...etc; ```. Is there a better way to convert IDs, possibly implemented in Alevin / Salmon?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/448
https://github.com/COMBINE-lab/salmon/issues/448:894,Energy Efficiency,adapt,adaptations,894,"Hi,. I am testing Alevin, and would like to compare against Cell Ranger on my data set. While primary mapping statistics indicate more reads mapped, I would like to compare the results in the final analysis, in Seurat. Many steps rely on HGNC Gene symbols as opposed to Ensemble IDs. ### What is the best way to convert ensembl IDs to gene symbol in Alevin?. Alevin (aligned as in this [gist](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001#file-alevin-default-ipynb), imported to R in this [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/)) returns ensembl IDs in format like ""ENSG00000215910.7"". ```R; require(""fishpond""); require(""tximport""); ; files <- file.path(""[...]/alevin/quants_mat.gz""); file.exists(files); txi <- tximport(files, type=""alevin"");; rownames( txi$counts); ``` . I am currently converting these using biomart with suboptimal adaptations:. ```R; BiocManager::install(""biomaRt""); require('biomaRt'); mart <- useDataset(""hsapiens_gene_ensembl"", useMart(""ensembl"")); genes <- rownames(txi$counts); df$id <- NA; meta.genes <- getBM(attributes = c(""ensembl_gene_id"",""external_gene_name"", ""description""), ; values = genes, mart = mart ); ```; Manual adaptations:. 1. I trim IDs after dot (""ENSG00000215910.7"" → ""ENSG00000215910”); 2. I remove NA values (not all trimmed gene IDs are found in biomaRt); 3. I add up counts of genes (per ENS.ID) with the same gene symbol, e.g. “Y_RNA” or “HSPA14”. ```R; g.LookUp = meta.genes[,2]; names(g.LookUp) = meta.genes[,1]; ; # 1. Trim; ensembl_ID.simple =str_split_fixed(genes,pattern = '\\.', n=2)[,1]; ; genes.converted = g.LookUp[ensembl_ID.simple]; any.duplicated(genes.converted); ; # ...etc; ```. Is there a better way to convert IDs, possibly implemented in Alevin / Salmon?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/448
https://github.com/COMBINE-lab/salmon/issues/448:1212,Energy Efficiency,adapt,adaptations,1212,"Hi,. I am testing Alevin, and would like to compare against Cell Ranger on my data set. While primary mapping statistics indicate more reads mapped, I would like to compare the results in the final analysis, in Seurat. Many steps rely on HGNC Gene symbols as opposed to Ensemble IDs. ### What is the best way to convert ensembl IDs to gene symbol in Alevin?. Alevin (aligned as in this [gist](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001#file-alevin-default-ipynb), imported to R in this [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/)) returns ensembl IDs in format like ""ENSG00000215910.7"". ```R; require(""fishpond""); require(""tximport""); ; files <- file.path(""[...]/alevin/quants_mat.gz""); file.exists(files); txi <- tximport(files, type=""alevin"");; rownames( txi$counts); ``` . I am currently converting these using biomart with suboptimal adaptations:. ```R; BiocManager::install(""biomaRt""); require('biomaRt'); mart <- useDataset(""hsapiens_gene_ensembl"", useMart(""ensembl"")); genes <- rownames(txi$counts); df$id <- NA; meta.genes <- getBM(attributes = c(""ensembl_gene_id"",""external_gene_name"", ""description""), ; values = genes, mart = mart ); ```; Manual adaptations:. 1. I trim IDs after dot (""ENSG00000215910.7"" → ""ENSG00000215910”); 2. I remove NA values (not all trimmed gene IDs are found in biomaRt); 3. I add up counts of genes (per ENS.ID) with the same gene symbol, e.g. “Y_RNA” or “HSPA14”. ```R; g.LookUp = meta.genes[,2]; names(g.LookUp) = meta.genes[,1]; ; # 1. Trim; ensembl_ID.simple =str_split_fixed(genes,pattern = '\\.', n=2)[,1]; ; genes.converted = g.LookUp[ensembl_ID.simple]; any.duplicated(genes.converted); ; # ...etc; ```. Is there a better way to convert IDs, possibly implemented in Alevin / Salmon?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/448
https://github.com/COMBINE-lab/salmon/issues/448:894,Modifiability,adapt,adaptations,894,"Hi,. I am testing Alevin, and would like to compare against Cell Ranger on my data set. While primary mapping statistics indicate more reads mapped, I would like to compare the results in the final analysis, in Seurat. Many steps rely on HGNC Gene symbols as opposed to Ensemble IDs. ### What is the best way to convert ensembl IDs to gene symbol in Alevin?. Alevin (aligned as in this [gist](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001#file-alevin-default-ipynb), imported to R in this [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/)) returns ensembl IDs in format like ""ENSG00000215910.7"". ```R; require(""fishpond""); require(""tximport""); ; files <- file.path(""[...]/alevin/quants_mat.gz""); file.exists(files); txi <- tximport(files, type=""alevin"");; rownames( txi$counts); ``` . I am currently converting these using biomart with suboptimal adaptations:. ```R; BiocManager::install(""biomaRt""); require('biomaRt'); mart <- useDataset(""hsapiens_gene_ensembl"", useMart(""ensembl"")); genes <- rownames(txi$counts); df$id <- NA; meta.genes <- getBM(attributes = c(""ensembl_gene_id"",""external_gene_name"", ""description""), ; values = genes, mart = mart ); ```; Manual adaptations:. 1. I trim IDs after dot (""ENSG00000215910.7"" → ""ENSG00000215910”); 2. I remove NA values (not all trimmed gene IDs are found in biomaRt); 3. I add up counts of genes (per ENS.ID) with the same gene symbol, e.g. “Y_RNA” or “HSPA14”. ```R; g.LookUp = meta.genes[,2]; names(g.LookUp) = meta.genes[,1]; ; # 1. Trim; ensembl_ID.simple =str_split_fixed(genes,pattern = '\\.', n=2)[,1]; ; genes.converted = g.LookUp[ensembl_ID.simple]; any.duplicated(genes.converted); ; # ...etc; ```. Is there a better way to convert IDs, possibly implemented in Alevin / Salmon?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/448
https://github.com/COMBINE-lab/salmon/issues/448:1212,Modifiability,adapt,adaptations,1212,"Hi,. I am testing Alevin, and would like to compare against Cell Ranger on my data set. While primary mapping statistics indicate more reads mapped, I would like to compare the results in the final analysis, in Seurat. Many steps rely on HGNC Gene symbols as opposed to Ensemble IDs. ### What is the best way to convert ensembl IDs to gene symbol in Alevin?. Alevin (aligned as in this [gist](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001#file-alevin-default-ipynb), imported to R in this [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/)) returns ensembl IDs in format like ""ENSG00000215910.7"". ```R; require(""fishpond""); require(""tximport""); ; files <- file.path(""[...]/alevin/quants_mat.gz""); file.exists(files); txi <- tximport(files, type=""alevin"");; rownames( txi$counts); ``` . I am currently converting these using biomart with suboptimal adaptations:. ```R; BiocManager::install(""biomaRt""); require('biomaRt'); mart <- useDataset(""hsapiens_gene_ensembl"", useMart(""ensembl"")); genes <- rownames(txi$counts); df$id <- NA; meta.genes <- getBM(attributes = c(""ensembl_gene_id"",""external_gene_name"", ""description""), ; values = genes, mart = mart ); ```; Manual adaptations:. 1. I trim IDs after dot (""ENSG00000215910.7"" → ""ENSG00000215910”); 2. I remove NA values (not all trimmed gene IDs are found in biomaRt); 3. I add up counts of genes (per ENS.ID) with the same gene symbol, e.g. “Y_RNA” or “HSPA14”. ```R; g.LookUp = meta.genes[,2]; names(g.LookUp) = meta.genes[,1]; ; # 1. Trim; ensembl_ID.simple =str_split_fixed(genes,pattern = '\\.', n=2)[,1]; ; genes.converted = g.LookUp[ensembl_ID.simple]; any.duplicated(genes.converted); ; # ...etc; ```. Is there a better way to convert IDs, possibly implemented in Alevin / Salmon?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/448
https://github.com/COMBINE-lab/salmon/issues/448:10,Testability,test,testing,10,"Hi,. I am testing Alevin, and would like to compare against Cell Ranger on my data set. While primary mapping statistics indicate more reads mapped, I would like to compare the results in the final analysis, in Seurat. Many steps rely on HGNC Gene symbols as opposed to Ensemble IDs. ### What is the best way to convert ensembl IDs to gene symbol in Alevin?. Alevin (aligned as in this [gist](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001#file-alevin-default-ipynb), imported to R in this [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/)) returns ensembl IDs in format like ""ENSG00000215910.7"". ```R; require(""fishpond""); require(""tximport""); ; files <- file.path(""[...]/alevin/quants_mat.gz""); file.exists(files); txi <- tximport(files, type=""alevin"");; rownames( txi$counts); ``` . I am currently converting these using biomart with suboptimal adaptations:. ```R; BiocManager::install(""biomaRt""); require('biomaRt'); mart <- useDataset(""hsapiens_gene_ensembl"", useMart(""ensembl"")); genes <- rownames(txi$counts); df$id <- NA; meta.genes <- getBM(attributes = c(""ensembl_gene_id"",""external_gene_name"", ""description""), ; values = genes, mart = mart ); ```; Manual adaptations:. 1. I trim IDs after dot (""ENSG00000215910.7"" → ""ENSG00000215910”); 2. I remove NA values (not all trimmed gene IDs are found in biomaRt); 3. I add up counts of genes (per ENS.ID) with the same gene symbol, e.g. “Y_RNA” or “HSPA14”. ```R; g.LookUp = meta.genes[,2]; names(g.LookUp) = meta.genes[,1]; ; # 1. Trim; ensembl_ID.simple =str_split_fixed(genes,pattern = '\\.', n=2)[,1]; ; genes.converted = g.LookUp[ensembl_ID.simple]; any.duplicated(genes.converted); ; # ...etc; ```. Is there a better way to convert IDs, possibly implemented in Alevin / Salmon?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/448
https://github.com/COMBINE-lab/salmon/issues/448:1549,Usability,simpl,simple,1549,"Hi,. I am testing Alevin, and would like to compare against Cell Ranger on my data set. While primary mapping statistics indicate more reads mapped, I would like to compare the results in the final analysis, in Seurat. Many steps rely on HGNC Gene symbols as opposed to Ensemble IDs. ### What is the best way to convert ensembl IDs to gene symbol in Alevin?. Alevin (aligned as in this [gist](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001#file-alevin-default-ipynb), imported to R in this [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/)) returns ensembl IDs in format like ""ENSG00000215910.7"". ```R; require(""fishpond""); require(""tximport""); ; files <- file.path(""[...]/alevin/quants_mat.gz""); file.exists(files); txi <- tximport(files, type=""alevin"");; rownames( txi$counts); ``` . I am currently converting these using biomart with suboptimal adaptations:. ```R; BiocManager::install(""biomaRt""); require('biomaRt'); mart <- useDataset(""hsapiens_gene_ensembl"", useMart(""ensembl"")); genes <- rownames(txi$counts); df$id <- NA; meta.genes <- getBM(attributes = c(""ensembl_gene_id"",""external_gene_name"", ""description""), ; values = genes, mart = mart ); ```; Manual adaptations:. 1. I trim IDs after dot (""ENSG00000215910.7"" → ""ENSG00000215910”); 2. I remove NA values (not all trimmed gene IDs are found in biomaRt); 3. I add up counts of genes (per ENS.ID) with the same gene symbol, e.g. “Y_RNA” or “HSPA14”. ```R; g.LookUp = meta.genes[,2]; names(g.LookUp) = meta.genes[,1]; ; # 1. Trim; ensembl_ID.simple =str_split_fixed(genes,pattern = '\\.', n=2)[,1]; ; genes.converted = g.LookUp[ensembl_ID.simple]; any.duplicated(genes.converted); ; # ...etc; ```. Is there a better way to convert IDs, possibly implemented in Alevin / Salmon?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/448
https://github.com/COMBINE-lab/salmon/issues/448:1646,Usability,simpl,simple,1646,"Hi,. I am testing Alevin, and would like to compare against Cell Ranger on my data set. While primary mapping statistics indicate more reads mapped, I would like to compare the results in the final analysis, in Seurat. Many steps rely on HGNC Gene symbols as opposed to Ensemble IDs. ### What is the best way to convert ensembl IDs to gene symbol in Alevin?. Alevin (aligned as in this [gist](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001#file-alevin-default-ipynb), imported to R in this [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/)) returns ensembl IDs in format like ""ENSG00000215910.7"". ```R; require(""fishpond""); require(""tximport""); ; files <- file.path(""[...]/alevin/quants_mat.gz""); file.exists(files); txi <- tximport(files, type=""alevin"");; rownames( txi$counts); ``` . I am currently converting these using biomart with suboptimal adaptations:. ```R; BiocManager::install(""biomaRt""); require('biomaRt'); mart <- useDataset(""hsapiens_gene_ensembl"", useMart(""ensembl"")); genes <- rownames(txi$counts); df$id <- NA; meta.genes <- getBM(attributes = c(""ensembl_gene_id"",""external_gene_name"", ""description""), ; values = genes, mart = mart ); ```; Manual adaptations:. 1. I trim IDs after dot (""ENSG00000215910.7"" → ""ENSG00000215910”); 2. I remove NA values (not all trimmed gene IDs are found in biomaRt); 3. I add up counts of genes (per ENS.ID) with the same gene symbol, e.g. “Y_RNA” or “HSPA14”. ```R; g.LookUp = meta.genes[,2]; names(g.LookUp) = meta.genes[,1]; ; # 1. Trim; ensembl_ID.simple =str_split_fixed(genes,pattern = '\\.', n=2)[,1]; ; genes.converted = g.LookUp[ensembl_ID.simple]; any.duplicated(genes.converted); ; # ...etc; ```. Is there a better way to convert IDs, possibly implemented in Alevin / Salmon?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/448
https://github.com/COMBINE-lab/salmon/issues/449:206,Security,validat,validateMappings,206,"Hi @rob-p @k3yavi . I am using salmon v1.0.0 and I am using the SAF method to quantify SE QuantSeq reads (Lexogen FWD) using these command line parameters. `salmon quant --threads 16 --noLengthCorrection --validateMappings --numBootstraps 100 -l SF -i <path_to_SAF_Gentrome_Index> -r <SE_READ_1.fq> -o <salmon_SE_READ_1>`. What I observe: 75% reads map to the decoys and 25% to the actual transcripts. I am unable to fathom why this is happening? . Any suggestions as to what could be going wrong?. For now, I ended up using just the transcriptome for indexing and then salmon quant using the same parameters described above. . [However, it bothers me that I am getting the above results despite using the SAF method as suggested in the salmon docs](https://salmon.readthedocs.io/en/latest/salmon.html) - did I get anything wrong with my parameters?. > Finally, we recommend using selective alignment with a decoy-aware transcriptome, to mitigate potential spurious mapping of reads that actually arise from some unannotated genomic locus that is sequence-similar to an annotated transcriptome.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/449
https://github.com/COMBINE-lab/salmon/issues/450:1504,Deployability,pipeline,pipelines,1504,"-cell RNA-seq experiment because map to introns. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/5101911/69015737-65272f80-0997-11ea-87ab-9237e105622a.png"">. ### Loss of reads by using exonic references. Both Alevin and Cell ranger count only reads aligned to exons by default, thus losing some 35% of the reads. Large intronic proportions are a general feature of single-cell RNA-seq, for example the 10X PBMCs has ~20-25%, and nuclear data sets have 46% intronic reads in [[source](https://kb.10xgenomics.com/hc/en-us/articles/360000087552-Why-do-I-have-a-high-percentage-of-reads-mapping-to-intronic-regions-)]. . **So the best way to increase library 'quality' / counting statistics (which is my prime concern) seem to be including reads mapped to introns – leading to hopefully a large increase in UMIs.**. ### Considerations: separate, additive signals. Since exons and introns contain different biological signal, ideally I would like to count as:. 1. Exon only 		(current)* ; 2. Intron only 		(as control / comparison to 1.) ; 3. Exon + intron 	(finally, for boosting statistics) . Where 2 would be a complementary set to 1, so that no read is counted as both intron and exon, and thus 1+2 =~ 3. . \* _I am not sure what happens to a read that maps to an exon/intron junction using the default Alevin and 10x Cell Ranger pipelines, but I assume both count it as exonic._. ### Solution by counting programs. - There is a way to build a ""pre-mRNA"" reference for 10X Cell ranger as described [here](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/advanced/references#premrna). . - I wondered if Alevin can be adapted to this aim? I guess besides all complete transcript models, you need to add one more: the pre-mRNA. (While some complexity can theoretically arise by the serial nature of splicing, I would ignore it at first). Would that be a good idea, or the advantage of Alevin would evaporate if we include introns?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/450
https://github.com/COMBINE-lab/salmon/issues/450:1748,Deployability,pipeline,pipelines,1748,"-cell RNA-seq experiment because map to introns. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/5101911/69015737-65272f80-0997-11ea-87ab-9237e105622a.png"">. ### Loss of reads by using exonic references. Both Alevin and Cell ranger count only reads aligned to exons by default, thus losing some 35% of the reads. Large intronic proportions are a general feature of single-cell RNA-seq, for example the 10X PBMCs has ~20-25%, and nuclear data sets have 46% intronic reads in [[source](https://kb.10xgenomics.com/hc/en-us/articles/360000087552-Why-do-I-have-a-high-percentage-of-reads-mapping-to-intronic-regions-)]. . **So the best way to increase library 'quality' / counting statistics (which is my prime concern) seem to be including reads mapped to introns – leading to hopefully a large increase in UMIs.**. ### Considerations: separate, additive signals. Since exons and introns contain different biological signal, ideally I would like to count as:. 1. Exon only 		(current)* ; 2. Intron only 		(as control / comparison to 1.) ; 3. Exon + intron 	(finally, for boosting statistics) . Where 2 would be a complementary set to 1, so that no read is counted as both intron and exon, and thus 1+2 =~ 3. . \* _I am not sure what happens to a read that maps to an exon/intron junction using the default Alevin and 10x Cell Ranger pipelines, but I assume both count it as exonic._. ### Solution by counting programs. - There is a way to build a ""pre-mRNA"" reference for 10X Cell ranger as described [here](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/advanced/references#premrna). . - I wondered if Alevin can be adapted to this aim? I guess besides all complete transcript models, you need to add one more: the pre-mRNA. (While some complexity can theoretically arise by the serial nature of splicing, I would ignore it at first). Would that be a good idea, or the advantage of Alevin would evaporate if we include introns?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/450
https://github.com/COMBINE-lab/salmon/issues/450:1827,Energy Efficiency,adapt,adapted,1827,"-cell RNA-seq experiment because map to introns. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/5101911/69015737-65272f80-0997-11ea-87ab-9237e105622a.png"">. ### Loss of reads by using exonic references. Both Alevin and Cell ranger count only reads aligned to exons by default, thus losing some 35% of the reads. Large intronic proportions are a general feature of single-cell RNA-seq, for example the 10X PBMCs has ~20-25%, and nuclear data sets have 46% intronic reads in [[source](https://kb.10xgenomics.com/hc/en-us/articles/360000087552-Why-do-I-have-a-high-percentage-of-reads-mapping-to-intronic-regions-)]. . **So the best way to increase library 'quality' / counting statistics (which is my prime concern) seem to be including reads mapped to introns – leading to hopefully a large increase in UMIs.**. ### Considerations: separate, additive signals. Since exons and introns contain different biological signal, ideally I would like to count as:. 1. Exon only 		(current)* ; 2. Intron only 		(as control / comparison to 1.) ; 3. Exon + intron 	(finally, for boosting statistics) . Where 2 would be a complementary set to 1, so that no read is counted as both intron and exon, and thus 1+2 =~ 3. . \* _I am not sure what happens to a read that maps to an exon/intron junction using the default Alevin and 10x Cell Ranger pipelines, but I assume both count it as exonic._. ### Solution by counting programs. - There is a way to build a ""pre-mRNA"" reference for 10X Cell ranger as described [here](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/advanced/references#premrna). . - I wondered if Alevin can be adapted to this aim? I guess besides all complete transcript models, you need to add one more: the pre-mRNA. (While some complexity can theoretically arise by the serial nature of splicing, I would ignore it at first). Would that be a good idea, or the advantage of Alevin would evaporate if we include introns?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/450
https://github.com/COMBINE-lab/salmon/issues/450:1827,Modifiability,adapt,adapted,1827,"-cell RNA-seq experiment because map to introns. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/5101911/69015737-65272f80-0997-11ea-87ab-9237e105622a.png"">. ### Loss of reads by using exonic references. Both Alevin and Cell ranger count only reads aligned to exons by default, thus losing some 35% of the reads. Large intronic proportions are a general feature of single-cell RNA-seq, for example the 10X PBMCs has ~20-25%, and nuclear data sets have 46% intronic reads in [[source](https://kb.10xgenomics.com/hc/en-us/articles/360000087552-Why-do-I-have-a-high-percentage-of-reads-mapping-to-intronic-regions-)]. . **So the best way to increase library 'quality' / counting statistics (which is my prime concern) seem to be including reads mapped to introns – leading to hopefully a large increase in UMIs.**. ### Considerations: separate, additive signals. Since exons and introns contain different biological signal, ideally I would like to count as:. 1. Exon only 		(current)* ; 2. Intron only 		(as control / comparison to 1.) ; 3. Exon + intron 	(finally, for boosting statistics) . Where 2 would be a complementary set to 1, so that no read is counted as both intron and exon, and thus 1+2 =~ 3. . \* _I am not sure what happens to a read that maps to an exon/intron junction using the default Alevin and 10x Cell Ranger pipelines, but I assume both count it as exonic._. ### Solution by counting programs. - There is a way to build a ""pre-mRNA"" reference for 10X Cell ranger as described [here](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/advanced/references#premrna). . - I wondered if Alevin can be adapted to this aim? I guess besides all complete transcript models, you need to add one more: the pre-mRNA. (While some complexity can theoretically arise by the serial nature of splicing, I would ignore it at first). Would that be a good idea, or the advantage of Alevin would evaporate if we include introns?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/450
https://github.com/COMBINE-lab/salmon/issues/451:2397,Availability,ERROR,ERROR,2397,"8dd90e917d; seqHash 512 : 87b7752997ca977ff56d02f69857a32f13b3c39a0a084c72feaa2c97e698b9b04d80a88c6755b97aede5604b89fdf66789a14f7976a89597a7832760a47e8919; nameHash 256 : 54e47ff5eb21b38ef24c8ffa3fc2a192ee5d9c0541bc6ee2da9414ecbd0f8c59; nameHash 512 : 163b337219cfd19b0c4c99cece12c2c2b760b3bf7e4686dbe633259c78552a56f2f015f18740a33c18e0f14c5f362997395c3168590f3ad80704071cabfab13a; [2019-11-20 19:50:26.273] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2019-11-20 19:50:27.059] [puff::index::jointLog] [info] ntHll estimated 34379504 distinct k-mers, setting filter size to 2^30; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1073741824; Capacity = 2; Files: ; utr_library/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1073741824; Pass	Filling	Filtering; 1	17	42	; 2	2	0; True junctions count = 102593; False junctions count = 122933; Hash table size = 225526; Candidate marks count = 1387640; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 1100523; Edges construction time: 13; --------------------------------------------------------------------------------; Distinct junctions = 102593. approximateContigTotalLength: 29519449; counters:; 13519 5 4 5; ERROR!! DOESN'T SUPPORT STRING LENGTH LONGER THAN 255. String length: 317; ```. And the `output_sequences.fa` is from `qapa fasta -f genome/hg38/hg38.fa /qapa/qapa_3utrs.gencode_V31.hg38.bed output_sequences.fa`. The bed file is the pre-compiled annotation file from QAPA. **To Reproduce**; Steps and data to reproduce the behavior:. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Ubuntu 18.04.2 LTS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451
https://github.com/COMBINE-lab/salmon/issues/451:1682,Security,Hash,Hash,1682,"1 of 4] : counting k-mers; counted k-mers for 40000 transcripts; [2019-11-20 19:50:26.017] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2019-11-20 19:50:26.017] [puff::index::jointLog] [info] Clipped poly-A tails from 86 transcripts; wrote 41857 cleaned references; seqHash 256 : 53fb8234c46e608b5ffa1f70869f5705573b3f671f35cbc2490ac78dd90e917d; seqHash 512 : 87b7752997ca977ff56d02f69857a32f13b3c39a0a084c72feaa2c97e698b9b04d80a88c6755b97aede5604b89fdf66789a14f7976a89597a7832760a47e8919; nameHash 256 : 54e47ff5eb21b38ef24c8ffa3fc2a192ee5d9c0541bc6ee2da9414ecbd0f8c59; nameHash 512 : 163b337219cfd19b0c4c99cece12c2c2b760b3bf7e4686dbe633259c78552a56f2f015f18740a33c18e0f14c5f362997395c3168590f3ad80704071cabfab13a; [2019-11-20 19:50:26.273] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2019-11-20 19:50:27.059] [puff::index::jointLog] [info] ntHll estimated 34379504 distinct k-mers, setting filter size to 2^30; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1073741824; Capacity = 2; Files: ; utr_library/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1073741824; Pass	Filling	Filtering; 1	17	42	; 2	2	0; True junctions count = 102593; False junctions count = 122933; Hash table size = 225526; Candidate marks count = 1387640; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 1100523; Edges construction time: 13; --------------------------------------------------------------------------------; Distinct junctions = 102593. approximateContigTotalLength: 29519449; counters:; 13519 5 4 5; ERROR!! DOESN'T SUPPORT STRING LENGTH LONGER THAN 255. String length: 317; ```. And the `output_sequences.fa` is from `qapa fasta -f genome/hg38/hg38.fa /qapa/qapa_3utrs.gencode_V31.hg38.bed output_sequences.fa`. The bed file is the pre-compiled annotation file f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451
https://github.com/COMBINE-lab/salmon/issues/451:1990,Security,Hash,Hash,1990,"8dd90e917d; seqHash 512 : 87b7752997ca977ff56d02f69857a32f13b3c39a0a084c72feaa2c97e698b9b04d80a88c6755b97aede5604b89fdf66789a14f7976a89597a7832760a47e8919; nameHash 256 : 54e47ff5eb21b38ef24c8ffa3fc2a192ee5d9c0541bc6ee2da9414ecbd0f8c59; nameHash 512 : 163b337219cfd19b0c4c99cece12c2c2b760b3bf7e4686dbe633259c78552a56f2f015f18740a33c18e0f14c5f362997395c3168590f3ad80704071cabfab13a; [2019-11-20 19:50:26.273] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2019-11-20 19:50:27.059] [puff::index::jointLog] [info] ntHll estimated 34379504 distinct k-mers, setting filter size to 2^30; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1073741824; Capacity = 2; Files: ; utr_library/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1073741824; Pass	Filling	Filtering; 1	17	42	; 2	2	0; True junctions count = 102593; False junctions count = 122933; Hash table size = 225526; Candidate marks count = 1387640; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 1100523; Edges construction time: 13; --------------------------------------------------------------------------------; Distinct junctions = 102593. approximateContigTotalLength: 29519449; counters:; 13519 5 4 5; ERROR!! DOESN'T SUPPORT STRING LENGTH LONGER THAN 255. String length: 317; ```. And the `output_sequences.fa` is from `qapa fasta -f genome/hg38/hg38.fa /qapa/qapa_3utrs.gencode_V31.hg38.bed output_sequences.fa`. The bed file is the pre-compiled annotation file from QAPA. **To Reproduce**; Steps and data to reproduce the behavior:. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Ubuntu 18.04.2 LTS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451
https://github.com/COMBINE-lab/salmon/issues/451:2756,Usability,clear,clear,2756,"8dd90e917d; seqHash 512 : 87b7752997ca977ff56d02f69857a32f13b3c39a0a084c72feaa2c97e698b9b04d80a88c6755b97aede5604b89fdf66789a14f7976a89597a7832760a47e8919; nameHash 256 : 54e47ff5eb21b38ef24c8ffa3fc2a192ee5d9c0541bc6ee2da9414ecbd0f8c59; nameHash 512 : 163b337219cfd19b0c4c99cece12c2c2b760b3bf7e4686dbe633259c78552a56f2f015f18740a33c18e0f14c5f362997395c3168590f3ad80704071cabfab13a; [2019-11-20 19:50:26.273] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2019-11-20 19:50:27.059] [puff::index::jointLog] [info] ntHll estimated 34379504 distinct k-mers, setting filter size to 2^30; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1073741824; Capacity = 2; Files: ; utr_library/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1073741824; Pass	Filling	Filtering; 1	17	42	; 2	2	0; True junctions count = 102593; False junctions count = 122933; Hash table size = 225526; Candidate marks count = 1387640; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 1100523; Edges construction time: 13; --------------------------------------------------------------------------------; Distinct junctions = 102593. approximateContigTotalLength: 29519449; counters:; 13519 5 4 5; ERROR!! DOESN'T SUPPORT STRING LENGTH LONGER THAN 255. String length: 317; ```. And the `output_sequences.fa` is from `qapa fasta -f genome/hg38/hg38.fa /qapa/qapa_3utrs.gencode_V31.hg38.bed output_sequences.fa`. The bed file is the pre-compiled annotation file from QAPA. **To Reproduce**; Steps and data to reproduce the behavior:. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Ubuntu 18.04.2 LTS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451
https://github.com/COMBINE-lab/salmon/issues/452:673,Availability,down,downloaded,673,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452
https://github.com/COMBINE-lab/salmon/issues/452:110,Deployability,install,installed,110,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452
https://github.com/COMBINE-lab/salmon/issues/452:333,Deployability,install,install,333,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452
https://github.com/COMBINE-lab/salmon/issues/452:448,Deployability,install,installed,448,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452
https://github.com/COMBINE-lab/salmon/issues/452:652,Deployability,install,installed,652,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452
https://github.com/COMBINE-lab/salmon/issues/452:1472,Deployability,release,releases,1472,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452
https://github.com/COMBINE-lab/salmon/issues/452:1527,Deployability,install,installed,1527,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452
https://github.com/COMBINE-lab/salmon/issues/452:322,Integrability,message,message,322,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452
https://github.com/COMBINE-lab/salmon/issues/452:741,Usability,clear,clear,741,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452
https://github.com/COMBINE-lab/salmon/issues/453:576,Availability,Error,Error,576,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/453:1181,Availability,error,errors,1181,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/453:110,Deployability,install,installed,110,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/453:725,Deployability,configurat,configuration,725,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/453:819,Deployability,configurat,configuration,819,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/453:940,Deployability,install,installation,940,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/453:1143,Deployability,install,installed,1143,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/453:725,Modifiability,config,configuration,725,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/453:819,Modifiability,config,configuration,819,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/453:918,Modifiability,config,config,918,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/453:1157,Modifiability,Config,Configuring,1157,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/453:1285,Testability,log,log,1285,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/453:1377,Testability,log,log,1377,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/453:384,Usability,clear,clear,384,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453
https://github.com/COMBINE-lab/salmon/issues/455:58,Availability,error,error,58,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455
https://github.com/COMBINE-lab/salmon/issues/455:123,Availability,error,error,123,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455
https://github.com/COMBINE-lab/salmon/issues/455:311,Availability,error,error,311,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455
https://github.com/COMBINE-lab/salmon/issues/455:786,Availability,error,error,786,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455
https://github.com/COMBINE-lab/salmon/issues/455:1217,Availability,error,error,1217,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455
https://github.com/COMBINE-lab/salmon/issues/455:11,Deployability,install,installation,11,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455
https://github.com/COMBINE-lab/salmon/issues/455:703,Modifiability,plugin,plugin,703,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455
https://github.com/COMBINE-lab/salmon/issues/455:1190,Modifiability,plugin,plugin,1190,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455
https://github.com/COMBINE-lab/salmon/issues/455:390,Testability,log,logger,390,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455
https://github.com/COMBINE-lab/salmon/issues/455:421,Testability,log,logger,421,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455
https://github.com/COMBINE-lab/salmon/issues/456:48,Deployability,update,updated,48,"It doesn't seem like the documentation has been updated for Salmon 1.0.0, despite the fact that the it says it's the latest version. For example, it still says to build a decoy-aware transcriptome with generateDecoyTranscriptome.sh, and the README points to SalmonTools. This page does have a NOTE at the end pointing to the new tutorial for adding the entire genome as the decoy, as does Salmon's main github README.md. Also, the documentation still says you have to enable SA with particular flags, even though in 1.0.0 it is enabled by default and you'd have to add the flag --noSA to not do it. I'm just wondering if there are other differences I need to know that aren't evident in the release notes for 1.0.0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/456
https://github.com/COMBINE-lab/salmon/issues/456:691,Deployability,release,release,691,"It doesn't seem like the documentation has been updated for Salmon 1.0.0, despite the fact that the it says it's the latest version. For example, it still says to build a decoy-aware transcriptome with generateDecoyTranscriptome.sh, and the README points to SalmonTools. This page does have a NOTE at the end pointing to the new tutorial for adding the entire genome as the decoy, as does Salmon's main github README.md. Also, the documentation still says you have to enable SA with particular flags, even though in 1.0.0 it is enabled by default and you'd have to add the flag --noSA to not do it. I'm just wondering if there are other differences I need to know that aren't evident in the release notes for 1.0.0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/456
https://github.com/COMBINE-lab/salmon/issues/457:216,Deployability,release,release,216,"warnings in the form of '[warning] len : *, but txp.RefLenght : *' appeared in the running log.; How did this occurred? Will this affect the quantification?; salmon version : v1.0.0; reference genome: ensembl GRCh38 release 96; ****gentrome and decoy generating command:****; grep ""^>"" $home/Ensembl_human_v96/Homo_sapiens.GRCh38.dna.primary_assembly.fa | cut -d "" "" -f 1 > decoys_new.txt; sed -i.bak -e 's/>//g' decoys_new.txt; cat $home/Ensembl_human_v96/Homo_sapiens.GRCh38_v96.cdna.all.fa $home/Ensembl_human_v96/Homo_sapiens.GRCh38.dna.primary_assembly.fa > $home/Ensembl_human_v96/gentrome.fa.gz; ; ****salmon index command:****; salmon index -t $home/Ensembl_human_v96/gentrome.fa.gz -d ; $home/Ensembl_human_v96/decoys.txt -p 12 -i ${home}/NGS/salmon_index_human_v96. ****salmon quant command:****; 	salmon quant -i ${home_path}/NGS/salmon_index_human_v96 -l A \; 	-1 ${fastq1} -2 ${fastq2} --validateMappings -p 12 --gcBias \; 	-o $count_path/${sample_name} ; ![image](https://user-images.githubusercontent.com/51859749/69779623-8f70bc80-11e3-11ea-9c94-6be4b9819d28.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/457
https://github.com/COMBINE-lab/salmon/issues/457:901,Security,validat,validateMappings,901,"warnings in the form of '[warning] len : *, but txp.RefLenght : *' appeared in the running log.; How did this occurred? Will this affect the quantification?; salmon version : v1.0.0; reference genome: ensembl GRCh38 release 96; ****gentrome and decoy generating command:****; grep ""^>"" $home/Ensembl_human_v96/Homo_sapiens.GRCh38.dna.primary_assembly.fa | cut -d "" "" -f 1 > decoys_new.txt; sed -i.bak -e 's/>//g' decoys_new.txt; cat $home/Ensembl_human_v96/Homo_sapiens.GRCh38_v96.cdna.all.fa $home/Ensembl_human_v96/Homo_sapiens.GRCh38.dna.primary_assembly.fa > $home/Ensembl_human_v96/gentrome.fa.gz; ; ****salmon index command:****; salmon index -t $home/Ensembl_human_v96/gentrome.fa.gz -d ; $home/Ensembl_human_v96/decoys.txt -p 12 -i ${home}/NGS/salmon_index_human_v96. ****salmon quant command:****; 	salmon quant -i ${home_path}/NGS/salmon_index_human_v96 -l A \; 	-1 ${fastq1} -2 ${fastq2} --validateMappings -p 12 --gcBias \; 	-o $count_path/${sample_name} ; ![image](https://user-images.githubusercontent.com/51859749/69779623-8f70bc80-11e3-11ea-9c94-6be4b9819d28.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/457
https://github.com/COMBINE-lab/salmon/issues/457:91,Testability,log,log,91,"warnings in the form of '[warning] len : *, but txp.RefLenght : *' appeared in the running log.; How did this occurred? Will this affect the quantification?; salmon version : v1.0.0; reference genome: ensembl GRCh38 release 96; ****gentrome and decoy generating command:****; grep ""^>"" $home/Ensembl_human_v96/Homo_sapiens.GRCh38.dna.primary_assembly.fa | cut -d "" "" -f 1 > decoys_new.txt; sed -i.bak -e 's/>//g' decoys_new.txt; cat $home/Ensembl_human_v96/Homo_sapiens.GRCh38_v96.cdna.all.fa $home/Ensembl_human_v96/Homo_sapiens.GRCh38.dna.primary_assembly.fa > $home/Ensembl_human_v96/gentrome.fa.gz; ; ****salmon index command:****; salmon index -t $home/Ensembl_human_v96/gentrome.fa.gz -d ; $home/Ensembl_human_v96/decoys.txt -p 12 -i ${home}/NGS/salmon_index_human_v96. ****salmon quant command:****; 	salmon quant -i ${home_path}/NGS/salmon_index_human_v96 -l A \; 	-1 ${fastq1} -2 ${fastq2} --validateMappings -p 12 --gcBias \; 	-o $count_path/${sample_name} ; ![image](https://user-images.githubusercontent.com/51859749/69779623-8f70bc80-11e3-11ea-9c94-6be4b9819d28.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/457
https://github.com/COMBINE-lab/salmon/issues/458:476,Availability,error,error,476,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; in Salmon bulk mode, while using the following commands to create an index:; A. Ingredients preparation:; grep ""^>"" genome.fa | cut -d "" "" -f 1 > ./decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Gencode_transcripts.fa genome.fa > ./gentrome.fa; B. index building:; salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode; **Describe the bug**; I got the following bug/error message:; Version Info: This is the most recent version of salmon.; salmon.sh: line 23: 37339 Illegal instruction (core dumped) salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. Specifically, I was using the following version and files/options:. * Salmon 1.0.0; * through bioconda?; conda update salmon; * gencode.v27.transcripts.fa; * default. Any help to fix this bug would be appreciated!. Kind regards,; Jamal.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/458
https://github.com/COMBINE-lab/salmon/issues/458:796,Deployability,update,update,796,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; in Salmon bulk mode, while using the following commands to create an index:; A. Ingredients preparation:; grep ""^>"" genome.fa | cut -d "" "" -f 1 > ./decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Gencode_transcripts.fa genome.fa > ./gentrome.fa; B. index building:; salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode; **Describe the bug**; I got the following bug/error message:; Version Info: This is the most recent version of salmon.; salmon.sh: line 23: 37339 Illegal instruction (core dumped) salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. Specifically, I was using the following version and files/options:. * Salmon 1.0.0; * through bioconda?; conda update salmon; * gencode.v27.transcripts.fa; * default. Any help to fix this bug would be appreciated!. Kind regards,; Jamal.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/458
https://github.com/COMBINE-lab/salmon/issues/458:482,Integrability,message,message,482,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; in Salmon bulk mode, while using the following commands to create an index:; A. Ingredients preparation:; grep ""^>"" genome.fa | cut -d "" "" -f 1 > ./decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Gencode_transcripts.fa genome.fa > ./gentrome.fa; B. index building:; salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode; **Describe the bug**; I got the following bug/error message:; Version Info: This is the most recent version of salmon.; salmon.sh: line 23: 37339 Illegal instruction (core dumped) salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. Specifically, I was using the following version and files/options:. * Salmon 1.0.0; * through bioconda?; conda update salmon; * gencode.v27.transcripts.fa; * default. Any help to fix this bug would be appreciated!. Kind regards,; Jamal.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/458
https://github.com/COMBINE-lab/salmon/issues/460:2597,Availability,Error,Error,2597,"es 4096 Dec 6 11:40 ..; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:40 include; lrwxrwxrwx. 1 modules modules 5 Dec 6 11:48 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:40 lib64. ```. Even after I had hacked up the CMakeLists.txt file to set some of these it still wouldn't build. For instance in that file:; ```; ## Try and find TBB first; if(DEFINED ENV{ROOT_LIBTBB}); message(""ROOT_LIBTBB in env""); set(ROOT_LIBTBB ); set(TBB_DIR $ENV{ROOT_LIBTBB}); set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); set(TBB_INCLUDE_DIR ${TBB_DIR}/include); set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); set(TBB_LIBRARY ${TBB_DIR}/lib); set(TBB_LIB_DIR ${TBB_DIR}/lib); set(TBB_VERSION ""2019.6""); set(TBB_FOUND TRUE); else(); message(""ROOT_LIBTBB NOT in env""); find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); endif(). if (${TBB_FOUND}); ```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:1986,Integrability,message,message,1986,"; drwxrwxr-x. 3 modules modules 4096 Sep 6 15:58 share; ls -al $ROOT_LIBGFF; total 20; drwxrwxr-x. 5 modules modules 4096 Dec 6 11:10 .; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:07 ..; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:07 bin; drwxrwxr-x. 2 modules modules 4096 Dec 6 10:59 include; lrwxrwxrwx. 1 modules modules 5 Dec 6 11:10 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:07 lib64; ls -al $ROOT_LIBTBB; total 16; drwxrwxr-x. 4 modules modules 4096 Dec 6 11:48 .; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:40 ..; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:40 include; lrwxrwxrwx. 1 modules modules 5 Dec 6 11:48 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:40 lib64. ```. Even after I had hacked up the CMakeLists.txt file to set some of these it still wouldn't build. For instance in that file:; ```; ## Try and find TBB first; if(DEFINED ENV{ROOT_LIBTBB}); message(""ROOT_LIBTBB in env""); set(ROOT_LIBTBB ); set(TBB_DIR $ENV{ROOT_LIBTBB}); set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); set(TBB_INCLUDE_DIR ${TBB_DIR}/include); set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); set(TBB_LIBRARY ${TBB_DIR}/lib); set(TBB_LIB_DIR ${TBB_DIR}/lib); set(TBB_VERSION ""2019.6""); set(TBB_FOUND TRUE); else(); message(""ROOT_LIBTBB NOT in env""); find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); endif(). if (${TBB_FOUND}); ```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:2311,Integrability,message,message,2311,"in; drwxrwxr-x. 2 modules modules 4096 Dec 6 10:59 include; lrwxrwxrwx. 1 modules modules 5 Dec 6 11:10 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:07 lib64; ls -al $ROOT_LIBTBB; total 16; drwxrwxr-x. 4 modules modules 4096 Dec 6 11:48 .; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:40 ..; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:40 include; lrwxrwxrwx. 1 modules modules 5 Dec 6 11:48 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:40 lib64. ```. Even after I had hacked up the CMakeLists.txt file to set some of these it still wouldn't build. For instance in that file:; ```; ## Try and find TBB first; if(DEFINED ENV{ROOT_LIBTBB}); message(""ROOT_LIBTBB in env""); set(ROOT_LIBTBB ); set(TBB_DIR $ENV{ROOT_LIBTBB}); set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); set(TBB_INCLUDE_DIR ${TBB_DIR}/include); set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); set(TBB_LIBRARY ${TBB_DIR}/lib); set(TBB_LIB_DIR ${TBB_DIR}/lib); set(TBB_VERSION ""2019.6""); set(TBB_FOUND TRUE); else(); message(""ROOT_LIBTBB NOT in env""); find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); endif(). if (${TBB_FOUND}); ```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDE",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:2686,Integrability,depend,dependency,2686,"les modules 5 Dec 6 11:48 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:40 lib64. ```. Even after I had hacked up the CMakeLists.txt file to set some of these it still wouldn't build. For instance in that file:; ```; ## Try and find TBB first; if(DEFINED ENV{ROOT_LIBTBB}); message(""ROOT_LIBTBB in env""); set(ROOT_LIBTBB ); set(TBB_DIR $ENV{ROOT_LIBTBB}); set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); set(TBB_INCLUDE_DIR ${TBB_DIR}/include); set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); set(TBB_LIBRARY ${TBB_DIR}/lib); set(TBB_LIB_DIR ${TBB_DIR}/lib); set(TBB_VERSION ""2019.6""); set(TBB_FOUND TRUE); else(); message(""ROOT_LIBTBB NOT in env""); find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); endif(). if (${TBB_FOUND}); ```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEF",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:3423,Integrability,message,message,3423,"```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + messa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:3474,Integrability,message,message,3474,"```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + messa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:3525,Integrability,message,message,3525,"```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + messa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:3727,Integrability,message,message,3727,"; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NO",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:4073,Integrability,message,message,4073,"1.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NOT LIBGFF_FOUND); message(""Build system will compile libgff""); message(""==================================================================""); @@ -739,7 +769,14 @@; endif(); ; find_package(CURL); -find_package(libstadenio); +if(DEFINED ENV{ROO",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:4284,Integrability,message,message,4284," message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NOT LIBGFF_FOUND); message(""Build system will compile libgff""); message(""==================================================================""); @@ -739,7 +769,14 @@; endif(); ; find_package(CURL); -find_package(libstadenio); +if(DEFINED ENV{ROOT_IO_LIB}); + set(ROOT_IO_LIB $ENV{ROOT_IO_LIB}); + set(STADEN_INC ""-I${ROOT_IO_LIB}/include""); + set(STADEN_LIB ""-L${ROOT_IO_LIB}/lib""); + set(LIBSTADENIO_FOUND TRUE); +else(); + find_package(libstadenio); +endif(); if (NOT LIBSTADENIO_FOUND); message(""Build system will compile Staden IOLib""); message(""==================================================================""). ```. In the meantime the binary distribution was loaded. . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:4334,Integrability,message,message,4334," message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NOT LIBGFF_FOUND); message(""Build system will compile libgff""); message(""==================================================================""); @@ -739,7 +769,14 @@; endif(); ; find_package(CURL); -find_package(libstadenio); +if(DEFINED ENV{ROOT_IO_LIB}); + set(ROOT_IO_LIB $ENV{ROOT_IO_LIB}); + set(STADEN_INC ""-I${ROOT_IO_LIB}/include""); + set(STADEN_LIB ""-L${ROOT_IO_LIB}/lib""); + set(LIBSTADENIO_FOUND TRUE); +else(); + find_package(libstadenio); +endif(); if (NOT LIBSTADENIO_FOUND); message(""Build system will compile Staden IOLib""); message(""==================================================================""). ```. In the meantime the binary distribution was loaded. . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:4436,Integrability,message,message,4436," message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NOT LIBGFF_FOUND); message(""Build system will compile libgff""); message(""==================================================================""); @@ -739,7 +769,14 @@; endif(); ; find_package(CURL); -find_package(libstadenio); +if(DEFINED ENV{ROOT_IO_LIB}); + set(ROOT_IO_LIB $ENV{ROOT_IO_LIB}); + set(STADEN_INC ""-I${ROOT_IO_LIB}/include""); + set(STADEN_LIB ""-L${ROOT_IO_LIB}/lib""); + set(LIBSTADENIO_FOUND TRUE); +else(); + find_package(libstadenio); +endif(); if (NOT LIBSTADENIO_FOUND); message(""Build system will compile Staden IOLib""); message(""==================================================================""). ```. In the meantime the binary distribution was loaded. . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:4768,Integrability,message,message,4768," message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NOT LIBGFF_FOUND); message(""Build system will compile libgff""); message(""==================================================================""); @@ -739,7 +769,14 @@; endif(); ; find_package(CURL); -find_package(libstadenio); +if(DEFINED ENV{ROOT_IO_LIB}); + set(ROOT_IO_LIB $ENV{ROOT_IO_LIB}); + set(STADEN_INC ""-I${ROOT_IO_LIB}/include""); + set(STADEN_LIB ""-L${ROOT_IO_LIB}/lib""); + set(LIBSTADENIO_FOUND TRUE); +else(); + find_package(libstadenio); +endif(); if (NOT LIBSTADENIO_FOUND); message(""Build system will compile Staden IOLib""); message(""==================================================================""). ```. In the meantime the binary distribution was loaded. . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:4859,Integrability,message,message,4859," message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NOT LIBGFF_FOUND); message(""Build system will compile libgff""); message(""==================================================================""); @@ -739,7 +769,14 @@; endif(); ; find_package(CURL); -find_package(libstadenio); +if(DEFINED ENV{ROOT_IO_LIB}); + set(ROOT_IO_LIB $ENV{ROOT_IO_LIB}); + set(STADEN_INC ""-I${ROOT_IO_LIB}/include""); + set(STADEN_LIB ""-L${ROOT_IO_LIB}/lib""); + set(LIBSTADENIO_FOUND TRUE); +else(); + find_package(libstadenio); +endif(); if (NOT LIBSTADENIO_FOUND); message(""Build system will compile Staden IOLib""); message(""==================================================================""). ```. In the meantime the binary distribution was loaded. . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:4904,Integrability,message,message,4904," message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NOT LIBGFF_FOUND); message(""Build system will compile libgff""); message(""==================================================================""); @@ -739,7 +769,14 @@; endif(); ; find_package(CURL); -find_package(libstadenio); +if(DEFINED ENV{ROOT_IO_LIB}); + set(ROOT_IO_LIB $ENV{ROOT_IO_LIB}); + set(STADEN_INC ""-I${ROOT_IO_LIB}/include""); + set(STADEN_LIB ""-L${ROOT_IO_LIB}/lib""); + set(LIBSTADENIO_FOUND TRUE); +else(); + find_package(libstadenio); +endif(); if (NOT LIBSTADENIO_FOUND); message(""Build system will compile Staden IOLib""); message(""==================================================================""). ```. In the meantime the binary distribution was loaded. . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:5328,Integrability,message,message,5328," message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NOT LIBGFF_FOUND); message(""Build system will compile libgff""); message(""==================================================================""); @@ -739,7 +769,14 @@; endif(); ; find_package(CURL); -find_package(libstadenio); +if(DEFINED ENV{ROOT_IO_LIB}); + set(ROOT_IO_LIB $ENV{ROOT_IO_LIB}); + set(STADEN_INC ""-I${ROOT_IO_LIB}/include""); + set(STADEN_LIB ""-L${ROOT_IO_LIB}/lib""); + set(LIBSTADENIO_FOUND TRUE); +else(); + find_package(libstadenio); +endif(); if (NOT LIBSTADENIO_FOUND); message(""Build system will compile Staden IOLib""); message(""==================================================================""). ```. In the meantime the binary distribution was loaded. . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:5379,Integrability,message,message,5379," message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NOT LIBGFF_FOUND); message(""Build system will compile libgff""); message(""==================================================================""); @@ -739,7 +769,14 @@; endif(); ; find_package(CURL); -find_package(libstadenio); +if(DEFINED ENV{ROOT_IO_LIB}); + set(ROOT_IO_LIB $ENV{ROOT_IO_LIB}); + set(STADEN_INC ""-I${ROOT_IO_LIB}/include""); + set(STADEN_LIB ""-L${ROOT_IO_LIB}/lib""); + set(LIBSTADENIO_FOUND TRUE); +else(); + find_package(libstadenio); +endif(); if (NOT LIBSTADENIO_FOUND); message(""Build system will compile Staden IOLib""); message(""==================================================================""). ```. In the meantime the binary distribution was loaded. . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:2573,Modifiability,Config,Configuring,2573,"es 4096 Dec 6 11:40 ..; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:40 include; lrwxrwxrwx. 1 modules modules 5 Dec 6 11:48 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:40 lib64. ```. Even after I had hacked up the CMakeLists.txt file to set some of these it still wouldn't build. For instance in that file:; ```; ## Try and find TBB first; if(DEFINED ENV{ROOT_LIBTBB}); message(""ROOT_LIBTBB in env""); set(ROOT_LIBTBB ); set(TBB_DIR $ENV{ROOT_LIBTBB}); set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); set(TBB_INCLUDE_DIR ${TBB_DIR}/include); set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); set(TBB_LIBRARY ${TBB_DIR}/lib); set(TBB_LIB_DIR ${TBB_DIR}/lib); set(TBB_VERSION ""2019.6""); set(TBB_FOUND TRUE); else(); message(""ROOT_LIBTBB NOT in env""); find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); endif(). if (${TBB_FOUND}); ```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/460:5507,Performance,load,loaded,5507," message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NOT LIBGFF_FOUND); message(""Build system will compile libgff""); message(""==================================================================""); @@ -739,7 +769,14 @@; endif(); ; find_package(CURL); -find_package(libstadenio); +if(DEFINED ENV{ROOT_IO_LIB}); + set(ROOT_IO_LIB $ENV{ROOT_IO_LIB}); + set(STADEN_INC ""-I${ROOT_IO_LIB}/include""); + set(STADEN_LIB ""-L${ROOT_IO_LIB}/lib""); + set(LIBSTADENIO_FOUND TRUE); +else(); + find_package(libstadenio); +endif(); if (NOT LIBSTADENIO_FOUND); message(""Build system will compile Staden IOLib""); message(""==================================================================""). ```. In the meantime the binary distribution was loaded. . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460
https://github.com/COMBINE-lab/salmon/issues/461:0,Deployability,Install,Installing,0,Installing salmon with this command; ```; conda install -c bioconda salmon. ```; ```; kokyriakidis@Konstantinos:/mnt/36642bae-9ec9-4100-88a2-ac173a20ea16/CLL_PROJECT/CLL_TEST1/work$ conda install -c bioconda salmon. Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.7.12; latest version: 4.8.0. Please update conda by running. $ conda update -n base conda. # All requested packages already installed.; ```; seem to not update to 1.0.0 and stuck with v0.14.1; ```; salmon v0.14.1. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Quantify a sample; alevin single cell analysis; swim Perform super-secret operation; quantmerge Merge multiple quantifications into a single file; ```. Any thoughts?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/461
https://github.com/COMBINE-lab/salmon/issues/461:48,Deployability,install,install,48,Installing salmon with this command; ```; conda install -c bioconda salmon. ```; ```; kokyriakidis@Konstantinos:/mnt/36642bae-9ec9-4100-88a2-ac173a20ea16/CLL_PROJECT/CLL_TEST1/work$ conda install -c bioconda salmon. Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.7.12; latest version: 4.8.0. Please update conda by running. $ conda update -n base conda. # All requested packages already installed.; ```; seem to not update to 1.0.0 and stuck with v0.14.1; ```; salmon v0.14.1. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Quantify a sample; alevin single cell analysis; swim Perform super-secret operation; quantmerge Merge multiple quantifications into a single file; ```. Any thoughts?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/461
https://github.com/COMBINE-lab/salmon/issues/461:188,Deployability,install,install,188,Installing salmon with this command; ```; conda install -c bioconda salmon. ```; ```; kokyriakidis@Konstantinos:/mnt/36642bae-9ec9-4100-88a2-ac173a20ea16/CLL_PROJECT/CLL_TEST1/work$ conda install -c bioconda salmon. Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.7.12; latest version: 4.8.0. Please update conda by running. $ conda update -n base conda. # All requested packages already installed.; ```; seem to not update to 1.0.0 and stuck with v0.14.1; ```; salmon v0.14.1. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Quantify a sample; alevin single cell analysis; swim Perform super-secret operation; quantmerge Merge multiple quantifications into a single file; ```. Any thoughts?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/461
https://github.com/COMBINE-lab/salmon/issues/461:408,Deployability,update,update,408,Installing salmon with this command; ```; conda install -c bioconda salmon. ```; ```; kokyriakidis@Konstantinos:/mnt/36642bae-9ec9-4100-88a2-ac173a20ea16/CLL_PROJECT/CLL_TEST1/work$ conda install -c bioconda salmon. Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.7.12; latest version: 4.8.0. Please update conda by running. $ conda update -n base conda. # All requested packages already installed.; ```; seem to not update to 1.0.0 and stuck with v0.14.1; ```; salmon v0.14.1. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Quantify a sample; alevin single cell analysis; swim Perform super-secret operation; quantmerge Merge multiple quantifications into a single file; ```. Any thoughts?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/461
https://github.com/COMBINE-lab/salmon/issues/461:441,Deployability,update,update,441,Installing salmon with this command; ```; conda install -c bioconda salmon. ```; ```; kokyriakidis@Konstantinos:/mnt/36642bae-9ec9-4100-88a2-ac173a20ea16/CLL_PROJECT/CLL_TEST1/work$ conda install -c bioconda salmon. Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.7.12; latest version: 4.8.0. Please update conda by running. $ conda update -n base conda. # All requested packages already installed.; ```; seem to not update to 1.0.0 and stuck with v0.14.1; ```; salmon v0.14.1. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Quantify a sample; alevin single cell analysis; swim Perform super-secret operation; quantmerge Merge multiple quantifications into a single file; ```. Any thoughts?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/461
https://github.com/COMBINE-lab/salmon/issues/461:496,Deployability,install,installed,496,Installing salmon with this command; ```; conda install -c bioconda salmon. ```; ```; kokyriakidis@Konstantinos:/mnt/36642bae-9ec9-4100-88a2-ac173a20ea16/CLL_PROJECT/CLL_TEST1/work$ conda install -c bioconda salmon. Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.7.12; latest version: 4.8.0. Please update conda by running. $ conda update -n base conda. # All requested packages already installed.; ```; seem to not update to 1.0.0 and stuck with v0.14.1; ```; salmon v0.14.1. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Quantify a sample; alevin single cell analysis; swim Perform super-secret operation; quantmerge Merge multiple quantifications into a single file; ```. Any thoughts?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/461
https://github.com/COMBINE-lab/salmon/issues/461:525,Deployability,update,update,525,Installing salmon with this command; ```; conda install -c bioconda salmon. ```; ```; kokyriakidis@Konstantinos:/mnt/36642bae-9ec9-4100-88a2-ac173a20ea16/CLL_PROJECT/CLL_TEST1/work$ conda install -c bioconda salmon. Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.7.12; latest version: 4.8.0. Please update conda by running. $ conda update -n base conda. # All requested packages already installed.; ```; seem to not update to 1.0.0 and stuck with v0.14.1; ```; salmon v0.14.1. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Quantify a sample; alevin single cell analysis; swim Perform super-secret operation; quantmerge Merge multiple quantifications into a single file; ```. Any thoughts?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/461
https://github.com/COMBINE-lab/salmon/issues/461:815,Performance,Perform,Perform,815,Installing salmon with this command; ```; conda install -c bioconda salmon. ```; ```; kokyriakidis@Konstantinos:/mnt/36642bae-9ec9-4100-88a2-ac173a20ea16/CLL_PROJECT/CLL_TEST1/work$ conda install -c bioconda salmon. Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.7.12; latest version: 4.8.0. Please update conda by running. $ conda update -n base conda. # All requested packages already installed.; ```; seem to not update to 1.0.0 and stuck with v0.14.1; ```; salmon v0.14.1. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Quantify a sample; alevin single cell analysis; swim Perform super-secret operation; quantmerge Merge multiple quantifications into a single file; ```. Any thoughts?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/461
https://github.com/COMBINE-lab/salmon/issues/462:434,Availability,down,downstream,434,"**Meta information:**; salmon version: 0.7.2; average length of reads: 50bp; reference sequences to bulid index: A fq file just contain **3′ UTR sequences**. **Selected kmer and result of mapping rate:**; ```; kmer 15：54.0812%; kmer 17：45.4212%; kmer 19：38.8951%; kmer 21：37.8544%; ```. Hi, I'm trying to select a number of kmer to build an index. In some answers, k < l/2 likes 21 is an appropriate value based on experience . In my downstream analysis, I got a good result in a sense based on k=15. However, other k-mer could't return the result I want. . **I wonder whether the significant increase in the mapping rate is due to the correct mapping read rather than the increased false positives.** . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/462
https://github.com/COMBINE-lab/salmon/issues/463:178,Availability,error,errors,178,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; When loading a pufferfish index using salmon v1.0 I encounter errors. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>64",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:343,Availability,error,error,343,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; When loading a pufferfish index using salmon v1.0 I encounter errors. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>64",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:2748,Availability,down,downloaded,2748,"oading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Which reference (e.g. transcriptome) was used?; Gencode v32, with additional elements representing genic introns and intergenic spaces.; * Which read files were used?; NCBI SRA run accession GSM2392582; * Which which program options were used?; --no-version-check --libType ISR --threads 4 --seqBias --gcBias --useVBOpt. **Expected behavior**; I expected index loading to complete successfully.; **Desktop (please complete the following information):**; - OS: CentOS6. **Additional context**; I've uploaded the index file archive [here](https://www.icloud.com/iclouddrive/00DWWhkSucg2BTWLuFswSHwvQ#rapmap_issue_8_index) and the transcripts fasta file [here](https://www.icloud.com/iclouddrive/0oCdFG64TJe0IlvkYyIUZRfSQ#rapmap_issue_8_transcripts).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:2727,Deployability,install,installed,2727,"oading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Which reference (e.g. transcriptome) was used?; Gencode v32, with additional elements representing genic introns and intergenic spaces.; * Which read files were used?; NCBI SRA run accession GSM2392582; * Which which program options were used?; --no-version-check --libType ISR --threads 4 --seqBias --gcBias --useVBOpt. **Expected behavior**; I expected index loading to complete successfully.; **Desktop (please complete the following information):**; - OS: CentOS6. **Additional context**; I've uploaded the index file archive [here](https://www.icloud.com/iclouddrive/00DWWhkSucg2BTWLuFswSHwvQ#rapmap_issue_8_index) and the transcripts fasta file [here](https://www.icloud.com/iclouddrive/0oCdFG64TJe0IlvkYyIUZRfSQ#rapmap_issue_8_transcripts).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:2799,Deployability,release,release,2799,"oading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Which reference (e.g. transcriptome) was used?; Gencode v32, with additional elements representing genic introns and intergenic spaces.; * Which read files were used?; NCBI SRA run accession GSM2392582; * Which which program options were used?; --no-version-check --libType ISR --threads 4 --seqBias --gcBias --useVBOpt. **Expected behavior**; I expected index loading to complete successfully.; **Desktop (please complete the following information):**; - OS: CentOS6. **Additional context**; I've uploaded the index file archive [here](https://www.icloud.com/iclouddrive/00DWWhkSucg2BTWLuFswSHwvQ#rapmap_issue_8_index) and the transcripts fasta file [here](https://www.icloud.com/iclouddrive/0oCdFG64TJe0IlvkYyIUZRfSQ#rapmap_issue_8_transcripts).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:2641,Integrability,rout,routines,2641,"oading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Which reference (e.g. transcriptome) was used?; Gencode v32, with additional elements representing genic introns and intergenic spaces.; * Which read files were used?; NCBI SRA run accession GSM2392582; * Which which program options were used?; --no-version-check --libType ISR --threads 4 --seqBias --gcBias --useVBOpt. **Expected behavior**; I expected index loading to complete successfully.; **Desktop (please complete the following information):**; - OS: CentOS6. **Additional context**; I've uploaded the index file archive [here](https://www.icloud.com/iclouddrive/00DWWhkSucg2BTWLuFswSHwvQ#rapmap_issue_8_index) and the transcripts fasta file [here](https://www.icloud.com/iclouddrive/0oCdFG64TJe0IlvkYyIUZRfSQ#rapmap_issue_8_transcripts).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:121,Performance,load,loading,121,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; When loading a pufferfish index using salmon v1.0 I encounter errors. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>64",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:492,Performance,Load,Loading,492,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; When loading a pufferfish index using salmon v1.0 I encounter errors. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>64",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:637,Performance,Load,Loading,637,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; When loading a pufferfish index using salmon v1.0 I encounter errors. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>64",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:768,Performance,Load,Loading,768,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; When loading a pufferfish index using salmon v1.0 I encounter errors. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>64",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:902,Performance,Load,Loading,902,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; When loading a pufferfish index using salmon v1.0 I encounter errors. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>64",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:1026,Performance,Load,Loading,1026,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; When loading a pufferfish index using salmon v1.0 I encounter errors. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>64",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:1270,Performance,Load,Loading,1270,"rs. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:1422,Performance,Load,Loading,1422," ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vect",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:1564,Performance,Load,Loading,1564,12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size:,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:1708,Performance,Load,Loading,1708,"69.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:1842,Performance,Load,Loading,1842,"------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Wh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:2583,Performance,load,loading,2583,"oading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Which reference (e.g. transcriptome) was used?; Gencode v32, with additional elements representing genic introns and intergenic spaces.; * Which read files were used?; NCBI SRA run accession GSM2392582; * Which which program options were used?; --no-version-check --libType ISR --threads 4 --seqBias --gcBias --useVBOpt. **Expected behavior**; I expected index loading to complete successfully.; **Desktop (please complete the following information):**; - OS: CentOS6. **Additional context**; I've uploaded the index file archive [here](https://www.icloud.com/iclouddrive/00DWWhkSucg2BTWLuFswSHwvQ#rapmap_issue_8_index) and the transcripts fasta file [here](https://www.icloud.com/iclouddrive/0oCdFG64TJe0IlvkYyIUZRfSQ#rapmap_issue_8_transcripts).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:3179,Performance,load,loading,3179,"oading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Which reference (e.g. transcriptome) was used?; Gencode v32, with additional elements representing genic introns and intergenic spaces.; * Which read files were used?; NCBI SRA run accession GSM2392582; * Which which program options were used?; --no-version-check --libType ISR --threads 4 --seqBias --gcBias --useVBOpt. **Expected behavior**; I expected index loading to complete successfully.; **Desktop (please complete the following information):**; - OS: CentOS6. **Additional context**; I've uploaded the index file archive [here](https://www.icloud.com/iclouddrive/00DWWhkSucg2BTWLuFswSHwvQ#rapmap_issue_8_index) and the transcripts fasta file [here](https://www.icloud.com/iclouddrive/0oCdFG64TJe0IlvkYyIUZRfSQ#rapmap_issue_8_transcripts).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:2999,Security,access,accession,2999,"oading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Which reference (e.g. transcriptome) was used?; Gencode v32, with additional elements representing genic introns and intergenic spaces.; * Which read files were used?; NCBI SRA run accession GSM2392582; * Which which program options were used?; --no-version-check --libType ISR --threads 4 --seqBias --gcBias --useVBOpt. **Expected behavior**; I expected index loading to complete successfully.; **Desktop (please complete the following information):**; - OS: CentOS6. **Additional context**; I've uploaded the index file archive [here](https://www.icloud.com/iclouddrive/00DWWhkSucg2BTWLuFswSHwvQ#rapmap_issue_8_index) and the transcripts fasta file [here](https://www.icloud.com/iclouddrive/0oCdFG64TJe0IlvkYyIUZRfSQ#rapmap_issue_8_transcripts).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/463:430,Testability,log,log,430,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; When loading a pufferfish index using salmon v1.0 I encounter errors. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>64",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463
https://github.com/COMBINE-lab/salmon/issues/465:123,Availability,error,error,123,"When using the -z option to obtain a SAM file and using that same SAM file as an input for a quantification, the following error is thrown:. ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.1.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { ../../gencode.v32.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { sal.bam }; # [ output ] => { salsal }; Logs will be written to salsal/logs; [2019-12-20 16:29:27.435] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 4; [2019-12-20 16:29:27.723] [jointLog] [info] numQuantThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""sal.bam"", fasta = ""../../gencode.v32.transcripts.fa"" . . . SAM file says target ENST00000481276.1|ENSG00000189339.12|OTTHUMG00000078639.4|OTTHUMT00000171590.1|SLC35E2B-202|SLC35E2B|2199|retained_intron| has length 2184, but the FASTA file contains a sequence of length [2200 or 2199]; ```. For this transcript the correct length is indeed 2199. The same error occurs when using a RapMap-produced SAM. OS is Ubuntu 18.04, salmon version 1.1.0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/465
https://github.com/COMBINE-lab/salmon/issues/465:1233,Availability,error,error,1233,"When using the -z option to obtain a SAM file and using that same SAM file as an input for a quantification, the following error is thrown:. ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.1.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { ../../gencode.v32.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { sal.bam }; # [ output ] => { salsal }; Logs will be written to salsal/logs; [2019-12-20 16:29:27.435] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 4; [2019-12-20 16:29:27.723] [jointLog] [info] numQuantThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""sal.bam"", fasta = ""../../gencode.v32.transcripts.fa"" . . . SAM file says target ENST00000481276.1|ENSG00000189339.12|OTTHUMG00000078639.4|OTTHUMT00000171590.1|SLC35E2B-202|SLC35E2B|2199|retained_intron| has length 2184, but the FASTA file contains a sequence of length [2200 or 2199]; ```. For this transcript the correct length is indeed 2199. The same error occurs when using a RapMap-produced SAM. OS is Ubuntu 18.04, salmon version 1.1.0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/465
https://github.com/COMBINE-lab/salmon/issues/465:430,Testability,Log,Logs,430,"When using the -z option to obtain a SAM file and using that same SAM file as an input for a quantification, the following error is thrown:. ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.1.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { ../../gencode.v32.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { sal.bam }; # [ output ] => { salsal }; Logs will be written to salsal/logs; [2019-12-20 16:29:27.435] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 4; [2019-12-20 16:29:27.723] [jointLog] [info] numQuantThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""sal.bam"", fasta = ""../../gencode.v32.transcripts.fa"" . . . SAM file says target ENST00000481276.1|ENSG00000189339.12|OTTHUMG00000078639.4|OTTHUMT00000171590.1|SLC35E2B-202|SLC35E2B|2199|retained_intron| has length 2184, but the FASTA file contains a sequence of length [2200 or 2199]; ```. For this transcript the correct length is indeed 2199. The same error occurs when using a RapMap-produced SAM. OS is Ubuntu 18.04, salmon version 1.1.0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/465
https://github.com/COMBINE-lab/salmon/issues/465:461,Testability,log,logs,461,"When using the -z option to obtain a SAM file and using that same SAM file as an input for a quantification, the following error is thrown:. ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.1.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { ../../gencode.v32.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { sal.bam }; # [ output ] => { salsal }; Logs will be written to salsal/logs; [2019-12-20 16:29:27.435] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 4; [2019-12-20 16:29:27.723] [jointLog] [info] numQuantThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""sal.bam"", fasta = ""../../gencode.v32.transcripts.fa"" . . . SAM file says target ENST00000481276.1|ENSG00000189339.12|OTTHUMG00000078639.4|OTTHUMT00000171590.1|SLC35E2B-202|SLC35E2B|2199|retained_intron| has length 2184, but the FASTA file contains a sequence of length [2200 or 2199]; ```. For this transcript the correct length is indeed 2199. The same error occurs when using a RapMap-produced SAM. OS is Ubuntu 18.04, salmon version 1.1.0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/465
https://github.com/COMBINE-lab/salmon/issues/466:30,Availability,down,downloaded,30,"Hello,. I am using the recent downloaded executable for v1.1.0 and am using salmon (bulk-mode). Noticed one potential bug and have some general questions regarding bootstraps. 1. The potential bug I noticed was when I use `--numGibbsSamples` the logs/salmon_quant.log file is always blank. When I remove this flag and re-run the program the log file is correctly printed out. 2. Regarding Bootstraps:. I've been working with parameters to min/max my predicted estimates to quantified cDNA results that we have. Through this process I was not performing bootstraps and was just using the TPM results that were located within the `quants.sf` file and have been getting some good results, with R-squared values of ~0.98 for actual v. predicted plots. As a note, even after running hundreds of runs with the same parameters, the TPM values in the `quants.sf` file never really fluctuated that much between runs and were generally nearly identical. . However, I thought it would be best to bootstrap `--numBootstraps` each Salmon run and average the bootstraps to get more accurate results. After doing 1,000 bootstraps per sample I noticed that the TPM values I calculated from numbers of mapped reads in the `bootstraps.gz` fluctuated a lot more and overall brought my R-squared values down to ~0.87. (I used your ConvertBootstrapsToTSV.py script to get the read counts from the bootstrap file and then calculated the TPMs using the effective lengths from the `quants.sf` file. As looking through previous issues (#246) I was under the assumption that the bootstrap file only contained new mapped read estimates and the effective lengths should be the same for all bootstrap runs.) . My question is why do the TPM values in the `quants.sf` file not fluctuate as much (even after 100+ runs using the same parameters), while calculated TPM values from bootstraps of the same run are showing greater variance?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/466
https://github.com/COMBINE-lab/salmon/issues/466:1283,Availability,down,down,1283,"Hello,. I am using the recent downloaded executable for v1.1.0 and am using salmon (bulk-mode). Noticed one potential bug and have some general questions regarding bootstraps. 1. The potential bug I noticed was when I use `--numGibbsSamples` the logs/salmon_quant.log file is always blank. When I remove this flag and re-run the program the log file is correctly printed out. 2. Regarding Bootstraps:. I've been working with parameters to min/max my predicted estimates to quantified cDNA results that we have. Through this process I was not performing bootstraps and was just using the TPM results that were located within the `quants.sf` file and have been getting some good results, with R-squared values of ~0.98 for actual v. predicted plots. As a note, even after running hundreds of runs with the same parameters, the TPM values in the `quants.sf` file never really fluctuated that much between runs and were generally nearly identical. . However, I thought it would be best to bootstrap `--numBootstraps` each Salmon run and average the bootstraps to get more accurate results. After doing 1,000 bootstraps per sample I noticed that the TPM values I calculated from numbers of mapped reads in the `bootstraps.gz` fluctuated a lot more and overall brought my R-squared values down to ~0.87. (I used your ConvertBootstrapsToTSV.py script to get the read counts from the bootstrap file and then calculated the TPMs using the effective lengths from the `quants.sf` file. As looking through previous issues (#246) I was under the assumption that the bootstrap file only contained new mapped read estimates and the effective lengths should be the same for all bootstrap runs.) . My question is why do the TPM values in the `quants.sf` file not fluctuate as much (even after 100+ runs using the same parameters), while calculated TPM values from bootstraps of the same run are showing greater variance?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/466
https://github.com/COMBINE-lab/salmon/issues/466:542,Performance,perform,performing,542,"Hello,. I am using the recent downloaded executable for v1.1.0 and am using salmon (bulk-mode). Noticed one potential bug and have some general questions regarding bootstraps. 1. The potential bug I noticed was when I use `--numGibbsSamples` the logs/salmon_quant.log file is always blank. When I remove this flag and re-run the program the log file is correctly printed out. 2. Regarding Bootstraps:. I've been working with parameters to min/max my predicted estimates to quantified cDNA results that we have. Through this process I was not performing bootstraps and was just using the TPM results that were located within the `quants.sf` file and have been getting some good results, with R-squared values of ~0.98 for actual v. predicted plots. As a note, even after running hundreds of runs with the same parameters, the TPM values in the `quants.sf` file never really fluctuated that much between runs and were generally nearly identical. . However, I thought it would be best to bootstrap `--numBootstraps` each Salmon run and average the bootstraps to get more accurate results. After doing 1,000 bootstraps per sample I noticed that the TPM values I calculated from numbers of mapped reads in the `bootstraps.gz` fluctuated a lot more and overall brought my R-squared values down to ~0.87. (I used your ConvertBootstrapsToTSV.py script to get the read counts from the bootstrap file and then calculated the TPMs using the effective lengths from the `quants.sf` file. As looking through previous issues (#246) I was under the assumption that the bootstrap file only contained new mapped read estimates and the effective lengths should be the same for all bootstrap runs.) . My question is why do the TPM values in the `quants.sf` file not fluctuate as much (even after 100+ runs using the same parameters), while calculated TPM values from bootstraps of the same run are showing greater variance?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/466
https://github.com/COMBINE-lab/salmon/issues/466:450,Safety,predict,predicted,450,"Hello,. I am using the recent downloaded executable for v1.1.0 and am using salmon (bulk-mode). Noticed one potential bug and have some general questions regarding bootstraps. 1. The potential bug I noticed was when I use `--numGibbsSamples` the logs/salmon_quant.log file is always blank. When I remove this flag and re-run the program the log file is correctly printed out. 2. Regarding Bootstraps:. I've been working with parameters to min/max my predicted estimates to quantified cDNA results that we have. Through this process I was not performing bootstraps and was just using the TPM results that were located within the `quants.sf` file and have been getting some good results, with R-squared values of ~0.98 for actual v. predicted plots. As a note, even after running hundreds of runs with the same parameters, the TPM values in the `quants.sf` file never really fluctuated that much between runs and were generally nearly identical. . However, I thought it would be best to bootstrap `--numBootstraps` each Salmon run and average the bootstraps to get more accurate results. After doing 1,000 bootstraps per sample I noticed that the TPM values I calculated from numbers of mapped reads in the `bootstraps.gz` fluctuated a lot more and overall brought my R-squared values down to ~0.87. (I used your ConvertBootstrapsToTSV.py script to get the read counts from the bootstrap file and then calculated the TPMs using the effective lengths from the `quants.sf` file. As looking through previous issues (#246) I was under the assumption that the bootstrap file only contained new mapped read estimates and the effective lengths should be the same for all bootstrap runs.) . My question is why do the TPM values in the `quants.sf` file not fluctuate as much (even after 100+ runs using the same parameters), while calculated TPM values from bootstraps of the same run are showing greater variance?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/466
https://github.com/COMBINE-lab/salmon/issues/466:731,Safety,predict,predicted,731,"Hello,. I am using the recent downloaded executable for v1.1.0 and am using salmon (bulk-mode). Noticed one potential bug and have some general questions regarding bootstraps. 1. The potential bug I noticed was when I use `--numGibbsSamples` the logs/salmon_quant.log file is always blank. When I remove this flag and re-run the program the log file is correctly printed out. 2. Regarding Bootstraps:. I've been working with parameters to min/max my predicted estimates to quantified cDNA results that we have. Through this process I was not performing bootstraps and was just using the TPM results that were located within the `quants.sf` file and have been getting some good results, with R-squared values of ~0.98 for actual v. predicted plots. As a note, even after running hundreds of runs with the same parameters, the TPM values in the `quants.sf` file never really fluctuated that much between runs and were generally nearly identical. . However, I thought it would be best to bootstrap `--numBootstraps` each Salmon run and average the bootstraps to get more accurate results. After doing 1,000 bootstraps per sample I noticed that the TPM values I calculated from numbers of mapped reads in the `bootstraps.gz` fluctuated a lot more and overall brought my R-squared values down to ~0.87. (I used your ConvertBootstrapsToTSV.py script to get the read counts from the bootstrap file and then calculated the TPMs using the effective lengths from the `quants.sf` file. As looking through previous issues (#246) I was under the assumption that the bootstrap file only contained new mapped read estimates and the effective lengths should be the same for all bootstrap runs.) . My question is why do the TPM values in the `quants.sf` file not fluctuate as much (even after 100+ runs using the same parameters), while calculated TPM values from bootstraps of the same run are showing greater variance?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/466
https://github.com/COMBINE-lab/salmon/issues/466:246,Testability,log,logs,246,"Hello,. I am using the recent downloaded executable for v1.1.0 and am using salmon (bulk-mode). Noticed one potential bug and have some general questions regarding bootstraps. 1. The potential bug I noticed was when I use `--numGibbsSamples` the logs/salmon_quant.log file is always blank. When I remove this flag and re-run the program the log file is correctly printed out. 2. Regarding Bootstraps:. I've been working with parameters to min/max my predicted estimates to quantified cDNA results that we have. Through this process I was not performing bootstraps and was just using the TPM results that were located within the `quants.sf` file and have been getting some good results, with R-squared values of ~0.98 for actual v. predicted plots. As a note, even after running hundreds of runs with the same parameters, the TPM values in the `quants.sf` file never really fluctuated that much between runs and were generally nearly identical. . However, I thought it would be best to bootstrap `--numBootstraps` each Salmon run and average the bootstraps to get more accurate results. After doing 1,000 bootstraps per sample I noticed that the TPM values I calculated from numbers of mapped reads in the `bootstraps.gz` fluctuated a lot more and overall brought my R-squared values down to ~0.87. (I used your ConvertBootstrapsToTSV.py script to get the read counts from the bootstrap file and then calculated the TPMs using the effective lengths from the `quants.sf` file. As looking through previous issues (#246) I was under the assumption that the bootstrap file only contained new mapped read estimates and the effective lengths should be the same for all bootstrap runs.) . My question is why do the TPM values in the `quants.sf` file not fluctuate as much (even after 100+ runs using the same parameters), while calculated TPM values from bootstraps of the same run are showing greater variance?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/466
https://github.com/COMBINE-lab/salmon/issues/466:264,Testability,log,log,264,"Hello,. I am using the recent downloaded executable for v1.1.0 and am using salmon (bulk-mode). Noticed one potential bug and have some general questions regarding bootstraps. 1. The potential bug I noticed was when I use `--numGibbsSamples` the logs/salmon_quant.log file is always blank. When I remove this flag and re-run the program the log file is correctly printed out. 2. Regarding Bootstraps:. I've been working with parameters to min/max my predicted estimates to quantified cDNA results that we have. Through this process I was not performing bootstraps and was just using the TPM results that were located within the `quants.sf` file and have been getting some good results, with R-squared values of ~0.98 for actual v. predicted plots. As a note, even after running hundreds of runs with the same parameters, the TPM values in the `quants.sf` file never really fluctuated that much between runs and were generally nearly identical. . However, I thought it would be best to bootstrap `--numBootstraps` each Salmon run and average the bootstraps to get more accurate results. After doing 1,000 bootstraps per sample I noticed that the TPM values I calculated from numbers of mapped reads in the `bootstraps.gz` fluctuated a lot more and overall brought my R-squared values down to ~0.87. (I used your ConvertBootstrapsToTSV.py script to get the read counts from the bootstrap file and then calculated the TPMs using the effective lengths from the `quants.sf` file. As looking through previous issues (#246) I was under the assumption that the bootstrap file only contained new mapped read estimates and the effective lengths should be the same for all bootstrap runs.) . My question is why do the TPM values in the `quants.sf` file not fluctuate as much (even after 100+ runs using the same parameters), while calculated TPM values from bootstraps of the same run are showing greater variance?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/466
https://github.com/COMBINE-lab/salmon/issues/466:341,Testability,log,log,341,"Hello,. I am using the recent downloaded executable for v1.1.0 and am using salmon (bulk-mode). Noticed one potential bug and have some general questions regarding bootstraps. 1. The potential bug I noticed was when I use `--numGibbsSamples` the logs/salmon_quant.log file is always blank. When I remove this flag and re-run the program the log file is correctly printed out. 2. Regarding Bootstraps:. I've been working with parameters to min/max my predicted estimates to quantified cDNA results that we have. Through this process I was not performing bootstraps and was just using the TPM results that were located within the `quants.sf` file and have been getting some good results, with R-squared values of ~0.98 for actual v. predicted plots. As a note, even after running hundreds of runs with the same parameters, the TPM values in the `quants.sf` file never really fluctuated that much between runs and were generally nearly identical. . However, I thought it would be best to bootstrap `--numBootstraps` each Salmon run and average the bootstraps to get more accurate results. After doing 1,000 bootstraps per sample I noticed that the TPM values I calculated from numbers of mapped reads in the `bootstraps.gz` fluctuated a lot more and overall brought my R-squared values down to ~0.87. (I used your ConvertBootstrapsToTSV.py script to get the read counts from the bootstrap file and then calculated the TPMs using the effective lengths from the `quants.sf` file. As looking through previous issues (#246) I was under the assumption that the bootstrap file only contained new mapped read estimates and the effective lengths should be the same for all bootstrap runs.) . My question is why do the TPM values in the `quants.sf` file not fluctuate as much (even after 100+ runs using the same parameters), while calculated TPM values from bootstraps of the same run are showing greater variance?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/466
https://github.com/COMBINE-lab/salmon/issues/467:381,Deployability,install,installed,381,"Thanks for nice tool!. I performed alevin with 10X Chromium (v3) data and it seems to be nice result. By the way, I followed the Alevin-Tutorial and Ipython Notebook as below,; but generating txp2gene.tsv took some time.; https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/; https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001. Especially, bioawk is not installed in any machine by default, and also just copy & past of the bioawk code could not run in my machine. For the above reason, I would like to suggest an alternative code to process this task. For example, I modified the code by using only grep, awk, sed, and uniq as below.; Is this also okay?. ```; wget -P data ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_32/gencode.v32.primary_assembly.annotation.gtf.gz; gunzip -c data/gencode.v32.primary_assembly.annotation.gtf.gz | grep transcript | awk '{print $12,$10}' | sed -e 's|""||g' -e 's|;||g' | uniq > data/txp2gene.tsv; ```. Otherwise, I appreciate it if you could support this task by implementing the subcommand of salmon as bellow. ```; salmon t2g [GTFfile]; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/467
https://github.com/COMBINE-lab/salmon/issues/467:25,Performance,perform,performed,25,"Thanks for nice tool!. I performed alevin with 10X Chromium (v3) data and it seems to be nice result. By the way, I followed the Alevin-Tutorial and Ipython Notebook as below,; but generating txp2gene.tsv took some time.; https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/; https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001. Especially, bioawk is not installed in any machine by default, and also just copy & past of the bioawk code could not run in my machine. For the above reason, I would like to suggest an alternative code to process this task. For example, I modified the code by using only grep, awk, sed, and uniq as below.; Is this also okay?. ```; wget -P data ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_32/gencode.v32.primary_assembly.annotation.gtf.gz; gunzip -c data/gencode.v32.primary_assembly.annotation.gtf.gz | grep transcript | awk '{print $12,$10}' | sed -e 's|""||g' -e 's|;||g' | uniq > data/txp2gene.tsv; ```. Otherwise, I appreciate it if you could support this task by implementing the subcommand of salmon as bellow. ```; salmon t2g [GTFfile]; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/467
https://github.com/COMBINE-lab/salmon/issues/474:124,Integrability,message,messages,124,"Just wanted to put an opinion in. I am currently using Salmon v1.1.0 and noticed that `--posBias` wasn't listed in the help messages, but I found it in your read the docs. I tested it out and it made a significant improvement in my calculations. I know it is considered ""experimental"", but it helped in my research and will publish that I used it when we get the manuscript out. Also, do you think you could give a brief explanation on what `--forgettingFactor` is doing and how it could be affecting quantification calculations?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/474
https://github.com/COMBINE-lab/salmon/issues/474:174,Testability,test,tested,174,"Just wanted to put an opinion in. I am currently using Salmon v1.1.0 and noticed that `--posBias` wasn't listed in the help messages, but I found it in your read the docs. I tested it out and it made a significant improvement in my calculations. I know it is considered ""experimental"", but it helped in my research and will publish that I used it when we get the manuscript out. Also, do you think you could give a brief explanation on what `--forgettingFactor` is doing and how it could be affecting quantification calculations?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/474
https://github.com/COMBINE-lab/salmon/issues/475:489,Availability,down,down,489,"Under some circumstances, the POS field of some reads in the pseudo-bam file are shifted by a few bases. The read will not match the sequence in these cases. . About 1-2% of reads show this behavior, and the behavior is clustered around certain locations. ; ; Below is a comparison of aligning two reads with Hisat(top), Kallisto(middle) and Salmon (bottom). . ![](https://i.imgur.com/9qOg6S3.png). **To Reproduce**. The following location contains the data. https://www.ialbert.me/static/down/pseudo_alignments/. We have aligned the file `reads.fq` containing two reads to the reference `chr1_g91.t2.fa` with three methods, Hisat, kallisto and salmon. There is a BAM file for each method. Command info json:. https://www.ialbert.me/static/down/pseudo_alignments/salmon_cmd_info.json. **Expected behavior**. The alignment should start in the correct position.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/475
https://github.com/COMBINE-lab/salmon/issues/475:740,Availability,down,down,740,"Under some circumstances, the POS field of some reads in the pseudo-bam file are shifted by a few bases. The read will not match the sequence in these cases. . About 1-2% of reads show this behavior, and the behavior is clustered around certain locations. ; ; Below is a comparison of aligning two reads with Hisat(top), Kallisto(middle) and Salmon (bottom). . ![](https://i.imgur.com/9qOg6S3.png). **To Reproduce**. The following location contains the data. https://www.ialbert.me/static/down/pseudo_alignments/. We have aligned the file `reads.fq` containing two reads to the reference `chr1_g91.t2.fa` with three methods, Hisat, kallisto and salmon. There is a BAM file for each method. Command info json:. https://www.ialbert.me/static/down/pseudo_alignments/salmon_cmd_info.json. **Expected behavior**. The alignment should start in the correct position.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/475
https://github.com/COMBINE-lab/salmon/issues/476:7,Deployability,install,installed,7,"Hi,. I installed Salmon 1.1.0 and try to build an index with current released mice transcriptome. ; Here is my code:; salmon index -t gencode.vM24.transcripts.fa.gz -i gencode.vM24.salmon_1.1.0 --keepFixedFasta. However, it stays here forever, as showing:; Round 0, 0:2147483648; Pass	Filling	Filtering; 1	34	1231. Is there anyone can help me with this?. Thank you very much!. Fang",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/476
https://github.com/COMBINE-lab/salmon/issues/476:69,Deployability,release,released,69,"Hi,. I installed Salmon 1.1.0 and try to build an index with current released mice transcriptome. ; Here is my code:; salmon index -t gencode.vM24.transcripts.fa.gz -i gencode.vM24.salmon_1.1.0 --keepFixedFasta. However, it stays here forever, as showing:; Round 0, 0:2147483648; Pass	Filling	Filtering; 1	34	1231. Is there anyone can help me with this?. Thank you very much!. Fang",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/476
https://github.com/COMBINE-lab/salmon/issues/478:213,Security,access,accession,213,"Hi Rob,. I have two quick questions about salmon:. (1) For paired-end reads, does it make any difference in running salmon whether or not the defline of the sequence in input fastq files has read id appended (as 'accession.spot.readid')?; In fastq-dump, if we use the “-I” option, the defline of the sequence in one file has read id appended as “xxx.1” and the other as “xxx.2”. For example:; In file_1.fastq, a sequence has its defline:; `@ERR1586786.1.1 1 length=125`; In file_2.fastq, the corresponding paired sequence has its defline:; `@ERR1586786.1.2 1 length=125`. If we do not use the “-I” option, in both file_1.fastq and file_2.fastq, the two paired sequences have the same defline:; `@ERR1586786.1 1 length=125`. So I was wondering whether or not these two situations make any difference in running salmon? In other words, does salmon have any requirements on this (since many tools require read id appended for paired-end reads)?. (2) I found that each time running salmon on the same sequence file, the results (the quant.sf file) have some differences. Is this an expected behavior?. I am using the version: salmon 0.9.1. Thank you very much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/478
https://github.com/COMBINE-lab/salmon/issues/479:5560,Availability,down,downstream,5560,"><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon_test/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_test_quant"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""threads"": ""30"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. I have also run kallisto on same dataset to compare the results:. <details><summary>Mapping results from kallisto</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189235-0d711700-40f2-11ea-8952-1ca309554efd.png). </p>; </details>. As you can see there is quite a bit difference between two methods. Results from quasi mapping method look much similar to kallisto results. On the other hand, SAF method gave different results with lower mapping rates. My question is should one always trust the results from SAF method for downstream analysis since it supposed to give much accurate results? Is it usually normal to see this much differences between two methods (according to your [preprint](http://dx.doi.org/10.1101/657874) their correlation rate seems to be very high)? Might this lower mapping rate seen with SAF method be due to the discarded fragments that are mapped to decoys? Can it be said that SAF method doing better job dealing with rRNA contamination and therefore yields more accurate results but with lower mapping rates in my case?. I would be happy to provide more information if necessary. Thank you very much for your time. Best,; Kivanc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:1510,Modifiability,config,config,1510,"ext, those samples have very high rRNA contamination (half of the dataset). Below are my codes (sorry for the snakemake syntax) and mapping results for each method:. **Salmon version:** v1.1.0; <details><summary>Salmon run w/ SFA method</summary>; <p>. ```python; rule salmon_meta:; input:; ref= REFERENCE,; tcp= TRANSCRIPTS; output:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; bak=""results/salmon/decoy/decoys.txt.bak""; conda:; ""../envs/salmon.yaml""; shell:; """"""; grep ""^>"" {input.ref} | cut -d "" "" -f 1 > {output.decoy}; sed -i.bak -e 's/>//g' {output.decoy}; cat {input.tcp} {input.ref} > {output.gent}; """""". rule salmon_index:; input:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; output:; directory(""results/salmon/index""); conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon index -p {threads} -t {input.gent} -d {input.decoy} -i {output}; """""". if config[""salmon""][""mapping_mode""]:; rule salmon_quant_mapping:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon/index""; output:; directory(""results/salmon/quant/{smp}_salmon_quant""),; mappings=""results/salmon/quant/{smp}_salmon_quant/{smp}_salmon_mappings""; log:; 		""results/salmon/logs/{smp}.salmon.log""; conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames --writeMappings={output.mappings} -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ SFA method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73188783-62605d80-40f1-11ea-87ef-e16050f94e60.png). </p>; </details>. <details><summary>cmd_info.json (SFA)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:2020,Security,validat,validateMappings,2020,"ml""; shell:; """"""; grep ""^>"" {input.ref} | cut -d "" "" -f 1 > {output.decoy}; sed -i.bak -e 's/>//g' {output.decoy}; cat {input.tcp} {input.ref} > {output.gent}; """""". rule salmon_index:; input:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; output:; directory(""results/salmon/index""); conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon index -p {threads} -t {input.gent} -d {input.decoy} -i {output}; """""". if config[""salmon""][""mapping_mode""]:; rule salmon_quant_mapping:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon/index""; output:; directory(""results/salmon/quant/{smp}_salmon_quant""),; mappings=""results/salmon/quant/{smp}_salmon_quant/{smp}_salmon_mappings""; log:; 		""results/salmon/logs/{smp}.salmon.log""; conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames --writeMappings={output.mappings} -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ SFA method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73188783-62605d80-40f1-11ea-87ef-e16050f94e60.png). </p>; </details>. <details><summary>cmd_info.json (SFA)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant"",; """": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": """,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:2952,Security,validat,validateMappings,2952,"nput.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames --writeMappings={output.mappings} -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ SFA method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73188783-62605d80-40f1-11ea-87ef-e16050f94e60.png). </p>; </details>. <details><summary>cmd_info.json (SFA)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant"",; """": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:4067,Security,validat,validateMappings,4067,"ogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon_test/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_test_quant"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""threads"": ""30"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. I have also run kallisto on same dataset to compare the results:. <details><summary>Mapping results",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:4836,Security,validat,validateMappings,4836,"salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon_test/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_test_quant"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""threads"": ""30"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. I have also run kallisto on same dataset to compare the results:. <details><summary>Mapping results from kallisto</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189235-0d711700-40f2-11ea-8952-1ca309554efd.png). </p>; </details>. As you can see there is quite a bit difference between two methods. Results from quasi mapping method look much similar to kallisto results. On the other hand, SAF method gave different results with lower mapping rates. My question is should one always trust the results from SAF method for downstream analysis since it supposed to give much accurate results? Is it usually normal to see this much differences between two methods (according to your [preprint](http://dx.doi.org/10.1101/657874) their correlation rate seems to be very high)? Might this lower mapping rate seen with SAF me",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:1839,Testability,log,log,1839,"mary>Salmon run w/ SFA method</summary>; <p>. ```python; rule salmon_meta:; input:; ref= REFERENCE,; tcp= TRANSCRIPTS; output:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; bak=""results/salmon/decoy/decoys.txt.bak""; conda:; ""../envs/salmon.yaml""; shell:; """"""; grep ""^>"" {input.ref} | cut -d "" "" -f 1 > {output.decoy}; sed -i.bak -e 's/>//g' {output.decoy}; cat {input.tcp} {input.ref} > {output.gent}; """""". rule salmon_index:; input:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; output:; directory(""results/salmon/index""); conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon index -p {threads} -t {input.gent} -d {input.decoy} -i {output}; """""". if config[""salmon""][""mapping_mode""]:; rule salmon_quant_mapping:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon/index""; output:; directory(""results/salmon/quant/{smp}_salmon_quant""),; mappings=""results/salmon/quant/{smp}_salmon_quant/{smp}_salmon_mappings""; log:; 		""results/salmon/logs/{smp}.salmon.log""; conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames --writeMappings={output.mappings} -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ SFA method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73188783-62605d80-40f1-11ea-87ef-e16050f94e60.png). </p>; </details>. <details><summary>cmd_info.json (SFA)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogae",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:1863,Testability,log,logs,1863,"mary>Salmon run w/ SFA method</summary>; <p>. ```python; rule salmon_meta:; input:; ref= REFERENCE,; tcp= TRANSCRIPTS; output:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; bak=""results/salmon/decoy/decoys.txt.bak""; conda:; ""../envs/salmon.yaml""; shell:; """"""; grep ""^>"" {input.ref} | cut -d "" "" -f 1 > {output.decoy}; sed -i.bak -e 's/>//g' {output.decoy}; cat {input.tcp} {input.ref} > {output.gent}; """""". rule salmon_index:; input:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; output:; directory(""results/salmon/index""); conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon index -p {threads} -t {input.gent} -d {input.decoy} -i {output}; """""". if config[""salmon""][""mapping_mode""]:; rule salmon_quant_mapping:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon/index""; output:; directory(""results/salmon/quant/{smp}_salmon_quant""),; mappings=""results/salmon/quant/{smp}_salmon_quant/{smp}_salmon_mappings""; log:; 		""results/salmon/logs/{smp}.salmon.log""; conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames --writeMappings={output.mappings} -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ SFA method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73188783-62605d80-40f1-11ea-87ef-e16050f94e60.png). </p>; </details>. <details><summary>cmd_info.json (SFA)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogae",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:1881,Testability,log,log,1881,"tput:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; bak=""results/salmon/decoy/decoys.txt.bak""; conda:; ""../envs/salmon.yaml""; shell:; """"""; grep ""^>"" {input.ref} | cut -d "" "" -f 1 > {output.decoy}; sed -i.bak -e 's/>//g' {output.decoy}; cat {input.tcp} {input.ref} > {output.gent}; """""". rule salmon_index:; input:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; output:; directory(""results/salmon/index""); conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon index -p {threads} -t {input.gent} -d {input.decoy} -i {output}; """""". if config[""salmon""][""mapping_mode""]:; rule salmon_quant_mapping:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon/index""; output:; directory(""results/salmon/quant/{smp}_salmon_quant""),; mappings=""results/salmon/quant/{smp}_salmon_quant/{smp}_salmon_mappings""; log:; 		""results/salmon/logs/{smp}.salmon.log""; conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames --writeMappings={output.mappings} -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ SFA method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73188783-62605d80-40f1-11ea-87ef-e16050f94e60.png). </p>; </details>. <details><summary>cmd_info.json (SFA)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant"",; """": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_R",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:3487,Testability,log,log,3487,"ion"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant"",; """": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:3514,Testability,log,logs,3514,"ion"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant"",; """": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:3525,Testability,log,log,3525,"med/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant"",; """": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"":",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:3878,Testability,log,log,3878,"ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon_test/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_test_quant"",; ""val",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:3905,Testability,log,logs,3905,"ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon_test/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_test_quant"",; ""val",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/479:3928,Testability,log,log,3928,"on_mappings"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""writeMappings"": ""results/salmon/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_mappings"",; ""threads"": ""20"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. <details><summary>Salmon run w/ quasi mapping method</summary>; <p>. ```python; rule salmon_index_test:; input:; tcp = TRANSCRIPTS; output:; directory(""results/salmon_test/index""); priority:1; log:; ""results/salmon_test/logs/index.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon index -p {threads} -t {input.tcp} -i {output}; """""". rule salmon_quant_test:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon_test/index""; output:; directory(""results/salmon_test/quant/{smp}_salmon_test_quant""),; log:; ""results/salmon_test/logs/{smp}.salmon_test.log""; conda:; ""../envs/salmon.yaml""; threads:30; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon_test/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_test_quant"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""threads"": ""30"",; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479
https://github.com/COMBINE-lab/salmon/issues/480:175,Availability,error,error,175,"On a fresh conda install,. ```; conda create -n slm2 -y -c bioconda salmon; ```; yields a broken salmon:; ```; $ conda activate slm2; (slm2) ggg298-43@farm:~$ salmon; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory; ```. This seems to be because I'm missing conda-forge; this:. ```; conda create -n slm3 -y -c conda-forge -c bioconda salmon; conda activate slm3; salmon; ```; works fine!. Nothing needs to be done, and I will update as I debug, but I wanted to put this here for google bait.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/480
https://github.com/COMBINE-lab/salmon/issues/480:17,Deployability,install,install,17,"On a fresh conda install,. ```; conda create -n slm2 -y -c bioconda salmon; ```; yields a broken salmon:; ```; $ conda activate slm2; (slm2) ggg298-43@farm:~$ salmon; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory; ```. This seems to be because I'm missing conda-forge; this:. ```; conda create -n slm3 -y -c conda-forge -c bioconda salmon; conda activate slm3; salmon; ```; works fine!. Nothing needs to be done, and I will update as I debug, but I wanted to put this here for google bait.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/480
https://github.com/COMBINE-lab/salmon/issues/480:512,Deployability,update,update,512,"On a fresh conda install,. ```; conda create -n slm2 -y -c bioconda salmon; ```; yields a broken salmon:; ```; $ conda activate slm2; (slm2) ggg298-43@farm:~$ salmon; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory; ```. This seems to be because I'm missing conda-forge; this:. ```; conda create -n slm3 -y -c conda-forge -c bioconda salmon; conda activate slm3; salmon; ```; works fine!. Nothing needs to be done, and I will update as I debug, but I wanted to put this here for google bait.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/480
https://github.com/COMBINE-lab/salmon/issues/480:187,Performance,load,loading,187,"On a fresh conda install,. ```; conda create -n slm2 -y -c bioconda salmon; ```; yields a broken salmon:; ```; $ conda activate slm2; (slm2) ggg298-43@farm:~$ salmon; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory; ```. This seems to be because I'm missing conda-forge; this:. ```; conda create -n slm3 -y -c conda-forge -c bioconda salmon; conda activate slm3; salmon; ```; works fine!. Nothing needs to be done, and I will update as I debug, but I wanted to put this here for google bait.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/480
https://github.com/COMBINE-lab/salmon/issues/481:2032,Availability,error,error,2032,"le) to Salmon Index. Then I found this script; https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh; where the gentrome FASTA is actually built by concatenating the transcriptome FASTA and the decoy FASTA, which is different than the main genome FASTA as in the first approach.; This script also demonstrates how to generate this decoy FASTA, which is more in line with what's written in your paper!. Finally, the SalmonTools page; https://github.com/COMBINE-lab/SalmonTools; says (near the bottom) that the generateDecoyTranscriptome.sh is not needed anymore. ; I suppose this means that the first approach is how to go on about this? ; To just concatenate the transcriptome FASTA and the genome FASTA? . Salmon Index accepts the gentrome FASTA as an input, and the decoys file, which should now be just the contig names from the genome FASTA, correct?. After trying this exact approach, with the Ensembl's genome FASTA and GTF, with added ERCC contigs and the transcriptome FASTA built from these files with RSEM Prepare Reference tool, I get the following error:. `[puff::index::jointLog] [critical] Observed a non-decoy sequence [LF1.1] after having already observed a decoy. However, it is required that any decoy target records appear, consecutively, at the end of the input fasta file. Please re-format your input file so that all decoy records appear contiguously at the end of the file, after all valid (non-decoy) records`. The LF1.1 is a transcript present in Ensembl's GTF, and it is therefore also present in the transcriptome FASTA that I generate with RSEM Prepare Reference. ; I am not sure if these ERCC contigs that I am adding are causing troubles, but these are essentially one transcript per one gene per one contig type of additions, i.e.; `ERCC-00002	ERCC	exon	1	1061	0.000000	+	.	gene_id ""ERCC-00002""; transcript_id ""ERCC-00002"";`. And since RSEM Prepare Reference sorts transcripts alphabetically in the transcriptome FASTA file, the L",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/481
https://github.com/COMBINE-lab/salmon/issues/481:46,Deployability,upgrade,upgraded,46,"Hi Salmon team!; It's been a while since I've upgraded to the latest version (from 0.9.1), so I'm just trying to catch with all the new features.; Specifically, I have just one questions regarding generating the Salmon Index with versions 1.0.0+. I want to run Salmon as described in your latest paper, with Selective Alignment and with decoy sequences in mind. I am using Ensembl's genome FASTA and GTF, with added ERCC contigs. The transcriptome FASTA that I'm using is built from the previous two files using RSEM Prepare Reference tool. . To run Salmon Index with decoys in mind, I first ran into this page:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; where it's described that decoys are just contig names from the genome FASTA, and the gentrome FASTA is obtained by concatenating the transcriptome FASTA with the genome FASTA. ; And then I provide these two files (gentrome FASTA and the decoys file) to Salmon Index. Then I found this script; https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh; where the gentrome FASTA is actually built by concatenating the transcriptome FASTA and the decoy FASTA, which is different than the main genome FASTA as in the first approach.; This script also demonstrates how to generate this decoy FASTA, which is more in line with what's written in your paper!. Finally, the SalmonTools page; https://github.com/COMBINE-lab/SalmonTools; says (near the bottom) that the generateDecoyTranscriptome.sh is not needed anymore. ; I suppose this means that the first approach is how to go on about this? ; To just concatenate the transcriptome FASTA and the genome FASTA? . Salmon Index accepts the gentrome FASTA as an input, and the decoys file, which should now be just the contig names from the genome FASTA, correct?. After trying this exact approach, with the Ensembl's genome FASTA and GTF, with added ERCC contigs and the transcriptome FASTA built from these files with RSEM Prepare Refer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/481
https://github.com/COMBINE-lab/salmon/issues/481:3027,Safety,detect,detecting,3027," tool, I get the following error:. `[puff::index::jointLog] [critical] Observed a non-decoy sequence [LF1.1] after having already observed a decoy. However, it is required that any decoy target records appear, consecutively, at the end of the input fasta file. Please re-format your input file so that all decoy records appear contiguously at the end of the file, after all valid (non-decoy) records`. The LF1.1 is a transcript present in Ensembl's GTF, and it is therefore also present in the transcriptome FASTA that I generate with RSEM Prepare Reference. ; I am not sure if these ERCC contigs that I am adding are causing troubles, but these are essentially one transcript per one gene per one contig type of additions, i.e.; `ERCC-00002	ERCC	exon	1	1061	0.000000	+	.	gene_id ""ERCC-00002""; transcript_id ""ERCC-00002"";`. And since RSEM Prepare Reference sorts transcripts alphabetically in the transcriptome FASTA file, the LF1.1 came after the ERCC contigs, which is why I'm wondering whether the Salmon algorithm for detecting decoys must have had a say in this :). In any case, awesome job with the new Salmon versions, and thank you in advance for any help!. EDIT: I posted more details, but from a wrong account, so I'm adding this in the original comment as wel:; I tried removing the ERCC entries from the decoys.txt file, but I still get; `[puff::index::jointLog] [critical] Observed a non-decoy sequence [ERCC-00002] after having already observed a decoy. However, it is required that any decoy target records appear, consecutively, at the end of the input fasta file. Please re-format your input file so that all decoy records appear contiguously at the end of the file, after all valid (non-decoy) records; `; Which means that in my ERCC entries, the transcript ID and the contig name should probably differ, instead of both being named ERCC-00002, for example. ; Hm, I'll see what I can do now. If you guys have any comments still, thank you, but I believe I know what must be done now",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/481
https://github.com/COMBINE-lab/salmon/issues/483:53,Deployability,upgrade,upgrade,53,"My current version of salmon is 0.14.1 and I need to upgrade to version 1.1.0, I'v tried the command; ""conda update salmon"" but the version remains 0.14.1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/483
https://github.com/COMBINE-lab/salmon/issues/483:109,Deployability,update,update,109,"My current version of salmon is 0.14.1 and I need to upgrade to version 1.1.0, I'v tried the command; ""conda update salmon"" but the version remains 0.14.1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/483
https://github.com/COMBINE-lab/salmon/issues/484:524,Availability,avail,available,524,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; A clear and concise description of what the bug is. Running `salmon index` on a HPC cluster (called from a trinity perl script). After a while salmon is only idling. In the stderr I see:. ```; Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; ```. The problem seems to be the available memory. On HPC systems one usually needs to specify a max amount of memory which is enforced (e.g. with ulimit). . If I give more memory to the job salmon finishes. . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. Salmon 1.1 installed through conda. I guess any data will do to reproduce as long as the memory limitations ar small enough. **Expected behavior**; A clear and concise description of what you expected to happen. Would be good if salmon would exit with a better error message and a non-zero exit code in such a case. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. CentOS 7. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/484
https://github.com/COMBINE-lab/salmon/issues/484:903,Availability,down,downloaded,903,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; A clear and concise description of what the bug is. Running `salmon index` on a HPC cluster (called from a trinity perl script). After a while salmon is only idling. In the stderr I see:. ```; Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; ```. The problem seems to be the available memory. On HPC systems one usually needs to specify a max amount of memory which is enforced (e.g. with ulimit). . If I give more memory to the job salmon finishes. . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. Salmon 1.1 installed through conda. I guess any data will do to reproduce as long as the memory limitations ar small enough. **Expected behavior**; A clear and concise description of what you expected to happen. Would be good if salmon would exit with a better error message and a non-zero exit code in such a case. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. CentOS 7. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/484
https://github.com/COMBINE-lab/salmon/issues/484:1330,Availability,error,error,1330,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; A clear and concise description of what the bug is. Running `salmon index` on a HPC cluster (called from a trinity perl script). After a while salmon is only idling. In the stderr I see:. ```; Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; ```. The problem seems to be the available memory. On HPC systems one usually needs to specify a max amount of memory which is enforced (e.g. with ulimit). . If I give more memory to the job salmon finishes. . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. Salmon 1.1 installed through conda. I guess any data will do to reproduce as long as the memory limitations ar small enough. **Expected behavior**; A clear and concise description of what you expected to happen. Would be good if salmon would exit with a better error message and a non-zero exit code in such a case. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. CentOS 7. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/484
https://github.com/COMBINE-lab/salmon/issues/484:882,Deployability,install,installed,882,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; A clear and concise description of what the bug is. Running `salmon index` on a HPC cluster (called from a trinity perl script). After a while salmon is only idling. In the stderr I see:. ```; Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; ```. The problem seems to be the available memory. On HPC systems one usually needs to specify a max amount of memory which is enforced (e.g. with ulimit). . If I give more memory to the job salmon finishes. . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. Salmon 1.1 installed through conda. I guess any data will do to reproduce as long as the memory limitations ar small enough. **Expected behavior**; A clear and concise description of what you expected to happen. Would be good if salmon would exit with a better error message and a non-zero exit code in such a case. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. CentOS 7. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/484
https://github.com/COMBINE-lab/salmon/issues/484:1080,Deployability,install,installed,1080,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; A clear and concise description of what the bug is. Running `salmon index` on a HPC cluster (called from a trinity perl script). After a while salmon is only idling. In the stderr I see:. ```; Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; ```. The problem seems to be the available memory. On HPC systems one usually needs to specify a max amount of memory which is enforced (e.g. with ulimit). . If I give more memory to the job salmon finishes. . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. Salmon 1.1 installed through conda. I guess any data will do to reproduce as long as the memory limitations ar small enough. **Expected behavior**; A clear and concise description of what you expected to happen. Would be good if salmon would exit with a better error message and a non-zero exit code in such a case. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. CentOS 7. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/484
https://github.com/COMBINE-lab/salmon/issues/484:1336,Integrability,message,message,1336,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; A clear and concise description of what the bug is. Running `salmon index` on a HPC cluster (called from a trinity perl script). After a while salmon is only idling. In the stderr I see:. ```; Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; ```. The problem seems to be the available memory. On HPC systems one usually needs to specify a max amount of memory which is enforced (e.g. with ulimit). . If I give more memory to the job salmon finishes. . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. Salmon 1.1 installed through conda. I guess any data will do to reproduce as long as the memory limitations ar small enough. **Expected behavior**; A clear and concise description of what you expected to happen. Would be good if salmon would exit with a better error message and a non-zero exit code in such a case. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. CentOS 7. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/484
https://github.com/COMBINE-lab/salmon/issues/484:118,Usability,clear,clear,118,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; A clear and concise description of what the bug is. Running `salmon index` on a HPC cluster (called from a trinity perl script). After a while salmon is only idling. In the stderr I see:. ```; Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; ```. The problem seems to be the available memory. On HPC systems one usually needs to specify a max amount of memory which is enforced (e.g. with ulimit). . If I give more memory to the job salmon finishes. . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. Salmon 1.1 installed through conda. I guess any data will do to reproduce as long as the memory limitations ar small enough. **Expected behavior**; A clear and concise description of what you expected to happen. Would be good if salmon would exit with a better error message and a non-zero exit code in such a case. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. CentOS 7. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/484
https://github.com/COMBINE-lab/salmon/issues/484:1219,Usability,clear,clear,1219,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; A clear and concise description of what the bug is. Running `salmon index` on a HPC cluster (called from a trinity perl script). After a while salmon is only idling. In the stderr I see:. ```; Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; ```. The problem seems to be the available memory. On HPC systems one usually needs to specify a max amount of memory which is enforced (e.g. with ulimit). . If I give more memory to the job salmon finishes. . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. Salmon 1.1 installed through conda. I guess any data will do to reproduce as long as the memory limitations ar small enough. **Expected behavior**; A clear and concise description of what you expected to happen. Would be good if salmon would exit with a better error message and a non-zero exit code in such a case. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. CentOS 7. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/484
https://github.com/COMBINE-lab/salmon/issues/485:34,Deployability,upgrade,upgraded,34,"Dear Salmon Dev team,; I recently upgraded salmon 0.8.3 to 1.1.0.; I run the sample using libtype -IU.; For the new1.1.0, I used --validateMappings together with index built with genome decoys.; I noticed unusual amount of dovetail mapping being discarded. Here is the meta_info from the new version:; ```; ""num_processed"": 107275750,; ""num_mapped"": 50376830,; ""num_decoy_fragments"": 381872,; ""num_dovetail_fragments"": 55224702,; ""num_fragments_filtered_vm"": 47824323,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 1540436314,; ""percent_mapped"": 46.960128454007548,; ```; Meta info from v0.8.3:; ```; ""num_processed"": 107275750,; ""num_mapped"": 89940471,; ""percent_mapped"": 83.8404494958087,; ```; Again, they were ran on the same sample.; Please let me know if there is something wrong in my parameters. Or do you think this is a poor sample quality issue.; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/485
https://github.com/COMBINE-lab/salmon/issues/485:131,Security,validat,validateMappings,131,"Dear Salmon Dev team,; I recently upgraded salmon 0.8.3 to 1.1.0.; I run the sample using libtype -IU.; For the new1.1.0, I used --validateMappings together with index built with genome decoys.; I noticed unusual amount of dovetail mapping being discarded. Here is the meta_info from the new version:; ```; ""num_processed"": 107275750,; ""num_mapped"": 50376830,; ""num_decoy_fragments"": 381872,; ""num_dovetail_fragments"": 55224702,; ""num_fragments_filtered_vm"": 47824323,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 1540436314,; ""percent_mapped"": 46.960128454007548,; ```; Meta info from v0.8.3:; ```; ""num_processed"": 107275750,; ""num_mapped"": 89940471,; ""percent_mapped"": 83.8404494958087,; ```; Again, they were ran on the same sample.; Please let me know if there is something wrong in my parameters. Or do you think this is a poor sample quality issue.; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/485
https://github.com/COMBINE-lab/salmon/issues/486:283,Performance,Perform,Perform,283,"`salmon` command gives as expected:. ```; salmon v1.1.0. Usage: salmon -h|--help or; salmon -v|--version or; salmon -c|--cite or; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Quantify a sample; alevin single cell analysis; swim Perform super-secret operation; quantmerge Merge multiple quantifications into a single file; ```. However, `salmon index --help` freezes without any CPU usage. `strace` shows it's trying to connect to an IP address, which belongs to GitHub but out of commission right now. ```; socket(AF_INET, SOCK_STREAM, IPPROTO_TCP) = 6; epoll_ctl(4, EPOLL_CTL_ADD, 6, {EPOLLIN|EPOLLPRI|EPOLLERR|EPOLLHUP|EPOLLET, {u32=509961152, u64=140196832437184}}) = 0; ioctl(6, FIONBIO, [1]) = 0; connect(6, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(""185.199.108.153"")}, 16) = -1 EINPROGRESS (Operation now in progress); epoll_ctl(4, EPOLL_CTL_MOD, 6, {EPOLLIN|EPOLLPRI|EPOLLOUT|EPOLLERR|EPOLLHUP|EPOLLET, {u32=509961152, u64=140196832437184}}) = 0; epoll_wait(4, ^Cstrace: Process 4488 detached; ```. Waiting long enough, it tries another IP address, which is also broken. My Salmon is compiled with GCC 8.2.0 / gompi2019a toolset using EasyBuild. It runs on Centos 7. Passing `--no-version-check` solves the problem but this option isn't displayed on main help screen, I found it somewhere in the source.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/486
https://github.com/COMBINE-lab/salmon/issues/489:996,Security,validat,validateMappings,996,"The result of `salmon quant` (quasi-mapping + SA) for the same paired-end read input differs when run with `--libType A` versus `--libType ISF`, even though Salmon correctly infers that the library orientation is ISF when run with `--libType A` . In particular, the sum of the _NumReads_ column from `quant.sf` is greater for the `--libType A` result than for the `--libType ISF` result. Upon inspection, I discovered that this is because even when `--libType A` correctly infers that the orientation is ISF, it still uses the ~4500 reads (< 1%) that were in orientation ISR. I interpreted the `--libType A` flag to mean that `salmon` automatically infers the library orientation to be type _X_, then that means it will only use reads that are compatible with library orientation _X_ in the quantification. Was that the intention of `--libType A` ?. -----------------------------------------. The two commands being compared:. `salmon quant --libType A --seqBias --gcBias --discardOrphansQuasi --validateMappings -1 mate1.fq -2 mate2.fq -g gene_map.tsv -p 8 -o /path/to/out -i /path/to/index`. versus . `salmon quant --libType ISF --seqBias --gcBias --discardOrphansQuasi --validateMappings -1 mate1.fq -2 mate2.fq -g gene_map.tsv -p 8 -o /path/to/out -i /path/to/index`. They are exactly the same except for the value provided to `--libType`. -----------------------------------------. **Relevant results when run with --libType A**. `$ datamash -H sum 5 < quant.sf`; **> 917202.01**. `$ cat lib_format_counts.json`. > {; > ""read_files"": ""[ /path/to/mate1.fastq.gz, /path/to/mate2.fastq.gz]"",; > ""expected_format"": ""ISF"",; > ""compatible_fragment_ratio"": 1.0,; **> ""num_compatible_fragments"": 917202,**; > ""num_assigned_fragments"": 917202,; **> ""num_frags_with_concordant_consistent_mappings"": 912759,**; **> ""num_frags_with_inconsistent_or_orphan_mappings"": 4557,**; > ""strand_mapping_bias"": 0.995032246248839,; > ""MSF"": 0,; > ""OSF"": 0,; **> ""ISF"": 912759,**; > ""MSR"": 0,; > ""OSR"": 0,; **> ""ISR"": 455",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/489
https://github.com/COMBINE-lab/salmon/issues/489:1174,Security,validat,validateMappings,1174,"hough Salmon correctly infers that the library orientation is ISF when run with `--libType A` . In particular, the sum of the _NumReads_ column from `quant.sf` is greater for the `--libType A` result than for the `--libType ISF` result. Upon inspection, I discovered that this is because even when `--libType A` correctly infers that the orientation is ISF, it still uses the ~4500 reads (< 1%) that were in orientation ISR. I interpreted the `--libType A` flag to mean that `salmon` automatically infers the library orientation to be type _X_, then that means it will only use reads that are compatible with library orientation _X_ in the quantification. Was that the intention of `--libType A` ?. -----------------------------------------. The two commands being compared:. `salmon quant --libType A --seqBias --gcBias --discardOrphansQuasi --validateMappings -1 mate1.fq -2 mate2.fq -g gene_map.tsv -p 8 -o /path/to/out -i /path/to/index`. versus . `salmon quant --libType ISF --seqBias --gcBias --discardOrphansQuasi --validateMappings -1 mate1.fq -2 mate2.fq -g gene_map.tsv -p 8 -o /path/to/out -i /path/to/index`. They are exactly the same except for the value provided to `--libType`. -----------------------------------------. **Relevant results when run with --libType A**. `$ datamash -H sum 5 < quant.sf`; **> 917202.01**. `$ cat lib_format_counts.json`. > {; > ""read_files"": ""[ /path/to/mate1.fastq.gz, /path/to/mate2.fastq.gz]"",; > ""expected_format"": ""ISF"",; > ""compatible_fragment_ratio"": 1.0,; **> ""num_compatible_fragments"": 917202,**; > ""num_assigned_fragments"": 917202,; **> ""num_frags_with_concordant_consistent_mappings"": 912759,**; **> ""num_frags_with_inconsistent_or_orphan_mappings"": 4557,**; > ""strand_mapping_bias"": 0.995032246248839,; > ""MSF"": 0,; > ""OSF"": 0,; **> ""ISF"": 912759,**; > ""MSR"": 0,; > ""OSR"": 0,; **> ""ISR"": 4557,**; > ""SF"": 0,; > ""SR"": 0,; > ""MU"": 0,; > ""OU"": 0,; > ""IU"": 0,; > ""U"": 0; > }. **Relevant results when run with --libType ISF**. `$ datamash -H sum ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/489
https://github.com/COMBINE-lab/salmon/issues/490:238,Performance,perform,performing,238,"Hi!; This is probably not a question for the github, but I wasn't sure where to post; (please redirect me, and I'll happily remove it). I had one small question related to the paper; https://www.biorxiv.org/content/10.1101/657874v1. When performing the benchmarking of all different approaches, the parameters used when testing STAR+Salmon are listed of course. It's mentioned that the parameters of STAR are meant to be kept the same as RSEM uses them in order to get the actual proper comparisons.; All the parameters do look the same, except for one; --sjdbScore; In your paper, this param is not being used, which means that the default value of 2 is active.; RSEM, however, sets this to 1. . I'm not sure if this will affect the results in any major way though, so I just wanted to check if there was maybe a reason behind leaving this value to 2 in the paper. The --sjdbScore value scores alignments with annotated junctions higher over unspliced alignments. ; I'm not even actually sure why RSEM lowers this to 1. ; I was trying to replicate some of your benchmarking, and I was just curious about this one if you have any info that can help out. And again, I probably don't need to mention it anymore, but awesome job with the Salmon! Thanks once more for the awesome software!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/490
https://github.com/COMBINE-lab/salmon/issues/490:253,Testability,benchmark,benchmarking,253,"Hi!; This is probably not a question for the github, but I wasn't sure where to post; (please redirect me, and I'll happily remove it). I had one small question related to the paper; https://www.biorxiv.org/content/10.1101/657874v1. When performing the benchmarking of all different approaches, the parameters used when testing STAR+Salmon are listed of course. It's mentioned that the parameters of STAR are meant to be kept the same as RSEM uses them in order to get the actual proper comparisons.; All the parameters do look the same, except for one; --sjdbScore; In your paper, this param is not being used, which means that the default value of 2 is active.; RSEM, however, sets this to 1. . I'm not sure if this will affect the results in any major way though, so I just wanted to check if there was maybe a reason behind leaving this value to 2 in the paper. The --sjdbScore value scores alignments with annotated junctions higher over unspliced alignments. ; I'm not even actually sure why RSEM lowers this to 1. ; I was trying to replicate some of your benchmarking, and I was just curious about this one if you have any info that can help out. And again, I probably don't need to mention it anymore, but awesome job with the Salmon! Thanks once more for the awesome software!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/490
https://github.com/COMBINE-lab/salmon/issues/490:320,Testability,test,testing,320,"Hi!; This is probably not a question for the github, but I wasn't sure where to post; (please redirect me, and I'll happily remove it). I had one small question related to the paper; https://www.biorxiv.org/content/10.1101/657874v1. When performing the benchmarking of all different approaches, the parameters used when testing STAR+Salmon are listed of course. It's mentioned that the parameters of STAR are meant to be kept the same as RSEM uses them in order to get the actual proper comparisons.; All the parameters do look the same, except for one; --sjdbScore; In your paper, this param is not being used, which means that the default value of 2 is active.; RSEM, however, sets this to 1. . I'm not sure if this will affect the results in any major way though, so I just wanted to check if there was maybe a reason behind leaving this value to 2 in the paper. The --sjdbScore value scores alignments with annotated junctions higher over unspliced alignments. ; I'm not even actually sure why RSEM lowers this to 1. ; I was trying to replicate some of your benchmarking, and I was just curious about this one if you have any info that can help out. And again, I probably don't need to mention it anymore, but awesome job with the Salmon! Thanks once more for the awesome software!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/490
https://github.com/COMBINE-lab/salmon/issues/490:1062,Testability,benchmark,benchmarking,1062,"Hi!; This is probably not a question for the github, but I wasn't sure where to post; (please redirect me, and I'll happily remove it). I had one small question related to the paper; https://www.biorxiv.org/content/10.1101/657874v1. When performing the benchmarking of all different approaches, the parameters used when testing STAR+Salmon are listed of course. It's mentioned that the parameters of STAR are meant to be kept the same as RSEM uses them in order to get the actual proper comparisons.; All the parameters do look the same, except for one; --sjdbScore; In your paper, this param is not being used, which means that the default value of 2 is active.; RSEM, however, sets this to 1. . I'm not sure if this will affect the results in any major way though, so I just wanted to check if there was maybe a reason behind leaving this value to 2 in the paper. The --sjdbScore value scores alignments with annotated junctions higher over unspliced alignments. ; I'm not even actually sure why RSEM lowers this to 1. ; I was trying to replicate some of your benchmarking, and I was just curious about this one if you have any info that can help out. And again, I probably don't need to mention it anymore, but awesome job with the Salmon! Thanks once more for the awesome software!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/490
https://github.com/COMBINE-lab/salmon/issues/492:541,Testability,test,test,541,"Hi, I like salmon for RNA-Seq quantification. To better quantify my data, I have some questions.; I compared the number of reads in quant.sf file with the unique counts and ambiguous counts in ambig_info.tsv. Some final estimation are similar to the sum of unique+ambiguous, some closed to unique, and some closed to ambiguous. I want to know how did you estimate the final counts to combine the unique and ambiguous counts?; For the unstranded library, did you use the same algorithm to estimate the final counts as the stranded library? I test some sequences for unstranded library, the estimation for reverse complement sequence is same. Is there a better way to estimate the transcripts anti-overlapping with another one in unstranded library?. Thanks,; Jing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/492
https://github.com/COMBINE-lab/salmon/issues/496:83,Availability,down,downloaded,83,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496
https://github.com/COMBINE-lab/salmon/issues/496:120,Availability,down,downloaded,120,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496
https://github.com/COMBINE-lab/salmon/issues/496:373,Availability,down,download,373,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496
https://github.com/COMBINE-lab/salmon/issues/496:1082,Availability,down,download,1082,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496
https://github.com/COMBINE-lab/salmon/issues/496:1133,Availability,down,download,1133,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496
https://github.com/COMBINE-lab/salmon/issues/496:1591,Availability,down,download,1591,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496
https://github.com/COMBINE-lab/salmon/issues/496:1712,Deployability,update,update,1712,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496
https://github.com/COMBINE-lab/salmon/issues/496:362,Performance,Perform,Performing,362,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496
https://github.com/COMBINE-lab/salmon/issues/496:841,Performance,load,loaded,841,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496
https://github.com/COMBINE-lab/salmon/issues/496:739,Security,checksum,checksum,739,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496
https://github.com/COMBINE-lab/salmon/issues/496:239,Testability,log,log,239,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496
https://github.com/COMBINE-lab/salmon/issues/497:51,Availability,down,downloaded,51,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497
https://github.com/COMBINE-lab/salmon/issues/497:237,Availability,error,error,237,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497
https://github.com/COMBINE-lab/salmon/issues/497:253,Availability,down,downloading,253,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497
https://github.com/COMBINE-lab/salmon/issues/497:547,Availability,down,download,547,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497
https://github.com/COMBINE-lab/salmon/issues/497:617,Availability,down,download,617,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497
https://github.com/COMBINE-lab/salmon/issues/497:627,Availability,Error,Error,627,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497
https://github.com/COMBINE-lab/salmon/issues/497:757,Availability,Error,Error,757,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497
https://github.com/COMBINE-lab/salmon/issues/497:828,Availability,Error,Error,828,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497
https://github.com/COMBINE-lab/salmon/issues/497:167,Deployability,install,installation,167,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497
https://github.com/COMBINE-lab/salmon/issues/497:371,Security,checksum,checksum,371,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497
https://github.com/COMBINE-lab/salmon/issues/498:238,Deployability,pipeline,pipeline,238,"Hi @rob-p @k3yavi . A question (or feature enhancement); When I am doing salmon indexing, is there a metadata file that will capture info about the salmon version used for indexing. Why am I asking this: I am developing a high throughput pipeline (with bbmap, bbduk, etc and then salmon) where I use salmon 1.1.0 for quantification - in this scenario, independent users have to build their own salmon indices and I want to trap/capture the situation where the user has used a different salmon version of indexing. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/498
https://github.com/COMBINE-lab/salmon/issues/498:43,Modifiability,enhance,enhancement,43,"Hi @rob-p @k3yavi . A question (or feature enhancement); When I am doing salmon indexing, is there a metadata file that will capture info about the salmon version used for indexing. Why am I asking this: I am developing a high throughput pipeline (with bbmap, bbduk, etc and then salmon) where I use salmon 1.1.0 for quantification - in this scenario, independent users have to build their own salmon indices and I want to trap/capture the situation where the user has used a different salmon version of indexing. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/498
https://github.com/COMBINE-lab/salmon/issues/498:227,Performance,throughput,throughput,227,"Hi @rob-p @k3yavi . A question (or feature enhancement); When I am doing salmon indexing, is there a metadata file that will capture info about the salmon version used for indexing. Why am I asking this: I am developing a high throughput pipeline (with bbmap, bbduk, etc and then salmon) where I use salmon 1.1.0 for quantification - in this scenario, independent users have to build their own salmon indices and I want to trap/capture the situation where the user has used a different salmon version of indexing. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/498
https://github.com/COMBINE-lab/salmon/issues/499:180,Usability,guid,guide,180,"Hi @rob-p . I wanted to know if you (or anyone else in your team) has looked into **_how the[ 'seal' program from BBTools](https://jgi.doe.gov/data-and-tools/bbtools/bb-tools-user-guide/seal-guide/) compares with Salmon_**. I ask this for couple of reasons based on comments on Biostars postings (in fact you have also posted in 1 of the threads):. 1. https://www.biostars.org/p/130451/#209851 - This is the post by Brian Bushnell (the developer of all the tools in BBTools) in Biostars about 4 years back (and **_you have also posted there_** https://www.biostars.org/p/130451/#130507). . This is what Brian wrote then:; ```; BBMap and Seal can be used for expression analysis, ; but not differential-expression analysis, without an additional program. ; However, they do the hard work of the actual mapping. ; Maybe I should write something for DE analysis; ```. 2. **_This is the more important posting of Brian from 4 years back_** - https://www.biostars.org/p/175454/#175625 - and I want to draw your attention to ; ```; If all you want to know is whether gene A or B is more upregulated ; in your experiment, then mapping to a transcriptome using any aligner is fine... ; but you could accomplish the same thing ; faster and probably more accurately using a kmer-matching tool like Seal; ```. Couple of questions/suggestions:. 1. Have you considered comparing salmon with seal and how the two compare . 2. Probably, it would/could be a good idea to combine the best of both the tools ```seal and salmon``` for the benefit of the research community in general by collaborating with Brian?. Thanks,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/499
https://github.com/COMBINE-lab/salmon/issues/499:191,Usability,guid,guide,191,"Hi @rob-p . I wanted to know if you (or anyone else in your team) has looked into **_how the[ 'seal' program from BBTools](https://jgi.doe.gov/data-and-tools/bbtools/bb-tools-user-guide/seal-guide/) compares with Salmon_**. I ask this for couple of reasons based on comments on Biostars postings (in fact you have also posted in 1 of the threads):. 1. https://www.biostars.org/p/130451/#209851 - This is the post by Brian Bushnell (the developer of all the tools in BBTools) in Biostars about 4 years back (and **_you have also posted there_** https://www.biostars.org/p/130451/#130507). . This is what Brian wrote then:; ```; BBMap and Seal can be used for expression analysis, ; but not differential-expression analysis, without an additional program. ; However, they do the hard work of the actual mapping. ; Maybe I should write something for DE analysis; ```. 2. **_This is the more important posting of Brian from 4 years back_** - https://www.biostars.org/p/175454/#175625 - and I want to draw your attention to ; ```; If all you want to know is whether gene A or B is more upregulated ; in your experiment, then mapping to a transcriptome using any aligner is fine... ; but you could accomplish the same thing ; faster and probably more accurately using a kmer-matching tool like Seal; ```. Couple of questions/suggestions:. 1. Have you considered comparing salmon with seal and how the two compare . 2. Probably, it would/could be a good idea to combine the best of both the tools ```seal and salmon``` for the benefit of the research community in general by collaborating with Brian?. Thanks,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/499
https://github.com/COMBINE-lab/salmon/issues/500:945,Availability,avail,available,945,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon 1.1.0 and 1.0.0 core-dump when attempting to build an index under Ubuntu 18.04 LTS; **To Reproduce**; Steps and data to reproduce the behavior:; ```; root@firefly:/usr/local/src/salmon# salmon-1.1.0_linux_x86_6/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: This is the most recent version of salmon.; [2020-04-07 21:11:41.237] [jLog] [info] building index; out : index; [2020-04-07 21:11:41.240] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; Illegal instruction (core dumped). root@firefly:/usr/local/src/salmon# salmon-0.14.1_linux_x86_64/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; [2020-04-07 21:12:14.575] [jLog] [info] building index; [2020-04-07 21:12:14.580] [jointLog] [info] [Step 1 of 4] : counting k-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit su",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:987,Availability,avail,available,987,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon 1.1.0 and 1.0.0 core-dump when attempting to build an index under Ubuntu 18.04 LTS; **To Reproduce**; Steps and data to reproduce the behavior:; ```; root@firefly:/usr/local/src/salmon# salmon-1.1.0_linux_x86_6/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: This is the most recent version of salmon.; [2020-04-07 21:11:41.237] [jLog] [info] building index; out : index; [2020-04-07 21:11:41.240] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; Illegal instruction (core dumped). root@firefly:/usr/local/src/salmon# salmon-0.14.1_linux_x86_64/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; [2020-04-07 21:12:14.575] [jLog] [info] building index; [2020-04-07 21:12:14.580] [jointLog] [info] [Step 1 of 4] : counting k-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit su",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:2392,Availability,down,downloaded,2392,"-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:877,Deployability,UPGRADE,UPGRADE,877,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon 1.1.0 and 1.0.0 core-dump when attempting to build an index under Ubuntu 18.04 LTS; **To Reproduce**; Steps and data to reproduce the behavior:; ```; root@firefly:/usr/local/src/salmon# salmon-1.1.0_linux_x86_6/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: This is the most recent version of salmon.; [2020-04-07 21:11:41.237] [jLog] [info] building index; out : index; [2020-04-07 21:11:41.240] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; Illegal instruction (core dumped). root@firefly:/usr/local/src/salmon# salmon-0.14.1_linux_x86_64/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; [2020-04-07 21:12:14.575] [jLog] [info] building index; [2020-04-07 21:12:14.580] [jointLog] [info] [Step 1 of 4] : counting k-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit su",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:1038,Deployability,release,releases,1038,")?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon 1.1.0 and 1.0.0 core-dump when attempting to build an index under Ubuntu 18.04 LTS; **To Reproduce**; Steps and data to reproduce the behavior:; ```; root@firefly:/usr/local/src/salmon# salmon-1.1.0_linux_x86_6/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: This is the most recent version of salmon.; [2020-04-07 21:11:41.237] [jLog] [info] building index; out : index; [2020-04-07 21:11:41.240] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; Illegal instruction (core dumped). root@firefly:/usr/local/src/salmon# salmon-0.14.1_linux_x86_64/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; [2020-04-07 21:12:14.575] [jLog] [info] building index; [2020-04-07 21:12:14.580] [jointLog] [info] [Step 1 of 4] : counting k-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [j",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:1107,Deployability,upgrade,upgrade,1107,")?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon 1.1.0 and 1.0.0 core-dump when attempting to build an index under Ubuntu 18.04 LTS; **To Reproduce**; Steps and data to reproduce the behavior:; ```; root@firefly:/usr/local/src/salmon# salmon-1.1.0_linux_x86_6/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: This is the most recent version of salmon.; [2020-04-07 21:11:41.237] [jLog] [info] building index; out : index; [2020-04-07 21:11:41.240] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; Illegal instruction (core dumped). root@firefly:/usr/local/src/salmon# salmon-0.14.1_linux_x86_64/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; [2020-04-07 21:12:14.575] [jLog] [info] building index; [2020-04-07 21:12:14.580] [jointLog] [info] [Step 1 of 4] : counting k-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [j",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:1229,Deployability,update,updates,1229,"en attempting to build an index under Ubuntu 18.04 LTS; **To Reproduce**; Steps and data to reproduce the behavior:; ```; root@firefly:/usr/local/src/salmon# salmon-1.1.0_linux_x86_6/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: This is the most recent version of salmon.; [2020-04-07 21:11:41.237] [jLog] [info] building index; out : index; [2020-04-07 21:11:41.240] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; Illegal instruction (core dumped). root@firefly:/usr/local/src/salmon# salmon-0.14.1_linux_x86_64/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; [2020-04-07 21:12:14.575] [jLog] [info] building index; [2020-04-07 21:12:14.580] [jointLog] [info] [Step 1 of 4] : counting k-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:2371,Deployability,install,installed,2371,"-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:2522,Deployability,release,release,2522,"fo] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps and installed the binary releases of ""salmon"" 1.1.0 then 0.41.1 from GitHub in /usr/local. Did stand-alone tests with sample data from the GitHub bin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:3346,Deployability,install,installed,3346,"poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps and installed the binary releases of ""salmon"" 1.1.0 then 0.41.1 from GitHub in /usr/local. Did stand-alone tests with sample data from the GitHub binary release.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:3416,Deployability,install,installed,3416,"poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps and installed the binary releases of ""salmon"" 1.1.0 then 0.41.1 from GitHub in /usr/local. Did stand-alone tests with sample data from the GitHub binary release.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:3437,Deployability,release,releases,3437,"poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps and installed the binary releases of ""salmon"" 1.1.0 then 0.41.1 from GitHub in /usr/local. Did stand-alone tests with sample data from the GitHub binary release.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:3565,Deployability,release,release,3565,"poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps and installed the binary releases of ""salmon"" 1.1.0 then 0.41.1 from GitHub in /usr/local. Did stand-alone tests with sample data from the GitHub binary release.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:3519,Testability,test,tests,3519,"poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps and installed the binary releases of ""salmon"" 1.1.0 then 0.41.1 from GitHub in /usr/local. Did stand-alone tests with sample data from the GitHub binary release.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:118,Usability,clear,clear,118,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon 1.1.0 and 1.0.0 core-dump when attempting to build an index under Ubuntu 18.04 LTS; **To Reproduce**; Steps and data to reproduce the behavior:; ```; root@firefly:/usr/local/src/salmon# salmon-1.1.0_linux_x86_6/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: This is the most recent version of salmon.; [2020-04-07 21:11:41.237] [jLog] [info] building index; out : index; [2020-04-07 21:11:41.240] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; Illegal instruction (core dumped). root@firefly:/usr/local/src/salmon# salmon-0.14.1_linux_x86_64/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; [2020-04-07 21:12:14.575] [jLog] [info] building index; [2020-04-07 21:12:14.580] [jointLog] [info] [Step 1 of 4] : counting k-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit su",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/500:2682,Usability,clear,clear,2682,"poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps and installed the binary releases of ""salmon"" 1.1.0 then 0.41.1 from GitHub in /usr/local. Did stand-alone tests with sample data from the GitHub binary release.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500
https://github.com/COMBINE-lab/salmon/issues/501:408,Testability,log,log,408,"Hi,; it seems that --writeUnmappedNames option doesn't work for `salmon alevin` (both R1 and R2 reads were used), while `salmon quant` with the same dataset (only R2 reads were used since R1 contains barcodes) reports unmapped read names correctly. The `alevin` reports all the reads in the dataset as unmapped, while `quant` gets only the fraction of them (the size of that fraction the same as reported in log). `salmon version: 1.1.0`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/501
https://github.com/COMBINE-lab/salmon/issues/502:124,Deployability,deploy,deployment,124,"Good morning,. I'm a *nix developer with a lot of experience porting software to various platforms. My preferred method for deployment is build-from-source package managers such as FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc (which I use extensively on CentOS), etc. Package managers in-general minimize problems for end users (and hence reduce PRs for you guys). Build-from-source package managers also allow customizing build options (e.g. adding -march=native), which can sometimes offer significantly better performance than you can get from a generic binary package that has to support older CPUs. Currently, developing such packages for salmon is a challenge due to the way the build system works. I've been looking through the build system and the main barrier to packaging is the unconditional bundling of some dependencies, such as seqlib and htslib. If you were to update the cmake systems so that they first look for *all* dependencies installed externally, as they already do for jemalloc and tbb, then it would be easier for developers to package salmon. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/502
https://github.com/COMBINE-lab/salmon/issues/502:879,Deployability,update,update,879,"Good morning,. I'm a *nix developer with a lot of experience porting software to various platforms. My preferred method for deployment is build-from-source package managers such as FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc (which I use extensively on CentOS), etc. Package managers in-general minimize problems for end users (and hence reduce PRs for you guys). Build-from-source package managers also allow customizing build options (e.g. adding -march=native), which can sometimes offer significantly better performance than you can get from a generic binary package that has to support older CPUs. Currently, developing such packages for salmon is a challenge due to the way the build system works. I've been looking through the build system and the main barrier to packaging is the unconditional bundling of some dependencies, such as seqlib and htslib. If you were to update the cmake systems so that they first look for *all* dependencies installed externally, as they already do for jemalloc and tbb, then it would be easier for developers to package salmon. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/502
https://github.com/COMBINE-lab/salmon/issues/502:951,Deployability,install,installed,951,"Good morning,. I'm a *nix developer with a lot of experience porting software to various platforms. My preferred method for deployment is build-from-source package managers such as FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc (which I use extensively on CentOS), etc. Package managers in-general minimize problems for end users (and hence reduce PRs for you guys). Build-from-source package managers also allow customizing build options (e.g. adding -march=native), which can sometimes offer significantly better performance than you can get from a generic binary package that has to support older CPUs. Currently, developing such packages for salmon is a challenge due to the way the build system works. I've been looking through the build system and the main barrier to packaging is the unconditional bundling of some dependencies, such as seqlib and htslib. If you were to update the cmake systems so that they first look for *all* dependencies installed externally, as they already do for jemalloc and tbb, then it would be easier for developers to package salmon. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/502
https://github.com/COMBINE-lab/salmon/issues/502:342,Energy Efficiency,reduce,reduce,342,"Good morning,. I'm a *nix developer with a lot of experience porting software to various platforms. My preferred method for deployment is build-from-source package managers such as FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc (which I use extensively on CentOS), etc. Package managers in-general minimize problems for end users (and hence reduce PRs for you guys). Build-from-source package managers also allow customizing build options (e.g. adding -march=native), which can sometimes offer significantly better performance than you can get from a generic binary package that has to support older CPUs. Currently, developing such packages for salmon is a challenge due to the way the build system works. I've been looking through the build system and the main barrier to packaging is the unconditional bundling of some dependencies, such as seqlib and htslib. If you were to update the cmake systems so that they first look for *all* dependencies installed externally, as they already do for jemalloc and tbb, then it would be easier for developers to package salmon. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/502
https://github.com/COMBINE-lab/salmon/issues/502:823,Integrability,depend,dependencies,823,"Good morning,. I'm a *nix developer with a lot of experience porting software to various platforms. My preferred method for deployment is build-from-source package managers such as FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc (which I use extensively on CentOS), etc. Package managers in-general minimize problems for end users (and hence reduce PRs for you guys). Build-from-source package managers also allow customizing build options (e.g. adding -march=native), which can sometimes offer significantly better performance than you can get from a generic binary package that has to support older CPUs. Currently, developing such packages for salmon is a challenge due to the way the build system works. I've been looking through the build system and the main barrier to packaging is the unconditional bundling of some dependencies, such as seqlib and htslib. If you were to update the cmake systems so that they first look for *all* dependencies installed externally, as they already do for jemalloc and tbb, then it would be easier for developers to package salmon. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/502
https://github.com/COMBINE-lab/salmon/issues/502:938,Integrability,depend,dependencies,938,"Good morning,. I'm a *nix developer with a lot of experience porting software to various platforms. My preferred method for deployment is build-from-source package managers such as FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc (which I use extensively on CentOS), etc. Package managers in-general minimize problems for end users (and hence reduce PRs for you guys). Build-from-source package managers also allow customizing build options (e.g. adding -march=native), which can sometimes offer significantly better performance than you can get from a generic binary package that has to support older CPUs. Currently, developing such packages for salmon is a challenge due to the way the build system works. I've been looking through the build system and the main barrier to packaging is the unconditional bundling of some dependencies, such as seqlib and htslib. If you were to update the cmake systems so that they first look for *all* dependencies installed externally, as they already do for jemalloc and tbb, then it would be easier for developers to package salmon. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/502
https://github.com/COMBINE-lab/salmon/issues/502:516,Performance,perform,performance,516,"Good morning,. I'm a *nix developer with a lot of experience porting software to various platforms. My preferred method for deployment is build-from-source package managers such as FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc (which I use extensively on CentOS), etc. Package managers in-general minimize problems for end users (and hence reduce PRs for you guys). Build-from-source package managers also allow customizing build options (e.g. adding -march=native), which can sometimes offer significantly better performance than you can get from a generic binary package that has to support older CPUs. Currently, developing such packages for salmon is a challenge due to the way the build system works. I've been looking through the build system and the main barrier to packaging is the unconditional bundling of some dependencies, such as seqlib and htslib. If you were to update the cmake systems so that they first look for *all* dependencies installed externally, as they already do for jemalloc and tbb, then it would be easier for developers to package salmon. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/502
https://github.com/COMBINE-lab/salmon/issues/503:501,Availability,error,error,501,"**Describe the bug**; I followed every step of this tutorial to generate the index.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; Instead of using the mouse genomic data, I used the human data (https://www.gencodegenes.org/human/release_33lift37.html).; I invoked the indexing with the following command: ; **salmon index -t gentrome.fa.gz -d decoys.txt -p 8 -i salmon_index --gencode**; In the beginning everything seems to run smoothly, but a couple minutes in different error messages appear:; **error: Cant write to a temporary file**; **error: Cant read the input file**; followed by **Segmentation fault** and then the algorithm exits. ; Nonetheless a directory with different files regarding the indexing is beeing created.; However when I run; **salmon quant -i salmon_index/ -l A -1 ../../patients/patient001/fastq/S0012_1.fastq.gz -2 ../../patients/patient001/fastq/S0012_2.fastq.gz --validateMappings -o transcripts_quant**. it tells me that **The index version file salmon_index/versionInfo.json doesn't seem to exist**. **To Reproduce**; I installed salmon via bioconda, version 1.1.0. **Desktop (please complete the following information):**; Its running on CentOS 7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503
https://github.com/COMBINE-lab/salmon/issues/503:527,Availability,error,error,527,"**Describe the bug**; I followed every step of this tutorial to generate the index.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; Instead of using the mouse genomic data, I used the human data (https://www.gencodegenes.org/human/release_33lift37.html).; I invoked the indexing with the following command: ; **salmon index -t gentrome.fa.gz -d decoys.txt -p 8 -i salmon_index --gencode**; In the beginning everything seems to run smoothly, but a couple minutes in different error messages appear:; **error: Cant write to a temporary file**; **error: Cant read the input file**; followed by **Segmentation fault** and then the algorithm exits. ; Nonetheless a directory with different files regarding the indexing is beeing created.; However when I run; **salmon quant -i salmon_index/ -l A -1 ../../patients/patient001/fastq/S0012_1.fastq.gz -2 ../../patients/patient001/fastq/S0012_2.fastq.gz --validateMappings -o transcripts_quant**. it tells me that **The index version file salmon_index/versionInfo.json doesn't seem to exist**. **To Reproduce**; I installed salmon via bioconda, version 1.1.0. **Desktop (please complete the following information):**; Its running on CentOS 7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503
https://github.com/COMBINE-lab/salmon/issues/503:570,Availability,error,error,570,"**Describe the bug**; I followed every step of this tutorial to generate the index.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; Instead of using the mouse genomic data, I used the human data (https://www.gencodegenes.org/human/release_33lift37.html).; I invoked the indexing with the following command: ; **salmon index -t gentrome.fa.gz -d decoys.txt -p 8 -i salmon_index --gencode**; In the beginning everything seems to run smoothly, but a couple minutes in different error messages appear:; **error: Cant write to a temporary file**; **error: Cant read the input file**; followed by **Segmentation fault** and then the algorithm exits. ; Nonetheless a directory with different files regarding the indexing is beeing created.; However when I run; **salmon quant -i salmon_index/ -l A -1 ../../patients/patient001/fastq/S0012_1.fastq.gz -2 ../../patients/patient001/fastq/S0012_2.fastq.gz --validateMappings -o transcripts_quant**. it tells me that **The index version file salmon_index/versionInfo.json doesn't seem to exist**. **To Reproduce**; I installed salmon via bioconda, version 1.1.0. **Desktop (please complete the following information):**; Its running on CentOS 7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503
https://github.com/COMBINE-lab/salmon/issues/503:632,Availability,fault,fault,632,"**Describe the bug**; I followed every step of this tutorial to generate the index.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; Instead of using the mouse genomic data, I used the human data (https://www.gencodegenes.org/human/release_33lift37.html).; I invoked the indexing with the following command: ; **salmon index -t gentrome.fa.gz -d decoys.txt -p 8 -i salmon_index --gencode**; In the beginning everything seems to run smoothly, but a couple minutes in different error messages appear:; **error: Cant write to a temporary file**; **error: Cant read the input file**; followed by **Segmentation fault** and then the algorithm exits. ; Nonetheless a directory with different files regarding the indexing is beeing created.; However when I run; **salmon quant -i salmon_index/ -l A -1 ../../patients/patient001/fastq/S0012_1.fastq.gz -2 ../../patients/patient001/fastq/S0012_2.fastq.gz --validateMappings -o transcripts_quant**. it tells me that **The index version file salmon_index/versionInfo.json doesn't seem to exist**. **To Reproduce**; I installed salmon via bioconda, version 1.1.0. **Desktop (please complete the following information):**; Its running on CentOS 7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503
https://github.com/COMBINE-lab/salmon/issues/503:1081,Deployability,install,installed,1081,"**Describe the bug**; I followed every step of this tutorial to generate the index.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; Instead of using the mouse genomic data, I used the human data (https://www.gencodegenes.org/human/release_33lift37.html).; I invoked the indexing with the following command: ; **salmon index -t gentrome.fa.gz -d decoys.txt -p 8 -i salmon_index --gencode**; In the beginning everything seems to run smoothly, but a couple minutes in different error messages appear:; **error: Cant write to a temporary file**; **error: Cant read the input file**; followed by **Segmentation fault** and then the algorithm exits. ; Nonetheless a directory with different files regarding the indexing is beeing created.; However when I run; **salmon quant -i salmon_index/ -l A -1 ../../patients/patient001/fastq/S0012_1.fastq.gz -2 ../../patients/patient001/fastq/S0012_2.fastq.gz --validateMappings -o transcripts_quant**. it tells me that **The index version file salmon_index/versionInfo.json doesn't seem to exist**. **To Reproduce**; I installed salmon via bioconda, version 1.1.0. **Desktop (please complete the following information):**; Its running on CentOS 7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503
https://github.com/COMBINE-lab/salmon/issues/503:507,Integrability,message,messages,507,"**Describe the bug**; I followed every step of this tutorial to generate the index.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; Instead of using the mouse genomic data, I used the human data (https://www.gencodegenes.org/human/release_33lift37.html).; I invoked the indexing with the following command: ; **salmon index -t gentrome.fa.gz -d decoys.txt -p 8 -i salmon_index --gencode**; In the beginning everything seems to run smoothly, but a couple minutes in different error messages appear:; **error: Cant write to a temporary file**; **error: Cant read the input file**; followed by **Segmentation fault** and then the algorithm exits. ; Nonetheless a directory with different files regarding the indexing is beeing created.; However when I run; **salmon quant -i salmon_index/ -l A -1 ../../patients/patient001/fastq/S0012_1.fastq.gz -2 ../../patients/patient001/fastq/S0012_2.fastq.gz --validateMappings -o transcripts_quant**. it tells me that **The index version file salmon_index/versionInfo.json doesn't seem to exist**. **To Reproduce**; I installed salmon via bioconda, version 1.1.0. **Desktop (please complete the following information):**; Its running on CentOS 7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503
https://github.com/COMBINE-lab/salmon/issues/503:923,Security,validat,validateMappings,923,"**Describe the bug**; I followed every step of this tutorial to generate the index.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; Instead of using the mouse genomic data, I used the human data (https://www.gencodegenes.org/human/release_33lift37.html).; I invoked the indexing with the following command: ; **salmon index -t gentrome.fa.gz -d decoys.txt -p 8 -i salmon_index --gencode**; In the beginning everything seems to run smoothly, but a couple minutes in different error messages appear:; **error: Cant write to a temporary file**; **error: Cant read the input file**; followed by **Segmentation fault** and then the algorithm exits. ; Nonetheless a directory with different files regarding the indexing is beeing created.; However when I run; **salmon quant -i salmon_index/ -l A -1 ../../patients/patient001/fastq/S0012_1.fastq.gz -2 ../../patients/patient001/fastq/S0012_2.fastq.gz --validateMappings -o transcripts_quant**. it tells me that **The index version file salmon_index/versionInfo.json doesn't seem to exist**. **To Reproduce**; I installed salmon via bioconda, version 1.1.0. **Desktop (please complete the following information):**; Its running on CentOS 7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503
https://github.com/COMBINE-lab/salmon/issues/505:148,Deployability,release,release-,148,"Hi. I am using salmon 1.2.0 to build a Salmon-SAF index on Rat data from Ensembl -- using full genome as decoy. ```; wget ftp://ftp.ensembl.org/pub/release-96/fasta/rattus_norvegicus/cdna/Rattus_norvegicus.Rnor_6.0.cdna.all.fa.gz. wget ftp://ftp.ensembl.org/pub/release-96/fasta/rattus_norvegicus/dna_index/Rattus_norvegicus.Rnor_6.0.dna.toplevel.fa.gz. Other steps as listed at:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; ```. **_After I build the SA index, the directory size is 45 GB_**. The same with v1.1.0 on the RefGenomes site is about 15GB - http://refgenomes.databio.org/v2/asset/rn6/salmon_sa_index/splash?tag=default . Is this expected?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/505
https://github.com/COMBINE-lab/salmon/issues/505:262,Deployability,release,release-,262,"Hi. I am using salmon 1.2.0 to build a Salmon-SAF index on Rat data from Ensembl -- using full genome as decoy. ```; wget ftp://ftp.ensembl.org/pub/release-96/fasta/rattus_norvegicus/cdna/Rattus_norvegicus.Rnor_6.0.cdna.all.fa.gz. wget ftp://ftp.ensembl.org/pub/release-96/fasta/rattus_norvegicus/dna_index/Rattus_norvegicus.Rnor_6.0.dna.toplevel.fa.gz. Other steps as listed at:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; ```. **_After I build the SA index, the directory size is 45 GB_**. The same with v1.1.0 on the RefGenomes site is about 15GB - http://refgenomes.databio.org/v2/asset/rn6/salmon_sa_index/splash?tag=default . Is this expected?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/505
https://github.com/COMBINE-lab/salmon/issues/508:103,Availability,error,error,103,"Hello. I'm trying to quantify the samples included with the Salmon tutorial, but is giving me a malloc error. I'm using ANACONDA with salmon 1.1.0 on MacOS Catalina. First, I had to separately download sailfish because wasn't included with the salmon package. So the first error was:. _Processing sample DRR016125. -bash: sailfish: command not found_. I solved this by downloading sailfish from biobuilds, but then I'm getting this error:. Processing sample DRR016125. sailfish(23259,0x105f71dc0) malloc: *** malloc_zone_unregister() failed for 0x7fff90f4f000. How can I solve this issue. I'm totally new on RNA-seq analysis and don't know how to continue. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/508
https://github.com/COMBINE-lab/salmon/issues/508:193,Availability,down,download,193,"Hello. I'm trying to quantify the samples included with the Salmon tutorial, but is giving me a malloc error. I'm using ANACONDA with salmon 1.1.0 on MacOS Catalina. First, I had to separately download sailfish because wasn't included with the salmon package. So the first error was:. _Processing sample DRR016125. -bash: sailfish: command not found_. I solved this by downloading sailfish from biobuilds, but then I'm getting this error:. Processing sample DRR016125. sailfish(23259,0x105f71dc0) malloc: *** malloc_zone_unregister() failed for 0x7fff90f4f000. How can I solve this issue. I'm totally new on RNA-seq analysis and don't know how to continue. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/508
https://github.com/COMBINE-lab/salmon/issues/508:273,Availability,error,error,273,"Hello. I'm trying to quantify the samples included with the Salmon tutorial, but is giving me a malloc error. I'm using ANACONDA with salmon 1.1.0 on MacOS Catalina. First, I had to separately download sailfish because wasn't included with the salmon package. So the first error was:. _Processing sample DRR016125. -bash: sailfish: command not found_. I solved this by downloading sailfish from biobuilds, but then I'm getting this error:. Processing sample DRR016125. sailfish(23259,0x105f71dc0) malloc: *** malloc_zone_unregister() failed for 0x7fff90f4f000. How can I solve this issue. I'm totally new on RNA-seq analysis and don't know how to continue. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/508
https://github.com/COMBINE-lab/salmon/issues/508:369,Availability,down,downloading,369,"Hello. I'm trying to quantify the samples included with the Salmon tutorial, but is giving me a malloc error. I'm using ANACONDA with salmon 1.1.0 on MacOS Catalina. First, I had to separately download sailfish because wasn't included with the salmon package. So the first error was:. _Processing sample DRR016125. -bash: sailfish: command not found_. I solved this by downloading sailfish from biobuilds, but then I'm getting this error:. Processing sample DRR016125. sailfish(23259,0x105f71dc0) malloc: *** malloc_zone_unregister() failed for 0x7fff90f4f000. How can I solve this issue. I'm totally new on RNA-seq analysis and don't know how to continue. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/508
https://github.com/COMBINE-lab/salmon/issues/508:432,Availability,error,error,432,"Hello. I'm trying to quantify the samples included with the Salmon tutorial, but is giving me a malloc error. I'm using ANACONDA with salmon 1.1.0 on MacOS Catalina. First, I had to separately download sailfish because wasn't included with the salmon package. So the first error was:. _Processing sample DRR016125. -bash: sailfish: command not found_. I solved this by downloading sailfish from biobuilds, but then I'm getting this error:. Processing sample DRR016125. sailfish(23259,0x105f71dc0) malloc: *** malloc_zone_unregister() failed for 0x7fff90f4f000. How can I solve this issue. I'm totally new on RNA-seq analysis and don't know how to continue. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/508
https://github.com/COMBINE-lab/salmon/issues/509:162,Safety,avoid,avoid,162,Hi @rob-p @k3yavi . I think it is best to have the below stated somewhere within the 1st para of the README at https://github.com/COMBINE-lab/salmon **_This will avoid lots of confusion for most users_** - as seen here https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614298125 . 3 possible ways in which salmon index can be created. - cDNA only index : salmon_index - https://combine-lab.github.io/salmon/getting_started/. - SA mashmap index: salmon_partial_sa_index - (regions of genome that have high sequence similarity to the transcriptome) - https://github.com/COMBINE-lab/SalmonTools/blob/master/README.md and using this script https://raw.githubusercontent.com/COMBINE-lab/SalmonTools/master/scripts/generateDecoyTranscriptome.sh. - SAF genome index: salmon_sa_index - (the full genome is used as decoy) - https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/509
https://github.com/COMBINE-lab/salmon/issues/510:40,Integrability,message,message,40,"This is a question related to a strange message in the log out file after Salmon indexing on a very small genome with my own generated transcriptome and decoy. I'm running Salmon v1.0.0 index on the transcriptome of Candida parapsilosis which has a small genome of 26mbp. I created the transcriptome using Cufflinks gffread on my reference genome fasta and gff3. I created the decoy by concatenating the whole genome to the transcriptome [as it was described in the manual](https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode). . I am running using the following options:. `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i cpar_salmon_index -k 31; `. After indexing using a kmer size threshold of -k 31, I see the following message in the log out file ""filter size not provided. ntHll estimated 12754610 distinct k-mers, setting filter size to 2^28."" . 2^28 seems very high compared to 31 bp set using -k 31. I'm also curious why, after setting a k size, it printed the message ""filter size not provided."". I've pasted a more complete snippet of the log out file text below. Does everything look like it's run successfully? I'm concerned since I am running on a small genome and with my own generated decoy and transcriptome. Does it look like this running as it should, or is there a bug that I should provide more details about?. > [puff::index::jointLog] [info] Filter size not provided; ; > estimating from number of distinct k-mers; > [puff::index::jointLog] [info] ntHll estimated 1275461; > 0 distinct k-mers, setting filter size to 2^28; > Threads = 12; > Vertex length = 31; > Hash functions = 5; > Filter size = 268435456; > Capacity = 2; > Files: ; > cpar_salmon_index/ref_k31_fixed.fa; > --------------------------------------------------------------------------------; > Round 0, 0:268435456; > Pass	Filling	Filtering; > 1	0	8	; > 2	4	0; > True junctions count = 18712; > False junctions count = 40617; > Hash table size = 59329; > ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/510
https://github.com/COMBINE-lab/salmon/issues/510:780,Integrability,message,message,780,"This is a question related to a strange message in the log out file after Salmon indexing on a very small genome with my own generated transcriptome and decoy. I'm running Salmon v1.0.0 index on the transcriptome of Candida parapsilosis which has a small genome of 26mbp. I created the transcriptome using Cufflinks gffread on my reference genome fasta and gff3. I created the decoy by concatenating the whole genome to the transcriptome [as it was described in the manual](https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode). . I am running using the following options:. `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i cpar_salmon_index -k 31; `. After indexing using a kmer size threshold of -k 31, I see the following message in the log out file ""filter size not provided. ntHll estimated 12754610 distinct k-mers, setting filter size to 2^28."" . 2^28 seems very high compared to 31 bp set using -k 31. I'm also curious why, after setting a k size, it printed the message ""filter size not provided."". I've pasted a more complete snippet of the log out file text below. Does everything look like it's run successfully? I'm concerned since I am running on a small genome and with my own generated decoy and transcriptome. Does it look like this running as it should, or is there a bug that I should provide more details about?. > [puff::index::jointLog] [info] Filter size not provided; ; > estimating from number of distinct k-mers; > [puff::index::jointLog] [info] ntHll estimated 1275461; > 0 distinct k-mers, setting filter size to 2^28; > Threads = 12; > Vertex length = 31; > Hash functions = 5; > Filter size = 268435456; > Capacity = 2; > Files: ; > cpar_salmon_index/ref_k31_fixed.fa; > --------------------------------------------------------------------------------; > Round 0, 0:268435456; > Pass	Filling	Filtering; > 1	0	8	; > 2	4	0; > True junctions count = 18712; > False junctions count = 40617; > Hash table size = 59329; > ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/510
https://github.com/COMBINE-lab/salmon/issues/510:1026,Integrability,message,message,1026,"estion related to a strange message in the log out file after Salmon indexing on a very small genome with my own generated transcriptome and decoy. I'm running Salmon v1.0.0 index on the transcriptome of Candida parapsilosis which has a small genome of 26mbp. I created the transcriptome using Cufflinks gffread on my reference genome fasta and gff3. I created the decoy by concatenating the whole genome to the transcriptome [as it was described in the manual](https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode). . I am running using the following options:. `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i cpar_salmon_index -k 31; `. After indexing using a kmer size threshold of -k 31, I see the following message in the log out file ""filter size not provided. ntHll estimated 12754610 distinct k-mers, setting filter size to 2^28."" . 2^28 seems very high compared to 31 bp set using -k 31. I'm also curious why, after setting a k size, it printed the message ""filter size not provided."". I've pasted a more complete snippet of the log out file text below. Does everything look like it's run successfully? I'm concerned since I am running on a small genome and with my own generated decoy and transcriptome. Does it look like this running as it should, or is there a bug that I should provide more details about?. > [puff::index::jointLog] [info] Filter size not provided; ; > estimating from number of distinct k-mers; > [puff::index::jointLog] [info] ntHll estimated 1275461; > 0 distinct k-mers, setting filter size to 2^28; > Threads = 12; > Vertex length = 31; > Hash functions = 5; > Filter size = 268435456; > Capacity = 2; > Files: ; > cpar_salmon_index/ref_k31_fixed.fa; > --------------------------------------------------------------------------------; > Round 0, 0:268435456; > Pass	Filling	Filtering; > 1	0	8	; > 2	4	0; > True junctions count = 18712; > False junctions count = 40617; > Hash table size = 59329; > Candidate m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/510
https://github.com/COMBINE-lab/salmon/issues/510:1642,Security,Hash,Hash,1642," strange message in the log out file after Salmon indexing on a very small genome with my own generated transcriptome and decoy. I'm running Salmon v1.0.0 index on the transcriptome of Candida parapsilosis which has a small genome of 26mbp. I created the transcriptome using Cufflinks gffread on my reference genome fasta and gff3. I created the decoy by concatenating the whole genome to the transcriptome [as it was described in the manual](https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode). . I am running using the following options:. `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i cpar_salmon_index -k 31; `. After indexing using a kmer size threshold of -k 31, I see the following message in the log out file ""filter size not provided. ntHll estimated 12754610 distinct k-mers, setting filter size to 2^28."" . 2^28 seems very high compared to 31 bp set using -k 31. I'm also curious why, after setting a k size, it printed the message ""filter size not provided."". I've pasted a more complete snippet of the log out file text below. Does everything look like it's run successfully? I'm concerned since I am running on a small genome and with my own generated decoy and transcriptome. Does it look like this running as it should, or is there a bug that I should provide more details about?. > [puff::index::jointLog] [info] Filter size not provided; ; > estimating from number of distinct k-mers; > [puff::index::jointLog] [info] ntHll estimated 1275461; > 0 distinct k-mers, setting filter size to 2^28; > Threads = 12; > Vertex length = 31; > Hash functions = 5; > Filter size = 268435456; > Capacity = 2; > Files: ; > cpar_salmon_index/ref_k31_fixed.fa; > --------------------------------------------------------------------------------; > Round 0, 0:268435456; > Pass	Filling	Filtering; > 1	0	8	; > 2	4	0; > True junctions count = 18712; > False junctions count = 40617; > Hash table size = 59329; > Candidate marks count = 141326",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/510
https://github.com/COMBINE-lab/salmon/issues/510:1974,Security,Hash,Hash,1974," strange message in the log out file after Salmon indexing on a very small genome with my own generated transcriptome and decoy. I'm running Salmon v1.0.0 index on the transcriptome of Candida parapsilosis which has a small genome of 26mbp. I created the transcriptome using Cufflinks gffread on my reference genome fasta and gff3. I created the decoy by concatenating the whole genome to the transcriptome [as it was described in the manual](https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode). . I am running using the following options:. `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i cpar_salmon_index -k 31; `. After indexing using a kmer size threshold of -k 31, I see the following message in the log out file ""filter size not provided. ntHll estimated 12754610 distinct k-mers, setting filter size to 2^28."" . 2^28 seems very high compared to 31 bp set using -k 31. I'm also curious why, after setting a k size, it printed the message ""filter size not provided."". I've pasted a more complete snippet of the log out file text below. Does everything look like it's run successfully? I'm concerned since I am running on a small genome and with my own generated decoy and transcriptome. Does it look like this running as it should, or is there a bug that I should provide more details about?. > [puff::index::jointLog] [info] Filter size not provided; ; > estimating from number of distinct k-mers; > [puff::index::jointLog] [info] ntHll estimated 1275461; > 0 distinct k-mers, setting filter size to 2^28; > Threads = 12; > Vertex length = 31; > Hash functions = 5; > Filter size = 268435456; > Capacity = 2; > Files: ; > cpar_salmon_index/ref_k31_fixed.fa; > --------------------------------------------------------------------------------; > Round 0, 0:268435456; > Pass	Filling	Filtering; > 1	0	8	; > 2	4	0; > True junctions count = 18712; > False junctions count = 40617; > Hash table size = 59329; > Candidate marks count = 141326",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/510
https://github.com/COMBINE-lab/salmon/issues/510:55,Testability,log,log,55,"This is a question related to a strange message in the log out file after Salmon indexing on a very small genome with my own generated transcriptome and decoy. I'm running Salmon v1.0.0 index on the transcriptome of Candida parapsilosis which has a small genome of 26mbp. I created the transcriptome using Cufflinks gffread on my reference genome fasta and gff3. I created the decoy by concatenating the whole genome to the transcriptome [as it was described in the manual](https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode). . I am running using the following options:. `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i cpar_salmon_index -k 31; `. After indexing using a kmer size threshold of -k 31, I see the following message in the log out file ""filter size not provided. ntHll estimated 12754610 distinct k-mers, setting filter size to 2^28."" . 2^28 seems very high compared to 31 bp set using -k 31. I'm also curious why, after setting a k size, it printed the message ""filter size not provided."". I've pasted a more complete snippet of the log out file text below. Does everything look like it's run successfully? I'm concerned since I am running on a small genome and with my own generated decoy and transcriptome. Does it look like this running as it should, or is there a bug that I should provide more details about?. > [puff::index::jointLog] [info] Filter size not provided; ; > estimating from number of distinct k-mers; > [puff::index::jointLog] [info] ntHll estimated 1275461; > 0 distinct k-mers, setting filter size to 2^28; > Threads = 12; > Vertex length = 31; > Hash functions = 5; > Filter size = 268435456; > Capacity = 2; > Files: ; > cpar_salmon_index/ref_k31_fixed.fa; > --------------------------------------------------------------------------------; > Round 0, 0:268435456; > Pass	Filling	Filtering; > 1	0	8	; > 2	4	0; > True junctions count = 18712; > False junctions count = 40617; > Hash table size = 59329; > ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/510
https://github.com/COMBINE-lab/salmon/issues/510:795,Testability,log,log,795,"This is a question related to a strange message in the log out file after Salmon indexing on a very small genome with my own generated transcriptome and decoy. I'm running Salmon v1.0.0 index on the transcriptome of Candida parapsilosis which has a small genome of 26mbp. I created the transcriptome using Cufflinks gffread on my reference genome fasta and gff3. I created the decoy by concatenating the whole genome to the transcriptome [as it was described in the manual](https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode). . I am running using the following options:. `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i cpar_salmon_index -k 31; `. After indexing using a kmer size threshold of -k 31, I see the following message in the log out file ""filter size not provided. ntHll estimated 12754610 distinct k-mers, setting filter size to 2^28."" . 2^28 seems very high compared to 31 bp set using -k 31. I'm also curious why, after setting a k size, it printed the message ""filter size not provided."". I've pasted a more complete snippet of the log out file text below. Does everything look like it's run successfully? I'm concerned since I am running on a small genome and with my own generated decoy and transcriptome. Does it look like this running as it should, or is there a bug that I should provide more details about?. > [puff::index::jointLog] [info] Filter size not provided; ; > estimating from number of distinct k-mers; > [puff::index::jointLog] [info] ntHll estimated 1275461; > 0 distinct k-mers, setting filter size to 2^28; > Threads = 12; > Vertex length = 31; > Hash functions = 5; > Filter size = 268435456; > Capacity = 2; > Files: ; > cpar_salmon_index/ref_k31_fixed.fa; > --------------------------------------------------------------------------------; > Round 0, 0:268435456; > Pass	Filling	Filtering; > 1	0	8	; > 2	4	0; > True junctions count = 18712; > False junctions count = 40617; > Hash table size = 59329; > ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/510
https://github.com/COMBINE-lab/salmon/issues/510:1106,Testability,log,log,1106," strange message in the log out file after Salmon indexing on a very small genome with my own generated transcriptome and decoy. I'm running Salmon v1.0.0 index on the transcriptome of Candida parapsilosis which has a small genome of 26mbp. I created the transcriptome using Cufflinks gffread on my reference genome fasta and gff3. I created the decoy by concatenating the whole genome to the transcriptome [as it was described in the manual](https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode). . I am running using the following options:. `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i cpar_salmon_index -k 31; `. After indexing using a kmer size threshold of -k 31, I see the following message in the log out file ""filter size not provided. ntHll estimated 12754610 distinct k-mers, setting filter size to 2^28."" . 2^28 seems very high compared to 31 bp set using -k 31. I'm also curious why, after setting a k size, it printed the message ""filter size not provided."". I've pasted a more complete snippet of the log out file text below. Does everything look like it's run successfully? I'm concerned since I am running on a small genome and with my own generated decoy and transcriptome. Does it look like this running as it should, or is there a bug that I should provide more details about?. > [puff::index::jointLog] [info] Filter size not provided; ; > estimating from number of distinct k-mers; > [puff::index::jointLog] [info] ntHll estimated 1275461; > 0 distinct k-mers, setting filter size to 2^28; > Threads = 12; > Vertex length = 31; > Hash functions = 5; > Filter size = 268435456; > Capacity = 2; > Files: ; > cpar_salmon_index/ref_k31_fixed.fa; > --------------------------------------------------------------------------------; > Round 0, 0:268435456; > Pass	Filling	Filtering; > 1	0	8	; > 2	4	0; > True junctions count = 18712; > False junctions count = 40617; > Hash table size = 59329; > Candidate marks count = 141326",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/510
https://github.com/COMBINE-lab/salmon/issues/511:196,Availability,error,error,196,"Hi, . Running much of anything in command line is new to me. I ran the line below without success. . > ./bin/salmon quant -t transcripts.fa -l OSR -a myseq.bam -o salmon_quant. I keep getting the error below and am not sure why. . > [jointLog] [critical] Note: Alignment-free mapping (i.e. mapping without subsequent selective-alignment) has not yet been throughly tested under the pufferfish-based index and using the pufferfish-based mapping strategies. Thus, disabling of selective-alignment is not currently allowed. We may, potentially explore re-enabling this option in future versions of salmon. I am betting this is something really simple. I'd appreciate any help... Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/511
https://github.com/COMBINE-lab/salmon/issues/511:365,Testability,test,tested,365,"Hi, . Running much of anything in command line is new to me. I ran the line below without success. . > ./bin/salmon quant -t transcripts.fa -l OSR -a myseq.bam -o salmon_quant. I keep getting the error below and am not sure why. . > [jointLog] [critical] Note: Alignment-free mapping (i.e. mapping without subsequent selective-alignment) has not yet been throughly tested under the pufferfish-based index and using the pufferfish-based mapping strategies. Thus, disabling of selective-alignment is not currently allowed. We may, potentially explore re-enabling this option in future versions of salmon. I am betting this is something really simple. I'd appreciate any help... Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/511
https://github.com/COMBINE-lab/salmon/issues/511:641,Usability,simpl,simple,641,"Hi, . Running much of anything in command line is new to me. I ran the line below without success. . > ./bin/salmon quant -t transcripts.fa -l OSR -a myseq.bam -o salmon_quant. I keep getting the error below and am not sure why. . > [jointLog] [critical] Note: Alignment-free mapping (i.e. mapping without subsequent selective-alignment) has not yet been throughly tested under the pufferfish-based index and using the pufferfish-based mapping strategies. Thus, disabling of selective-alignment is not currently allowed. We may, potentially explore re-enabling this option in future versions of salmon. I am betting this is something really simple. I'd appreciate any help... Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/511
https://github.com/COMBINE-lab/salmon/issues/512:132,Availability,error,error,132,"Hi @rob-p . I have a dataset with about 30 samples or so, in some cases salmon quant (1.2.0) runs fine, with some samples I get the error below. I am using the same command (changing it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512
https://github.com/COMBINE-lab/salmon/issues/512:583,Availability,error,error,583,"Hi @rob-p . I have a dataset with about 30 samples or so, in some cases salmon quant (1.2.0) runs fine, with some samples I get the error below. I am using the same command (changing it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512
https://github.com/COMBINE-lab/salmon/issues/512:1732,Performance,Load,Loading,1732,"g it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Why does it say `salmon quant was invoked improperly`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512
https://github.com/COMBINE-lab/salmon/issues/512:1860,Performance,Load,Loading,1860,"g it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Why does it say `salmon quant was invoked improperly`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512
https://github.com/COMBINE-lab/salmon/issues/512:1930,Performance,Load,Loading,1930,"g it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Why does it say `salmon quant was invoked improperly`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512
https://github.com/COMBINE-lab/salmon/issues/512:398,Security,validat,validateMappings,398,"Hi @rob-p . I have a dataset with about 30 samples or so, in some cases salmon quant (1.2.0) runs fine, with some samples I get the error below. I am using the same command (changing it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512
https://github.com/COMBINE-lab/salmon/issues/512:738,Security,validat,validateMappings,738,"Hi @rob-p . I have a dataset with about 30 samples or so, in some cases salmon quant (1.2.0) runs fine, with some samples I get the error below. I am using the same command (changing it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512
https://github.com/COMBINE-lab/salmon/issues/512:1295,Security,validat,validateMappings,1295,"g it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Why does it say `salmon quant was invoked improperly`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512
https://github.com/COMBINE-lab/salmon/issues/512:1457,Security,validat,validateMappings,1457,"g it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Why does it say `salmon quant was invoked improperly`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512
https://github.com/COMBINE-lab/salmon/issues/512:982,Testability,Log,Logs,982,"Hi @rob-p . I have a dataset with about 30 samples or so, in some cases salmon quant (1.2.0) runs fine, with some samples I get the error below. I am using the same command (changing it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512
https://github.com/COMBINE-lab/salmon/issues/512:1021,Testability,log,logs,1021,"Hi @rob-p . I have a dataset with about 30 samples or so, in some cases salmon quant (1.2.0) runs fine, with some samples I get the error below. I am using the same command (changing it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512
https://github.com/COMBINE-lab/salmon/issues/513:586,Availability,error,error,586,"Hi. Can someone please tell me how to get rid of the gene names and other weird names but only keep transcript names in `quant.sf`? Here is what my `quant.sf `looks like:. Name Length EffectiveLength TPM NumReads; ENST00000456328.2|ENSG00000223972.5|OTTHUMG00000000961.2|OTTHUMT00000362751.1|DDX11L1-202|DDX11L1|1657|processed_transcript| 1657 1502.212 0.752165 16.577; ENST00000450305.2|ENSG00000223972.5|OTTHUMG00000000961.2|OTTHUMT00000002844.2|DDX11L1-201|DDX11L1|632|transcribed_unprocessed_pseudogene| 632 477.467 0.000000 0.000. Also I am wondering if this is the reason why the error occurs when I import the data and run `tximeta` in R.; It says Error in checkAssays2Txps(assays, txps) :; none of the transcripts in the quantification files are in the GTF. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/513
https://github.com/COMBINE-lab/salmon/issues/513:655,Availability,Error,Error,655,"Hi. Can someone please tell me how to get rid of the gene names and other weird names but only keep transcript names in `quant.sf`? Here is what my `quant.sf `looks like:. Name Length EffectiveLength TPM NumReads; ENST00000456328.2|ENSG00000223972.5|OTTHUMG00000000961.2|OTTHUMT00000362751.1|DDX11L1-202|DDX11L1|1657|processed_transcript| 1657 1502.212 0.752165 16.577; ENST00000450305.2|ENSG00000223972.5|OTTHUMG00000000961.2|OTTHUMT00000002844.2|DDX11L1-201|DDX11L1|632|transcribed_unprocessed_pseudogene| 632 477.467 0.000000 0.000. Also I am wondering if this is the reason why the error occurs when I import the data and run `tximeta` in R.; It says Error in checkAssays2Txps(assays, txps) :; none of the transcripts in the quantification files are in the GTF. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/513
https://github.com/COMBINE-lab/salmon/issues/514:203,Deployability,update,updates,203,"Hi,. This is not an issue, but I'm just looking advice on this problem I've been trying (with limited success) to tackle on my own for a while. First, I've been using salmon for years and I love all the updates that have come about recently. The new selective alignment mode is an amazing upgrade!. My general question here is how to quantify various truncated isoforms of the same transcript. I'm working in S. cerevisiae and I am not referring to isoform switching via alternative splicing, but various isoforms that are fully contained as a subset of a larger transcript sequence. Imagine a standard gene that gives rise to a 1000 bp transcript. Through alternative promoter usage or post-transcriptional processing, it can give rise a truncated form that is identical to the parent transcript, except only has sequence from bases 400 to 1000. I know this scenario is similar to detecting differential splice forms, and indeed when I see overlapping genes that nonetheless have some unique sequence, salmon does an excellent job at fractionally apportioning the reads. In this particular case, however, it seems that because all mappings to the truncated isoform also give perfect mappings to the longer isoform, even a single few reads mapping uniquely to the longer isoform is enough evidence for the salmon EM algorithm (I assume that's the relevant part?) to give *all* of the reads to the long isoform. To visualize the problem, I'm attaching an image of alignments over a transcript that is only expressed as a portion of the annotated parent transcript. If i encode the short and long forms as separate transcripts in salmon fasta index, all of the reads get assigned to the longer form with the options I've tried. My question then is whether there's a combination of salmon quant options that would optimize apportioning the reads better for this class of transcript, or whether it's simply not going to work given the underlying assumptions in the software?. Thanks a ton for any help,; J",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514
https://github.com/COMBINE-lab/salmon/issues/514:289,Deployability,upgrade,upgrade,289,"Hi,. This is not an issue, but I'm just looking advice on this problem I've been trying (with limited success) to tackle on my own for a while. First, I've been using salmon for years and I love all the updates that have come about recently. The new selective alignment mode is an amazing upgrade!. My general question here is how to quantify various truncated isoforms of the same transcript. I'm working in S. cerevisiae and I am not referring to isoform switching via alternative splicing, but various isoforms that are fully contained as a subset of a larger transcript sequence. Imagine a standard gene that gives rise to a 1000 bp transcript. Through alternative promoter usage or post-transcriptional processing, it can give rise a truncated form that is identical to the parent transcript, except only has sequence from bases 400 to 1000. I know this scenario is similar to detecting differential splice forms, and indeed when I see overlapping genes that nonetheless have some unique sequence, salmon does an excellent job at fractionally apportioning the reads. In this particular case, however, it seems that because all mappings to the truncated isoform also give perfect mappings to the longer isoform, even a single few reads mapping uniquely to the longer isoform is enough evidence for the salmon EM algorithm (I assume that's the relevant part?) to give *all* of the reads to the long isoform. To visualize the problem, I'm attaching an image of alignments over a transcript that is only expressed as a portion of the annotated parent transcript. If i encode the short and long forms as separate transcripts in salmon fasta index, all of the reads get assigned to the longer form with the options I've tried. My question then is whether there's a combination of salmon quant options that would optimize apportioning the reads better for this class of transcript, or whether it's simply not going to work given the underlying assumptions in the software?. Thanks a ton for any help,; J",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514
https://github.com/COMBINE-lab/salmon/issues/514:1811,Performance,optimiz,optimize,1811,"ile. First, I've been using salmon for years and I love all the updates that have come about recently. The new selective alignment mode is an amazing upgrade!. My general question here is how to quantify various truncated isoforms of the same transcript. I'm working in S. cerevisiae and I am not referring to isoform switching via alternative splicing, but various isoforms that are fully contained as a subset of a larger transcript sequence. Imagine a standard gene that gives rise to a 1000 bp transcript. Through alternative promoter usage or post-transcriptional processing, it can give rise a truncated form that is identical to the parent transcript, except only has sequence from bases 400 to 1000. I know this scenario is similar to detecting differential splice forms, and indeed when I see overlapping genes that nonetheless have some unique sequence, salmon does an excellent job at fractionally apportioning the reads. In this particular case, however, it seems that because all mappings to the truncated isoform also give perfect mappings to the longer isoform, even a single few reads mapping uniquely to the longer isoform is enough evidence for the salmon EM algorithm (I assume that's the relevant part?) to give *all* of the reads to the long isoform. To visualize the problem, I'm attaching an image of alignments over a transcript that is only expressed as a portion of the annotated parent transcript. If i encode the short and long forms as separate transcripts in salmon fasta index, all of the reads get assigned to the longer form with the options I've tried. My question then is whether there's a combination of salmon quant options that would optimize apportioning the reads better for this class of transcript, or whether it's simply not going to work given the underlying assumptions in the software?. Thanks a ton for any help,; Jason. ![hmlalpha2_truncated_example](https://user-images.githubusercontent.com/10292386/80483743-6c217900-890b-11ea-8469-4883914d8ec0.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514
https://github.com/COMBINE-lab/salmon/issues/514:882,Safety,detect,detecting,882,"Hi,. This is not an issue, but I'm just looking advice on this problem I've been trying (with limited success) to tackle on my own for a while. First, I've been using salmon for years and I love all the updates that have come about recently. The new selective alignment mode is an amazing upgrade!. My general question here is how to quantify various truncated isoforms of the same transcript. I'm working in S. cerevisiae and I am not referring to isoform switching via alternative splicing, but various isoforms that are fully contained as a subset of a larger transcript sequence. Imagine a standard gene that gives rise to a 1000 bp transcript. Through alternative promoter usage or post-transcriptional processing, it can give rise a truncated form that is identical to the parent transcript, except only has sequence from bases 400 to 1000. I know this scenario is similar to detecting differential splice forms, and indeed when I see overlapping genes that nonetheless have some unique sequence, salmon does an excellent job at fractionally apportioning the reads. In this particular case, however, it seems that because all mappings to the truncated isoform also give perfect mappings to the longer isoform, even a single few reads mapping uniquely to the longer isoform is enough evidence for the salmon EM algorithm (I assume that's the relevant part?) to give *all* of the reads to the long isoform. To visualize the problem, I'm attaching an image of alignments over a transcript that is only expressed as a portion of the annotated parent transcript. If i encode the short and long forms as separate transcripts in salmon fasta index, all of the reads get assigned to the longer form with the options I've tried. My question then is whether there's a combination of salmon quant options that would optimize apportioning the reads better for this class of transcript, or whether it's simply not going to work given the underlying assumptions in the software?. Thanks a ton for any help,; J",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514
https://github.com/COMBINE-lab/salmon/issues/514:1896,Usability,simpl,simply,1896,"ile. First, I've been using salmon for years and I love all the updates that have come about recently. The new selective alignment mode is an amazing upgrade!. My general question here is how to quantify various truncated isoforms of the same transcript. I'm working in S. cerevisiae and I am not referring to isoform switching via alternative splicing, but various isoforms that are fully contained as a subset of a larger transcript sequence. Imagine a standard gene that gives rise to a 1000 bp transcript. Through alternative promoter usage or post-transcriptional processing, it can give rise a truncated form that is identical to the parent transcript, except only has sequence from bases 400 to 1000. I know this scenario is similar to detecting differential splice forms, and indeed when I see overlapping genes that nonetheless have some unique sequence, salmon does an excellent job at fractionally apportioning the reads. In this particular case, however, it seems that because all mappings to the truncated isoform also give perfect mappings to the longer isoform, even a single few reads mapping uniquely to the longer isoform is enough evidence for the salmon EM algorithm (I assume that's the relevant part?) to give *all* of the reads to the long isoform. To visualize the problem, I'm attaching an image of alignments over a transcript that is only expressed as a portion of the annotated parent transcript. If i encode the short and long forms as separate transcripts in salmon fasta index, all of the reads get assigned to the longer form with the options I've tried. My question then is whether there's a combination of salmon quant options that would optimize apportioning the reads better for this class of transcript, or whether it's simply not going to work given the underlying assumptions in the software?. Thanks a ton for any help,; Jason. ![hmlalpha2_truncated_example](https://user-images.githubusercontent.com/10292386/80483743-6c217900-890b-11ea-8469-4883914d8ec0.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514
https://github.com/COMBINE-lab/salmon/pull/515:15,Usability,simpl,simple,15,"Implementing a simple Gibbs sampler within Alevin to accept the option `--numCellGibbsSamples` and produce the `mean`, `variance`, and Gibbs estimates in the same format as of `--numCellBootstraps`. The default `thinning factor` is set to be `16`. . Additionally, we add `--dumpCellEq` to dump the deduplicated gene-level equivalence classes per cell.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/515
https://github.com/COMBINE-lab/salmon/issues/516:274,Security,access,access,274,"I noticed that the quantification of my reads took a very long time (>10h). I generated the index in accordance with these instructions:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; (I used the human genome hg19). I am using CentOs 7 and I have access to 16GB of RAM and to 8 threads. Here are some informations about the run:; ""salmon_version"": ""1.2.0"",; ""index"": ""04_genome_data/salmon_index/salmon_index/"",; ""gcBias"": [],; ""threads"": ""8"",; ""libType"": ""A"",; ""mates1"": ""02_rawreads//Adenocarcinoma/patient001/fastq/S0216_1.fastq.gz"",; ""mates2"": ""02_rawreads//Adenocarcinoma/patient001/fastq/S0216_2.fastq.gz"",; ""validateMappings"": [],; ""output"": ""03_DEG/salmon//Adenocarcinoma/patient001"",; ""auxDir"": ""aux_info"". ""num_bootstraps"": 0,; ""num_processed"": 19848610,; ""num_mapped"": 11112281,; ""num_decoy_fragments"": 1953200,; ""num_dovetail_fragments"": 33267,; ""num_fragments_filtered_vm"": 2134945,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 26561460,; ""percent_mapped"": 55.98518485677335,; ""call"": ""quant"",; ""start_time"": ""Wed Apr 22 12:53:21 2020"",; ""end_time"": ""Thu Apr 23 00:14:34 2020""`. Is there something obvious I am doing wrong or do you have an idea why it takes so long? . Furthermore, I was wondering if a mapping rate of 56% is considered ""okay""? ; I didnt trim any reads, because the quality score was high throughout all bases. Any help is appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/516
https://github.com/COMBINE-lab/salmon/issues/516:642,Security,validat,validateMappings,642,"I noticed that the quantification of my reads took a very long time (>10h). I generated the index in accordance with these instructions:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; (I used the human genome hg19). I am using CentOs 7 and I have access to 16GB of RAM and to 8 threads. Here are some informations about the run:; ""salmon_version"": ""1.2.0"",; ""index"": ""04_genome_data/salmon_index/salmon_index/"",; ""gcBias"": [],; ""threads"": ""8"",; ""libType"": ""A"",; ""mates1"": ""02_rawreads//Adenocarcinoma/patient001/fastq/S0216_1.fastq.gz"",; ""mates2"": ""02_rawreads//Adenocarcinoma/patient001/fastq/S0216_2.fastq.gz"",; ""validateMappings"": [],; ""output"": ""03_DEG/salmon//Adenocarcinoma/patient001"",; ""auxDir"": ""aux_info"". ""num_bootstraps"": 0,; ""num_processed"": 19848610,; ""num_mapped"": 11112281,; ""num_decoy_fragments"": 1953200,; ""num_dovetail_fragments"": 33267,; ""num_fragments_filtered_vm"": 2134945,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 26561460,; ""percent_mapped"": 55.98518485677335,; ""call"": ""quant"",; ""start_time"": ""Wed Apr 22 12:53:21 2020"",; ""end_time"": ""Thu Apr 23 00:14:34 2020""`. Is there something obvious I am doing wrong or do you have an idea why it takes so long? . Furthermore, I was wondering if a mapping rate of 56% is considered ""okay""? ; I didnt trim any reads, because the quality score was high throughout all bases. Any help is appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/516
https://github.com/COMBINE-lab/salmon/issues/517:122,Availability,error,error,122,"hi, I am running Salmon-1.2.1 on my MacBook with Sierra 10.13.6. I try to run Salmon binary with terminal, and I get this error. How'd do solve this problem? . Last login: Sat May 2 23:14:08 on ttys007; /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; Maysons-MacBook-Air:~ maysonlin$ /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; dyld: Library not loaded: @rpath/libtbbmalloc.dylib; Referenced from: /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/bin/salmon; Reason: image not found; Abort trap: 6; logout; Saving session...; ...copying shared history...; ...saving history...truncating history files...; ...completed. [Process completed]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517
https://github.com/COMBINE-lab/salmon/issues/517:220,Availability,Down,Downloads,220,"hi, I am running Salmon-1.2.1 on my MacBook with Sierra 10.13.6. I try to run Salmon binary with terminal, and I get this error. How'd do solve this problem? . Last login: Sat May 2 23:14:08 on ttys007; /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; Maysons-MacBook-Air:~ maysonlin$ /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; dyld: Library not loaded: @rpath/libtbbmalloc.dylib; Referenced from: /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/bin/salmon; Reason: image not found; Abort trap: 6; logout; Saving session...; ...copying shared history...; ...saving history...truncating history files...; ...completed. [Process completed]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517
https://github.com/COMBINE-lab/salmon/issues/517:327,Availability,Down,Downloads,327,"hi, I am running Salmon-1.2.1 on my MacBook with Sierra 10.13.6. I try to run Salmon binary with terminal, and I get this error. How'd do solve this problem? . Last login: Sat May 2 23:14:08 on ttys007; /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; Maysons-MacBook-Air:~ maysonlin$ /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; dyld: Library not loaded: @rpath/libtbbmalloc.dylib; Referenced from: /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/bin/salmon; Reason: image not found; Abort trap: 6; logout; Saving session...; ...copying shared history...; ...saving history...truncating history files...; ...completed. [Process completed]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517
https://github.com/COMBINE-lab/salmon/issues/517:471,Availability,Down,Downloads,471,"hi, I am running Salmon-1.2.1 on my MacBook with Sierra 10.13.6. I try to run Salmon binary with terminal, and I get this error. How'd do solve this problem? . Last login: Sat May 2 23:14:08 on ttys007; /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; Maysons-MacBook-Air:~ maysonlin$ /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; dyld: Library not loaded: @rpath/libtbbmalloc.dylib; Referenced from: /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/bin/salmon; Reason: image not found; Abort trap: 6; logout; Saving session...; ...copying shared history...; ...saving history...truncating history files...; ...completed. [Process completed]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517
https://github.com/COMBINE-lab/salmon/issues/517:402,Performance,load,loaded,402,"hi, I am running Salmon-1.2.1 on my MacBook with Sierra 10.13.6. I try to run Salmon binary with terminal, and I get this error. How'd do solve this problem? . Last login: Sat May 2 23:14:08 on ttys007; /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; Maysons-MacBook-Air:~ maysonlin$ /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; dyld: Library not loaded: @rpath/libtbbmalloc.dylib; Referenced from: /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/bin/salmon; Reason: image not found; Abort trap: 6; logout; Saving session...; ...copying shared history...; ...saving history...truncating history files...; ...completed. [Process completed]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517
https://github.com/COMBINE-lab/salmon/issues/517:544,Safety,Abort,Abort,544,"hi, I am running Salmon-1.2.1 on my MacBook with Sierra 10.13.6. I try to run Salmon binary with terminal, and I get this error. How'd do solve this problem? . Last login: Sat May 2 23:14:08 on ttys007; /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; Maysons-MacBook-Air:~ maysonlin$ /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; dyld: Library not loaded: @rpath/libtbbmalloc.dylib; Referenced from: /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/bin/salmon; Reason: image not found; Abort trap: 6; logout; Saving session...; ...copying shared history...; ...saving history...truncating history files...; ...completed. [Process completed]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517
https://github.com/COMBINE-lab/salmon/issues/517:165,Testability,log,login,165,"hi, I am running Salmon-1.2.1 on my MacBook with Sierra 10.13.6. I try to run Salmon binary with terminal, and I get this error. How'd do solve this problem? . Last login: Sat May 2 23:14:08 on ttys007; /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; Maysons-MacBook-Air:~ maysonlin$ /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; dyld: Library not loaded: @rpath/libtbbmalloc.dylib; Referenced from: /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/bin/salmon; Reason: image not found; Abort trap: 6; logout; Saving session...; ...copying shared history...; ...saving history...truncating history files...; ...completed. [Process completed]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517
https://github.com/COMBINE-lab/salmon/issues/517:559,Testability,log,logout,559,"hi, I am running Salmon-1.2.1 on my MacBook with Sierra 10.13.6. I try to run Salmon binary with terminal, and I get this error. How'd do solve this problem? . Last login: Sat May 2 23:14:08 on ttys007; /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; Maysons-MacBook-Air:~ maysonlin$ /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; dyld: Library not loaded: @rpath/libtbbmalloc.dylib; Referenced from: /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/bin/salmon; Reason: image not found; Abort trap: 6; logout; Saving session...; ...copying shared history...; ...saving history...truncating history files...; ...completed. [Process completed]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517
https://github.com/COMBINE-lab/salmon/issues/518:30,Availability,error,error,30,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518
https://github.com/COMBINE-lab/salmon/issues/518:109,Availability,down,download,109,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518
https://github.com/COMBINE-lab/salmon/issues/518:178,Availability,error,error,178,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518
https://github.com/COMBINE-lab/salmon/issues/518:233,Availability,down,downloaded,233,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518
https://github.com/COMBINE-lab/salmon/issues/518:1131,Availability,failure,failure,1131,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518
https://github.com/COMBINE-lab/salmon/issues/518:184,Integrability,message,message,184,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518
https://github.com/COMBINE-lab/salmon/issues/518:1068,Performance,Load,Loading,1068,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518
https://github.com/COMBINE-lab/salmon/issues/518:461,Security,validat,validateMappings,461,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518
https://github.com/COMBINE-lab/salmon/issues/518:623,Security,validat,validateMappings,623,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518
https://github.com/COMBINE-lab/salmon/issues/518:795,Security,validat,validateMappings,795,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518
https://github.com/COMBINE-lab/salmon/issues/518:1121,Testability,assert,assertion,1121,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518
https://github.com/COMBINE-lab/salmon/issues/519:509,Availability,error,error,509,"Dear `salmon` developers,. We are using salmon at ONT for quantifying transcripts from alignments of cDNA reads to transcriptomes on a regular basis and in [some](https://github.com/nanoporetech/pipeline-transcriptome-de) of our pipelines.; Transcriptomic aligments of long reads generate less multimapping reads than short reads (depeneding on the structure of the transcriptome), however we would prefer not to ignore them during quantification in order to make maximal use of the data.; However, since the error model was built for short reads, until now we have used the tool with the error model turned off (`--noErrorModel`), which is not optimal. Would it be possible to add a simple error model suitable for long read alignments? We propose something like the following for calculating the likelihood of an alignment:. - The likelihood of the aligment would be calculated based on the empirical distributions (or a normal fit) of edit distances conditioned on the length of the alignment. We could provide you with this information if needed.; - The likelihood of left and right soft or hard clipped sequences would be calculated as a function of their length (such as (1/x)^z, where the parameter z can be tuned based on real datasets). A more complicated model could be build taking into account the error profile of the long reads. It might be overkill though. I had a look at the source code and it seems to me that it might not be hard to implement it, however I am lacking the intimate knowledge of the codebase to do it easily.; Let me know if you would be interested in adding this feature. If yes, we could evaluate the change in the quality of estimates on real datasets. Best regards,; Botond Sipos",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519
https://github.com/COMBINE-lab/salmon/issues/519:589,Availability,error,error,589,"Dear `salmon` developers,. We are using salmon at ONT for quantifying transcripts from alignments of cDNA reads to transcriptomes on a regular basis and in [some](https://github.com/nanoporetech/pipeline-transcriptome-de) of our pipelines.; Transcriptomic aligments of long reads generate less multimapping reads than short reads (depeneding on the structure of the transcriptome), however we would prefer not to ignore them during quantification in order to make maximal use of the data.; However, since the error model was built for short reads, until now we have used the tool with the error model turned off (`--noErrorModel`), which is not optimal. Would it be possible to add a simple error model suitable for long read alignments? We propose something like the following for calculating the likelihood of an alignment:. - The likelihood of the aligment would be calculated based on the empirical distributions (or a normal fit) of edit distances conditioned on the length of the alignment. We could provide you with this information if needed.; - The likelihood of left and right soft or hard clipped sequences would be calculated as a function of their length (such as (1/x)^z, where the parameter z can be tuned based on real datasets). A more complicated model could be build taking into account the error profile of the long reads. It might be overkill though. I had a look at the source code and it seems to me that it might not be hard to implement it, however I am lacking the intimate knowledge of the codebase to do it easily.; Let me know if you would be interested in adding this feature. If yes, we could evaluate the change in the quality of estimates on real datasets. Best regards,; Botond Sipos",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519
https://github.com/COMBINE-lab/salmon/issues/519:691,Availability,error,error,691,"Dear `salmon` developers,. We are using salmon at ONT for quantifying transcripts from alignments of cDNA reads to transcriptomes on a regular basis and in [some](https://github.com/nanoporetech/pipeline-transcriptome-de) of our pipelines.; Transcriptomic aligments of long reads generate less multimapping reads than short reads (depeneding on the structure of the transcriptome), however we would prefer not to ignore them during quantification in order to make maximal use of the data.; However, since the error model was built for short reads, until now we have used the tool with the error model turned off (`--noErrorModel`), which is not optimal. Would it be possible to add a simple error model suitable for long read alignments? We propose something like the following for calculating the likelihood of an alignment:. - The likelihood of the aligment would be calculated based on the empirical distributions (or a normal fit) of edit distances conditioned on the length of the alignment. We could provide you with this information if needed.; - The likelihood of left and right soft or hard clipped sequences would be calculated as a function of their length (such as (1/x)^z, where the parameter z can be tuned based on real datasets). A more complicated model could be build taking into account the error profile of the long reads. It might be overkill though. I had a look at the source code and it seems to me that it might not be hard to implement it, however I am lacking the intimate knowledge of the codebase to do it easily.; Let me know if you would be interested in adding this feature. If yes, we could evaluate the change in the quality of estimates on real datasets. Best regards,; Botond Sipos",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519
https://github.com/COMBINE-lab/salmon/issues/519:1310,Availability,error,error,1310,"Dear `salmon` developers,. We are using salmon at ONT for quantifying transcripts from alignments of cDNA reads to transcriptomes on a regular basis and in [some](https://github.com/nanoporetech/pipeline-transcriptome-de) of our pipelines.; Transcriptomic aligments of long reads generate less multimapping reads than short reads (depeneding on the structure of the transcriptome), however we would prefer not to ignore them during quantification in order to make maximal use of the data.; However, since the error model was built for short reads, until now we have used the tool with the error model turned off (`--noErrorModel`), which is not optimal. Would it be possible to add a simple error model suitable for long read alignments? We propose something like the following for calculating the likelihood of an alignment:. - The likelihood of the aligment would be calculated based on the empirical distributions (or a normal fit) of edit distances conditioned on the length of the alignment. We could provide you with this information if needed.; - The likelihood of left and right soft or hard clipped sequences would be calculated as a function of their length (such as (1/x)^z, where the parameter z can be tuned based on real datasets). A more complicated model could be build taking into account the error profile of the long reads. It might be overkill though. I had a look at the source code and it seems to me that it might not be hard to implement it, however I am lacking the intimate knowledge of the codebase to do it easily.; Let me know if you would be interested in adding this feature. If yes, we could evaluate the change in the quality of estimates on real datasets. Best regards,; Botond Sipos",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519
https://github.com/COMBINE-lab/salmon/issues/519:195,Deployability,pipeline,pipeline-transcriptome-de,195,"Dear `salmon` developers,. We are using salmon at ONT for quantifying transcripts from alignments of cDNA reads to transcriptomes on a regular basis and in [some](https://github.com/nanoporetech/pipeline-transcriptome-de) of our pipelines.; Transcriptomic aligments of long reads generate less multimapping reads than short reads (depeneding on the structure of the transcriptome), however we would prefer not to ignore them during quantification in order to make maximal use of the data.; However, since the error model was built for short reads, until now we have used the tool with the error model turned off (`--noErrorModel`), which is not optimal. Would it be possible to add a simple error model suitable for long read alignments? We propose something like the following for calculating the likelihood of an alignment:. - The likelihood of the aligment would be calculated based on the empirical distributions (or a normal fit) of edit distances conditioned on the length of the alignment. We could provide you with this information if needed.; - The likelihood of left and right soft or hard clipped sequences would be calculated as a function of their length (such as (1/x)^z, where the parameter z can be tuned based on real datasets). A more complicated model could be build taking into account the error profile of the long reads. It might be overkill though. I had a look at the source code and it seems to me that it might not be hard to implement it, however I am lacking the intimate knowledge of the codebase to do it easily.; Let me know if you would be interested in adding this feature. If yes, we could evaluate the change in the quality of estimates on real datasets. Best regards,; Botond Sipos",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519
https://github.com/COMBINE-lab/salmon/issues/519:229,Deployability,pipeline,pipelines,229,"Dear `salmon` developers,. We are using salmon at ONT for quantifying transcripts from alignments of cDNA reads to transcriptomes on a regular basis and in [some](https://github.com/nanoporetech/pipeline-transcriptome-de) of our pipelines.; Transcriptomic aligments of long reads generate less multimapping reads than short reads (depeneding on the structure of the transcriptome), however we would prefer not to ignore them during quantification in order to make maximal use of the data.; However, since the error model was built for short reads, until now we have used the tool with the error model turned off (`--noErrorModel`), which is not optimal. Would it be possible to add a simple error model suitable for long read alignments? We propose something like the following for calculating the likelihood of an alignment:. - The likelihood of the aligment would be calculated based on the empirical distributions (or a normal fit) of edit distances conditioned on the length of the alignment. We could provide you with this information if needed.; - The likelihood of left and right soft or hard clipped sequences would be calculated as a function of their length (such as (1/x)^z, where the parameter z can be tuned based on real datasets). A more complicated model could be build taking into account the error profile of the long reads. It might be overkill though. I had a look at the source code and it seems to me that it might not be hard to implement it, however I am lacking the intimate knowledge of the codebase to do it easily.; Let me know if you would be interested in adding this feature. If yes, we could evaluate the change in the quality of estimates on real datasets. Best regards,; Botond Sipos",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519
https://github.com/COMBINE-lab/salmon/issues/519:1215,Performance,tune,tuned,1215,"Dear `salmon` developers,. We are using salmon at ONT for quantifying transcripts from alignments of cDNA reads to transcriptomes on a regular basis and in [some](https://github.com/nanoporetech/pipeline-transcriptome-de) of our pipelines.; Transcriptomic aligments of long reads generate less multimapping reads than short reads (depeneding on the structure of the transcriptome), however we would prefer not to ignore them during quantification in order to make maximal use of the data.; However, since the error model was built for short reads, until now we have used the tool with the error model turned off (`--noErrorModel`), which is not optimal. Would it be possible to add a simple error model suitable for long read alignments? We propose something like the following for calculating the likelihood of an alignment:. - The likelihood of the aligment would be calculated based on the empirical distributions (or a normal fit) of edit distances conditioned on the length of the alignment. We could provide you with this information if needed.; - The likelihood of left and right soft or hard clipped sequences would be calculated as a function of their length (such as (1/x)^z, where the parameter z can be tuned based on real datasets). A more complicated model could be build taking into account the error profile of the long reads. It might be overkill though. I had a look at the source code and it seems to me that it might not be hard to implement it, however I am lacking the intimate knowledge of the codebase to do it easily.; Let me know if you would be interested in adding this feature. If yes, we could evaluate the change in the quality of estimates on real datasets. Best regards,; Botond Sipos",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519
https://github.com/COMBINE-lab/salmon/issues/519:684,Usability,simpl,simple,684,"Dear `salmon` developers,. We are using salmon at ONT for quantifying transcripts from alignments of cDNA reads to transcriptomes on a regular basis and in [some](https://github.com/nanoporetech/pipeline-transcriptome-de) of our pipelines.; Transcriptomic aligments of long reads generate less multimapping reads than short reads (depeneding on the structure of the transcriptome), however we would prefer not to ignore them during quantification in order to make maximal use of the data.; However, since the error model was built for short reads, until now we have used the tool with the error model turned off (`--noErrorModel`), which is not optimal. Would it be possible to add a simple error model suitable for long read alignments? We propose something like the following for calculating the likelihood of an alignment:. - The likelihood of the aligment would be calculated based on the empirical distributions (or a normal fit) of edit distances conditioned on the length of the alignment. We could provide you with this information if needed.; - The likelihood of left and right soft or hard clipped sequences would be calculated as a function of their length (such as (1/x)^z, where the parameter z can be tuned based on real datasets). A more complicated model could be build taking into account the error profile of the long reads. It might be overkill though. I had a look at the source code and it seems to me that it might not be hard to implement it, however I am lacking the intimate knowledge of the codebase to do it easily.; Let me know if you would be interested in adding this feature. If yes, we could evaluate the change in the quality of estimates on real datasets. Best regards,; Botond Sipos",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519
https://github.com/COMBINE-lab/salmon/issues/520:109,Availability,down,downloaded,109,"Good Afternoon,. I hope this message finds you well. . I am having a hard time running salmon version 0.14.1 downloaded via bioconda. I am trying to count my reads using alignment-based mode. Whenever I run the program, I get similar error messages to [issue 104](https://github.com/COMBINE-lab/salmon/issues/104). Here is the command I am running:. salmon quant -t trimmed_fasta/SRR1810204_1.trim.fastq -l A -a results/bam_files/SRR1810204_1.trim.fastq.bam -o salmon_test. trimmed_fasta/SRR1810204_1.trim.fastq is a fastq sample that I've obtained following trimmomatic and contains the forward strands of the data. . results/bam_files/SRR1810204_1.trim.fastq.bam is the bam file following bwa alignment of the fastq file here and its reverse strand to a reference database. . Could the issue be that I am not using both forward and reverse strands in the target argument for salmon since they were both used to generate the alignment file? I tried to look at the docs for guidance on the best course of action, and I had a hard time finding info. All help would be very much appreciated. All the best,; Craig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/520
https://github.com/COMBINE-lab/salmon/issues/520:234,Availability,error,error,234,"Good Afternoon,. I hope this message finds you well. . I am having a hard time running salmon version 0.14.1 downloaded via bioconda. I am trying to count my reads using alignment-based mode. Whenever I run the program, I get similar error messages to [issue 104](https://github.com/COMBINE-lab/salmon/issues/104). Here is the command I am running:. salmon quant -t trimmed_fasta/SRR1810204_1.trim.fastq -l A -a results/bam_files/SRR1810204_1.trim.fastq.bam -o salmon_test. trimmed_fasta/SRR1810204_1.trim.fastq is a fastq sample that I've obtained following trimmomatic and contains the forward strands of the data. . results/bam_files/SRR1810204_1.trim.fastq.bam is the bam file following bwa alignment of the fastq file here and its reverse strand to a reference database. . Could the issue be that I am not using both forward and reverse strands in the target argument for salmon since they were both used to generate the alignment file? I tried to look at the docs for guidance on the best course of action, and I had a hard time finding info. All help would be very much appreciated. All the best,; Craig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/520
https://github.com/COMBINE-lab/salmon/issues/520:29,Integrability,message,message,29,"Good Afternoon,. I hope this message finds you well. . I am having a hard time running salmon version 0.14.1 downloaded via bioconda. I am trying to count my reads using alignment-based mode. Whenever I run the program, I get similar error messages to [issue 104](https://github.com/COMBINE-lab/salmon/issues/104). Here is the command I am running:. salmon quant -t trimmed_fasta/SRR1810204_1.trim.fastq -l A -a results/bam_files/SRR1810204_1.trim.fastq.bam -o salmon_test. trimmed_fasta/SRR1810204_1.trim.fastq is a fastq sample that I've obtained following trimmomatic and contains the forward strands of the data. . results/bam_files/SRR1810204_1.trim.fastq.bam is the bam file following bwa alignment of the fastq file here and its reverse strand to a reference database. . Could the issue be that I am not using both forward and reverse strands in the target argument for salmon since they were both used to generate the alignment file? I tried to look at the docs for guidance on the best course of action, and I had a hard time finding info. All help would be very much appreciated. All the best,; Craig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/520
https://github.com/COMBINE-lab/salmon/issues/520:240,Integrability,message,messages,240,"Good Afternoon,. I hope this message finds you well. . I am having a hard time running salmon version 0.14.1 downloaded via bioconda. I am trying to count my reads using alignment-based mode. Whenever I run the program, I get similar error messages to [issue 104](https://github.com/COMBINE-lab/salmon/issues/104). Here is the command I am running:. salmon quant -t trimmed_fasta/SRR1810204_1.trim.fastq -l A -a results/bam_files/SRR1810204_1.trim.fastq.bam -o salmon_test. trimmed_fasta/SRR1810204_1.trim.fastq is a fastq sample that I've obtained following trimmomatic and contains the forward strands of the data. . results/bam_files/SRR1810204_1.trim.fastq.bam is the bam file following bwa alignment of the fastq file here and its reverse strand to a reference database. . Could the issue be that I am not using both forward and reverse strands in the target argument for salmon since they were both used to generate the alignment file? I tried to look at the docs for guidance on the best course of action, and I had a hard time finding info. All help would be very much appreciated. All the best,; Craig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/520
https://github.com/COMBINE-lab/salmon/issues/520:974,Usability,guid,guidance,974,"Good Afternoon,. I hope this message finds you well. . I am having a hard time running salmon version 0.14.1 downloaded via bioconda. I am trying to count my reads using alignment-based mode. Whenever I run the program, I get similar error messages to [issue 104](https://github.com/COMBINE-lab/salmon/issues/104). Here is the command I am running:. salmon quant -t trimmed_fasta/SRR1810204_1.trim.fastq -l A -a results/bam_files/SRR1810204_1.trim.fastq.bam -o salmon_test. trimmed_fasta/SRR1810204_1.trim.fastq is a fastq sample that I've obtained following trimmomatic and contains the forward strands of the data. . results/bam_files/SRR1810204_1.trim.fastq.bam is the bam file following bwa alignment of the fastq file here and its reverse strand to a reference database. . Could the issue be that I am not using both forward and reverse strands in the target argument for salmon since they were both used to generate the alignment file? I tried to look at the docs for guidance on the best course of action, and I had a hard time finding info. All help would be very much appreciated. All the best,; Craig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/520
https://github.com/COMBINE-lab/salmon/issues/521:207,Availability,down,downloaded,207,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both.; salmon index. **Describe the bug**; I want to build a murine index fo use Alevin later with a Chromium dataset. I downloaded the relevant files from Gencode, and followed the instructions at https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; It runs fine until:. index_decoys/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:68719476736; Pass Filling Filtering; 1 208; Error: Found an invalid character 'I' in sequence chr9; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.2.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded the executable. * Which reference (e.g. transcriptome) was used?; gencode.vM25.transcripts.fa.gz; GRCm38.primary_assembly.genome.fa.gz. grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat gencode.vM25.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Ubuntu 20.04 LTS. **Additional context**; I understand that the problem seems to come from the genome. However, salmon should perhaps have a way to handle that.; In any case, seg fault are not ideal. Thank you for your great piece of kit though. Life saver for me since I cannot use Cellranger.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521
https://github.com/COMBINE-lab/salmon/issues/521:546,Availability,Error,Error,546,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both.; salmon index. **Describe the bug**; I want to build a murine index fo use Alevin later with a Chromium dataset. I downloaded the relevant files from Gencode, and followed the instructions at https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; It runs fine until:. index_decoys/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:68719476736; Pass Filling Filtering; 1 208; Error: Found an invalid character 'I' in sequence chr9; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.2.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded the executable. * Which reference (e.g. transcriptome) was used?; gencode.vM25.transcripts.fa.gz; GRCm38.primary_assembly.genome.fa.gz. grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat gencode.vM25.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Ubuntu 20.04 LTS. **Additional context**; I understand that the problem seems to come from the genome. However, salmon should perhaps have a way to handle that.; In any case, seg fault are not ideal. Thank you for your great piece of kit though. Life saver for me since I cannot use Cellranger.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521
https://github.com/COMBINE-lab/salmon/issues/521:615,Availability,fault,fault,615,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both.; salmon index. **Describe the bug**; I want to build a murine index fo use Alevin later with a Chromium dataset. I downloaded the relevant files from Gencode, and followed the instructions at https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; It runs fine until:. index_decoys/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:68719476736; Pass Filling Filtering; 1 208; Error: Found an invalid character 'I' in sequence chr9; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.2.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded the executable. * Which reference (e.g. transcriptome) was used?; gencode.vM25.transcripts.fa.gz; GRCm38.primary_assembly.genome.fa.gz. grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat gencode.vM25.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Ubuntu 20.04 LTS. **Additional context**; I understand that the problem seems to come from the genome. However, salmon should perhaps have a way to handle that.; In any case, seg fault are not ideal. Thank you for your great piece of kit though. Life saver for me since I cannot use Cellranger.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521
https://github.com/COMBINE-lab/salmon/issues/521:838,Availability,down,downloaded,838,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both.; salmon index. **Describe the bug**; I want to build a murine index fo use Alevin later with a Chromium dataset. I downloaded the relevant files from Gencode, and followed the instructions at https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; It runs fine until:. index_decoys/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:68719476736; Pass Filling Filtering; 1 208; Error: Found an invalid character 'I' in sequence chr9; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.2.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded the executable. * Which reference (e.g. transcriptome) was used?; gencode.vM25.transcripts.fa.gz; GRCm38.primary_assembly.genome.fa.gz. grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat gencode.vM25.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Ubuntu 20.04 LTS. **Additional context**; I understand that the problem seems to come from the genome. However, salmon should perhaps have a way to handle that.; In any case, seg fault are not ideal. Thank you for your great piece of kit though. Life saver for me since I cannot use Cellranger.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521
https://github.com/COMBINE-lab/salmon/issues/521:881,Availability,Down,Downloaded,881,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both.; salmon index. **Describe the bug**; I want to build a murine index fo use Alevin later with a Chromium dataset. I downloaded the relevant files from Gencode, and followed the instructions at https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; It runs fine until:. index_decoys/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:68719476736; Pass Filling Filtering; 1 208; Error: Found an invalid character 'I' in sequence chr9; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.2.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded the executable. * Which reference (e.g. transcriptome) was used?; gencode.vM25.transcripts.fa.gz; GRCm38.primary_assembly.genome.fa.gz. grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat gencode.vM25.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Ubuntu 20.04 LTS. **Additional context**; I understand that the problem seems to come from the genome. However, salmon should perhaps have a way to handle that.; In any case, seg fault are not ideal. Thank you for your great piece of kit though. Life saver for me since I cannot use Cellranger.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521
https://github.com/COMBINE-lab/salmon/issues/521:1716,Availability,fault,fault,1716,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both.; salmon index. **Describe the bug**; I want to build a murine index fo use Alevin later with a Chromium dataset. I downloaded the relevant files from Gencode, and followed the instructions at https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; It runs fine until:. index_decoys/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:68719476736; Pass Filling Filtering; 1 208; Error: Found an invalid character 'I' in sequence chr9; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.2.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded the executable. * Which reference (e.g. transcriptome) was used?; gencode.vM25.transcripts.fa.gz; GRCm38.primary_assembly.genome.fa.gz. grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat gencode.vM25.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Ubuntu 20.04 LTS. **Additional context**; I understand that the problem seems to come from the genome. However, salmon should perhaps have a way to handle that.; In any case, seg fault are not ideal. Thank you for your great piece of kit though. Life saver for me since I cannot use Cellranger.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521
https://github.com/COMBINE-lab/salmon/issues/521:817,Deployability,install,installed,817,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both.; salmon index. **Describe the bug**; I want to build a murine index fo use Alevin later with a Chromium dataset. I downloaded the relevant files from Gencode, and followed the instructions at https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; It runs fine until:. index_decoys/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:68719476736; Pass Filling Filtering; 1 208; Error: Found an invalid character 'I' in sequence chr9; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.2.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded the executable. * Which reference (e.g. transcriptome) was used?; gencode.vM25.transcripts.fa.gz; GRCm38.primary_assembly.genome.fa.gz. grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat gencode.vM25.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Ubuntu 20.04 LTS. **Additional context**; I understand that the problem seems to come from the genome. However, salmon should perhaps have a way to handle that.; In any case, seg fault are not ideal. Thank you for your great piece of kit though. Life saver for me since I cannot use Cellranger.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521
https://github.com/COMBINE-lab/salmon/issues/522:587,Availability,Error,Error,587,"Hi,. I just encountered an unexpected behaviour of alevin when unmated reads are provided. Are unmated reads supported by alevin at all? I did not find anything in the alevin documentation, but the parameter is there. I tried to quantify some public Illumina SureCell data. Apparently the number of threads is set to 0 (because there are no file pairs?), which is of course not a good idea. The behaviour consists if I specify the number of threads manually (e.g. -p 1). Side note: There is a typo in the threads warning message (I think). ---; Salmon v1.2.1, installed from conda. #### Error message:. ```; ## alevin (dscRNA-seq quantification) v1.2.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ index ] => { ../salmon/index/ }; ### [ unmatedReads ] => { ../samples/sc.fastq.gz }; ### [ output ] => { sc/ }; ### [ tgMap ] => { tx2gene.tsv }; ### [ end ] => { 3 }; ### [ umiLength ] => { 8 }; ### [ barcodeLength ] => { 6 }. Can't make user of more parsing threads than file (pairs); setting # of parsing threads to 0. Segmentation fault (core dumped); ```; ---. **To Reproduce**. The index is based on a gencode reference and works fine for bulk data (salmon quant). Command:; ```; salmon alevin -l A -i ../salmon/index/ --unmatedReads ../samples/sc.fastq.gz -o sc/ --tgMap tx2gene.tsv --end 3 --umiLength 8 --barcodeLength 6; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/522
https://github.com/COMBINE-lab/salmon/issues/522:1077,Availability,fault,fault,1077,"Hi,. I just encountered an unexpected behaviour of alevin when unmated reads are provided. Are unmated reads supported by alevin at all? I did not find anything in the alevin documentation, but the parameter is there. I tried to quantify some public Illumina SureCell data. Apparently the number of threads is set to 0 (because there are no file pairs?), which is of course not a good idea. The behaviour consists if I specify the number of threads manually (e.g. -p 1). Side note: There is a typo in the threads warning message (I think). ---; Salmon v1.2.1, installed from conda. #### Error message:. ```; ## alevin (dscRNA-seq quantification) v1.2.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ index ] => { ../salmon/index/ }; ### [ unmatedReads ] => { ../samples/sc.fastq.gz }; ### [ output ] => { sc/ }; ### [ tgMap ] => { tx2gene.tsv }; ### [ end ] => { 3 }; ### [ umiLength ] => { 8 }; ### [ barcodeLength ] => { 6 }. Can't make user of more parsing threads than file (pairs); setting # of parsing threads to 0. Segmentation fault (core dumped); ```; ---. **To Reproduce**. The index is based on a gencode reference and works fine for bulk data (salmon quant). Command:; ```; salmon alevin -l A -i ../salmon/index/ --unmatedReads ../samples/sc.fastq.gz -o sc/ --tgMap tx2gene.tsv --end 3 --umiLength 8 --barcodeLength 6; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/522
https://github.com/COMBINE-lab/salmon/issues/522:560,Deployability,install,installed,560,"Hi,. I just encountered an unexpected behaviour of alevin when unmated reads are provided. Are unmated reads supported by alevin at all? I did not find anything in the alevin documentation, but the parameter is there. I tried to quantify some public Illumina SureCell data. Apparently the number of threads is set to 0 (because there are no file pairs?), which is of course not a good idea. The behaviour consists if I specify the number of threads manually (e.g. -p 1). Side note: There is a typo in the threads warning message (I think). ---; Salmon v1.2.1, installed from conda. #### Error message:. ```; ## alevin (dscRNA-seq quantification) v1.2.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ index ] => { ../salmon/index/ }; ### [ unmatedReads ] => { ../samples/sc.fastq.gz }; ### [ output ] => { sc/ }; ### [ tgMap ] => { tx2gene.tsv }; ### [ end ] => { 3 }; ### [ umiLength ] => { 8 }; ### [ barcodeLength ] => { 6 }. Can't make user of more parsing threads than file (pairs); setting # of parsing threads to 0. Segmentation fault (core dumped); ```; ---. **To Reproduce**. The index is based on a gencode reference and works fine for bulk data (salmon quant). Command:; ```; salmon alevin -l A -i ../salmon/index/ --unmatedReads ../samples/sc.fastq.gz -o sc/ --tgMap tx2gene.tsv --end 3 --umiLength 8 --barcodeLength 6; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/522
https://github.com/COMBINE-lab/salmon/issues/522:521,Integrability,message,message,521,"Hi,. I just encountered an unexpected behaviour of alevin when unmated reads are provided. Are unmated reads supported by alevin at all? I did not find anything in the alevin documentation, but the parameter is there. I tried to quantify some public Illumina SureCell data. Apparently the number of threads is set to 0 (because there are no file pairs?), which is of course not a good idea. The behaviour consists if I specify the number of threads manually (e.g. -p 1). Side note: There is a typo in the threads warning message (I think). ---; Salmon v1.2.1, installed from conda. #### Error message:. ```; ## alevin (dscRNA-seq quantification) v1.2.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ index ] => { ../salmon/index/ }; ### [ unmatedReads ] => { ../samples/sc.fastq.gz }; ### [ output ] => { sc/ }; ### [ tgMap ] => { tx2gene.tsv }; ### [ end ] => { 3 }; ### [ umiLength ] => { 8 }; ### [ barcodeLength ] => { 6 }. Can't make user of more parsing threads than file (pairs); setting # of parsing threads to 0. Segmentation fault (core dumped); ```; ---. **To Reproduce**. The index is based on a gencode reference and works fine for bulk data (salmon quant). Command:; ```; salmon alevin -l A -i ../salmon/index/ --unmatedReads ../samples/sc.fastq.gz -o sc/ --tgMap tx2gene.tsv --end 3 --umiLength 8 --barcodeLength 6; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/522
https://github.com/COMBINE-lab/salmon/issues/522:593,Integrability,message,message,593,"Hi,. I just encountered an unexpected behaviour of alevin when unmated reads are provided. Are unmated reads supported by alevin at all? I did not find anything in the alevin documentation, but the parameter is there. I tried to quantify some public Illumina SureCell data. Apparently the number of threads is set to 0 (because there are no file pairs?), which is of course not a good idea. The behaviour consists if I specify the number of threads manually (e.g. -p 1). Side note: There is a typo in the threads warning message (I think). ---; Salmon v1.2.1, installed from conda. #### Error message:. ```; ## alevin (dscRNA-seq quantification) v1.2.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ index ] => { ../salmon/index/ }; ### [ unmatedReads ] => { ../samples/sc.fastq.gz }; ### [ output ] => { sc/ }; ### [ tgMap ] => { tx2gene.tsv }; ### [ end ] => { 3 }; ### [ umiLength ] => { 8 }; ### [ barcodeLength ] => { 6 }. Can't make user of more parsing threads than file (pairs); setting # of parsing threads to 0. Segmentation fault (core dumped); ```; ---. **To Reproduce**. The index is based on a gencode reference and works fine for bulk data (salmon quant). Command:; ```; salmon alevin -l A -i ../salmon/index/ --unmatedReads ../samples/sc.fastq.gz -o sc/ --tgMap tx2gene.tsv --end 3 --umiLength 8 --barcodeLength 6; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/522
https://github.com/COMBINE-lab/salmon/issues/523:1012,Availability,recover,recoverOrphans,1012,"g Salmon v1.2.0 which was build from source and is run on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. In addition, I am only using trimmed paired-end reads of 100bp. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/523
https://github.com/COMBINE-lab/salmon/issues/523:2041,Availability,error,errors,2041," different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. In addition, I am only using trimmed paired-end reads of 100bp. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs, just the results of Gene C and Gene D varying for a reason I cannot pinpoint.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/523
https://github.com/COMBINE-lab/salmon/issues/523:1012,Safety,recover,recoverOrphans,1012,"g Salmon v1.2.0 which was build from source and is run on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. In addition, I am only using trimmed paired-end reads of 100bp. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/523
https://github.com/COMBINE-lab/salmon/issues/523:984,Security,validat,validateMappings,984,"g Salmon v1.2.0 which was build from source and is run on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. In addition, I am only using trimmed paired-end reads of 100bp. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/523
https://github.com/COMBINE-lab/salmon/issues/523:1218,Security,validat,validateMappings,1218," different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. In addition, I am only using trimmed paired-end reads of 100bp. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs, just the results of Gene C and Gene D varying for a reason I cannot pinpoint.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/523
https://github.com/COMBINE-lab/salmon/issues/524:948,Availability,recover,recoverOrphans,948,"Hello,. I am currently using Salmon v1.2.0 which was build from source and is run on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/524
https://github.com/COMBINE-lab/salmon/issues/524:1977,Availability,error,errors,1977,"n on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs, just the results of Gene C and Gene D varying for a reason I cannot pinpoint.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/524
https://github.com/COMBINE-lab/salmon/issues/524:948,Safety,recover,recoverOrphans,948,"Hello,. I am currently using Salmon v1.2.0 which was build from source and is run on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/524
https://github.com/COMBINE-lab/salmon/issues/524:920,Security,validat,validateMappings,920,"Hello,. I am currently using Salmon v1.2.0 which was build from source and is run on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/524
https://github.com/COMBINE-lab/salmon/issues/524:1154,Security,validat,validateMappings,1154,"n on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs, just the results of Gene C and Gene D varying for a reason I cannot pinpoint.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/524
https://github.com/COMBINE-lab/salmon/issues/526:375,Availability,error,error,375,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; yes; **Describe the bug**; A clear and concise description of what the bug is.; I was going though the tutorial https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/; using Alevin and scVelo. The filtering with ; scv.pp.filter_genes(adata, min_shared_counts = 30). gives the error bellow. Any advice?; **Error**; R[write to console]: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. R[write to console]: In addition: ; R[write to console]: Warning message:. R[write to console]: call dbDisconnect() when finished working with a connection . ---------------------------------------------------------------------------; RRuntimeError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 168 if reductor:; --> 169 rv = reductor(4); 170 else:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/sexp.py in __getstate__(self); 123 self.__sexp__._cdata,; --> 124 globalenv.__sexp__._cdata); 125 ). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following ex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:404,Availability,Error,Error,404,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; yes; **Describe the bug**; A clear and concise description of what the bug is.; I was going though the tutorial https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/; using Alevin and scVelo. The filtering with ; scv.pp.filter_genes(adata, min_shared_counts = 30). gives the error bellow. Any advice?; **Error**; R[write to console]: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. R[write to console]: In addition: ; R[write to console]: Warning message:. R[write to console]: call dbDisconnect() when finished working with a connection . ---------------------------------------------------------------------------; RRuntimeError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 168 if reductor:; --> 169 rv = reductor(4); 170 else:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/sexp.py in __getstate__(self); 123 self.__sexp__._cdata,; --> 124 globalenv.__sexp__._cdata); 125 ). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following ex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:434,Availability,Error,Error,434,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; yes; **Describe the bug**; A clear and concise description of what the bug is.; I was going though the tutorial https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/; using Alevin and scVelo. The filtering with ; scv.pp.filter_genes(adata, min_shared_counts = 30). gives the error bellow. Any advice?; **Error**; R[write to console]: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. R[write to console]: In addition: ; R[write to console]: Warning message:. R[write to console]: call dbDisconnect() when finished working with a connection . ---------------------------------------------------------------------------; RRuntimeError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 168 if reductor:; --> 169 rv = reductor(4); 170 else:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/sexp.py in __getstate__(self); 123 self.__sexp__._cdata,; --> 124 globalenv.__sexp__._cdata); 125 ). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following ex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:1471,Availability,Error,Error,1471,"mplemented type 'char' in 'eval'. R[write to console]: In addition: ; R[write to console]: Warning message:. R[write to console]: call dbDisconnect() when finished working with a connection . ---------------------------------------------------------------------------; RRuntimeError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 168 if reductor:; --> 169 rv = reductor(4); 170 else:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/sexp.py in __getstate__(self); 123 self.__sexp__._cdata,; --> 124 globalenv.__sexp__._cdata); 125 ). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d =",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:1930,Availability,error,error,1930,"hon3.7/copy.py in deepcopy(x, memo, _nil); 168 if reductor:; --> 169 rv = reductor(4); 170 else:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/sexp.py in __getstate__(self); 123 self.__sexp__._cdata,; --> 124 globalenv.__sexp__._cdata); 125 ). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:2276,Availability,error,error,2276,"evin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:2622,Availability,error,error,2622,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:2968,Availability,error,error,2968,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:3314,Availability,error,error,3314,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:3660,Availability,error,error,3660,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:4006,Availability,error,error,4006,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); <ipython-input-23-f2e7708b5cf8> in <module>; ----> 1 scv.pp.filter_genes(adata, min_shared_counts = 30). /primary/projects/mnp/tools/anaconda3/envs/alevin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:4352,Availability,error,error,4352,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); <ipython-input-23-f2e7708b5cf8> in <module>; ----> 1 scv.pp.filter_genes(adata, min_shared_counts = 30). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/scvelo/preprocessing/utils.py in filter_genes(data, min_counts, min_cells, max_counts, max_cells, min_counts_u, min_cells_u, max_counts_u, max_cells_u, min_shared_counts, min_shared_cells, copy); 194 gene_subset &= filter(X, min_cells=_min_cells, max_cells=_max_cells)[0]; 195 ; --> 196 adata._inplace_subset_var(",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:4698,Availability,error,error,4698,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); <ipython-input-23-f2e7708b5cf8> in <module>; ----> 1 scv.pp.filter_genes(adata, min_shared_counts = 30). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/scvelo/preprocessing/utils.py in filter_genes(data, min_counts, min_cells, max_counts, max_cells, min_counts_u, min_cells_u, max_counts_u, max_cells_u, min_shared_counts, min_shared_cells, copy); 194 gene_subset &= filter(X, min_cells=_min_cells, max_cells=_max_cells)[0]; 195 ; --> 196 adata._inplace_subset_var(gene_subset); 197 ; 198 s = np.sum(~gene_subset). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in _inplace_subset_var(self, index); 1214 Same as `adata = adata[:, index]`, but inplace.; 1215 """"""; -> 1216 adata_subset = self[:, index].copy(); 1217 self._init_as_actual(adata_subset, dt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:7785,Availability,error,error,7785,"/anndata.py in __getitem__(self, index); 1048 """"""Returns a sliced view of the object.""""""; 1049 oidx, vidx = self._normalize_indices(index); -> 1050 return AnnData(self, oidx=oidx, vidx=vidx, asview=True); 1051 ; 1052 def _remove_unused_categories(self, df_full, df_sub, uns):. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in __init__(self, X, obs, var, uns, obsm, varm, layers, raw, dtype, shape, filename, filemode, asview, obsp, varp, oidx, vidx); 280 if not isinstance(X, AnnData):; 281 raise ValueError(""`X` has to be an AnnData object.""); --> 282 self._init_as_view(X, oidx, vidx); 283 else:; 284 self._init_as_actual(. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in _init_as_view(self, adata_ref, oidx, vidx); 328 self._varp = adata_ref.varp._view(self, vidx); 329 # hackish solution here, no copy should be necessary; --> 330 uns_new = deepcopy(self._adata_ref._uns); 331 # need to do the slicing before setting the updated self._n_obs, self._n_vars; 332 self._n_obs = self._adata_ref.n_obs # use the original n_obs here. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 148 copier = _deepcopy_dispatch.get(cls); 149 if copier:; --> 150 y = copier(x, memo); 151 else:; 152 try:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in _deepcopy_dict(x, memo, deepcopy); 239 memo[id(x)] = y; 240 for key, value in x.items():; --> 241 y[deepcopy(key, memo)] = deepcopy(value, memo); 242 return y; 243 d[dict] = _deepcopy_dict. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 159 copier = getattr(x, ""__deepcopy__"", None); 160 if copier:; --> 161 y = copier(memo); 162 else:; 163 reductor = dispatch_table.get(cls). SystemError: <built-in method __deepcopy__ of numpy.ndarray object at 0x2aab0b27cc60> returned a result with an error set",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:6842,Deployability,update,updated,6842,"/anndata.py in __getitem__(self, index); 1048 """"""Returns a sliced view of the object.""""""; 1049 oidx, vidx = self._normalize_indices(index); -> 1050 return AnnData(self, oidx=oidx, vidx=vidx, asview=True); 1051 ; 1052 def _remove_unused_categories(self, df_full, df_sub, uns):. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in __init__(self, X, obs, var, uns, obsm, varm, layers, raw, dtype, shape, filename, filemode, asview, obsp, varp, oidx, vidx); 280 if not isinstance(X, AnnData):; 281 raise ValueError(""`X` has to be an AnnData object.""); --> 282 self._init_as_view(X, oidx, vidx); 283 else:; 284 self._init_as_actual(. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in _init_as_view(self, adata_ref, oidx, vidx); 328 self._varp = adata_ref.varp._view(self, vidx); 329 # hackish solution here, no copy should be necessary; --> 330 uns_new = deepcopy(self._adata_ref._uns); 331 # need to do the slicing before setting the updated self._n_obs, self._n_vars; 332 self._n_obs = self._adata_ref.n_obs # use the original n_obs here. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 148 copier = _deepcopy_dispatch.get(cls); 149 if copier:; --> 150 y = copier(x, memo); 151 else:; 152 try:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in _deepcopy_dict(x, memo, deepcopy); 239 memo[id(x)] = y; 240 for key, value in x.items():; --> 241 y[deepcopy(key, memo)] = deepcopy(value, memo); 242 return y; 243 d[dict] = _deepcopy_dict. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 159 copier = getattr(x, ""__deepcopy__"", None); 160 if copier:; --> 161 y = copier(memo); 162 else:; 163 reductor = dispatch_table.get(cls). SystemError: <built-in method __deepcopy__ of numpy.ndarray object at 0x2aab0b27cc60> returned a result with an error set",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:623,Integrability,message,message,623,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; yes; **Describe the bug**; A clear and concise description of what the bug is.; I was going though the tutorial https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/; using Alevin and scVelo. The filtering with ; scv.pp.filter_genes(adata, min_shared_counts = 30). gives the error bellow. Any advice?; **Error**; R[write to console]: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. R[write to console]: In addition: ; R[write to console]: Warning message:. R[write to console]: call dbDisconnect() when finished working with a connection . ---------------------------------------------------------------------------; RRuntimeError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 168 if reductor:; --> 169 rv = reductor(4); 170 else:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/sexp.py in __getstate__(self); 123 self.__sexp__._cdata,; --> 124 globalenv.__sexp__._cdata); 125 ). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following ex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:6226,Modifiability,layers,layers,6226," 195 ; --> 196 adata._inplace_subset_var(gene_subset); 197 ; 198 s = np.sum(~gene_subset). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in _inplace_subset_var(self, index); 1214 Same as `adata = adata[:, index]`, but inplace.; 1215 """"""; -> 1216 adata_subset = self[:, index].copy(); 1217 self._init_as_actual(adata_subset, dtype=self._X.dtype); 1218 . /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in __getitem__(self, index); 1048 """"""Returns a sliced view of the object.""""""; 1049 oidx, vidx = self._normalize_indices(index); -> 1050 return AnnData(self, oidx=oidx, vidx=vidx, asview=True); 1051 ; 1052 def _remove_unused_categories(self, df_full, df_sub, uns):. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in __init__(self, X, obs, var, uns, obsm, varm, layers, raw, dtype, shape, filename, filemode, asview, obsp, varp, oidx, vidx); 280 if not isinstance(X, AnnData):; 281 raise ValueError(""`X` has to be an AnnData object.""); --> 282 self._init_as_view(X, oidx, vidx); 283 else:; 284 self._init_as_actual(. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in _init_as_view(self, adata_ref, oidx, vidx); 328 self._varp = adata_ref.varp._view(self, vidx); 329 # hackish solution here, no copy should be necessary; --> 330 uns_new = deepcopy(self._adata_ref._uns); 331 # need to do the slicing before setting the updated self._n_obs, self._n_vars; 332 self._n_obs = self._adata_ref.n_obs # use the original n_obs here. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 148 copier = _deepcopy_dispatch.get(cls); 149 if copier:; --> 150 y = copier(x, memo); 151 else:; 152 try:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in _deepcopy_dict(x, memo, deepcopy); 239 memo[id(",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/526:115,Usability,clear,clear,115,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; yes; **Describe the bug**; A clear and concise description of what the bug is.; I was going though the tutorial https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/; using Alevin and scVelo. The filtering with ; scv.pp.filter_genes(adata, min_shared_counts = 30). gives the error bellow. Any advice?; **Error**; R[write to console]: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. R[write to console]: In addition: ; R[write to console]: Warning message:. R[write to console]: call dbDisconnect() when finished working with a connection . ---------------------------------------------------------------------------; RRuntimeError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 168 if reductor:; --> 169 rv = reductor(4); 170 else:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/sexp.py in __getstate__(self); 123 self.__sexp__._cdata,; --> 124 globalenv.__sexp__._cdata); 125 ). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following ex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526
https://github.com/COMBINE-lab/salmon/issues/527:986,Availability,down,downloaded,986,"bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; is been running like an order of magnitude slower than when I last used it ; **A clear and concise description of what the bug is.**; So I am aligning reads against Arabidopsis Thaliana, using Araport 11 annotation. I usually had 20 M reads aligned within an hour or 2. I am aligning a 46M reads library and it has been running for 20 hours using 4 threads of my humble i5-3210M and is barely on 38.5M, after 20 hours! Index was constructed with default kmer size and no decoys. I have had this problem with other libraries since upgraded from V1.0.0, . **To Reproduce**; I guess just try to align stuff against araport11, this particular problem comes with any fq.gz. It will take hours and hours and hours to align. **Specifically, please provide at least the following information:**. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:1029,Availability,down,downloaded,1029,"bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; is been running like an order of magnitude slower than when I last used it ; **A clear and concise description of what the bug is.**; So I am aligning reads against Arabidopsis Thaliana, using Araport 11 annotation. I usually had 20 M reads aligned within an hour or 2. I am aligning a 46M reads library and it has been running for 20 hours using 4 threads of my humble i5-3210M and is barely on 38.5M, after 20 hours! Index was constructed with default kmer size and no decoys. I have had this problem with other libraries since upgraded from V1.0.0, . **To Reproduce**; I guess just try to align stuff against araport11, this particular problem comes with any fq.gz. It will take hours and hours and hours to align. **Specifically, please provide at least the following information:**. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:646,Deployability,upgrade,upgraded,646,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; is been running like an order of magnitude slower than when I last used it ; **A clear and concise description of what the bug is.**; So I am aligning reads against Arabidopsis Thaliana, using Araport 11 annotation. I usually had 20 M reads aligned within an hour or 2. I am aligning a 46M reads library and it has been running for 20 hours using 4 threads of my humble i5-3210M and is barely on 38.5M, after 20 hours! Index was constructed with default kmer size and no decoys. I have had this problem with other libraries since upgraded from V1.0.0, . **To Reproduce**; I guess just try to align stuff against araport11, this particular problem comes with any fq.gz. It will take hours and hours and hours to align. **Specifically, please provide at least the following information:**. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:965,Deployability,install,installed,965,"bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; is been running like an order of magnitude slower than when I last used it ; **A clear and concise description of what the bug is.**; So I am aligning reads against Arabidopsis Thaliana, using Araport 11 annotation. I usually had 20 M reads aligned within an hour or 2. I am aligning a 46M reads library and it has been running for 20 hours using 4 threads of my humble i5-3210M and is barely on 38.5M, after 20 hours! Index was constructed with default kmer size and no decoys. I have had this problem with other libraries since upgraded from V1.0.0, . **To Reproduce**; I guess just try to align stuff against araport11, this particular problem comes with any fq.gz. It will take hours and hours and hours to align. **Specifically, please provide at least the following information:**. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:2729,Performance,Load,Loading,2729," validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:2799,Performance,Load,Loading,2799,"qBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; ---------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:2877,Performance,Load,Loading,2877,"[ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:3021,Performance,Load,Loading,3021,"3] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:3149,Performance,Load,Loading,3149,"3] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:3283,Performance,Load,Loading,3283,"0:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 325.83 us; -----------------------------------------; [2020-05-29 20:14:24.638] [jointLog] [info] done; [2020-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:3522,Performance,Load,Loading,3522,"[info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 325.83 us; -----------------------------------------; [2020-05-29 20:14:24.638] [jointLog] [info] done; [2020-05-29 20:14:24.638] [jointLog] [info] Index contained 57,190 targets; [2020-05-29 20:14:25.202] [jointLog] [info] Number of decoys : 0. processed 38,500,000 fragmentsntLog] [info] Automat",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:3673,Performance,Load,Loading,3673," 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 325.83 us; -----------------------------------------; [2020-05-29 20:14:24.638] [jointLog] [info] done; [2020-05-29 20:14:24.638] [jointLog] [info] Index contained 57,190 targets; [2020-05-29 20:14:25.202] [jointLog] [info] Number of decoys : 0. processed 38,500,000 fragmentsntLog] [info] Automatically detected most likely library type as IU; hits: 40,221,178, hits per frag: 1.04508. **Desktop (please complete the following information):**; - OS:Ubuntu ; - Version 18.04. **Additional c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:3815,Performance,Load,Loading,3815,"sh index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 325.83 us; -----------------------------------------; [2020-05-29 20:14:24.638] [jointLog] [info] done; [2020-05-29 20:14:24.638] [jointLog] [info] Index contained 57,190 targets; [2020-05-29 20:14:25.202] [jointLog] [info] Number of decoys : 0. processed 38,500,000 fragmentsntLog] [info] Automatically detected most likely library type as IU; hits: 40,221,178, hits per frag: 1.04508. **Desktop (please complete the following information):**; - OS:Ubuntu ; - Version 18.04. **Additional context**; Previously used salmon on this laptop and it was much much faster, that'ts the main reason I use salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:3958,Performance,Load,Loading,3958,"sh index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 325.83 us; -----------------------------------------; [2020-05-29 20:14:24.638] [jointLog] [info] done; [2020-05-29 20:14:24.638] [jointLog] [info] Index contained 57,190 targets; [2020-05-29 20:14:25.202] [jointLog] [info] Number of decoys : 0. processed 38,500,000 fragmentsntLog] [info] Automatically detected most likely library type as IU; hits: 40,221,178, hits per frag: 1.04508. **Desktop (please complete the following information):**; - OS:Ubuntu ; - Version 18.04. **Additional context**; Previously used salmon on this laptop and it was much much faster, that'ts the main reason I use salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:4093,Performance,Load,Loading,4093,"sh index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 325.83 us; -----------------------------------------; [2020-05-29 20:14:24.638] [jointLog] [info] done; [2020-05-29 20:14:24.638] [jointLog] [info] Index contained 57,190 targets; [2020-05-29 20:14:25.202] [jointLog] [info] Number of decoys : 0. processed 38,500,000 fragmentsntLog] [info] Automatically detected most likely library type as IU; hits: 40,221,178, hits per frag: 1.04508. **Desktop (please complete the following information):**; - OS:Ubuntu ; - Version 18.04. **Additional context**; Previously used salmon on this laptop and it was much much faster, that'ts the main reason I use salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:4445,Safety,detect,detected,4445,"sh index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 325.83 us; -----------------------------------------; [2020-05-29 20:14:24.638] [jointLog] [info] done; [2020-05-29 20:14:24.638] [jointLog] [info] Index contained 57,190 targets; [2020-05-29 20:14:25.202] [jointLog] [info] Number of decoys : 0. processed 38,500,000 fragmentsntLog] [info] Automatically detected most likely library type as IU; hits: 40,221,178, hits per frag: 1.04508. **Desktop (please complete the following information):**; - OS:Ubuntu ; - Version 18.04. **Additional context**; Previously used salmon on this laptop and it was much much faster, that'ts the main reason I use salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:1239,Security,validat,validateMappings,1239,"he bug is.**; So I am aligning reads against Arabidopsis Thaliana, using Araport 11 annotation. I usually had 20 M reads aligned within an hour or 2. I am aligning a 46M reads library and it has been running for 20 hours using 4 threads of my humble i5-3210M and is barely on 38.5M, after 20 hours! Index was constructed with default kmer size and no decoys. I have had this problem with other libraries since upgraded from V1.0.0, . **To Reproduce**; I guess just try to align stuff against araport11, this particular problem comes with any fq.gz. It will take hours and hours and hours to align. **Specifically, please provide at least the following information:**. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:1742,Security,validat,validateMappings,1742,"o align. **Specifically, please provide at least the following information:**. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:2293,Security,validat,validateMappings,2293,"pected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:2455,Security,validat,validateMappings,2455,"# salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries fi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:1943,Testability,Log,Logs,1943,"mon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:2020,Testability,log,logs,2020,"a)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Load",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/527:197,Usability,clear,clear,197,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; is been running like an order of magnitude slower than when I last used it ; **A clear and concise description of what the bug is.**; So I am aligning reads against Arabidopsis Thaliana, using Araport 11 annotation. I usually had 20 M reads aligned within an hour or 2. I am aligning a 46M reads library and it has been running for 20 hours using 4 threads of my humble i5-3210M and is barely on 38.5M, after 20 hours! Index was constructed with default kmer size and no decoys. I have had this problem with other libraries since upgraded from V1.0.0, . **To Reproduce**; I guess just try to align stuff against araport11, this particular problem comes with any fq.gz. It will take hours and hours and hours to align. **Specifically, please provide at least the following information:**. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527
https://github.com/COMBINE-lab/salmon/issues/528:601,Security,validat,validateMappings,601,"Thank you for this helpful software. . I'm looking to look at the raw fastq reads for transcripts that came up as differentially expressed after quantification with Salmon. Is there a good way to link the original reads back with the estimated counts from Salmon for each transcriptional variant of a particular gene? Ideally I'd want to find all the reads that were thought to be most-likely aligned to each variant (or the likelihood that each read was aligned to each variant). For instance, I ran salmon as follows:; ```bash; salmon quant -i $S_IDX -l A \; -1 $IN_FQ1 -2 $IN_FQ2 \; -p $CORES \; --validateMappings \; --numGibbsSamples 20 \; --gcBias \; --no-version-check \; -o $SALMON_FOLD \; --writeMappings | samtools view -Sb - > $PREFIX""salmon_pseudobam.bam""; ```. However, I'm afraid I don't understand the format of the resulting peudosam file. Is it described anywhere in the documentation? I don't see anything [here](https://salmon.readthedocs.io/en/latest/file_formats.html#fileformats), for instance. What do the flags and qualities represent?. More importantly, is there a way to filter the pseudobam files to find the reads corresponding to the counts/NumReads in the `quant.sf` output file? Do the normal samtools quality and flag filters work to subset e.g. uniquely-mapped reads, or do those concepts not really apply to these pseudobams?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/528
https://github.com/COMBINE-lab/salmon/issues/529:520,Security,validat,validateMappings,520,"Hi,. I was hoping to run salmon quantification for my RNAseq data, which will then be analysed using sleuth. While most samples worked, for some samples sleuth complained that there are Na/NaN values when summarizing the bootstraps. Is it possible to remove Na/NaN values from salmon results, or prevent Na/NaN values from being generated in salmon? Please check below for my script to run salmon. Any assistance would be greatly appreciated. salmon quant -i index -l A -1 R1_clean.fastq.gz -2 R2_clean.fastq.gz -p 48 --validateMappings --numBootstraps 1000 --seqBias -o quants_sample",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/529
https://github.com/COMBINE-lab/salmon/issues/530:3963,Performance,Load,Loading,3963,"ype five_prime_UTR; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	three_prime_utr	207479	207903	.	+	.	ID ""Bany_03723-RA:three_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype three_prime_UTR; transcript_id ""Bany_03723-RA"" ; ```. The log report I got:; ```; [2020-06-03 23:42:18.303] [jointLog] [info] setting maxHashResizeThreads to 36; [2020-06-03 23:42:18.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-03 23:42:18.303] [jointLog] [info] parsing read library format; [2020-06-03 23:42:18.303] [jointLog] [info] There is 1 library.; [2020-06-03 23:42:18.445] [jointLog] [info] Loading pufferfish index; [2020-06-03 23:42:18.446] [jointLog] [info] Loading dense pufferfish index.; [2020-06-03 23:42:18.906] [jointLog] [info] done; [2020-06-03 23:42:18.907] [jointLog] [info] Index contained 29,658 targets; [2020-06-03 23:42:18.922] [jointLog] [info] Number of decoys : 0; [2020-06-03 23:47:07.075] [jointLog] [info] Computed 96,808 rich equivalence classes for further processing; [2020-06-03 23:47:07.075] [jointLog] [info] Counted 22,215,758 total reads in the equivalence classes ; [2020-06-03 23:47:07.131] [jointLog] [warning] 0.00138398% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-03 23:47:07.131] [jointLog] [info] Number of mappings discarded because of alignment score : 50,180,647; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 5,461,169; [2020-06-03 23:47:07.131] [jo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530
https://github.com/COMBINE-lab/salmon/issues/530:4033,Performance,Load,Loading,4033,"	maker	three_prime_utr	207479	207903	.	+	.	ID ""Bany_03723-RA:three_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype three_prime_UTR; transcript_id ""Bany_03723-RA"" ; ```. The log report I got:; ```; [2020-06-03 23:42:18.303] [jointLog] [info] setting maxHashResizeThreads to 36; [2020-06-03 23:42:18.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-03 23:42:18.303] [jointLog] [info] parsing read library format; [2020-06-03 23:42:18.303] [jointLog] [info] There is 1 library.; [2020-06-03 23:42:18.445] [jointLog] [info] Loading pufferfish index; [2020-06-03 23:42:18.446] [jointLog] [info] Loading dense pufferfish index.; [2020-06-03 23:42:18.906] [jointLog] [info] done; [2020-06-03 23:42:18.907] [jointLog] [info] Index contained 29,658 targets; [2020-06-03 23:42:18.922] [jointLog] [info] Number of decoys : 0; [2020-06-03 23:47:07.075] [jointLog] [info] Computed 96,808 rich equivalence classes for further processing; [2020-06-03 23:47:07.075] [jointLog] [info] Counted 22,215,758 total reads in the equivalence classes ; [2020-06-03 23:47:07.131] [jointLog] [warning] 0.00138398% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-03 23:47:07.131] [jointLog] [info] Number of mappings discarded because of alignment score : 50,180,647; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 5,461,169; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments discarded because they are ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530
https://github.com/COMBINE-lab/salmon/issues/530:5414,Performance,optimiz,optimizer,5414,"nted 22,215,758 total reads in the equivalence classes ; [2020-06-03 23:47:07.131] [jointLog] [warning] 0.00138398% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-03 23:47:07.131] [jointLog] [info] Number of mappings discarded because of alignment score : 50,180,647; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 5,461,169; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 324,394; [2020-06-03 23:47:07.131] [jointLog] [info] Mapping rate = 63.6568%. [2020-06-03 23:47:07.131] [jointLog] [info] finished quantifyLibrary(); [2020-06-03 23:47:07.136] [jointLog] [info] Starting optimizer; [2020-06-03 23:47:07.076] [fileLog] [info] ; At end of round 0; ==================; Observed 34899252 total fragments (34899252 in most recent round). [2020-06-03 23:47:08.309] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2020-06-03 23:47:08.317] [jointLog] [info] iteration = 0 | max rel diff. = 41473.1; [2020-06-03 23:47:08.967] [jointLog] [info] iteration = 100 | max rel diff. = 9.06606; [2020-06-03 23:47:09.603] [jointLog] [info] iteration = 200 | max rel diff. = 1.25243; [2020-06-03 23:47:10.262] [jointLog] [info] iteration = 300 | max rel diff. = 19.2449; [2020-06-03 23:47:10.896] [jointLog] [info] iteration = 400 | max rel diff. = 0.263527; [2020-06-03 23:47:11.533] [jointLog] [info] iteration = 500 | max rel diff. = 0.630176; [2020-06-03 23:47:12.175] [jointLog] [info] iteration = 600 | max rel diff. = 0.250806; [2020-06-03 23:47:12.830] [jointLog] [info] iteration = 700 | max rel diff. = 0.228813; [2020-06-03 23:47:13.475] [jointLog] [info]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530
https://github.com/COMBINE-lab/salmon/issues/530:6873,Performance,optimiz,optimizer,6873,"re best-mapped to decoys : 0; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 324,394; [2020-06-03 23:47:07.131] [jointLog] [info] Mapping rate = 63.6568%. [2020-06-03 23:47:07.131] [jointLog] [info] finished quantifyLibrary(); [2020-06-03 23:47:07.136] [jointLog] [info] Starting optimizer; [2020-06-03 23:47:07.076] [fileLog] [info] ; At end of round 0; ==================; Observed 34899252 total fragments (34899252 in most recent round). [2020-06-03 23:47:08.309] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2020-06-03 23:47:08.317] [jointLog] [info] iteration = 0 | max rel diff. = 41473.1; [2020-06-03 23:47:08.967] [jointLog] [info] iteration = 100 | max rel diff. = 9.06606; [2020-06-03 23:47:09.603] [jointLog] [info] iteration = 200 | max rel diff. = 1.25243; [2020-06-03 23:47:10.262] [jointLog] [info] iteration = 300 | max rel diff. = 19.2449; [2020-06-03 23:47:10.896] [jointLog] [info] iteration = 400 | max rel diff. = 0.263527; [2020-06-03 23:47:11.533] [jointLog] [info] iteration = 500 | max rel diff. = 0.630176; [2020-06-03 23:47:12.175] [jointLog] [info] iteration = 600 | max rel diff. = 0.250806; [2020-06-03 23:47:12.830] [jointLog] [info] iteration = 700 | max rel diff. = 0.228813; [2020-06-03 23:47:13.475] [jointLog] [info] iteration = 800 | max rel diff. = 0.606402; [2020-06-03 23:47:14.119] [jointLog] [info] iteration = 900 | max rel diff. = 0.0988411; [2020-06-03 23:47:14.743] [jointLog] [info] iteration = 1,000 | max rel diff. = 1.06809; [2020-06-03 23:47:15.421] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0465071; [2020-06-03 23:47:15.797] [jointLog] [info] iteration = 1,162 | max rel diff. = 0.00922127; [2020-06-03 23:47:15.802] [jointLog] [info] Finished optimizer; [2020-06-03 23:47:15.802] [jointLog] [info] writing output . [2020-06-03 23:47:15.955] [jointLog] [info] Computing gene-level abundance estimates; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530
https://github.com/COMBINE-lab/salmon/issues/530:149,Security,validat,validateMappings,149,"I am using v1.2.1. The command I used:; `salmon quant -i BANY_transcript_index -p 36 --libType IU -g BANY_v2.gtf -1 ${i}_1P.fq.gz -2 ${i}_2P.fq.gz --validateMappings -o ${i}.quant`. There's NO quant.gene.sf file generated...only the quant.sf. The gtf file I used:; ```; Bany_Scaf1	maker	gene	201136	207903	.	+	.	Alias ""maker-Bany_Scaf1-snap-gene-2.23""; Dbxref ""InterPro:IPR019774"" ""Pfam:PF00351""; ID Bany_03723; Name Bany_03723; Ontology_term ""GO:0016714"" ""GO:0055114""; gene_id Bany_03723; Bany_Scaf1	maker	transcript	201136	207903	.	+	.	Alias ""maker-Bany_Scaf1-snap-gene-2.23-mRNA-1""; Dbxref ""InterPro:IPR019774"" ""Pfam:PF00351""; ID ""Bany_03723-RA""; Name ""Bany_03723-RA""; Ontology_term ""GO:0016714"" ""GO:0055114""; Parent Bany_03723; _AED ""0.06""; _QI ""45|1|1|1|1|1|7|425|530""; _eAED ""0.06""; gene_id Bany_03723; original_biotype mrna; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	201136	201304	.	+	.	ID ""Bany_03723-RA:1""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	202687	202770	.	+	.	ID ""Bany_03723-RA:2""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	202886	202921	.	+	.	ID ""Bany_03723-RA:3""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	203004	203820	.	+	.	ID ""Bany_03723-RA:4""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	206097	206223	.	+	.	ID ""Bany_03723-RA:5""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	206649	206878	.	+	.	ID ""Bany_03723-RA:6""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	exon	207304	207903	.	+	.	ID ""Bany_03723-RA:7""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	CDS	201181	201304	.	+	0	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530
https://github.com/COMBINE-lab/salmon/issues/530:3527,Security,validat,validateMappings,3527,"ny_03723-RA"" ; Bany_Scaf1	maker	CDS	206649	206878	.	+	0	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	CDS	207304	207478	.	+	1	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	five_prime_utr	201136	201180	.	+	.	ID ""Bany_03723-RA:five_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype five_prime_UTR; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	three_prime_utr	207479	207903	.	+	.	ID ""Bany_03723-RA:three_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype three_prime_UTR; transcript_id ""Bany_03723-RA"" ; ```. The log report I got:; ```; [2020-06-03 23:42:18.303] [jointLog] [info] setting maxHashResizeThreads to 36; [2020-06-03 23:42:18.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-03 23:42:18.303] [jointLog] [info] parsing read library format; [2020-06-03 23:42:18.303] [jointLog] [info] There is 1 library.; [2020-06-03 23:42:18.445] [jointLog] [info] Loading pufferfish index; [2020-06-03 23:42:18.446] [jointLog] [info] Loading dense pufferfish index.; [2020-06-03 23:42:18.906] [jointLog] [info] done; [2020-06-03 23:42:18.907] [jointLog] [info] Index contained 29,658 targets; [2020-06-03 23:42:18.922] [jointLog] [info] Number of decoys : 0; [2020-06-03 23:47:07.075] [jointLog] [info] Computed 96,808 rich equivalence classes for further processing; [2020-06-03 23:47:07.075] [jointLog] [info] Counted 22,215,758 total reads in the equivalence classes ; [2020-06-03 23:47:07.131] [jointLog] [warning] 0.00138398% of fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530
https://github.com/COMBINE-lab/salmon/issues/530:3689,Security,validat,validateMappings,3689,"	maker	CDS	207304	207478	.	+	1	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	five_prime_utr	201136	201180	.	+	.	ID ""Bany_03723-RA:five_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype five_prime_UTR; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	three_prime_utr	207479	207903	.	+	.	ID ""Bany_03723-RA:three_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype three_prime_UTR; transcript_id ""Bany_03723-RA"" ; ```. The log report I got:; ```; [2020-06-03 23:42:18.303] [jointLog] [info] setting maxHashResizeThreads to 36; [2020-06-03 23:42:18.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-03 23:42:18.303] [jointLog] [info] parsing read library format; [2020-06-03 23:42:18.303] [jointLog] [info] There is 1 library.; [2020-06-03 23:42:18.445] [jointLog] [info] Loading pufferfish index; [2020-06-03 23:42:18.446] [jointLog] [info] Loading dense pufferfish index.; [2020-06-03 23:42:18.906] [jointLog] [info] done; [2020-06-03 23:42:18.907] [jointLog] [info] Index contained 29,658 targets; [2020-06-03 23:42:18.922] [jointLog] [info] Number of decoys : 0; [2020-06-03 23:47:07.075] [jointLog] [info] Computed 96,808 rich equivalence classes for further processing; [2020-06-03 23:47:07.075] [jointLog] [info] Counted 22,215,758 total reads in the equivalence classes ; [2020-06-03 23:47:07.131] [jointLog] [warning] 0.00138398% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size foun",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530
https://github.com/COMBINE-lab/salmon/issues/530:3235,Testability,log,log,3235,"03723-RA"" ; Bany_Scaf1	maker	CDS	203004	203820	.	+	2	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	CDS	206097	206223	.	+	1	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	CDS	206649	206878	.	+	0	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	CDS	207304	207478	.	+	1	ID ""Bany_03723-RA:cds""; Parent ""Bany_03723-RA""; gene_id Bany_03723; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	five_prime_utr	201136	201180	.	+	.	ID ""Bany_03723-RA:five_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype five_prime_UTR; transcript_id ""Bany_03723-RA"" ; Bany_Scaf1	maker	three_prime_utr	207479	207903	.	+	.	ID ""Bany_03723-RA:three_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype three_prime_UTR; transcript_id ""Bany_03723-RA"" ; ```. The log report I got:; ```; [2020-06-03 23:42:18.303] [jointLog] [info] setting maxHashResizeThreads to 36; [2020-06-03 23:42:18.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-03 23:42:18.303] [jointLog] [info] parsing read library format; [2020-06-03 23:42:18.303] [jointLog] [info] There is 1 library.; [2020-06-03 23:42:18.445] [jointLog] [info] Loading pufferfish index; [2020-06-03 23:42:18.446] [jointLog] [info] Loading dense pufferfish index.; [2020-06-03 23:42:18.906] [jointLog] [info] done; [2020-06-03 23:42:18.907] [jointLog] [info] Index contained 29,658 targets; [2020-06-03 23:42:18.922] [jointLog] [info] Number of decoys : ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530
https://github.com/COMBINE-lab/salmon/issues/531:364,Availability,error,error,364,"Hi,; I would like quantify guide-RNAs (based on 5'-tagged scRNAseq 10X feature barcoding) using Alevin. Read 1 is 26bps long (16 CB +10 UMI) and Read 2 is 58bps long (19 constant region + 21 guide sequence). Now, when I use the following settings . `salmon alevin -l ISR --barcodeLength 16 --umiLength 10 --end 5 --featureStart 19 --featureLength 21 `. I get this error . > `Transcript to Gene Map File not provided`. . However, when I use the following instead. `salmon alevin -l ISR --citeseq --featureStart 19 --featureLength 21; `. It works but since `--citeseq` assumes `--umiLength=12`, I get the following output . > `[2020-06-03 13:53:30.298] [alevinLog] [info] set CITE-seq minScoreFraction parameter to : 0.797619; > ; > [2020-06-03 13:53:30.298] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:53:30.298] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:53:30.298] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:53:30.304] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:54:43.733] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:54:43.733] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13:54:43.826] [alevinLog] [info] Forcing to use 100000 cells; > [2020-06-03 13:54:43.964] [alevinLog] [info] Throwing 49909 barcodes with < 10 reads; > [2020-06-03 13:54:43.984] [alevinLog] [info] Total 50092(has 201 low confidence) barcodes; > [2020-06-03 13:54:44.191] [alevinLog] [info] Done True Barcode Sampling; > [2020-06-03 13:54:44.285] [alevinLog] [info] Total 1.70493% reads will be thrown away because of noisy Cellular barcodes.; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done populating Z matrix; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total 0 CB got sequence corrected; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done indexing B",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/531:2338,Performance,Load,Loading,2338,"26] [alevinLog] [info] Forcing to use 100000 cells; > [2020-06-03 13:54:43.964] [alevinLog] [info] Throwing 49909 barcodes with < 10 reads; > [2020-06-03 13:54:43.984] [alevinLog] [info] Total 50092(has 201 low confidence) barcodes; > [2020-06-03 13:54:44.191] [alevinLog] [info] Done True Barcode Sampling; > [2020-06-03 13:54:44.285] [alevinLog] [info] Total 1.70493% reads will be thrown away because of noisy Cellular barcodes.; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done populating Z matrix; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total 0 CB got sequence corrected; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done indexing Barcodes; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:54:45.790] [alevinLog] [info] Used Barcodes except Whitelist: 0; > [2020-06-03 13:54:46.493] [jointLog] [info] There is 1 library.; > ; > -----------------------------------------; > [2020-06-03 13:54:46.551] [jointLog] [info] Loading pufferfish index; > [2020-06-03 13:54:46.551] [jointLog] [info] Loading dense pufferfish index.; > [2020-06-03 13:54:46.552] [jointLog] [info] done; > [2020-06-03 13:54:46.552] [jointLog] [info] Index contained 64 targets; > [2020-06-03 13:54:46.552] [jointLog] [info] Number of decoys : 0; > ; > [2020-06-03 13:54:46.493] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ; > processed 52 Million fragmentsvinLog] [info] parsing read library format; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:55:42.905] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:55:42.931] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.931] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/531:2410,Performance,Load,Loading,2410,"03 13:54:43.964] [alevinLog] [info] Throwing 49909 barcodes with < 10 reads; > [2020-06-03 13:54:43.984] [alevinLog] [info] Total 50092(has 201 low confidence) barcodes; > [2020-06-03 13:54:44.191] [alevinLog] [info] Done True Barcode Sampling; > [2020-06-03 13:54:44.285] [alevinLog] [info] Total 1.70493% reads will be thrown away because of noisy Cellular barcodes.; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done populating Z matrix; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total 0 CB got sequence corrected; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done indexing Barcodes; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:54:45.790] [alevinLog] [info] Used Barcodes except Whitelist: 0; > [2020-06-03 13:54:46.493] [jointLog] [info] There is 1 library.; > ; > -----------------------------------------; > [2020-06-03 13:54:46.551] [jointLog] [info] Loading pufferfish index; > [2020-06-03 13:54:46.551] [jointLog] [info] Loading dense pufferfish index.; > [2020-06-03 13:54:46.552] [jointLog] [info] done; > [2020-06-03 13:54:46.552] [jointLog] [info] Index contained 64 targets; > [2020-06-03 13:54:46.552] [jointLog] [info] Number of decoys : 0; > ; > [2020-06-03 13:54:46.493] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ; > processed 52 Million fragmentsvinLog] [info] parsing read library format; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:55:42.905] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:55:42.931] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.931] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:55:42.933]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/531:2907,Performance,optimiz,optimizer,2907," 0 CB got sequence corrected; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done indexing Barcodes; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:54:45.790] [alevinLog] [info] Used Barcodes except Whitelist: 0; > [2020-06-03 13:54:46.493] [jointLog] [info] There is 1 library.; > ; > -----------------------------------------; > [2020-06-03 13:54:46.551] [jointLog] [info] Loading pufferfish index; > [2020-06-03 13:54:46.551] [jointLog] [info] Loading dense pufferfish index.; > [2020-06-03 13:54:46.552] [jointLog] [info] done; > [2020-06-03 13:54:46.552] [jointLog] [info] Index contained 64 targets; > [2020-06-03 13:54:46.552] [jointLog] [info] Number of decoys : 0; > ; > [2020-06-03 13:54:46.493] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ; > processed 52 Million fragmentsvinLog] [info] parsing read library format; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:55:42.905] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:55:42.931] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.931] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [warning] Skipped 50091 barcodes due to No mapped read; > [2020-06-03 13:55:42.934] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:55:42.940] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:55:42.940] [alevinLog] [info] Finished optimizer; > `. I also tried . `salmon alevin -l ISR --chromium --featureStart 19 --featureLength 21 --tgMap guide_to_gene.tsv`. But I get the follow",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/531:3670,Performance,perform,performing,3670,"h Barcode Processing; Moving to Quantify; > ; > processed 52 Million fragmentsvinLog] [info] parsing read library format; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:55:42.905] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:55:42.931] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.931] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [warning] Skipped 50091 barcodes due to No mapped read; > [2020-06-03 13:55:42.934] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:55:42.940] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:55:42.940] [alevinLog] [info] Finished optimizer; > `. I also tried . `salmon alevin -l ISR --chromium --featureStart 19 --featureLength 21 --tgMap guide_to_gene.tsv`. But I get the following output. > `; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:47:17.330] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:47:17.336] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:48:30.047] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:48:30.047] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13:48:33.285] [alevinLog] [info] Knee found left boundary at 1174 ; > [2020-06-03 13:48:34.501] [alevinLog] [info] Gauss Corrected Boundary at 148 ; > [2020-06-0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/531:3761,Performance,optimiz,optimizer,3761,"d 52 Million fragmentsvinLog] [info] parsing read library format; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:55:42.905] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:55:42.931] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.931] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [warning] Skipped 50091 barcodes due to No mapped read; > [2020-06-03 13:55:42.934] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:55:42.940] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:55:42.940] [alevinLog] [info] Finished optimizer; > `. I also tried . `salmon alevin -l ISR --chromium --featureStart 19 --featureLength 21 --tgMap guide_to_gene.tsv`. But I get the following output. > `; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:47:17.330] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:47:17.336] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:48:30.047] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:48:30.047] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13:48:33.285] [alevinLog] [info] Knee found left boundary at 1174 ; > [2020-06-03 13:48:34.501] [alevinLog] [info] Gauss Corrected Boundary at 148 ; > [2020-06-03 13:48:34.501] [alevinLog] [info] Learned InvCov: 985.9",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/531:6334,Performance,optimiz,optimizer,6334,":35.455] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:48:35.455] [alevinLog] [info] Used Barcodes except Whitelist: 4282; > [2020-06-03 13:48:35.558] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ...; > processed 52 Million fragments; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:49:37.892] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2020-06-03 13:49:37.892] [jointLog] [info] Counted 0 total reads in the equivalence classes ; > [2020-06-03 13:49:37.893] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2020-06-03 13:49:37.893] [jointLog] [warning] Found 370 reads with `N` in the UMI sequence and ignored the reads.; > Please report on github if this number is too large; > [2020-06-03 13:49:37.893] [jointLog] [info] Mapping rate = 0%; > ; > [2020-06-03 13:49:37.893] [jointLog] [info] finished quantifyLibrary(); > [2020-06-03 13:49:37.899] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:49:38.613] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:49:38.613] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:49:38.614] [alevinLog] [warning] Skipped 348 barcodes due to No mapped read; > [2020-06-03 13:49:38.614] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:49:38.620] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:49:38.620] [alevinLog] [info] Finished optimizer; > Floating point exception (core dumped); > `. Any suggestions on how to get this working are highly appreciated!. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/531:7095,Performance,perform,performing,7095,":35.455] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:48:35.455] [alevinLog] [info] Used Barcodes except Whitelist: 4282; > [2020-06-03 13:48:35.558] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ...; > processed 52 Million fragments; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:49:37.892] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2020-06-03 13:49:37.892] [jointLog] [info] Counted 0 total reads in the equivalence classes ; > [2020-06-03 13:49:37.893] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2020-06-03 13:49:37.893] [jointLog] [warning] Found 370 reads with `N` in the UMI sequence and ignored the reads.; > Please report on github if this number is too large; > [2020-06-03 13:49:37.893] [jointLog] [info] Mapping rate = 0%; > ; > [2020-06-03 13:49:37.893] [jointLog] [info] finished quantifyLibrary(); > [2020-06-03 13:49:37.899] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:49:38.613] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:49:38.613] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:49:38.614] [alevinLog] [warning] Skipped 348 barcodes due to No mapped read; > [2020-06-03 13:49:38.614] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:49:38.620] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:49:38.620] [alevinLog] [info] Finished optimizer; > Floating point exception (core dumped); > `. Any suggestions on how to get this working are highly appreciated!. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/531:7186,Performance,optimiz,optimizer,7186,":35.455] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:48:35.455] [alevinLog] [info] Used Barcodes except Whitelist: 4282; > [2020-06-03 13:48:35.558] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ...; > processed 52 Million fragments; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:49:37.892] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2020-06-03 13:49:37.892] [jointLog] [info] Counted 0 total reads in the equivalence classes ; > [2020-06-03 13:49:37.893] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2020-06-03 13:49:37.893] [jointLog] [warning] Found 370 reads with `N` in the UMI sequence and ignored the reads.; > Please report on github if this number is too large; > [2020-06-03 13:49:37.893] [jointLog] [info] Mapping rate = 0%; > ; > [2020-06-03 13:49:37.893] [jointLog] [info] finished quantifyLibrary(); > [2020-06-03 13:49:37.899] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:49:38.613] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:49:38.613] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:49:38.614] [alevinLog] [warning] Skipped 348 barcodes due to No mapped read; > [2020-06-03 13:49:38.614] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:49:38.620] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:49:38.620] [alevinLog] [info] Finished optimizer; > Floating point exception (core dumped); > `. Any suggestions on how to get this working are highly appreciated!. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/531:27,Usability,guid,guide-RNAs,27,"Hi,; I would like quantify guide-RNAs (based on 5'-tagged scRNAseq 10X feature barcoding) using Alevin. Read 1 is 26bps long (16 CB +10 UMI) and Read 2 is 58bps long (19 constant region + 21 guide sequence). Now, when I use the following settings . `salmon alevin -l ISR --barcodeLength 16 --umiLength 10 --end 5 --featureStart 19 --featureLength 21 `. I get this error . > `Transcript to Gene Map File not provided`. . However, when I use the following instead. `salmon alevin -l ISR --citeseq --featureStart 19 --featureLength 21; `. It works but since `--citeseq` assumes `--umiLength=12`, I get the following output . > `[2020-06-03 13:53:30.298] [alevinLog] [info] set CITE-seq minScoreFraction parameter to : 0.797619; > ; > [2020-06-03 13:53:30.298] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:53:30.298] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:53:30.298] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:53:30.304] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:54:43.733] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:54:43.733] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13:54:43.826] [alevinLog] [info] Forcing to use 100000 cells; > [2020-06-03 13:54:43.964] [alevinLog] [info] Throwing 49909 barcodes with < 10 reads; > [2020-06-03 13:54:43.984] [alevinLog] [info] Total 50092(has 201 low confidence) barcodes; > [2020-06-03 13:54:44.191] [alevinLog] [info] Done True Barcode Sampling; > [2020-06-03 13:54:44.285] [alevinLog] [info] Total 1.70493% reads will be thrown away because of noisy Cellular barcodes.; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done populating Z matrix; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total 0 CB got sequence corrected; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done indexing B",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/531:191,Usability,guid,guide,191,"Hi,; I would like quantify guide-RNAs (based on 5'-tagged scRNAseq 10X feature barcoding) using Alevin. Read 1 is 26bps long (16 CB +10 UMI) and Read 2 is 58bps long (19 constant region + 21 guide sequence). Now, when I use the following settings . `salmon alevin -l ISR --barcodeLength 16 --umiLength 10 --end 5 --featureStart 19 --featureLength 21 `. I get this error . > `Transcript to Gene Map File not provided`. . However, when I use the following instead. `salmon alevin -l ISR --citeseq --featureStart 19 --featureLength 21; `. It works but since `--citeseq` assumes `--umiLength=12`, I get the following output . > `[2020-06-03 13:53:30.298] [alevinLog] [info] set CITE-seq minScoreFraction parameter to : 0.797619; > ; > [2020-06-03 13:53:30.298] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:53:30.298] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:53:30.298] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:53:30.304] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:54:43.733] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:54:43.733] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13:54:43.826] [alevinLog] [info] Forcing to use 100000 cells; > [2020-06-03 13:54:43.964] [alevinLog] [info] Throwing 49909 barcodes with < 10 reads; > [2020-06-03 13:54:43.984] [alevinLog] [info] Total 50092(has 201 low confidence) barcodes; > [2020-06-03 13:54:44.191] [alevinLog] [info] Done True Barcode Sampling; > [2020-06-03 13:54:44.285] [alevinLog] [info] Total 1.70493% reads will be thrown away because of noisy Cellular barcodes.; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done populating Z matrix; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total 0 CB got sequence corrected; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done indexing B",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/531:3530,Usability,Clear,Clearing,3530,"nfo] Index contained 64 targets; > [2020-06-03 13:54:46.552] [jointLog] [info] Number of decoys : 0; > ; > [2020-06-03 13:54:46.493] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ; > processed 52 Million fragmentsvinLog] [info] parsing read library format; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:55:42.905] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:55:42.931] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.931] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [warning] Skipped 50091 barcodes due to No mapped read; > [2020-06-03 13:55:42.934] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:55:42.940] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:55:42.940] [alevinLog] [info] Finished optimizer; > `. I also tried . `salmon alevin -l ISR --chromium --featureStart 19 --featureLength 21 --tgMap guide_to_gene.tsv`. But I get the following output. > `; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:47:17.330] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:47:17.336] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:48:30.047] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:48:30.047] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/531:4731,Usability,Learn,Learned,4731,"40] [alevinLog] [info] Finished optimizer; > `. I also tried . `salmon alevin -l ISR --chromium --featureStart 19 --featureLength 21 --tgMap guide_to_gene.tsv`. But I get the following output. > `; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:47:17.330] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:47:17.336] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:48:30.047] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:48:30.047] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13:48:33.285] [alevinLog] [info] Knee found left boundary at 1174 ; > [2020-06-03 13:48:34.501] [alevinLog] [info] Gauss Corrected Boundary at 148 ; > [2020-06-03 13:48:34.501] [alevinLog] [info] Learned InvCov: 985.935 normfactor: 763.254; > [2020-06-03 13:48:34.501] [alevinLog] [info] Total 349(has 201 low confidence) barcodes; > [2020-06-03 13:48:35.369] [alevinLog] [info] Done True Barcode Sampling; > [2020-06-03 13:48:35.441] [alevinLog] [warning] Total 73.3629% reads will be thrown away because of noisy Cellular barcodes.; > [2020-06-03 13:48:35.454] [alevinLog] [info] Done populating Z matrix; > [2020-06-03 13:48:35.455] [alevinLog] [info] Total 4286 CB got sequence corrected; > [2020-06-03 13:48:35.455] [alevinLog] [info] Done indexing Barcodes; > [2020-06-03 13:48:35.455] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:48:35.455] [alevinLog] [info] Used Barcodes except Whitelist: 4282; > [2020-06-03 13:48:35.558] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ...; > processed 52 Million fragments; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:49:37.892] [jointLog] [info] Computed 0 rich equivalence classes for furt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/531:6955,Usability,Clear,Clearing,6955,":35.455] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:48:35.455] [alevinLog] [info] Used Barcodes except Whitelist: 4282; > [2020-06-03 13:48:35.558] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ...; > processed 52 Million fragments; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:49:37.892] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2020-06-03 13:49:37.892] [jointLog] [info] Counted 0 total reads in the equivalence classes ; > [2020-06-03 13:49:37.893] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2020-06-03 13:49:37.893] [jointLog] [warning] Found 370 reads with `N` in the UMI sequence and ignored the reads.; > Please report on github if this number is too large; > [2020-06-03 13:49:37.893] [jointLog] [info] Mapping rate = 0%; > ; > [2020-06-03 13:49:37.893] [jointLog] [info] finished quantifyLibrary(); > [2020-06-03 13:49:37.899] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:49:38.613] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:49:38.613] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:49:38.614] [alevinLog] [warning] Skipped 348 barcodes due to No mapped read; > [2020-06-03 13:49:38.614] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:49:38.620] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:49:38.620] [alevinLog] [info] Finished optimizer; > Floating point exception (core dumped); > `. Any suggestions on how to get this working are highly appreciated!. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531
https://github.com/COMBINE-lab/salmon/issues/532:1272,Deployability,pipeline,pipelines,1272," > ""seq_length"": 93512911756,; > ""have_ref_seq"": true,; > ""have_edge_vec"": false,; > ""SeqHash"": ""34c8b30e5d42a0d4459fb24e44ecef46af39893984bf9613001e925a7b1308b7"",; > ""NameHash"": ""b503f6a369add974e996e5f42942882b50c2bf1419400420255d32a88fb61a18"",; > ""SeqHash512"": ""4b94376c390dd8e917d39dfbaed1092d9a661dbdb67635863f9a14b129948f1244929faf60f5b7c1d6fae142d87fb2c66455f49d0d3663f7498b275efad4ed93"",; > ""NameHash512"": ""46c31c9178b3290b2f57e9b682ea8eebe885ba9037e48cb6b385a0c70ce13e2b259400bc9bda4aca912c3b857edde7de41d11b1a7b9ccbe8b24df77808c22e59"",; > ""DecoySeqHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""DecoyNameHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""num_decoys"": 0,; > ""first_decoy_index"": 18446744073709551607,; > ""keep_duplicates"": false; > }. And the command I used:. `/home/bayegy/pipelines/metagenome/softwares/salmon-latest_linux_x86_64/bin/salmon quant --validateMappings -i /media/bayegy/disk1/Projects/qianquan-zhangke/result/Assembly_out//salmon_index -l A -p 90 --meta -1 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_1.fastq.gz -2 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_2.fastq.gz -o /media/bayegy/disk1/Projects/qianquan-zhangke/result/salmon_out//YGSC11.quant`. Sometimes, salmon would stay at the step of ""Starting optimizer"" for hours(10 hours at least). The CPU utilization is 100%, but the procedure never move forward. > [2020-06-04 12:06:12.254] [jointLog] [info] Mapping rate = 91.8009%; > ; > [2020-06-04 12:06:12.254] [jointLog] [info] finished quantifyLibrary(); > [2020-06-04 12:06:12.254] [jointLog] [info] Starting optimizer. The funny thing is that salmon would pass this step in no time if I restart the procedure with same command. It is annoying that I have to check the log time to time to restart salmon when it get blocked. I wonder what is the possible reason for this and how can i st",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/532
https://github.com/COMBINE-lab/salmon/issues/532:1822,Performance,optimiz,optimizer,1822,"eq"": true,; > ""have_edge_vec"": false,; > ""SeqHash"": ""34c8b30e5d42a0d4459fb24e44ecef46af39893984bf9613001e925a7b1308b7"",; > ""NameHash"": ""b503f6a369add974e996e5f42942882b50c2bf1419400420255d32a88fb61a18"",; > ""SeqHash512"": ""4b94376c390dd8e917d39dfbaed1092d9a661dbdb67635863f9a14b129948f1244929faf60f5b7c1d6fae142d87fb2c66455f49d0d3663f7498b275efad4ed93"",; > ""NameHash512"": ""46c31c9178b3290b2f57e9b682ea8eebe885ba9037e48cb6b385a0c70ce13e2b259400bc9bda4aca912c3b857edde7de41d11b1a7b9ccbe8b24df77808c22e59"",; > ""DecoySeqHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""DecoyNameHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""num_decoys"": 0,; > ""first_decoy_index"": 18446744073709551607,; > ""keep_duplicates"": false; > }. And the command I used:. `/home/bayegy/pipelines/metagenome/softwares/salmon-latest_linux_x86_64/bin/salmon quant --validateMappings -i /media/bayegy/disk1/Projects/qianquan-zhangke/result/Assembly_out//salmon_index -l A -p 90 --meta -1 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_1.fastq.gz -2 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_2.fastq.gz -o /media/bayegy/disk1/Projects/qianquan-zhangke/result/salmon_out//YGSC11.quant`. Sometimes, salmon would stay at the step of ""Starting optimizer"" for hours(10 hours at least). The CPU utilization is 100%, but the procedure never move forward. > [2020-06-04 12:06:12.254] [jointLog] [info] Mapping rate = 91.8009%; > ; > [2020-06-04 12:06:12.254] [jointLog] [info] finished quantifyLibrary(); > [2020-06-04 12:06:12.254] [jointLog] [info] Starting optimizer. The funny thing is that salmon would pass this step in no time if I restart the procedure with same command. It is annoying that I have to check the log time to time to restart salmon when it get blocked. I wonder what is the possible reason for this and how can i stop this from happening again. . Many thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/532
https://github.com/COMBINE-lab/salmon/issues/532:2134,Performance,optimiz,optimizer,2134,"eq"": true,; > ""have_edge_vec"": false,; > ""SeqHash"": ""34c8b30e5d42a0d4459fb24e44ecef46af39893984bf9613001e925a7b1308b7"",; > ""NameHash"": ""b503f6a369add974e996e5f42942882b50c2bf1419400420255d32a88fb61a18"",; > ""SeqHash512"": ""4b94376c390dd8e917d39dfbaed1092d9a661dbdb67635863f9a14b129948f1244929faf60f5b7c1d6fae142d87fb2c66455f49d0d3663f7498b275efad4ed93"",; > ""NameHash512"": ""46c31c9178b3290b2f57e9b682ea8eebe885ba9037e48cb6b385a0c70ce13e2b259400bc9bda4aca912c3b857edde7de41d11b1a7b9ccbe8b24df77808c22e59"",; > ""DecoySeqHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""DecoyNameHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""num_decoys"": 0,; > ""first_decoy_index"": 18446744073709551607,; > ""keep_duplicates"": false; > }. And the command I used:. `/home/bayegy/pipelines/metagenome/softwares/salmon-latest_linux_x86_64/bin/salmon quant --validateMappings -i /media/bayegy/disk1/Projects/qianquan-zhangke/result/Assembly_out//salmon_index -l A -p 90 --meta -1 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_1.fastq.gz -2 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_2.fastq.gz -o /media/bayegy/disk1/Projects/qianquan-zhangke/result/salmon_out//YGSC11.quant`. Sometimes, salmon would stay at the step of ""Starting optimizer"" for hours(10 hours at least). The CPU utilization is 100%, but the procedure never move forward. > [2020-06-04 12:06:12.254] [jointLog] [info] Mapping rate = 91.8009%; > ; > [2020-06-04 12:06:12.254] [jointLog] [info] finished quantifyLibrary(); > [2020-06-04 12:06:12.254] [jointLog] [info] Starting optimizer. The funny thing is that salmon would pass this step in no time if I restart the procedure with same command. It is annoying that I have to check the log time to time to restart salmon when it get blocked. I wonder what is the possible reason for this and how can i stop this from happening again. . Many thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/532
https://github.com/COMBINE-lab/salmon/issues/532:58,Safety,predict,predicted,58,"Dear developer,. I am using salmon v1.2.1 to quantify the predicted genes of metagenome.; The salmon index for my dataset is very large. Here is the content of info.json:. > {; > ""index_version"": 4,; > ""reference_gfa"": [; > ""/media/bayegy/disk1/Projects/qianquan-zhangke/result/Assembly_out//salmon_index""; > ],; > ""sampling_type"": ""dense"",; > ""k"": 31,; > ""num_kmers"": 40027310776,; > ""num_contigs"": 1782853366,; > ""seq_length"": 93512911756,; > ""have_ref_seq"": true,; > ""have_edge_vec"": false,; > ""SeqHash"": ""34c8b30e5d42a0d4459fb24e44ecef46af39893984bf9613001e925a7b1308b7"",; > ""NameHash"": ""b503f6a369add974e996e5f42942882b50c2bf1419400420255d32a88fb61a18"",; > ""SeqHash512"": ""4b94376c390dd8e917d39dfbaed1092d9a661dbdb67635863f9a14b129948f1244929faf60f5b7c1d6fae142d87fb2c66455f49d0d3663f7498b275efad4ed93"",; > ""NameHash512"": ""46c31c9178b3290b2f57e9b682ea8eebe885ba9037e48cb6b385a0c70ce13e2b259400bc9bda4aca912c3b857edde7de41d11b1a7b9ccbe8b24df77808c22e59"",; > ""DecoySeqHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""DecoyNameHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""num_decoys"": 0,; > ""first_decoy_index"": 18446744073709551607,; > ""keep_duplicates"": false; > }. And the command I used:. `/home/bayegy/pipelines/metagenome/softwares/salmon-latest_linux_x86_64/bin/salmon quant --validateMappings -i /media/bayegy/disk1/Projects/qianquan-zhangke/result/Assembly_out//salmon_index -l A -p 90 --meta -1 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_1.fastq.gz -2 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_2.fastq.gz -o /media/bayegy/disk1/Projects/qianquan-zhangke/result/salmon_out//YGSC11.quant`. Sometimes, salmon would stay at the step of ""Starting optimizer"" for hours(10 hours at least). The CPU utilization is 100%, but the procedure never move forward. > [2020-06-04 12:06:12.254] [jointLog] [info] Mapping rate = 91.8009%; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/532
https://github.com/COMBINE-lab/salmon/issues/532:1349,Security,validat,validateMappings,1349," > ""seq_length"": 93512911756,; > ""have_ref_seq"": true,; > ""have_edge_vec"": false,; > ""SeqHash"": ""34c8b30e5d42a0d4459fb24e44ecef46af39893984bf9613001e925a7b1308b7"",; > ""NameHash"": ""b503f6a369add974e996e5f42942882b50c2bf1419400420255d32a88fb61a18"",; > ""SeqHash512"": ""4b94376c390dd8e917d39dfbaed1092d9a661dbdb67635863f9a14b129948f1244929faf60f5b7c1d6fae142d87fb2c66455f49d0d3663f7498b275efad4ed93"",; > ""NameHash512"": ""46c31c9178b3290b2f57e9b682ea8eebe885ba9037e48cb6b385a0c70ce13e2b259400bc9bda4aca912c3b857edde7de41d11b1a7b9ccbe8b24df77808c22e59"",; > ""DecoySeqHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""DecoyNameHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""num_decoys"": 0,; > ""first_decoy_index"": 18446744073709551607,; > ""keep_duplicates"": false; > }. And the command I used:. `/home/bayegy/pipelines/metagenome/softwares/salmon-latest_linux_x86_64/bin/salmon quant --validateMappings -i /media/bayegy/disk1/Projects/qianquan-zhangke/result/Assembly_out//salmon_index -l A -p 90 --meta -1 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_1.fastq.gz -2 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_2.fastq.gz -o /media/bayegy/disk1/Projects/qianquan-zhangke/result/salmon_out//YGSC11.quant`. Sometimes, salmon would stay at the step of ""Starting optimizer"" for hours(10 hours at least). The CPU utilization is 100%, but the procedure never move forward. > [2020-06-04 12:06:12.254] [jointLog] [info] Mapping rate = 91.8009%; > ; > [2020-06-04 12:06:12.254] [jointLog] [info] finished quantifyLibrary(); > [2020-06-04 12:06:12.254] [jointLog] [info] Starting optimizer. The funny thing is that salmon would pass this step in no time if I restart the procedure with same command. It is annoying that I have to check the log time to time to restart salmon when it get blocked. I wonder what is the possible reason for this and how can i st",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/532
https://github.com/COMBINE-lab/salmon/issues/532:2294,Testability,log,log,2294,"eq"": true,; > ""have_edge_vec"": false,; > ""SeqHash"": ""34c8b30e5d42a0d4459fb24e44ecef46af39893984bf9613001e925a7b1308b7"",; > ""NameHash"": ""b503f6a369add974e996e5f42942882b50c2bf1419400420255d32a88fb61a18"",; > ""SeqHash512"": ""4b94376c390dd8e917d39dfbaed1092d9a661dbdb67635863f9a14b129948f1244929faf60f5b7c1d6fae142d87fb2c66455f49d0d3663f7498b275efad4ed93"",; > ""NameHash512"": ""46c31c9178b3290b2f57e9b682ea8eebe885ba9037e48cb6b385a0c70ce13e2b259400bc9bda4aca912c3b857edde7de41d11b1a7b9ccbe8b24df77808c22e59"",; > ""DecoySeqHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""DecoyNameHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""num_decoys"": 0,; > ""first_decoy_index"": 18446744073709551607,; > ""keep_duplicates"": false; > }. And the command I used:. `/home/bayegy/pipelines/metagenome/softwares/salmon-latest_linux_x86_64/bin/salmon quant --validateMappings -i /media/bayegy/disk1/Projects/qianquan-zhangke/result/Assembly_out//salmon_index -l A -p 90 --meta -1 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_1.fastq.gz -2 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_2.fastq.gz -o /media/bayegy/disk1/Projects/qianquan-zhangke/result/salmon_out//YGSC11.quant`. Sometimes, salmon would stay at the step of ""Starting optimizer"" for hours(10 hours at least). The CPU utilization is 100%, but the procedure never move forward. > [2020-06-04 12:06:12.254] [jointLog] [info] Mapping rate = 91.8009%; > ; > [2020-06-04 12:06:12.254] [jointLog] [info] finished quantifyLibrary(); > [2020-06-04 12:06:12.254] [jointLog] [info] Starting optimizer. The funny thing is that salmon would pass this step in no time if I restart the procedure with same command. It is annoying that I have to check the log time to time to restart salmon when it get blocked. I wonder what is the possible reason for this and how can i stop this from happening again. . Many thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/532
https://github.com/COMBINE-lab/salmon/issues/533:2777,Energy Efficiency,adapt,adaptors,2777,"and poly-T was used to select mRNAs during the library construction...; 3. Not using pre-mature transcripts so reads mapping to introns are discarded: I am not sure if this is a valid point since we usually quantify mature mRNAs, not pre-mature ones.; 4. Library type: my library was constructed in a stranded way. The program detected my libtype as ISR:; ```; {; ""read_files"": ""[ DS_1_HW_FM_1P.fq.gz, DS_1_HW_FM_2P.fq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 18651686,; ""num_assigned_fragments"": 18651686,; ""num_frags_with_concordant_consistent_mappings"": 17799536,; ""num_frags_with_inconsistent_or_orphan_mappings"": 864409,; ""strand_mapping_bias"": 0.0001987858838992702,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 3539,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17799536,; ""SF"": 419781,; ""SR"": 441089,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```; When I change the libtype to a broader category, such as IU, the mapping rates slightly increased from ~55% to 65%, also I got more counts in each transcript, but this introduced higher strand mapping bias (Appeared as a warning message). ; 5. many short reads: No... in my case, the majority of the reads are ~150bp. And I used k=31 (default).; 6. Read trimming: I trimmed the adaptors and low-quality bases from the ends. One thing I noticed in my FastQC report is that I have warnings for 'Per Base Sequence Content'. I can see a fluctuation of nucleotides in around the first 12bp of each run due to a biased selection of random primers. This is so common in RNA-seq data so I did not trim the first several bases...Not sure if this can cause the low mapping rate.; One of my fastQC reports:. [DS_1_HW_FM_1P_fastqc.html.zip](https://github.com/COMBINE-lab/salmon/files/4730665/DS_1_HW_FM_1P_fastqc.html.zip). So...Is there a way I can increase the mapping rates? Or do I need to? My trimmed reads are all of very high quality so I do expect a mapping rate of >70%. I would appreciate it if this could be clarified.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/533
https://github.com/COMBINE-lab/salmon/issues/533:2628,Integrability,message,message,2628,"pping rate using hisat2. But in fact, DNAs are removed in my RNA extraction process...and poly-T was used to select mRNAs during the library construction...; 3. Not using pre-mature transcripts so reads mapping to introns are discarded: I am not sure if this is a valid point since we usually quantify mature mRNAs, not pre-mature ones.; 4. Library type: my library was constructed in a stranded way. The program detected my libtype as ISR:; ```; {; ""read_files"": ""[ DS_1_HW_FM_1P.fq.gz, DS_1_HW_FM_2P.fq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 18651686,; ""num_assigned_fragments"": 18651686,; ""num_frags_with_concordant_consistent_mappings"": 17799536,; ""num_frags_with_inconsistent_or_orphan_mappings"": 864409,; ""strand_mapping_bias"": 0.0001987858838992702,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 3539,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17799536,; ""SF"": 419781,; ""SR"": 441089,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```; When I change the libtype to a broader category, such as IU, the mapping rates slightly increased from ~55% to 65%, also I got more counts in each transcript, but this introduced higher strand mapping bias (Appeared as a warning message). ; 5. many short reads: No... in my case, the majority of the reads are ~150bp. And I used k=31 (default).; 6. Read trimming: I trimmed the adaptors and low-quality bases from the ends. One thing I noticed in my FastQC report is that I have warnings for 'Per Base Sequence Content'. I can see a fluctuation of nucleotides in around the first 12bp of each run due to a biased selection of random primers. This is so common in RNA-seq data so I did not trim the first several bases...Not sure if this can cause the low mapping rate.; One of my fastQC reports:. [DS_1_HW_FM_1P_fastqc.html.zip](https://github.com/COMBINE-lab/salmon/files/4730665/DS_1_HW_FM_1P_fastqc.html.zip). So...Is there a way I can increase the mapping rates? Or do I need to? My trimmed reads are all of very high quality so",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/533
https://github.com/COMBINE-lab/salmon/issues/533:2777,Modifiability,adapt,adaptors,2777,"and poly-T was used to select mRNAs during the library construction...; 3. Not using pre-mature transcripts so reads mapping to introns are discarded: I am not sure if this is a valid point since we usually quantify mature mRNAs, not pre-mature ones.; 4. Library type: my library was constructed in a stranded way. The program detected my libtype as ISR:; ```; {; ""read_files"": ""[ DS_1_HW_FM_1P.fq.gz, DS_1_HW_FM_2P.fq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 18651686,; ""num_assigned_fragments"": 18651686,; ""num_frags_with_concordant_consistent_mappings"": 17799536,; ""num_frags_with_inconsistent_or_orphan_mappings"": 864409,; ""strand_mapping_bias"": 0.0001987858838992702,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 3539,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17799536,; ""SF"": 419781,; ""SR"": 441089,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```; When I change the libtype to a broader category, such as IU, the mapping rates slightly increased from ~55% to 65%, also I got more counts in each transcript, but this introduced higher strand mapping bias (Appeared as a warning message). ; 5. many short reads: No... in my case, the majority of the reads are ~150bp. And I used k=31 (default).; 6. Read trimming: I trimmed the adaptors and low-quality bases from the ends. One thing I noticed in my FastQC report is that I have warnings for 'Per Base Sequence Content'. I can see a fluctuation of nucleotides in around the first 12bp of each run due to a biased selection of random primers. This is so common in RNA-seq data so I did not trim the first several bases...Not sure if this can cause the low mapping rate.; One of my fastQC reports:. [DS_1_HW_FM_1P_fastqc.html.zip](https://github.com/COMBINE-lab/salmon/files/4730665/DS_1_HW_FM_1P_fastqc.html.zip). So...Is there a way I can increase the mapping rates? Or do I need to? My trimmed reads are all of very high quality so I do expect a mapping rate of >70%. I would appreciate it if this could be clarified.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/533
https://github.com/COMBINE-lab/salmon/issues/533:306,Performance,perform,perform,306,"I know this problem was reported previously. I checked all the answers and I can see there are many reasons for this. In my case, I have a 'high number of mappings discarded because of alignment score'. I created the index using mature transcripts (without introns and genome decoy). The command I used to perform quantification:. ```; salmon quant -i BANY_transcript_index -p 36 --libType A -g BANY_v2.gtf -1 ${i}_1P.fq.gz -2 ${i}_2P.fq.gz --validateMappings -o ${i}.quant. ```; The mapping rate I got. ```; [2020-06-04 18:03:49.102] [jointLog] [info] Number of mappings discarded because of alignment score : 57,476,847; [2020-06-04 18:03:49.102] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 4,980,029; [2020-06-04 18:03:49.102] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-06-04 18:03:49.102] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 366,055; [2020-06-04 18:03:49.102] [jointLog] [info] Mapping rate = 56.3428%; ```. The mapping rates I got are ~50-65%...Here are some of the reasons for low mapping rates based on previous posts:. 1. rRNA contamination: In my case, rRNAs were removed during library construction, also I quantified rRNA contents in my trimmed reads, and it's very low (<5%).; 2. DNA contamination: This is possible, I got ~98% genome mapping rate using hisat2. But in fact, DNAs are removed in my RNA extraction process...and poly-T was used to select mRNAs during the library construction...; 3. Not using pre-mature transcripts so reads mapping to introns are discarded: I am not sure if this is a valid point since we usually quantify mature mRNAs, not pre-mature ones.; 4. Library type: my library was constructed in a stranded way. The program detected my libtype as ISR:; ```; {; ""read_files"": ""[ DS_1_HW_FM_1P.fq.gz, DS_1_HW_FM_2P.fq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/533
https://github.com/COMBINE-lab/salmon/issues/533:1844,Safety,detect,detected,1844,"6-04 18:03:49.102] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 366,055; [2020-06-04 18:03:49.102] [jointLog] [info] Mapping rate = 56.3428%; ```. The mapping rates I got are ~50-65%...Here are some of the reasons for low mapping rates based on previous posts:. 1. rRNA contamination: In my case, rRNAs were removed during library construction, also I quantified rRNA contents in my trimmed reads, and it's very low (<5%).; 2. DNA contamination: This is possible, I got ~98% genome mapping rate using hisat2. But in fact, DNAs are removed in my RNA extraction process...and poly-T was used to select mRNAs during the library construction...; 3. Not using pre-mature transcripts so reads mapping to introns are discarded: I am not sure if this is a valid point since we usually quantify mature mRNAs, not pre-mature ones.; 4. Library type: my library was constructed in a stranded way. The program detected my libtype as ISR:; ```; {; ""read_files"": ""[ DS_1_HW_FM_1P.fq.gz, DS_1_HW_FM_2P.fq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 18651686,; ""num_assigned_fragments"": 18651686,; ""num_frags_with_concordant_consistent_mappings"": 17799536,; ""num_frags_with_inconsistent_or_orphan_mappings"": 864409,; ""strand_mapping_bias"": 0.0001987858838992702,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 3539,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17799536,; ""SF"": 419781,; ""SR"": 441089,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```; When I change the libtype to a broader category, such as IU, the mapping rates slightly increased from ~55% to 65%, also I got more counts in each transcript, but this introduced higher strand mapping bias (Appeared as a warning message). ; 5. many short reads: No... in my case, the majority of the reads are ~150bp. And I used k=31 (default).; 6. Read trimming: I trimmed the adaptors and low-quality bases from the ends. One thing I noticed in my FastQC report is that I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/533
https://github.com/COMBINE-lab/salmon/issues/533:443,Security,validat,validateMappings,443,"I know this problem was reported previously. I checked all the answers and I can see there are many reasons for this. In my case, I have a 'high number of mappings discarded because of alignment score'. I created the index using mature transcripts (without introns and genome decoy). The command I used to perform quantification:. ```; salmon quant -i BANY_transcript_index -p 36 --libType A -g BANY_v2.gtf -1 ${i}_1P.fq.gz -2 ${i}_2P.fq.gz --validateMappings -o ${i}.quant. ```; The mapping rate I got. ```; [2020-06-04 18:03:49.102] [jointLog] [info] Number of mappings discarded because of alignment score : 57,476,847; [2020-06-04 18:03:49.102] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 4,980,029; [2020-06-04 18:03:49.102] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-06-04 18:03:49.102] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 366,055; [2020-06-04 18:03:49.102] [jointLog] [info] Mapping rate = 56.3428%; ```. The mapping rates I got are ~50-65%...Here are some of the reasons for low mapping rates based on previous posts:. 1. rRNA contamination: In my case, rRNAs were removed during library construction, also I quantified rRNA contents in my trimmed reads, and it's very low (<5%).; 2. DNA contamination: This is possible, I got ~98% genome mapping rate using hisat2. But in fact, DNAs are removed in my RNA extraction process...and poly-T was used to select mRNAs during the library construction...; 3. Not using pre-mature transcripts so reads mapping to introns are discarded: I am not sure if this is a valid point since we usually quantify mature mRNAs, not pre-mature ones.; 4. Library type: my library was constructed in a stranded way. The program detected my libtype as ISR:; ```; {; ""read_files"": ""[ DS_1_HW_FM_1P.fq.gz, DS_1_HW_FM_2P.fq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/533
https://github.com/COMBINE-lab/salmon/issues/534:149,Energy Efficiency,power,powerful,149,Hello! . I absolutely love Salmon and use it whenever I get the chance. I've also found that the automatic inference of library type is an extremely powerful feature for other contexts outside of salmon mapping -- but virtually no other tools offer this capability and certainly not with the same speed as salmon. Would it be possible to make a small function Salmon or a standalone package that can be used to infer library type independent of salmon mapping?. Thanks!; Henry,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/534
https://github.com/COMBINE-lab/salmon/issues/536:32,Availability,error,error,32,"Hey there!; I got the following error when running the command `~/tools/Trinityrnaseq-v2.6.6/util/align_and_estimate_abundance.pl --seqType fq --samples_file gpul_adpul_samples.txt --transcripts Gpul_Adpul_trinity.Trinity.fasta --est_method salmon --trinity_mode --prep_reference`:. _[2020-06-11 01:53:08.809] [jointLog] [warning] NOTE: Read Lib [[ /dev/fd/63, /dev/fd/62]]_. _Detected a potential strand bias > 1% in an unstranded protocol check the file: ADPUL3/lib_format_counts.json for details_. _CMD: /home/curupi/tools/Trinityrnaseq-v2.6.6/util/support_scripts/salmon_trans_to_gene_results.pl ADPUL3/quant.sf /home/curupi/data/pulchella/fastq/trim/Gpul_Adpul_trinity.Trinity.fasta.gene_trans_map > ADPUL3/quant.sf.genes_. strand_mapping_bias: 0.9945332800206606. May anyone help me, please?; Thank you in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/536
https://github.com/COMBINE-lab/salmon/issues/536:432,Integrability,protocol,protocol,432,"Hey there!; I got the following error when running the command `~/tools/Trinityrnaseq-v2.6.6/util/align_and_estimate_abundance.pl --seqType fq --samples_file gpul_adpul_samples.txt --transcripts Gpul_Adpul_trinity.Trinity.fasta --est_method salmon --trinity_mode --prep_reference`:. _[2020-06-11 01:53:08.809] [jointLog] [warning] NOTE: Read Lib [[ /dev/fd/63, /dev/fd/62]]_. _Detected a potential strand bias > 1% in an unstranded protocol check the file: ADPUL3/lib_format_counts.json for details_. _CMD: /home/curupi/tools/Trinityrnaseq-v2.6.6/util/support_scripts/salmon_trans_to_gene_results.pl ADPUL3/quant.sf /home/curupi/data/pulchella/fastq/trim/Gpul_Adpul_trinity.Trinity.fasta.gene_trans_map > ADPUL3/quant.sf.genes_. strand_mapping_bias: 0.9945332800206606. May anyone help me, please?; Thank you in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/536
https://github.com/COMBINE-lab/salmon/issues/537:384,Availability,down,downloaded,384,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; salmon takes days to process through 16 samples. **To Reproduce**; Tried running on a different computer, same issue. . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda; * Which reference (e.g. transcriptome) was used?; mouse Mus_musculus.GRCm38.cdna.all.fa; * Which read files were used?; fastq; * Which which program options were used?; Various ; the --hitfilterpolicy BOTH was just added following reading another user query to see if that would help. (https://github.com/COMBINE-lab/salmon/issues/527). ```; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mouse_index1 }; ### [ libType ] => { IU }; ### [ mates1 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_1.trimmed.fastq.gz }; ### [ mates2 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_2.trimmed.fastq.gz }; ### [ threads ] => { 4 }; ### [ hitFilterPolicy ] => { BOTH }; ### [ biasSpeedSamp ] => { 10 }; ### [ output ] => { quants/13_quant }; ```. **Expected behavior**; Not to be so slow.... I've used salmon previously with some SRR datasets and it was very fast, this seems very strange to me . **Screenshots**; ```; [2020-06-13 02:34:43.686] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537
https://github.com/COMBINE-lab/salmon/issues/537:363,Deployability,install,installed,363,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; salmon takes days to process through 16 samples. **To Reproduce**; Tried running on a different computer, same issue. . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda; * Which reference (e.g. transcriptome) was used?; mouse Mus_musculus.GRCm38.cdna.all.fa; * Which read files were used?; fastq; * Which which program options were used?; Various ; the --hitfilterpolicy BOTH was just added following reading another user query to see if that would help. (https://github.com/COMBINE-lab/salmon/issues/527). ```; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mouse_index1 }; ### [ libType ] => { IU }; ### [ mates1 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_1.trimmed.fastq.gz }; ### [ mates2 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_2.trimmed.fastq.gz }; ### [ threads ] => { 4 }; ### [ hitFilterPolicy ] => { BOTH }; ### [ biasSpeedSamp ] => { 10 }; ### [ output ] => { quants/13_quant }; ```. **Expected behavior**; Not to be so slow.... I've used salmon previously with some SRR datasets and it was very fast, this seems very strange to me . **Screenshots**; ```; [2020-06-13 02:34:43.686] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537
https://github.com/COMBINE-lab/salmon/issues/537:2132,Performance,Load,Loading,2132,"## [ hitFilterPolicy ] => { BOTH }; ### [ biasSpeedSamp ] => { 10 }; ### [ output ] => { quants/13_quant }; ```. **Expected behavior**; Not to be so slow.... I've used salmon previously with some SRR datasets and it was very fast, this seems very strange to me . **Screenshots**; ```; [2020-06-13 02:34:43.686] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing read library format; [2020-06-13 02:34:43.686] [jointLog] [info] There is 1 library.; [2020-06-13 02:34:43.738] [jointLog] [info] Loading pufferfish index; [2020-06-13 02:34:43.738] [jointLog] [info] Loading dense pufferfish index.; [2020-06-13 02:34:45.327] [jointLog] [info] done; [2020-06-13 02:34:45.327] [jointLog] [info] Index contained 117,135 targets; [2020-06-13 02:34:45.346] [jointLog] [info] Number of decoys : 0; [2020-06-13 02:35:35.911] [jointLog] [info] Automatically detected most likely library type as IU; [2020-06-13 06:56:12.646] [fileLog] [info] ; At end of round 0; ==================; Observed 28512328 total fragments (28512328 in most recent round). [2020-06-13 06:56:12.645] [jointLog] [info] Computed 348,024 rich equivalence classes for further processing; [2020-06-13 06:56:12.645] [jointLog] [info] Counted 12,990,838 total reads in the equivalence classes ; [2020-06-13 06:56:12.989] [jointLog] [warning] 0.0736383% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-13 06:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537
https://github.com/COMBINE-lab/salmon/issues/537:2202,Performance,Load,Loading,2202," 10 }; ### [ output ] => { quants/13_quant }; ```. **Expected behavior**; Not to be so slow.... I've used salmon previously with some SRR datasets and it was very fast, this seems very strange to me . **Screenshots**; ```; [2020-06-13 02:34:43.686] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing read library format; [2020-06-13 02:34:43.686] [jointLog] [info] There is 1 library.; [2020-06-13 02:34:43.738] [jointLog] [info] Loading pufferfish index; [2020-06-13 02:34:43.738] [jointLog] [info] Loading dense pufferfish index.; [2020-06-13 02:34:45.327] [jointLog] [info] done; [2020-06-13 02:34:45.327] [jointLog] [info] Index contained 117,135 targets; [2020-06-13 02:34:45.346] [jointLog] [info] Number of decoys : 0; [2020-06-13 02:35:35.911] [jointLog] [info] Automatically detected most likely library type as IU; [2020-06-13 06:56:12.646] [fileLog] [info] ; At end of round 0; ==================; Observed 28512328 total fragments (28512328 in most recent round). [2020-06-13 06:56:12.645] [jointLog] [info] Computed 348,024 rich equivalence classes for further processing; [2020-06-13 06:56:12.645] [jointLog] [info] Counted 12,990,838 total reads in the equivalence classes ; [2020-06-13 06:56:12.989] [jointLog] [warning] 0.0736383% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-13 06:56:12.989] [jointLog] [info] Number of mappings discarded beca",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537
https://github.com/COMBINE-lab/salmon/issues/537:3840,Performance,optimiz,optimizer,3840,"12,990,838 total reads in the equivalence classes ; [2020-06-13 06:56:12.989] [jointLog] [warning] 0.0736383% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-13 06:56:12.989] [jointLog] [info] Number of mappings discarded because of alignment score : 19,645,245,772; [2020-06-13 06:56:12.989] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 2,436,564; [2020-06-13 06:56:12.989] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-06-13 06:56:12.989] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 1,448,149; [2020-06-13 06:56:12.989] [jointLog] [info] Mapping rate = 45.5622%. [2020-06-13 06:56:12.989] [jointLog] [info] finished quantifyLibrary(); [2020-06-13 06:56:12.991] [jointLog] [info] Starting optimizer; [2020-06-13 06:56:13.091] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2020-06-13 06:56:13.106] [jointLog] [info] iteration = 0 | max rel diff. = 8178.65; [2020-06-13 06:56:14.511] [jointLog] [info] iteration = 100 | max rel diff. = 17.6849; [2020-06-13 06:56:16.028] [jointLog] [info] iteration = 200 | max rel diff. = 6.46204; [2020-06-13 06:56:17.541] [jointLog] [info] iteration = 300 | max rel diff. = 1.8111; [2020-06-13 06:56:19.027] [jointLog] [info] iteration = 400 | max rel diff. = 12.2108; [2020-06-13 06:56:20.501] [jointLog] [info] iteration = 500 | max rel diff. = 0.616929; [2020-06-13 06:56:21.954] [jointLog] [info] iteration = 600 | max rel diff. = 0.218435; [2020-06-13 06:56:23.439] [jointLog] [info] iteration = 700 | max rel diff. = 0.068711; [2020-06-13 06:56:24.945] [jointLog] [info] iteration = 800 | max rel diff. = 0.044637; [2020-06-13 06:56:26.398] [jointLog] [info] iteration = 900 | max rel diff. = 0.0340291; [2020-06-13 06:56:2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537
https://github.com/COMBINE-lab/salmon/issues/537:5329,Performance,optimiz,optimizer,5329,"finished quantifyLibrary(); [2020-06-13 06:56:12.991] [jointLog] [info] Starting optimizer; [2020-06-13 06:56:13.091] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2020-06-13 06:56:13.106] [jointLog] [info] iteration = 0 | max rel diff. = 8178.65; [2020-06-13 06:56:14.511] [jointLog] [info] iteration = 100 | max rel diff. = 17.6849; [2020-06-13 06:56:16.028] [jointLog] [info] iteration = 200 | max rel diff. = 6.46204; [2020-06-13 06:56:17.541] [jointLog] [info] iteration = 300 | max rel diff. = 1.8111; [2020-06-13 06:56:19.027] [jointLog] [info] iteration = 400 | max rel diff. = 12.2108; [2020-06-13 06:56:20.501] [jointLog] [info] iteration = 500 | max rel diff. = 0.616929; [2020-06-13 06:56:21.954] [jointLog] [info] iteration = 600 | max rel diff. = 0.218435; [2020-06-13 06:56:23.439] [jointLog] [info] iteration = 700 | max rel diff. = 0.068711; [2020-06-13 06:56:24.945] [jointLog] [info] iteration = 800 | max rel diff. = 0.044637; [2020-06-13 06:56:26.398] [jointLog] [info] iteration = 900 | max rel diff. = 0.0340291; [2020-06-13 06:56:27.811] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.237808; [2020-06-13 06:56:29.235] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0764161; [2020-06-13 06:56:30.717] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.0683725; [2020-06-13 06:56:32.253] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0990377; [2020-06-13 06:56:33.509] [jointLog] [info] iteration = 1,389 | max rel diff. = 0.00998936; [2020-06-13 06:56:33.511] [jointLog] [info] Finished optimizer; [2020-06-13 06:56:33.511] [jointLog] [info] writing output ; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ProductName:	Mac OS X; ProductVersion:	10.15.5; BuildVersion:	19F101. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537
https://github.com/COMBINE-lab/salmon/issues/537:2486,Safety,detect,detected,2486,"ads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing read library format; [2020-06-13 02:34:43.686] [jointLog] [info] There is 1 library.; [2020-06-13 02:34:43.738] [jointLog] [info] Loading pufferfish index; [2020-06-13 02:34:43.738] [jointLog] [info] Loading dense pufferfish index.; [2020-06-13 02:34:45.327] [jointLog] [info] done; [2020-06-13 02:34:45.327] [jointLog] [info] Index contained 117,135 targets; [2020-06-13 02:34:45.346] [jointLog] [info] Number of decoys : 0; [2020-06-13 02:35:35.911] [jointLog] [info] Automatically detected most likely library type as IU; [2020-06-13 06:56:12.646] [fileLog] [info] ; At end of round 0; ==================; Observed 28512328 total fragments (28512328 in most recent round). [2020-06-13 06:56:12.645] [jointLog] [info] Computed 348,024 rich equivalence classes for further processing; [2020-06-13 06:56:12.645] [jointLog] [info] Counted 12,990,838 total reads in the equivalence classes ; [2020-06-13 06:56:12.989] [jointLog] [warning] 0.0736383% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-13 06:56:12.989] [jointLog] [info] Number of mappings discarded because of alignment score : 19,645,245,772; [2020-06-13 06:56:12.989] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 2,436,564; [2020-06-13 06:56:12.989] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-06-13",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537
https://github.com/COMBINE-lab/salmon/issues/537:1696,Security,validat,validateMappings,1696,"f that would help. (https://github.com/COMBINE-lab/salmon/issues/527). ```; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mouse_index1 }; ### [ libType ] => { IU }; ### [ mates1 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_1.trimmed.fastq.gz }; ### [ mates2 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_2.trimmed.fastq.gz }; ### [ threads ] => { 4 }; ### [ hitFilterPolicy ] => { BOTH }; ### [ biasSpeedSamp ] => { 10 }; ### [ output ] => { quants/13_quant }; ```. **Expected behavior**; Not to be so slow.... I've used salmon previously with some SRR datasets and it was very fast, this seems very strange to me . **Screenshots**; ```; [2020-06-13 02:34:43.686] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing read library format; [2020-06-13 02:34:43.686] [jointLog] [info] There is 1 library.; [2020-06-13 02:34:43.738] [jointLog] [info] Loading pufferfish index; [2020-06-13 02:34:43.738] [jointLog] [info] Loading dense pufferfish index.; [2020-06-13 02:34:45.327] [jointLog] [info] done; [2020-06-13 02:34:45.327] [jointLog] [info] Index contained 117,135 targets; [2020-06-13 02:34:45.346] [jointLog] [info] Number of decoys : 0; [2020-06-13 02:35:35.911] [jointLog] [info] Automatically detected most likely library type as IU; [2020-06-13 06:56:12.646] [fileLog] [info] ; At end of round 0; ==================; Observed 28512328 total fragments (28512328 in most recent round). [2020-06-13 06:56:12.645] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537
https://github.com/COMBINE-lab/salmon/issues/537:1858,Security,validat,validateMappings,1858,"### [ index ] => { mouse_index1 }; ### [ libType ] => { IU }; ### [ mates1 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_1.trimmed.fastq.gz }; ### [ mates2 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_2.trimmed.fastq.gz }; ### [ threads ] => { 4 }; ### [ hitFilterPolicy ] => { BOTH }; ### [ biasSpeedSamp ] => { 10 }; ### [ output ] => { quants/13_quant }; ```. **Expected behavior**; Not to be so slow.... I've used salmon previously with some SRR datasets and it was very fast, this seems very strange to me . **Screenshots**; ```; [2020-06-13 02:34:43.686] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing read library format; [2020-06-13 02:34:43.686] [jointLog] [info] There is 1 library.; [2020-06-13 02:34:43.738] [jointLog] [info] Loading pufferfish index; [2020-06-13 02:34:43.738] [jointLog] [info] Loading dense pufferfish index.; [2020-06-13 02:34:45.327] [jointLog] [info] done; [2020-06-13 02:34:45.327] [jointLog] [info] Index contained 117,135 targets; [2020-06-13 02:34:45.346] [jointLog] [info] Number of decoys : 0; [2020-06-13 02:35:35.911] [jointLog] [info] Automatically detected most likely library type as IU; [2020-06-13 06:56:12.646] [fileLog] [info] ; At end of round 0; ==================; Observed 28512328 total fragments (28512328 in most recent round). [2020-06-13 06:56:12.645] [jointLog] [info] Computed 348,024 rich equivalence classes for further processing; [2020-06-13 06:56:12.645] [jointLog] [info] Counted 12,990,838 total reads in the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537
https://github.com/COMBINE-lab/salmon/issues/538:77,Deployability,release,releases,77,"hi! ; while this has been discussed in detail in #379 , there have been many releases of Alevin since then.; So i am just a bit confused, if i want to generate a quant matrix of all CBs including those in the range of 1-10 reads for use with SoupX, how do i do this in the most streamlined way. As there has been a lot of discussion about this and many release of alevin since then. Will using FreqThreshold 0 --maxNumBarcodes 4294967295 do the trick? or do i also need to use --KeepCBFraction 1.0. or do i need to do as suggested by @alexvpickering in the issue above; ""Run alevin with standard options, then parse raw_cb_frequency.txt for a sample of 1-10UMI CBs and using them as input to --whitelist option for additional run of alevin with --freqThreshold 0 --maxNumBarcodes 4294967295"". Thanks,; Devika",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/538
https://github.com/COMBINE-lab/salmon/issues/538:353,Deployability,release,release,353,"hi! ; while this has been discussed in detail in #379 , there have been many releases of Alevin since then.; So i am just a bit confused, if i want to generate a quant matrix of all CBs including those in the range of 1-10 reads for use with SoupX, how do i do this in the most streamlined way. As there has been a lot of discussion about this and many release of alevin since then. Will using FreqThreshold 0 --maxNumBarcodes 4294967295 do the trick? or do i also need to use --KeepCBFraction 1.0. or do i need to do as suggested by @alexvpickering in the issue above; ""Run alevin with standard options, then parse raw_cb_frequency.txt for a sample of 1-10UMI CBs and using them as input to --whitelist option for additional run of alevin with --freqThreshold 0 --maxNumBarcodes 4294967295"". Thanks,; Devika",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/538
https://github.com/COMBINE-lab/salmon/issues/540:250,Availability,error,error,250,"I am analyzing single cell RNAseq with10x chemistry.; I have my own transcriptome from long read sequencing and followed all the steps, prepare metadata, make the gentrome.fasta, indexing, using bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] E",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540
https://github.com/COMBINE-lab/salmon/issues/540:1993,Availability,error,error,1993," bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Can't find gene mapping for : PB.40054.21 w/ index 81766; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Txp to Gene Map not found for 52191 transcripts. Exiting; ```. What's wrong?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540
https://github.com/COMBINE-lab/salmon/issues/540:2000,Availability,ERROR,ERROR,2000," bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Can't find gene mapping for : PB.40054.21 w/ index 81766; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Txp to Gene Map not found for 52191 transcripts. Exiting; ```. What's wrong?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540
https://github.com/COMBINE-lab/salmon/issues/540:2104,Availability,error,error,2104," bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Can't find gene mapping for : PB.40054.21 w/ index 81766; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Txp to Gene Map not found for 52191 transcripts. Exiting; ```. What's wrong?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540
https://github.com/COMBINE-lab/salmon/issues/540:2111,Availability,ERROR,ERROR,2111," bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Can't find gene mapping for : PB.40054.21 w/ index 81766; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Txp to Gene Map not found for 52191 transcripts. Exiting; ```. What's wrong?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540
https://github.com/COMBINE-lab/salmon/issues/540:1013,Security,validat,validation,1013,"I am analyzing single cell RNAseq with10x chemistry.; I have my own transcriptome from long read sequencing and followed all the steps, prepare metadata, make the gentrome.fasta, indexing, using bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] E",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540
https://github.com/COMBINE-lab/salmon/issues/540:1027,Security,validat,validateMappings,1027,"I am analyzing single cell RNAseq with10x chemistry.; I have my own transcriptome from long read sequencing and followed all the steps, prepare metadata, make the gentrome.fasta, indexing, using bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] E",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540
https://github.com/COMBINE-lab/salmon/issues/540:1063,Security,validat,validation,1063,"e my own transcriptome from long read sequencing and followed all the steps, prepare metadata, make the gentrome.fasta, indexing, using bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Can't find gene mapping for : PB.40054.21 w/ index 81",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540
https://github.com/COMBINE-lab/salmon/issues/540:1131,Security,validat,validateMappings,1131,"epare metadata, make the gentrome.fasta, indexing, using bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Can't find gene mapping for : PB.40054.21 w/ index 81766; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Txp to Gene Map not f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540
https://github.com/COMBINE-lab/salmon/issues/540:1488,Security,validat,validateMappings,1488," bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Can't find gene mapping for : PB.40054.21 w/ index 81766; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Txp to Gene Map not found for 52191 transcripts. Exiting; ```. What's wrong?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540
https://github.com/COMBINE-lab/salmon/issues/540:633,Testability,Log,Logs,633,"I am analyzing single cell RNAseq with10x chemistry.; I have my own transcriptome from long read sequencing and followed all the steps, prepare metadata, make the gentrome.fasta, indexing, using bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] E",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540
https://github.com/COMBINE-lab/salmon/issues/540:680,Testability,log,logs,680,"I am analyzing single cell RNAseq with10x chemistry.; I have my own transcriptome from long read sequencing and followed all the steps, prepare metadata, make the gentrome.fasta, indexing, using bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] E",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540
https://github.com/COMBINE-lab/salmon/issues/541:1123,Deployability,patch,patch,1123,"common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; THELUA=/usr/common/modules/el8/x86_64/modules/all/${package}/${pversion}-CentOS-vanilla.lua; cd /usr/common/src; git clone -b develop https://github.com/COMBINE-lab/salmon.git; mv ${package} ${package}-${pversion}; cd ${package}-${pversion}; cp CMakeLists.txt CMakeLists.txt.dist; cat >mypatch <<'EOD'; --- CMakeLists.txt.dist	2020-04-21 22:31:07.000000000 -0700; +++ CMakeLists.txt	2020-06-09 14:55:02.733885772 -0700; @@ -419,6 +419,10 @@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:1680,Deployability,install,install,1680,"tem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in ye",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:723,Integrability,message,message,723,"common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; THELUA=/usr/common/modules/el8/x86_64/modules/all/${package}/${pversion}-CentOS-vanilla.lua; cd /usr/common/src; git clone -b develop https://github.com/COMBINE-lab/salmon.git; mv ${package} ${package}-${pversion}; cd ${package}-${pversion}; cp CMakeLists.txt CMakeLists.txt.dist; cat >mypatch <<'EOD'; --- CMakeLists.txt.dist	2020-04-21 22:31:07.000000000 -0700; +++ CMakeLists.txt	2020-06-09 14:55:02.733885772 -0700; @@ -419,6 +419,10 @@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:774,Integrability,message,message,774,"common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; THELUA=/usr/common/modules/el8/x86_64/modules/all/${package}/${pversion}-CentOS-vanilla.lua; cd /usr/common/src; git clone -b develop https://github.com/COMBINE-lab/salmon.git; mv ${package} ${package}-${pversion}; cd ${package}-${pversion}; cp CMakeLists.txt CMakeLists.txt.dist; cat >mypatch <<'EOD'; --- CMakeLists.txt.dist	2020-04-21 22:31:07.000000000 -0700; +++ CMakeLists.txt	2020-06-09 14:55:02.733885772 -0700; @@ -419,6 +419,10 @@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:826,Integrability,message,message,826,"common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; THELUA=/usr/common/modules/el8/x86_64/modules/all/${package}/${pversion}-CentOS-vanilla.lua; cd /usr/common/src; git clone -b develop https://github.com/COMBINE-lab/salmon.git; mv ${package} ${package}-${pversion}; cd ${package}-${pversion}; cp CMakeLists.txt CMakeLists.txt.dist; cat >mypatch <<'EOD'; --- CMakeLists.txt.dist	2020-04-21 22:31:07.000000000 -0700; +++ CMakeLists.txt	2020-06-09 14:55:02.733885772 -0700; @@ -419,6 +419,10 @@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:1066,Integrability,message,message,1066,"common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; THELUA=/usr/common/modules/el8/x86_64/modules/all/${package}/${pversion}-CentOS-vanilla.lua; cd /usr/common/src; git clone -b develop https://github.com/COMBINE-lab/salmon.git; mv ${package} ${package}-${pversion}; cd ${package}-${pversion}; cp CMakeLists.txt CMakeLists.txt.dist; cat >mypatch <<'EOD'; --- CMakeLists.txt.dist	2020-04-21 22:31:07.000000000 -0700; +++ CMakeLists.txt	2020-06-09 14:55:02.733885772 -0700; @@ -419,6 +419,10 @@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:1150,Performance,load,load,1150,"common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; THELUA=/usr/common/modules/el8/x86_64/modules/all/${package}/${pversion}-CentOS-vanilla.lua; cd /usr/common/src; git clone -b develop https://github.com/COMBINE-lab/salmon.git; mv ${package} ${package}-${pversion}; cd ${package}-${pversion}; cp CMakeLists.txt CMakeLists.txt.dist; cat >mypatch <<'EOD'; --- CMakeLists.txt.dist	2020-04-21 22:31:07.000000000 -0700; +++ CMakeLists.txt	2020-06-09 14:55:02.733885772 -0700; @@ -419,6 +419,10 @@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:1169,Performance,load,load,1169,"common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; THELUA=/usr/common/modules/el8/x86_64/modules/all/${package}/${pversion}-CentOS-vanilla.lua; cd /usr/common/src; git clone -b develop https://github.com/COMBINE-lab/salmon.git; mv ${package} ${package}-${pversion}; cd ${package}-${pversion}; cp CMakeLists.txt CMakeLists.txt.dist; cat >mypatch <<'EOD'; --- CMakeLists.txt.dist	2020-04-21 22:31:07.000000000 -0700; +++ CMakeLists.txt	2020-06-09 14:55:02.733885772 -0700; @@ -419,6 +419,10 @@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:1189,Performance,load,load,1189,"common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; THELUA=/usr/common/modules/el8/x86_64/modules/all/${package}/${pversion}-CentOS-vanilla.lua; cd /usr/common/src; git clone -b develop https://github.com/COMBINE-lab/salmon.git; mv ${package} ${package}-${pversion}; cd ${package}-${pversion}; cp CMakeLists.txt CMakeLists.txt.dist; cat >mypatch <<'EOD'; --- CMakeLists.txt.dist	2020-04-21 22:31:07.000000000 -0700; +++ CMakeLists.txt	2020-06-09 14:55:02.733885772 -0700; @@ -419,6 +419,10 @@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:1209,Performance,load,load,1209,"common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; THELUA=/usr/common/modules/el8/x86_64/modules/all/${package}/${pversion}-CentOS-vanilla.lua; cd /usr/common/src; git clone -b develop https://github.com/COMBINE-lab/salmon.git; mv ${package} ${package}-${pversion}; cd ${package}-${pversion}; cp CMakeLists.txt CMakeLists.txt.dist; cat >mypatch <<'EOD'; --- CMakeLists.txt.dist	2020-04-21 22:31:07.000000000 -0700; +++ CMakeLists.txt	2020-06-09 14:55:02.733885772 -0700; @@ -419,6 +419,10 @@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:1231,Performance,load,load,1231,"common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; THELUA=/usr/common/modules/el8/x86_64/modules/all/${package}/${pversion}-CentOS-vanilla.lua; cd /usr/common/src; git clone -b develop https://github.com/COMBINE-lab/salmon.git; mv ${package} ${package}-${pversion}; cd ${package}-${pversion}; cp CMakeLists.txt CMakeLists.txt.dist; cat >mypatch <<'EOD'; --- CMakeLists.txt.dist	2020-04-21 22:31:07.000000000 -0700; +++ CMakeLists.txt	2020-06-09 14:55:02.733885772 -0700; @@ -419,6 +419,10 @@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:2199,Performance,load,load,2199,"d libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in yellow. Yellow on white is nearly impossible to read. The rest of the text is black (as it should be). If the final command is instead:. ```; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant >/tmp/sq.log 2>&1. ```. There are no embedded control codes in the sq.log file. Changing the terminal to white text on black background also results in that line being colored yellow. Yellow on black is easy enough to read. I understand that normally this is run in a script ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:1602,Testability,log,log,1602,"@@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been co",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:1645,Testability,log,log,1645,"tem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in ye",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:1655,Testability,test,test,1655,"tem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in ye",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:1718,Testability,log,log,1718," message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in yellow. Yellow on white is nearly impossibl",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:2947,Testability,log,log,2947," cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in yellow. Yellow on white is nearly impossible to read. The rest of the text is black (as it should be). If the final command is instead:. ```; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant >/tmp/sq.log 2>&1. ```. There are no embedded control codes in the sq.log file. Changing the terminal to white text on black background also results in that line being colored yellow. Yellow on black is easy enough to read. I understand that normally this is run in a script and not interactively, but some highlight color other than yellow should be used on light backgrounds. Yellow may result in some way from default settings on CentOS 8, but I have no recollection of having seen another application do this in the several months I have been using this machine. Honestly, I do not see any real advantage in coloring the text at all since the lines are already marked with [info] or [warning] tags, so turning off whatever this coloring is would be fine, I think, for most people.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
